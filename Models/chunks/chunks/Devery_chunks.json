[
  {
    "text": "[Section 5] intellectual property sellers hurts overall reputation profitability business damage consumer confidence xe2 x86 xb5ects potential customer base business xe2 x86 xb5ected counterfeit products 2 2 purchaser purchaser deceived purchasing fake products serve expected purpose contain harmful e xe2 x86 xb5ects consumer confidence online retail space damaged inability inspect di xe2 x86 xb5erentiate legitimate fake products element trust significant factor purchasing goods routinely exploited 2 3 mediator mediator takes form law enforcement seeking seize prevent counterfeit goods mediator faced exceedingly high costs tracking investigating movement procurement sale counterfeit products 4 x0c3 devery protocol ecosystem underlying devery protocol enable developers easily create verification applications thorough understanding blockchain devery protocol abstract complexities interacting smart contracts deploying pre developed smart contracts improved developer experience end result ecosystem",
    "metadata": {
      "chunk_id": "040a11dd65256a9a4658f6ee5e36d14b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "exploit"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 6] thorough understanding blockchain devery protocol abstract complexities interacting smart contracts deploying pre developed smart contracts improved developer experience end result ecosystem verification applications communicate interact devery protocol 3 1 decentralized protocol layer protocol layer consists 3 main data structures interact ethereum mapping method deveryregistry sol deverytrust sol contracts deveryregistry sol application layer specifies address register application xe2 x80 x99s unique identifier protocol alongside application xe2 x80 x99s fee account allows application collect fees users party verification applications built protocol struct app address appaccount string appname address feeaccount bool active brands input public key address specify corresponding brand stored alongside appaccount store brand information products verified struct brand address brandaccount address appaccount string brandname bool active products store associated brand account product",
    "metadata": {
      "chunk_id": "c4773056f3ed7c245d5229fec55ae365",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 7] stored alongside appaccount store brand information products verified struct brand address brandaccount address appaccount string brandname bool active products store associated brand account product information struct product address productaccount address brandaccount string description string details uint year string origin bool active 5 x0cthis information hashed addresshash address item function marked corresponding product public address uses hashed address reference lookup individual identifier product stored blockchain allows lookup check address item method deverytrust sol devery trust contract allows ethereum addresses xe2 x80 x99vouch xe2 x80 x99 addresses allows parties trusted intermediaries ethereum addresses revoke apply vouches brand application keys approve address brandkey revoke address brandkey public methods figure 2 visual representation data structures protocol smart contracts found https github com devery devery contracts 3 2 devery toolset open source",
    "metadata": {
      "chunk_id": "24ed60888b1e4e5712e1fcefbb39576e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 8] brandkey revoke address brandkey public methods figure 2 visual representation data structures protocol smart contracts found https github com devery devery contracts 3 2 devery toolset open source frameworks provided developers ensure developer experience user friendly developers opt use utilize frameworks commercial verification applications reduce need interact directly smart contracts 6 x0cdevery js devery js provides npm packaged javascript framework built web3 js protocol layer create abstracted developer friendly tool build devery protocol layer developers opt interact blockchain javascript build commercial verification applications need interact directly protocol xe2 x80 x99s smart contracts devery keygenerator provided simple key generation tool allow developers generate public key addresses associated qr codes input applications repository found https github com devery devery keygenerator 3 3 decentralized application layer applications build protocol form decentralized",
    "metadata": {
      "chunk_id": "8b4ab0aed3f2cc6f09568864b0f8f1bb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 9] key addresses associated qr codes input applications repository found https github com devery devery keygenerator 3 3 decentralized application layer applications build protocol form decentralized application layer enable commercial applications build charge services whilst devery protocol example bevery choose use devery protocol verify individual beverages blockchain devery protocol developers interact devery js framework choose directly develop smart contracts deployed blockchain 3 4 entry verification engine eve eve fuel verification process applications recieve eve token payment hosting verification applications devery protocol consumers applications require eve mark blockchain eve transferred application host payment hosting applications protocol xe2 x80 x99bokky xe2 x80 x99s token teleportation service xe2 x80 x99 btts allows users send eve tokens required ethereum gas cost users send message party services process transactions pay gas cost behalf return user pays service",
    "metadata": {
      "chunk_id": "a36546556ce5d821e2abd5b5b43f0ac9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 10] teleportation service xe2 x80 x99 btts allows users send eve tokens required ethereum gas cost users send message party services process transactions pay gas cost behalf return user pays service provider percentage eve tokens provides practical means devery protocol requiring retailers users hold eve ethereum repository found https github com bokkypoobah bokkypoobahstokenteleportationservicesmartcontract 7 x0c4 use cases paper describe example use cases devery protocol exhaustive list 4 1 online product verification devery protocol enables e commerce retailers verify authenticity products services sell online retailers assign unique id signatures product sold online party verification application built protocol retailer display unique time use hashes generated id potential customers wish verify authenticity product consumers log application input code marked product order identify authenticity origins manufacturing disclosed dependent brand xe2 x80 x99s preference example look like",
    "metadata": {
      "chunk_id": "efb409355a5bf8a62afe0d6e4df9bca7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 12] moves supply chain party handles product verify source application devery protocol update details location product moves timing conditions consumer scan hardware device verify movement product supply chain 5 roadmap q4 2017 complete release devery protocol alpha iteration devery protocol released q4 2017 token sale commences token sale conducted q1 2 2018 onboard partners trial software prexisting new partnerships q 3 2018 release v1 0 devery protocol version 1 0 protocol slated released date 2019 assist development verification applications specific markets 6 token sale selling 60 000 000 eve tokens total 100 000 000 pre sale commences 14th december require 20 ethereum minimum contribution presale provides 5% bonus crowd sale commence 12th january 2018 end cap reached 10 february 2018 tokens distributed 1 week conclusion sale unsold tokens burned token sale excludes united states america china canada australia new zealand acceptance terms sale kyc geoblocking implemented 9",
    "metadata": {
      "chunk_id": "234a51c6b7b7990e61e79a7c87729060",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  },
  {
    "text": "[Section 13] 2018 tokens distributed 1 week conclusion sale unsold tokens burned token sale excludes united states america china canada australia new zealand acceptance terms sale kyc geoblocking implemented 9 x0creferences 1 michal kazimierczak piotr stryszowski trade counterfeit pirated goods mapping economic impact 2016 2 doug frantz oecd integrity forum https www oecd org cleangovbiz oecdintegrity week htm 11 x0c",
    "metadata": {
      "chunk_id": "61ca137dda72d4fdeba4ba45933746c9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Devery.txt"
    }
  }
]