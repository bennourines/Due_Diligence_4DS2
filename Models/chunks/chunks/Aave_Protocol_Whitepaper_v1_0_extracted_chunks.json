[
  {
    "text": "[Section 4] . . . . . . . . . . . . . . . . . . . . . . . 18 4.3 limitations stable rate positions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 4.4 stable rate rebalancing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 4.5 rebalancing process . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 5 conclusion 21 1 introduction birth aave protocol marks aave s shift decentralized p2p lending strategy direct loan relationship lenders borrowers, like ethlend pool-based strategy. lenders provide liquidity depositing cryptocurrencies pool contract. simultaneously, contract, pooled funds borrowed placing collateral. loans need individually matched, instead rely pooled funds, amounts borrowed collateral. enables instant loans characteristics based state pool. simpli ed scheme protocol presented gure 1 below",
    "metadata": {
      "chunk_id": "29a3127b442d98fba4ea037d876daf2d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 5] . loans need individually matched, instead rely pooled funds, amounts borrowed collateral. enables instant loans characteristics based state pool. simpli ed scheme protocol presented gure 1 below. figure 1 aave protocol interest rate borrowers lenders decided algorithmically borrowers, depends cost money - funds available pool speci c time. funds borrowed pool, funds available decreases raises interest rate. lenders, interest rate corresponds earn rate, algorithm safeguarding liquidity reserve guarantee withdrawals time. 1.1 basic concepts figure 2 lending pool basics heart lending pool concept reserve pool holds reserves multiple currencies, total ethereum de ned total liquidity. reserve accepts deposits lenders. users 1 borrow funds, granted lock greater value collateral, backs borrow position. speci c currencies pooled reserves con gured collateral borrow positions, low risk tokens considered. borrow depends currencies deposited available reserves",
    "metadata": {
      "chunk_id": "7ff7e376fa1d44da08a44215d15ec5c2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 6] . speci c currencies pooled reserves con gured collateral borrow positions, low risk tokens considered. borrow depends currencies deposited available reserves. reserve speci c loan-to-value ltv , calculated weighted average di erent ltvs currencies composing collateral, weight ltv equivalent collateral eth gure 3 shows example parameters. borrow position opened stable variable rate. borrows nite duration, repayment schedule partial repayments anytime. figure 3 lending pool parameters case price uctuations, borrow position liquidated. liquidation event happens price collateral drops threshold, lq, called liquidation threshold. reaching ratio channels liquida- tion bonus, incentivizes liquidators buy collateral discounted price. reserve speci c liquidation threshold, following approach ltv. calculation average liquidation threshold la q performed dynamically, weighted average liquidation thresholds collateral s underlying assets",
    "metadata": {
      "chunk_id": "1fbd02b6a2394be10714013f1ca631a7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 12] . . 2.2 lending pool data provider lendingpooldataprovider contract performs calculations higher layer abstraction lendingpoolcore provides data lendingpool speci cally calculates eth equivalent user s balances borrow balance, collateral balance, liquidity balance assess user allowed borrow health factor. aggregates data lendingpoolcore provide high level information lendingpool. calculate average loan value average liquidation ratio. 5 2.3 lending pool lendingpool contract uses lendingpoolcore lendingpooldataprovider interact reserves actions deposit redeem borrow repay rate swap liquidation flash loan advanced features implemented lendingpool contract tokenization lending position. user deposits speci c reserve, receives corresponding atokens, tokens map liquidity deposited accrue interests deposited underlying assets. atokens minted deposit, value increases burned redeem liquidated. user opens borrow position, tokens collateral locked transferred. details tokenization section 3.8",
    "metadata": {
      "chunk_id": "5f0581eb7f48eb59efdd5180760c2db0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 13] . atokens minted deposit, value increases burned redeem liquidated. user opens borrow position, tokens collateral locked transferred. details tokenization section 3.8. 2.4 lending pool con gurator lendingpoolconfigurator provides main con guration functions lendingpool lendingpoolcore reserve initialization reserve con guration enable disable borrowing reserve enable disable usage speci c reserve collateral. lendingpoolconfigurator contract integrated aave protocol governance. 2.5 interest rate strategy interestratestrategy contract holds information needed update interest rates speci c reserve implements update interest rates. reserve speci c interestratestrategy contract",
    "metadata": {
      "chunk_id": "0933d60da6d40a0b74a3e1722efc7784",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 15] . initially, aave protocol launched decentralized on-chain governance based daostack framework evolve fully autonomous protocol. on-chain implies votes binding actions follow vote hard-coded executed. understand scope governance s important distinction aave protocol bound evolve allow creation multiple lending pools segregated liquidity, parameters, permissions, type assets. aave lending pool rst pool aave protocol pool factory update released create pool. aave protocol, governance place level 1. protocol s governance voting weighted lend decisions related protocol parameters upgrades smart contract. compared makerdao s governance stakeholders vote current future parameters protocol. 2. pool s governance vote weighted based share pool liquidity expressed atokens. votes cover pool speci c parameters assets collateral borrowed. pool governance, umbrella protocol s governance. details governance published governance proposal community",
    "metadata": {
      "chunk_id": "90b5000f4d0926b3e7230dffe3247e82",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 16] . votes cover pool speci c parameters assets collateral borrowed. pool governance, umbrella protocol s governance. details governance published governance proposal community. 7 3 lendingpool contract actions implemented lendingpool allow users interact reserve. actions follow speci c sequence figure 5 lendingpool contract 8 3.1 deposit deposit action simplest particular state check. sequence action figure 6 deposit funds 9 3.2 redeem redeem action allows users exchange atokens underlying asset. actual redeem calculated atoken underlying exchange rate ei section 3.8. action de ned follows figure 7 redeem funds 10 3.3 borrow borrow action transfers user speci c underlying asset, exchange collateral remains locked. ow action described follows figure 8 borrow funds 11 3.4 repay repay action allows user repay completely partially borrowed plus origination fee accrued interest. figure 9 repay loan 12 3.5 swap rate swap rate action allows user borrow progress swap variable stable borrow rate",
    "metadata": {
      "chunk_id": "d9b70fbb49ee4ebd65c8d31e8cddb06b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 17] . figure 9 repay loan 12 3.5 swap rate swap rate action allows user borrow progress swap variable stable borrow rate. figure 10 swap rate 13 3.6 liquidation liquidationcall contract allows external actor purchase collateral discounted price. case liquidation event, maximum 50% loan liquidated, bring health factor 1. figure 11 liquidation 14 3.7 flash loans ash loan action allow users borrow reserves single transaction, long user returns liquidity taken. figure 12 flash loan flash loans temporarily transfer funds smart contract respects iflashloanenabledcontract.sol interface. address contract parameter action. funds transferred, method executeoperation executed external contract. contract action needed borrowed funds. method executeoperation completed, check performed verify funds plus fee returned lendingpool contract. fee accrued reserve, state reserve updated. funds borrowed returned reserve, transaction reverted",
    "metadata": {
      "chunk_id": "47ea2b198005d7122d1fdd955f15cbb2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 18] . fee accrued reserve, state reserve updated. funds borrowed returned reserve, transaction reverted. 15 3.8 tokenization aave protocol implements tokenization strategy liquidity providers. deposit, depositor receives corresponding derivative tokens, called aave tokens atokens short map 1 1 underlying assets. balance atokens depositor grows time, driven perpetual accrual interest deposits. atokens fully erc20 compliant. atokens natively implement concept interest rate redirection. indeed, value accrued time borrowers interest rate payments distinct principal value. balance atokens, accrued value redirected address, e ectively splitting balance generated interest. continuous ow accumulated interest time interest stream. implement tokenization strategy, aave introduced following concepts atoken contract 1. user x balance index x value reserve normalized income x moment execution action user. 2. principal balance bp balance stored balances mapping erc20 atoken contract",
    "metadata": {
      "chunk_id": "1b888979dc9863dfa7e5ebc93d78eaca",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 19] . user x balance index x value reserve normalized income x moment execution action user. 2. principal balance bp balance stored balances mapping erc20 atoken contract. principal balance gets updated action user executes atoken contract deposit, redeem, transfer, liquidation, interest rate redirection 3. redirection address ar user decides redirect interest stream address, new redirection address ar provided. redirection interest stream performed, ar 0 4. redirected balance bx r user redirects interest stream, balance user redirecting added redirected balance br address speci ed br. de ned follows bx r p x bp x set users redirecting interest stream user x redirected balance decreases user x0 x redeems transfers atokens user redirecting x. 5. current balance bc balance returned balanceof function atoken contract",
    "metadata": {
      "chunk_id": "b693ac873a8ad27532406ffa8476c2de",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 20] . 5. current balance bc balance returned balanceof function atoken contract. de ned follows bx c 0, bx p 0 bx r 0 bx p bx r ix 1 , ar 0 bx p ix bx r ix 1 , ar 0 3.8.1 limitations tokenization model described tokenization model advantages compared widely used, exchange rate based approach, drawbacks, speci cally 1. s impossible transfer balance given perpetual accrual interest rate, way specify exact transfer, interest accruing transfer transaction con rmed. means having exactly 0 balance transfer impossible, rather, small balance dust balance left account executing transfer. note avoided adding speci c logic handle particular edge case, meant adding non standard behavior erc20 transfer function, reason avoided it. relevant issue, s important note possible completely clear remaining balance 1. execute transfer, likely transfer remaining dust balance small accrue interest reasonably short time, 2. redeem dust balance transfer underlying asset. 2",
    "metadata": {
      "chunk_id": "a2b20754e4999f65b38ae649de8f4957",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 21] . execute transfer, likely transfer remaining dust balance small accrue interest reasonably short time, 2. redeem dust balance transfer underlying asset. 2. interest stream redirected principal balance means accounts principal balance bp redirect interest. users redeem transfer everything, interest redirection reset. e ect this, interest generated redirected balance br redirected. 16 4 stable rate theory following chapter explains stable rates applied system limitations. implementation xed rate model pool complicated. indeed, xed rates hard handle algorithmically, cost borrowing money varies market conditions liquidity available. situations sudden market changes, bank runs ... handling stable rate borrow positions need speci c heuristics based time economical constraints. following reasoning, identi ed possible ways handling xed rates 1. imposing time constraints xed rates work perfectly ne time constrained fashion",
    "metadata": {
      "chunk_id": "025f275787b6f9b430b4c8fa984b9190",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "bank run"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 25] . works combination interest rate rebalancing section. 2. borrowers able borrow tr available liquidity current borrow rate. so, speci c value bs, tr liquidity available single borrower. avoid speci c borrower borrow available liquidity competitive rate. 4.4 stable rate rebalancing important constraint stable rate model rate rebalancing. work changes market conditions increased cost money pool. stable rate rebalancing happen speci c situations 1. rebalancing up. stable rate user x rebalanced recent value bs user earn interest borrowing bx s rl bx s stable borrow rate user x 2. rebalancing down. stable rate user x rebalanced recent value bs, bx s bs 1 bs bs rate delta established governance de nes window bs rebalance interest rates. user pays interest range, rate balanced down. 18 4.5 rebalancing process lendingpool contract exposes function rebalancestableborrowrate address reserve, address user allows rebalance stable rate interest speci c user",
    "metadata": {
      "chunk_id": "19a2e89e6a602f9b06fe4e504431d2ba",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 26] . 18 4.5 rebalancing process lendingpool contract exposes function rebalancestableborrowrate address reserve, address user allows rebalance stable rate interest speci c user. anybody function however, isn t direct incentive caller rebalance rate speci c user. reason, aave provide agent periodically monitor stable rates positions rebalance ones deemed necessary. rebalance strategy decided o chain agent, means users satisfy rebalance conditions rebalanced immediately. conditions depend liquidity avail- able state market, transitory situations immediate rebalance needed. add element centralization protocol. agent stops working, anybody rebalance function lendingpool contract. isn t direct incentive it? indirect incentive ecosystem. fact, agent cease exist, depositors want trigger rebalance lowest borrow rate positions, increase liquidity rate force borrowers close positions, increasing available liquidity",
    "metadata": {
      "chunk_id": "39d2f1c7323e5e2d236736fab587bf9e",
      "entities": {
        "crypto_project": [
          "aave"
        ],
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 27] . fact, agent cease exist, depositors want trigger rebalance lowest borrow rate positions, increase liquidity rate force borrowers close positions, increasing available liquidity. case rescale down, instead, borrowers direct incentive performing rebalance positions lower interest rate. following owchart explains sequence actions function rebalancestableborrowrate . compounded balance accumulated instant rebalance happens, ected rebalance. 19 figure 14 rebalancing 20 5 conclusion aave protocol relies lending pool model o er high liquidity. loans backed collateral represented atokens, derivative tokens accrue interests. parameters interest rate loan-to-value token speci c. aave improves decentralized finance s current o ering, bringing key innovations lending ecosystem stable rates help borrowers nancial planning flash loans borrow collateral single transaction. following launch mainnet, aave uphold commitment decentralization additional features",
    "metadata": {
      "chunk_id": "49a8c973a6be0f292a0d2dd9b59dc328",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  },
  {
    "text": "[Section 28] . following launch mainnet, aave uphold commitment decentralization additional features. pool factory allow launch lending pool based smart-contracts. governance on-chain rights represented lend token protocol level updates smart contract atokens pool level pool speci c parameters. 21",
    "metadata": {
      "chunk_id": "b7754eb617b004c6c13578ed1eebd858",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Aave_Protocol_Whitepaper_v1_0_extracted.txt"
    }
  }
]