[
  {
    "text": "[Section 1] b z illiqa technical whitepaper version 0 1 august 10 2017 z illiqa team m www zilliqa com b enquiry zilliqa com 7 zilliqa consensus network protocols reengineering parameters existing protocols bitcoin ethereum e g block size block rate speedup support applications need processing thousands tx s requires rethinking underlying protocols scratch present z illiqa xe2 x80 x94 new blockchain platform designed scale transaction rates number miners z illiqa increases transaction rates expected increase specifically z illiqa xe2 x80 x99s design allows transaction rates roughly double nodes added network writing ethereum mining network 30 000 nodes ethereum xe2 x80 x99s present capacity z illiqa expect process thousand times transaction rates ethereum z illiqa redesign scratch research development 2 years cornerstone z illiqa xe2 x80 x99s design idea sharding xe2 x80 x94 dividing mining network smaller consensus groups called shards capable processing transactions parallel mining network z",
    "metadata": {
      "chunk_id": "44eaf991e8b79bf4e6943a3560dbd904",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 2] 2 years cornerstone z illiqa xe2 x80 x99s design idea sharding xe2 x80 x94 dividing mining network smaller consensus groups called shards capable processing transactions parallel mining network z illiqa 8000 miners z illiqa automatically creates 10 sub networks size 800 miners decentralized manner trusted co ordinator sub network agree set 100 transactions time epoch 10 sub networks agree total 1000 transactions aggregate key aggregating securely ensure sub networks process different transactions overlaps double spending assumptions similar existing blockchain based solutions assume mining network fraction malicious nodes identities total computational power fraction 1 4 complete network based standard proof work scheme new layer blockchain structure features highly optimized consensus algorithm processing shards z illiqa comes innovative special purpose smart contract language execution environment leverage underlying architecture provide large scale highly efficient computation",
    "metadata": {
      "chunk_id": "17e477546357323a5855f21984d98103",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 3] algorithm processing shards z illiqa comes innovative special purpose smart contract language execution environment leverage underlying architecture provide large scale highly efficient computation platform smart contract language z illiqa follows dataflow programming style smart contract represented directed graph nodes graph operations functions abstract xe2 x80 x94existing cryptocurrencies smart contract platforms known scalability issues e number transactions capable processing second limited usually 10 number applications utilizing public cryptocurrencies smart contract platforms grow demand processing high transaction rates order hundreds thousands tx s increasing work present z illiqa xe2 x80 x94 new blockchain platform designed scale transaction rates number miners z illiqa increases transaction rates expected increase ethereum xe2 x80 x99s present network size 30 000 miners z illiqa expect process thousand times transaction rates ethereum cornerstone z illiqa xe2 x80 x99s",
    "metadata": {
      "chunk_id": "80c6ecb8a539faaeb99858cd3cd2a1fa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 4] transaction rates expected increase ethereum xe2 x80 x99s present network size 30 000 miners z illiqa expect process thousand times transaction rates ethereum cornerstone z illiqa xe2 x80 x99s design idea sharding xe2 x80 x94 dividing mining network smaller shards capable processing transactions parallel z illiqa proposes innovative special purpose smart contract language execution environment leverages underlying architecture provide large scale highly efficient computation platform smart contract language z illiqa follows dataflow programming style makes ideal running large scale computations easily parallelized examples include simple computations search sort linear algebra computations complex computations training neural nets data mining financial modeling scientific computing general mapreduce task ntroduction cryptocurrencies smart contract platforms shared computational resource view platforms new generation computers synchronize thousands individual computers existing",
    "metadata": {
      "chunk_id": "f724ddbb3534b00dacb093a9abd6716c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 5] general mapreduce task ntroduction cryptocurrencies smart contract platforms shared computational resource view platforms new generation computers synchronize thousands individual computers existing cryptocurrencies smart contract platforms widely recognized limitations scaling average transaction rates bitcoin 1 ethereum 2 related cryptocurrencies limited 10 usually 3 7 transactions second tx s number applications utilizing public cryptocurrencies smart contract platforms grow demand processing high transaction rates order hundreds tx s increasing global payment network likely require tens thousands tx s capacity build decentralized open blockchain platform capable processing scale limitations scaling existing protocols somewhat fundamental xe2 x80 x94 rooted design 1 x0can arc nodes represent output input second node gets activated operational soon inputs valid dataflow contract inherently parallel suitable decentralized systems z illiqa sharded architecture ideal running large",
    "metadata": {
      "chunk_id": "adf8980cd203b626f326f8cd5f665322",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 6] represent output input second node gets activated operational soon inputs valid dataflow contract inherently parallel suitable decentralized systems z illiqa sharded architecture ideal running large scale computations easily parallelized examples include simple computations search sort linear algebra computations complex computations training neural net data mining financial modeling scientific computing general mapreduce task document outlines technical design z illiqa blockchain protocol z illiqa new conceptually clean modular design layers cryptographic layer section iii data layer section iv network layer section v consensus layer section vi smart contract layer section vii incentive layer section viii present different layers discuss system settings underlying assumptions threat model section ii byzantine nodes collude assume total computation power byzantine adversaries confined standard cryptographic assumptions probabilistic polynomial time adversaries assume messages honest",
    "metadata": {
      "chunk_id": "d61a0b3b0e9999f18c8f2fcfa1315aac",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 7] section ii byzantine nodes collude assume total computation power byzantine adversaries confined standard cryptographic assumptions probabilistic polynomial time adversaries assume messages honest nodes absence network partition delivered honest destinations certain bound xce xb4 xce xb4 time varying bound xce xb4 ensure liveness safety 3 case timing connectivity assumptions met possible byzantine nodes delay messages significantly simulating gain computation power worse xe2 x80 x9ceclipse xe2 x80 x9d network 4 event network partition dictated cap theorem choose consistency availability 5 z illiqa choose consistent sacrifice availability iii c ryptographic l ayer cryptographic layer defines cryptographic primitives z illiqa similar blockchain platforms z illiqa relies elliptic curve cryptography digital signatures memory hard hash function proofof work pow whitepaper extensively use sha3 6 hash function present design sha3 originally based keccak 7 widely different blockchain",
    "metadata": {
      "chunk_id": "cacceea8f69523fce570352c40cf4070",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 8] cryptography digital signatures memory hard hash function proofof work pow whitepaper extensively use sha3 6 hash function present design sha3 originally based keccak 7 widely different blockchain platforms particular ethereum near future switch keccak enable better interoperability platforms ii s ystem s etting ssumptions entities z illiqa main entities z illiqa users miners user external entity uses z illiqa xe2 x80 x99s infrastructure transfer funds run smart contracts miners nodes network run z illiqa xe2 x80 x99s consensus protocol rewarded service rest whitepaper interchangeably use terms miner node z illiqa xe2 x80 x99s mining network divided smaller networks referred shard miner assigned shard set miners called ds nodes set ds nodes referred ds committee shard ds committee leader leaders play important role z illiqa xe2 x80 x99s consensus protocol overall functioning network user public private key pair digital signature scheme miner network associated ip address public key",
    "metadata": {
      "chunk_id": "8dc6abe31eb12c171a10e962c2f721ab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 9] leaders play important role z illiqa xe2 x80 x99s consensus protocol overall functioning network user public private key pair digital signature scheme miner network associated ip address public key serves identity intrinsic token z illiqa intrinsic token called zillings zils short zillings platform usage rights users terms pay transaction processing run smart contracts whitepaper reference value balance payment assumed counted zil adversarial model assume mining network point time fraction byzantine nodes identities total computational power f n4 complete network 0 xe2 x89 xa4 f 1 n total size network factor 14 arbitrary constant bounded away 31 selected yield reasonable constant parameters assume honest nodes reliable protocol runs failed disconnected nodes counted byzantine fraction byzantine nodes deviate protocol drop modify messages send different messages honest nodes schnorr signature z illiqa employs elliptic curve based schnorr signature algorithm ec schnorr 8 base signing",
    "metadata": {
      "chunk_id": "8f66c79057aabf15040bf90cb9b6fe07",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 10] nodes deviate protocol drop modify messages send different messages honest nodes schnorr signature z illiqa employs elliptic curve based schnorr signature algorithm ec schnorr 8 base signing algorithm instantiate scheme secp256k1 curve 9 curve currently bitcoin ethereum different signing algorithm called ecdsa choosing ecschnorr ecdsa benefits discuss 1 non malleability informally non malleability property means given set signatures generated message private key hard adversary produce new signature message valid corresponding public key unlike ecdsa malleable ec schnorr proven nonmalleable 10 2 multisignature multisignature scheme allows multiple signers xe2 x80 x9caggregate xe2 x80 x9d signatures given message single signature authenticated single public key xe2 x80 x9caggregates xe2 x80 x9d keys authorized parties ec schnorr natively multisignature scheme 11 ecdsa allows creating multisignatures flexible way z illiqa uses ec schnorr based multisignatures reduce signature size",
    "metadata": {
      "chunk_id": "e8a9a82e0747df40e574510024b3b788",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 12] key given private key sk address anormal 160 bit value computed anormal lsb160 sha3 256 pubkey sk b proof work lsb160 xc2 xb7 returns rightmost 160 bits input pubkey xc2 xb7 returns public key corresponding input secret key address contract account computed address creator transactions creator account sent aka account nonce described z illiqa uses pow prevent sybil attacks generate node identities contrast existing blockchain platforms particular bitcoin 1 ethereum 12 pow reach distributed consensus z illiqa employs ethash 13 pow algorithm ethereum 1 0 ethash memory hard hash function designed easy gpus hard specialized computing hardware asics achieve ethash computation requires considerable memory gbs o bandwidth function invoked parallel specialized computing hardware roughly speaking ethash takes data instance block header nonce 64 bits inputs generates 256bits digest algorithm consists subroutines run given order 1 seed generation seed sha3 256 digest updated 30000 blocks called",
    "metadata": {
      "chunk_id": "7787a8e37acec58e1655f297b2453262",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 13] ethash takes data instance block header nonce 64 bits inputs generates 256bits digest algorithm consists subroutines run given order 1 seed generation seed sha3 256 digest updated 30000 blocks called epoch epoch sha3 256 hash series 32 bytes zeros epoch sha3 256 hash previous seed 2 cache generation seed generate pseudorandom cache sha3 512 size cache linearly increases epoch initial size cache 16 mb 3 dataset generation cache generate dataset xe2 x80 x9citem xe2 x80 x9d dataset depends small number items cache dataset updated epoch miners changes frequently size dataset increases linearly epoch initial size dataset 1 gb 4 mining verification mining involves grabbing random slices dataset hashing verification uses cache regenerate specific pieces dataset needed compute hash acontract lsb160 sha3 256 address nonce address address creator account nonce creator xe2 x80 x99s nonce value account normal contract associated account state account state key value store comprises following keys",
    "metadata": {
      "chunk_id": "1024ad0c668290c8b59dfbf5bd61a67b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 14] sha3 256 address nonce address address creator account nonce creator xe2 x80 x99s nonce value account normal contract associated account state account state key value store comprises following keys 1 account nonce 64 bits counter initialized 0 counts number transactions sent normal account case contract account counts number contract creations account 2 balance 128 bits non negative value account receives tokens account received added account xe2 x80 x99s balance account sends tokens account balance reduced appropriate 3 code hash 256 bits stores sha3 256 digest contract code normal account sha3 256 digest string 4 storage root 256 bits account storage key value store 256 bit keys 256 bit values storage root sha3 256 digest represents storage instance storage trie storage root digest root trie global state state z illiqa mapping account addresses account states implemented trie like data structure b transactions transaction sent normal account address updates global state z illiqa",
    "metadata": {
      "chunk_id": "44484359e7f1eb1cc513040ad3445104",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 15] trie global state state z illiqa mapping account addresses account states implemented trie like data structure b transactions transaction sent normal account address updates global state z illiqa transaction following fields 1 version 32 bits current version 2 nonce 64 bits counter equal number transactions sent sender transaction 3 160 bits destination account address case transaction creates new contract account field rightmost 160 bits sha3 256 string 4 128 bits transaction transferred destination address iv data l ayer broadly speaking data layer defines data constitutes global state z illiqa extension defines data needed different entities z illiqa update global state accounts addresses state z illiqa account based system ethereum types accounts normal account contract 3 x0c2 transaction blocks discussed earlier ds block contains information nodes reach consensus transactions tx block stores information transactions agreed nodes ds block ds block linked multiple tx blocks tx",
    "metadata": {
      "chunk_id": "9b2eb74ab7190a6415f9d40388ebc786",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 16] blocks discussed earlier ds block contains information nodes reach consensus transactions tx block stores information transactions agreed nodes ds block ds block linked multiple tx blocks tx block parts header data signature header consists following fields 1 type 8 bits tx block types micro block 0x00 final block 0x01 section v d 2 version 32 bits current version 3 previous hash 256 bits sha3 256 digest parent block header 4 gas limit 128 bits current limit gas expenditure block 5 gas 128 bits total gas transactions block 6 number 256 bits number ancestor blocks genesis block block number 0 7 timestamp 64 bits unix xe2 x80 x99s time time creation block 8 state root 256 bits sha3 256 digest represents global state transactions executed finalized global state stored trie state root digest root trie 9 transaction root 256 bits sha3 256 digest represents root merkle tree stores transactions present block 10 tx hashes 256 bits list sha3 256 digests transactions signature transaction",
    "metadata": {
      "chunk_id": "b8cf62ee61b84987c4d4cb6a337905b4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 17] root trie 9 transaction root 256 bits sha3 256 digest represents root merkle tree stores transactions present block 10 tx hashes 256 bits list sha3 256 digests transactions signature transaction hashed 11 pubkey 264 bits ec schnorr public key leader proposed block 12 pubkey micro blocks unlimited list ecschnorr public keys 264 bits length list contains public keys leaders proposed transactions field present final block 13 parent block hash 256 bits sha3 256 digest previous final block header 14 parent ds hash 256 bits sha3 256 digest parent ds block header 15 parent ds block number 256 bits parent ds block number data tx block contains set transactions following fields 1 tx count 32 bits number transactions block 2 tx list unlimited list transactions signature tx block contains ecschnorr based multisignature following fields 1 signature 512 bits signature ec schnorr based multisignature tx block header signed set nodes signature produced different set nodes depending micro block 5 gas",
    "metadata": {
      "chunk_id": "bd1c53b429ecaedf83d49961477c9bfa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 18] multisignature following fields 1 signature 512 bits signature ec schnorr based multisignature tx block header signed set nodes signature produced different set nodes depending micro block 5 gas price 128 bits gas defined smallest unit computation gas price sender willing pay unit gas computations incurred transaction processing 6 gas limit 128 bits maximum gas processing transaction 7 code unlimited expandable byte array specifies contract code present transaction creates new contract account 8 data unlimited expandable byte array specifies data process transaction present transaction invokes contract destination address 9 pubkey 264 bits ec schnorr public key verify signature pubkey field determines sending address transaction 10 signature 512 bits ec schnorr signature entire data transaction uniquely identified transaction id xe2 x80 x94 sha3 256 digest transaction data excludes signature field c blocks z illiqa protocol introduces types blocks blockchains transaction blocks tx",
    "metadata": {
      "chunk_id": "2826f8c815603e316f9e4f642ecca2fe",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 19] uniquely identified transaction id xe2 x80 x94 sha3 256 digest transaction data excludes signature field c blocks z illiqa protocol introduces types blocks blockchains transaction blocks tx block directory service blocks ds block tx block contains transactions sent users ds block contains metadata miners participate consensus protocol 1 ds blocks ds block parts header signature header ds block following fields 1 version 32 bits current version 2 previous hash 256 bits sha3 256 digest parent block header 3 pubkey 264 bits public key miner pow block header 4 difficulty 64 bits calculated previous block xe2 x80 x99s difficulty block number stores difficulty pow puzzle 5 number 256 bits number ancestor blocks genesis block block number 0 6 timestamp 64 bits unix xe2 x80 x99s time time creation block 7 mixhash 256 bits digest calculated nonce allows detecting dos attacks 8 nonce 64 bits solution pow signature ds block contains following fields 1 signature 512 bits signature ec schnorr",
    "metadata": {
      "chunk_id": "f69abf4cdea9c7adf0754c48709a4f1d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 20] block 7 mixhash 256 bits digest calculated nonce allows detecting dos attacks 8 nonce 64 bits solution pow signature ds block contains following fields 1 signature 512 bits signature ec schnorr based multisignature ds block header signed ds nodes 2 bitmap 1024 bits records ds nodes participated multisignature denote bitmap bit vector b b 1 th node signed header b 0 ds blocks form ds blockchain 4 x0ca final block details signatories given section v d 2 bitmap 1024 bits records nodes participated multisignature denote bitmap bit vector b b 1 th node signed header b 0 final blocks form transaction blockchain transaction blockchain include micro blocks successful bootstrapping phase time composition ds nodes stipulated predefined window size n0 recent n0 nodes successfully mined ds block form ds committee average time mining consecutive dsblocks referred ds epoch value ds epoch set way minimize chances competing blocks start ds epoch new ds node joins ds committee oldest member ds",
    "metadata": {
      "chunk_id": "fd07e84efc853717da0af7fd3b64f0fa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 21] form ds committee average time mining consecutive dsblocks referred ds epoch value ds epoch set way minimize chances competing blocks start ds epoch new ds node joins ds committee oldest member ds committee churned fixes size ds committee n0 ds epoch newest member ds committee leader leads consensus protocol epoch section vi consensus protocol induces strict ordering members ds committee ds committee size sufficiently large 800 n0 members committee 31 byzantine high probability 2 resolving conflicts consensus protocol presented section vi permit forks ds blockchain forks occur multiple nodes solve puzzle roughly time order resolve conflict ds node retrieves nonce field received headers sorts increasing order let suppose largest nonce th ds node nimax leader ds committee proposes header corresponds largest nonce seen runs consensus protocol agree ds block header th ds node agrees accept proposed header corresponding nonce larger equal nimax consensus reached signature ds block built",
    "metadata": {
      "chunk_id": "c654bc017ebb5df618db67745f464941",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 22] corresponds largest nonce seen runs consensus protocol agree ds block header th ds node agrees accept proposed header corresponding nonce larger equal nimax consensus reached signature ds block built agreed winner leader 3 generating shards ds committee elected actual sharding network start order node participate underlying consensus protocol perform proof work pow2 sharding protocol repeated start ds epoch algorithm pow2 given algorithm 2 v n etwork l ayer z illiqa designed scale transaction rates main idea sharding e dividing mining network small shards capable processing transactions parallel section present idea network transaction sharding network sharding network sharding e dividing mining network smaller shards step process dedicated set nodes called directory service committee ds committee elected shard network assign nodes shard present processes detail 1 directory service committee facilitate sharding network elect group nodes called directory service ds nodes ds nodes form",
    "metadata": {
      "chunk_id": "249f0de77cd3359e3d368bf627791130",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 23] committee elected shard network assign nodes shard present processes detail 1 directory service committee facilitate sharding network elect group nodes called directory service ds nodes ds nodes form ds committee election ds nodes based proof work puzzle refer pow1 algorithm pow1 given algorithm 1 algorithm 1 pow1 ds committee election 1 input current ds epoch dsi xe2 x88 x921 prev ds committee composition output header ds block header competing node epoch randomness ds blockchain dbi xe2 x88 x921 recent ds block start th epoch 2 r1 xe2 x86 x90 getepochrand dbi xe2 x88 x921 epoch randomness transaction blockchain tbj recent tx block start th epoch 3 r2 xe2 x86 x90 getepochrand tbj pk node xe2 x80 x99s public key ip node xe2 x80 x99s ip address 4 5 nonce mixhash xe2 x86 x90 ethash pow pk ip r1 r2 header xe2 x86 x90 buildheader nonce mixhash pk algorithm 2 pow2 shard membership header includes pk nonce fields ip header multicast members ds committee 6 7 multicasttodsi xe2 x88 x921 ip",
    "metadata": {
      "chunk_id": "681b8bb947ebe21202ac19cb03ac97a7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 24] ip r1 r2 header xe2 x86 x90 buildheader nonce mixhash pk algorithm 2 pow2 shard membership header includes pk nonce fields ip header multicast members ds committee 6 7 multicasttodsi xe2 x88 x921 ip header return header 1 input current ds epoch dsi current ds committee composition output nonce mixhash outputs ethash pow competing node epoch randomness ds blockchain dbi xe2 x88 x921 recent ds block start th epoch node successfully produced valid nonce pow1 earlier nodes proposes header new ds block recall ds block header signature node pow1 generates ds block header header multicast nodes ds committee ds committee runs consensus proposed ds block header builds signature 2f ds nodes signed ds block header committed ds blockchain 2 r xe2 x86 x90 getepochrand dbi pk node xe2 x80 x99s public key ip node xe2 x80 x99s ip address 3 nonce mixhash xe2 x86 x90 ethash pow pk ip r ip header multicast members ds committee 4 5 multicasttodsi nonce mixhash pk ip return nonce mixhash computed valid",
    "metadata": {
      "chunk_id": "33a75d072b3a60b191d8144930720fda",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 25] key ip node xe2 x80 x99s ip address 3 nonce mixhash xe2 x86 x90 ethash pow pk ip r ip header multicast members ds committee 4 5 multicasttodsi nonce mixhash pk ip return nonce mixhash computed valid nonce mixhash pow2 multicast ds committee ds nodes 5 x0cthe sender xe2 x80 x99s address e address account example account address 160 bit integer bounded collectively accept pow solutions sharded l consensus committees shards n0 nodes run consensus number pow2 solutions received leader ds committee initiates consensus protocol agree set valid pow2 solutions end consensus protocol leader generates ec schnorr multisignature signed ds nodes order proceed 2 3 ds nodes agreed set acceptable pow2 solutions sharding leverages deterministic function assign node shard let assume need shards having n0 nodes nonce values sorted increasing order n0 nodes assigned shard n0 shard identity miner proposed largest nonce shard declared leader induces strict ordering members shard n0 sufficiently large 800",
    "metadata": {
      "chunk_id": "4f2a0c99e71e8176c84c82597cce02ef",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 26] nodes nonce values sorted increasing order n0 nodes assigned shard n0 shard identity miner proposed largest nonce shard declared leader induces strict ordering members shard n0 sufficiently large 800 shard 13 byzantine high probability blog2 c 1 xe2 x89 xa4 160 practice smaller 100 assigned shard identified transaction multicast nodes shard broadcast transaction reaches leader assigned shard includes tx block runs consensus protocol double spend replay attacks easily detected nonce present transaction recall transaction nonce counts number transactions sent sender xe2 x80 x99s account transaction gets transaction blockchain nonce updated account xe2 x80 x99s state global state transaction nonce value smaller equal current value global state gets rejected miners sharding transactions based sender xe2 x80 x99s account address natively allows shard members detect double spend transaction sender processed shard 2 transaction processing nodes committee propose transactions transactions",
    "metadata": {
      "chunk_id": "99412b3f35268bef72b896775e0d2164",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 27] sender xe2 x80 x99s account address natively allows shard members detect double spend transaction sender processed shard 2 transaction processing nodes committee propose transactions transactions sent leader run consensus protocol set transactions forms tx block blocks proposed shard called micro block identified type marker 0x00 micro block contains ec schnorr multisignature 23 nodes shard leader builds bitmap b identifies public keys signers b 1 th member shard signed tx block header shard reaches consensus tx block leader multicasts block header signature ds nodes ds nodes broadcast ds committee block reaches leader data block asynchronously sent nodes ds committee aggregates blocks sent shards runs round consensus protocol agree final block final block tx block identified type marker 0x01 final block contains ec schnorr multisignature 2 3 n0 nodes ds committee leader ds committee builds bitmap b identifies public keys signers b 1 th member ds committee signed tx block header final",
    "metadata": {
      "chunk_id": "4625a96afaccf225322ebf9b68bc4e1c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 28] final block contains ec schnorr multisignature 2 3 n0 nodes ds committee leader ds committee builds bitmap b identifies public keys signers b 1 th member ds committee signed tx block header final block header signature multicast nodes shard actual tx block data sent ds nodes shard following steps taken process final block 1 node shard verifies ec schnorr multisignature public keys ds nodes signatures valid 32 n0 public keys represented bitmap nodes perform checks b public channel ds nodes publish certain information public channel including identities connection information ds nodes list nodes shard sharding logic transactions explained section v d public channel untrusted assumed accessible nodes implementation broadcast primitive implements public channel user blockchain like submit transaction acceptance check information sharding shard responsible processing transaction information published public channel expected signed 2 3 ds nodes verified node user c new nodes joining z",
    "metadata": {
      "chunk_id": "54f317257f6b38838c91ff9d67eade09",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 29] transaction acceptance check information sharding shard responsible processing transaction information published public channel expected signed 2 3 ds nodes verified node user c new nodes joining z illiqa new node join network attempt solve pow1 ds node pow2 member shard end need obtain information randomness required pow1 pow2 blockchains obtains randomness information new node submit solution ds committee d transaction sharding processing presented section v network sharding creates shards capable processing transactions parallel section present particular transaction gets assigned shard transactions processed n purpose use following abstraction xe2 x88 x92 xe2 x86 x92 b indicate transaction n zil sender xe2 x80 x99s account receiver xe2 x80 x99s account b n 1 transaction assignment transaction xe2 x88 x92 xe2 x86 x92 b gets processed single shard assuming shards numbered 0 xe2 x88 x92 1 transaction assigned shard identified blog2 c 1 rightmost bits 6 x0cpbft relies correct leader",
    "metadata": {
      "chunk_id": "06f40b3bcc282eec52364ad8051ead7e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 30] xe2 x88 x92 xe2 x86 x92 b gets processed single shard assuming shards numbered 0 xe2 x88 x92 1 transaction assigned shard identified blog2 c 1 rightmost bits 6 x0cpbft relies correct leader begin phase proceed sufficient majority exists case leader byzantine stall entire consensus protocol address challenge pbft offers view change protocol replace byzantine leader nodes progress bounded time independently announce desire change leader quorum 23 n nodes decides leader faulty leader known schedule takes owing multicast node prepare commit phase communication complexity pbft normal case o n2 2 transaction hash included final block header node checks corresponding transaction content available corresponding transaction proposed shard node belongs hash transaction data compared hash contained final block header transaction proposed shard transaction data shared asynchronously shards 3 transaction data available data final block reconstructed tx block appended local transaction blockchain",
    "metadata": {
      "chunk_id": "2ea4376cada39818220438172bcd5eec",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 31] final block header transaction proposed shard transaction data shared asynchronously shards 3 transaction data available data final block reconstructed tx block appended local transaction blockchain account state global state accordingly updated 4 transaction content available node temporarily invalidates sending account transaction local view accounts pending transactions account rejected local transaction content brought sync global state rejected transactions retried sending node b improving efficiency classical pbft uses message authentication code mac authenticated communication nodes mac requires secret key shared nodes nodes consensus group agree record communication complexity o n2 node quadratic complexity pbft impractical committee 20 nodes improve efficiency use ideas inspired byzcoin 15 1 replace mac digital signatures effectively reduce communication overhead o n 2 meantime allow nodes verify agreement typical way collect signatures honest majority append agreement",
    "metadata": {
      "chunk_id": "08656fe7c748f39c98a80beea7409cad",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 32] byzcoin 15 1 replace mac digital signatures effectively reduce communication overhead o n 2 meantime allow nodes verify agreement typical way collect signatures honest majority append agreement resulting agreement size linear size consensus group improve employ ec schnorr multisignatures aggregate signatures o 1 size multisignature directly use classical ec schnorr multisignature scheme pbft setting classical setting signers agree signing given message signature valid signers signed message pbft setting require message signed 23 n nodes consensus group main modification required maintain bitmap b signers participate signing process th node participated process b 1 0 bitmap build leader bitmap verifier validate signature resulting protocol left appendix b vi c onsensus l ayer mentioned earlier shard ds committee run consensus protocol micro blocks final blocks respectively section present consensus layer defines consensus protocol run shard ds committee rest discussion refer shards ds",
    "metadata": {
      "chunk_id": "64fa18ace2fdafcffea0d27ec38bbb3b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 33] shard ds committee run consensus protocol micro blocks final blocks respectively section present consensus layer defines consensus protocol run shard ds committee rest discussion refer shards ds committees collectively consensus group practical byzantine fault tolerance core z illiqa xe2 x80 x99s consensus protocol relies practical byzantine fault tolerance pbft protocol proposed castro liskov 3 improve efficiency idea employing ec schnorr multisignature pbft protocol developed 14 15 use ec schnorr multisignature lowers normal case communication latency o n2 o n reduces signature size o n o 1 n size consensus group section present overview pbft pbft nodes consensus group ordered sequence primary node leader referred backup nodes round pbft phases discussed 1 pre prepare phase phase leader announces record tx block case group agree 2 prepare phase receiving pre prepare message node validates correctness multicasts prepare message nodes 3 commit phase receiving 23 n prepare messages",
    "metadata": {
      "chunk_id": "282282e7259bff2b2824efe89edeef74",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 35] signature generated ecschnorr multisignature leader builds bitmap nodes signed tx block 3 commit phase ensure 2n 3 nodes know fact 2n nodes verified 3 tx block perform second round ec schnorr multisignature statement signed multisignature generated round end phases consensus reached tx block proposed leader computations training neural net data mining financial modeling etc z illiqa xe2 x80 x99s computational sharding approach relies new smart contract language turing complete scales better multitude applications smart contract language z illiqa follows dataflow programming style 16 17 dataflow execution model contract represented directed graph nodes graph primitive instructions operations directed arcs nodes represent data dependencies operations e output input second node gets activated operational soon inputs available stands contrast classical von neumann execution model employed ethereum instruction executed program counter reaches regardless executed earlier key advantage",
    "metadata": {
      "chunk_id": "dffdfe9ee967989fae9b4f4cff67ddba",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 36] operational soon inputs available stands contrast classical von neumann execution model employed ethereum instruction executed program counter reaches regardless executed earlier key advantage employing dataflow approach instruction executed nodes graph activated time executed parallel simple principle provides potential massive parallel execution present simple sequential program figure 1a instructions figure 1b present dataflow variant von neumann execution model program run time units computing b finally c model capture fact b independently computed dataflow program hand compute values parallel node performs addition gets activated soon b available d leader change consensus protocol leader honest drive nodes consensus group reach agreements new sets transactions continuously leader byzantine intentionally delay drop messages honest nodes slow protocol penalize malicious leaders protocol changes leader shard ds committee periodically prevents byzantine leader stall consensus",
    "metadata": {
      "chunk_id": "94da09604182219d86912fae01479183",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 37] byzantine intentionally delay drop messages honest nodes slow protocol penalize malicious leaders protocol changes leader shard ds committee periodically prevents byzantine leader stall consensus protocol infinite time nodes ordered leader chosen round robin manner fact leader shard changed micro block leader ds committee changed final block let assume size consensus group n ds epoch allow maximum n final blocks final block aggregating maximum 1 micro block shard vii s mart c ontract l ayer z illiqa comes innovative special purpose smart contract language execution environment leverages underlying architecture provide large scale highly efficient computation platform section present smart contract layer employs dataflow programming architecture y x 20 xe2 x88 x97 computational sharding dataflow paradigm z illiqa xe2 x80 x99s smart contract language execution platform designed leverage underlying network transaction sharding architecture sharded architecture ideal running computation",
    "metadata": {
      "chunk_id": "41712a6dc5f411707e4e1ae0ec4d58b8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 38] paradigm z illiqa xe2 x80 x99s smart contract language execution platform designed leverage underlying network transaction sharding architecture sharded architecture ideal running computation intensive tasks efficient manner key idea following subset network shard perform computation refer approach computational sharding contrast existing smart contract architectures ethereum computational sharding z illiqa takes different approach process contracts ethereum node required perform computation validate outcome computation update global state albeit secure fully redundant programming model prohibitively expensive running large scale computations easily parallelized examples include simple computations search sort linear algebra computations complex b x xe2 x88 x97y b y 20 c b c simple program b dataflow program fig 1 simple sequential program instructions b dataflow variant run z illiqa xe2 x80 x99s sharded network node dataflow program eventually attributed single shard small subset",
    "metadata": {
      "chunk_id": "f8dffcd22287a45759672e18072ab272",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 39] b dataflow program fig 1 simple sequential program instructions b dataflow variant run z illiqa xe2 x80 x99s sharded network node dataflow program eventually attributed single shard small subset nodes shard architecture ideal mapreduce style computational tasks node perform mapping task node work reducer aggregate work mapper order facilitate execution dataflow program z illiqa xe2 x80 x99s smart contract language following features 1 operating virtual memory space shared globally entire blockchain 8 x0c2 locking intermediate cells virtual shared memory space execution 3 checkpointing intermediate results execution committed blockchain learning imperative infrastructure allows deep learning models train large datasets known training large datasets crucial model xe2 x80 x99s accuracy end z illiqa xe2 x80 x99s computational sharding dataflow language particularly useful build machine learning applications serve infrastructure run tools like tensorflow1 tasking groups z illiqa nodes",
    "metadata": {
      "chunk_id": "c00800aa247b05627c2d85acf6a1d51d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 41] certain known portion computation placed z illiqa efficient secure computation future research development z illiqa strengthen protection data privacy intellectual property applications b smart security budgeting apart form benefits parallelization offered dataflow computation model z illiqa provides flexible security budgeting mechanism computational sharding feature enabled sharding computational resources blockchain network overlay consensus process computational sharding allows users z illiqa applications running z illiqa specify sizes consensus groups compute subtasks consensus group tasked compute subtask produce results user specifies condition acceptance results e g consensus group produce results 3 4 produce results etc user application running z illiqa budget wants spend computing security respectively particular user running particular deep learning application spend gas fee running different neural network tasks letting nodes repeating computation case specify smaller",
    "metadata": {
      "chunk_id": "2c2220b450f25ab80cc2e09df5191eb0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 42] security respectively particular user running particular deep learning application spend gas fee running different neural network tasks letting nodes repeating computation case specify smaller consensus group running neural network computation hand sophisticated financial modeling algorithm requires greater precision task consensus groups larger number nodes compute critical portions algorithm resilient potential tampering manipulation results viii ncentive l ayer token supply z illiqa finite supply 21 billion zils smallest unit 10 xe2 x88 x9212 zil final tx block comes block reward generates new tokens block reward spread period 10 years decreasing time aim roughly 80% tokens 4 years remaining 20% 6 years token emission xe2 x80 x9csmooth xe2 x80 x9d sense block reward reduce drastically certain number blocks smooth reduction block reward means network hashrate expected stable reward reduces gradually time 10 years expect reached significant scale terms number nodes network users",
    "metadata": {
      "chunk_id": "cd2f9c21d8c6e3fc2f9df8e6979abd52",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 43] certain number blocks smooth reduction block reward means network hashrate expected stable reward reduces gradually time 10 years expect reached significant scale terms number nodes network users executing transactions expect market stabilized certain rates transaction fees fully sustain running network need new tokens entering system rewards c scalable applications examples z illiqa aims provide platform run highly scalable computations multitude fields data mining machine learning financial modeling supporting efficient sharding turing complete programs challenging exist public blockchains support turing complete smart contracts e g ethereum z illiqa focuses specific applications requirements met today 1 computation parallelizable computation load scientific computing large data typical example requires large distributed computing power computations highly parallelizable examples include linear algebra operations large matrices search sea huge data simulation large dataset z illiqa",
    "metadata": {
      "chunk_id": "4f4aa03a7e29c055b5c93e4738c724e2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 44] example requires large distributed computing power computations highly parallelizable examples include linear algebra operations large matrices search sea huge data simulation large dataset z illiqa provides computing tasks inexpensive short turnaround alternative right incentive place computational sharding security budgeting z illiqa leveraged readily available highly reliable resource heavy computation load 2 train neural nets growing popularity use cases machine learning particular deep b incentivizing miners miners reach consensus transactions process perform computations smart contract update global state miners incentivized requiring sender transaction pay gas upfront 1 https www tensorflow org 9 x0crecall final tx block aggregates micro block shard micro tx block contains gas field stores total gas transactions block final tx block gas field sum gas field micro txblock tx block proposed corresponding gas block reward equitably distributed 1 leaders shards proposed micro block",
    "metadata": {
      "chunk_id": "c01595a5c1c32457fbe789e154ef1248",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 45] stores total gas transactions block final tx block gas field sum gas field micro txblock tx block proposed corresponding gas block reward equitably distributed 1 leaders shards proposed micro block 2 leader ds committee proposed final case equitable distribution possible distribution slightly biased leader ds committee reward m total number stake holders reward n leader shard gets b m n c leader ds committee gets m xe2 x88 x92 n xc2 xb7 bm c n leader shard changed new micro block proposed member shard gets rewarded similarly leader ds committee changed final block member ds committee rewarded z illiqa proposes smart contract platform available byzcoin omniledger z illiqa xe2 x80 x99s smart contract platform takes different approach compared ethereum z illiqa xe2 x80 x99s smart contract platform leverages underlying sharding architecture based dataflow programming advantages dataflow programs inherent concurrency parallelism easy reason correctness natural composability functions",
    "metadata": {
      "chunk_id": "c61b274f511b1f4bcccd130401291398",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 46] platform leverages underlying sharding architecture based dataflow programming advantages dataflow programs inherent concurrency parallelism easy reason correctness natural composability functions programs etc x f uture r esearch d irections discuss ongoing future directions research improve z illiqa state sharding increase z illiqa xe2 x80 x99s user base high transaction throughput come following challenge efficiently handle continuous influx blocks modify global state referred state sharding literature essence state sharding alleviate nodes storing receiving blocks transactions way reduce storage communication load nodes constitute scaling factor throughput non trivial design secure efficient state sharding scheme cross shard communications arising state sharding outweigh performance gains research needs address additional complexities secure proof stake spos best knowledge literature proposes secure pos scheme base z illiqa xe2 x80 x99s building blocks pow scheme given significant",
    "metadata": {
      "chunk_id": "5735167bd92aadd70639acefb4f8d6ca",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 47] research needs address additional complexities secure proof stake spos best knowledge literature proposes secure pos scheme base z illiqa xe2 x80 x99s building blocks pow scheme given significant performance gain pos consensus algorithms worthwhile investigating pos paradigm search secure efficient pos scheme z illiqa storage pruning currently exploring ways securely prune dated blocks stored blockchain reduce storage requirements ease joining process new nodes consider multi grade storage compression blocks transactions possible solutions cross chain support z illiqa intention complement public blockchains build healthy ecosystem provide end users broad spectrum platforms choice applications end z illiqa seek technical solutions support gradual cross chain communication potentially enable cross chain applications privacy preserving computation desirable applications particular financial modeling applications strong privacy intellectual property protection running z illiqa solutions",
    "metadata": {
      "chunk_id": "5994bcb29ac4814a0a790da35cd71605",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 48] cross chain applications privacy preserving computation desirable applications particular financial modeling applications strong privacy intellectual property protection running z illiqa solutions based oblivious ram hide access pattern encrypted data 21 zksnark 22 hide input program private function evaluation 23 hide contract xe2 x80 x99s business logic investigated ix r elated w ork z illiqa developed ideas bitcoin ng 18 collective signing cosi 14 byzcoin 15 elastico 19 omniledger 20 bitcoin ng proposed idea decouple leader election block proposals bitcoin leader elected mining keyblock mint microblocks 10 minute block interval idea byzcoin 15 idea network transaction sharding bitcoin like system proposed 19 network transaction sharding solve scalability issues shard needs sign tx block makes total number signatures linear number signers eventually results large block size bottleneck broadcast multi cast multisignatures 11 provides solution problem cosi 14 uses ec schnorr",
    "metadata": {
      "chunk_id": "0c423bde30647abf5516494629709a20",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 49] tx block makes total number signatures linear number signers eventually results large block size bottleneck broadcast multi cast multisignatures 11 provides solution problem cosi 14 uses ec schnorr multisignature scheme design protocol collective signing cosi proposed work hostile environment public blockchain byzantine nodes significant enhancements develop cosi scheme derive secure scheme apply z illiqa proposals surfaced sidestep inherent scalability limitation existing blockchain protocols instance parameterizing original bitcoin protocol e g increasing block sizes moving computation offchain e g micropayment channels lightening networks creating hierarchy blockchains e g sidechains protocols directly blockchain protocol scalable z illiqa targets heart scalability problem xe2 x80 x93 blockchain z illiqa seen extension byzcoin omniledger security performance optimizations xi conclusion whitepaper presented z illiqa xe2 x80 x99s sharding architecture allows mining network process",
    "metadata": {
      "chunk_id": "574d3569fa9b9575a243435c40f7a972",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 50] blockchain z illiqa seen extension byzcoin omniledger security performance optimizations xi conclusion whitepaper presented z illiqa xe2 x80 x99s sharding architecture allows mining network process transactions parallel reach high throughput z illiqa 10 x0ccomes unique smart contract platform leverages underlying sharing architecture follows dataflow programming paradigm new smart contract language ideal running computation intensive task efficient manner 21 e stefanov m van dijk e shi c w fletcher l ren x yu s devadas xe2 x80 x9cpath oram extremely simple oblivious ram protocol xe2 x80 x9d 2013 acm sigsac conference computer communications security ccs xe2 x80 x9913 berlin germany november 4 8 2013 2013 pp 299 xe2 x80 x93310 22 e ben sasson chiesa e tromer m virza xe2 x80 x9csuccinct noninteractive zero knowledge von neumann architecture xe2 x80 x9d proceedings 23rd usenix security symposium san diego usa august 20 22 2014 2014 pp 781 xe2 x80 x93796 23 p mohassel s s sadeghian n p",
    "metadata": {
      "chunk_id": "f04b7220f9bd24471c7265818d50d9c3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 51] zero knowledge von neumann architecture xe2 x80 x9d proceedings 23rd usenix security symposium san diego usa august 20 22 2014 2014 pp 781 xe2 x80 x93796 23 p mohassel s s sadeghian n p smart xe2 x80 x9cactively secure private function evaluation xe2 x80 x9d advances cryptology asiacrypt 2014 20th international conference theory application cryptology information security kaoshiung taiwan r o c december 7 11 2014 proceedings ii 2014 pp 486 xe2 x80 x93505 24 bsi xe2 x80 x9ctechnical guideline tr 03111 elliptic curve cryptography xe2 x80 x9d federal office information security tech rep 01 2012 25 d j bernstein xe2 x80 x9cmulti user schnorr security revisited xe2 x80 x9d iacr cryptology eprint archive vol 2015 p 996 2015 online available http eprint iacr org 2015 996 26 m michels p horster xe2 x80 x9con risk disruption multiparty signature schemes xe2 x80 x9d proceedings international conference theory applications cryptology information security advances cryptology ser asiacrypt xe2 x80",
    "metadata": {
      "chunk_id": "391df23ead2076dd8b260d9236135e2d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 52] x80 x9con risk disruption multiparty signature schemes xe2 x80 x9d proceedings international conference theory applications cryptology information security advances cryptology ser asiacrypt xe2 x80 x9996 london uk uk springer verlag 1996 pp 334 xe2 x80 x93345 r eferences 1 s nakamoto xe2 x80 x9cbitcoin peer peer electronic cash system http bitcoin org bitcoin pdf xe2 x80 x9d 2008 2 e foundation xe2 x80 x9cethereum xe2 x80 x99s white paper xe2 x80 x9d https github com ethereum wiki wiki white paper 2014 3 m castro b liskov xe2 x80 x9cpractical byzantine fault tolerance xe2 x80 x9d proceedings symposium operating systems design implementation ser osdi xe2 x80 x9999 berkeley usa usenix association 1999 pp 173 xe2 x80 x93186 4 e heilman kendler zohar s goldberg xe2 x80 x9ceclipse attacks bitcoin xe2 x80 x99s peer peer network xe2 x80 x9d 24th usenix security symposium usenix security 15 washington d c usenix association 2015 pp 129 xe2 x80 x93144 5 s gilbert n lynch xe2 x80 x9cbrewer xe2",
    "metadata": {
      "chunk_id": "1b316071d648cf0d1faa82baabb38b4d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 53] xe2 x80 x99s peer peer network xe2 x80 x9d 24th usenix security symposium usenix security 15 washington d c usenix association 2015 pp 129 xe2 x80 x93144 5 s gilbert n lynch xe2 x80 x9cbrewer xe2 x80 x99s conjecture feasibility consistent available partition tolerant web services xe2 x80 x9d acm sigact news 2002 p 2002 6 nist xe2 x80 x9csha 3 standard permutation based hash extendable output functions xe2 x80 x9d 2015 7 b guido d joan p michae xcc x88l v gilles xe2 x80 x9cthe keccak reference xe2 x80 x9d 2011 8 c schnorr xe2 x80 x9cefficient signature generation smart cards xe2 x80 x9d j cryptology vol 4 3 pp 161 xe2 x80 x93174 1991 9 c research xe2 x80 x9csec 2 recommended elliptic curve domain parameters xe2 x80 x9d 2000 online available http www secg org download aid 386 sec2 final pdf 10 poelstra xe2 x80 x9cschnorr signatures non malleable random oracle model xe2 x80 x9d 2014 11 s micali k ohta l reyzin xe2 x80 x9caccountable subgroup multisignatures extended abstract xe2 x80 x9d",
    "metadata": {
      "chunk_id": "7412d3c661e38a3ec21bc256896653bd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 54] 10 poelstra xe2 x80 x9cschnorr signatures non malleable random oracle model xe2 x80 x9d 2014 11 s micali k ohta l reyzin xe2 x80 x9caccountable subgroup multisignatures extended abstract xe2 x80 x9d proceedings 8th acm conference computer communications security ser ccs xe2 x80 x9901 new york ny usa acm 2001 pp 245 xe2 x80 x93254 12 g wood xe2 x80 x9cethereum secure decentralised generalised transaction ledger xe2 x80 x9d http gavwood com paper pdf 2014 13 xe2 x80 x9cethash xe2 x80 x9d https github com ethereum wiki wiki ethash accessed june 27 2017 version 23 14 e syta tamas d visher d wolinsky p jovanovic l gasser n gailly khoffi b ford xe2 x80 x9ckeeping authorities xe2 x80 x9dhonest bust xe2 x80 x9d decentralized witness cosigning xe2 x80 x9d ieee symposium security privacy sp 2016 san jose usa 22 26 2016 2016 pp 526 xe2 x80 x93545 15 e kokoris kogias p jovanovic n gailly khoffi l gasser b ford xe2 x80 x9cenhancing bitcoin security performance strong consistency collective signing",
    "metadata": {
      "chunk_id": "e40436dac68b74f3ce1078c8053248d7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 55] jose usa 22 26 2016 2016 pp 526 xe2 x80 x93545 15 e kokoris kogias p jovanovic n gailly khoffi l gasser b ford xe2 x80 x9cenhancing bitcoin security performance strong consistency collective signing xe2 x80 x9d 25th usenix security symposium usenix security 16 austin tx usa august 10 12 2016 2016 pp 279 xe2 x80 x93296 16 arvind d e culler xe2 x80 x9cannual review computer science vol 1 1986 xe2 x80 x9d j f traub b j grosz b w lampson n j nilsson eds palo alto usa annual reviews inc 1986 ch dataflow architectures pp 225 xe2 x80 x93253 17 l davis r m keller xe2 x80 x9cdata flow program graphs xe2 x80 x9d computer vol 15 2 pp 26 xe2 x80 x9341 feb 1982 18 eyal e gencer e g sirer r van renesse xe2 x80 x9cbitcoinng scalable blockchain protocol xe2 x80 x9d 13th usenix symposium networked systems design implementation nsdi 2016 santa clara usa march 16 18 2016 2016 pp 45 xe2 x80 x9359 19 l luu v narayanan c zheng k baweja s gilbert p saxena xe2 x80 x9ca secure sharding protocol open",
    "metadata": {
      "chunk_id": "9b597f36298b158447c07b22501a5546",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 56] systems design implementation nsdi 2016 santa clara usa march 16 18 2016 2016 pp 45 xe2 x80 x9359 19 l luu v narayanan c zheng k baweja s gilbert p saxena xe2 x80 x9ca secure sharding protocol open blockchains xe2 x80 x9d proceedings 2016 acm sigsac conference computer communications security vienna austria october 24 28 2016 2016 pp 17 xe2 x80 x9330 20 e kokoris kogias p jovanovic l gasser n gailly b ford xe2 x80 x9comniledger secure scale decentralized ledger xe2 x80 x9d iacr cryptology eprint archive vol 2017 p 406 2017 ppendix s chnorr d igital s ignature lgorithm ec schnorr single signer scheme ec schnorr works group discrete logarithm hard 8 24 25 z illiqa uses elliptic curve group defined popular secp256k1 curve denote c p g n set parameters define group p prime number specifies underlying field fp g base point curve n prime order g ec schnorr requires cryptographic hash function h instantiate sha3 256 6 ec schnorr set algorithms keygen sign verify present section algorithms",
    "metadata": {
      "chunk_id": "19231cdb05a7ea0b45da5881ef89cf0a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 57] underlying field fp g base point curve n prime order g ec schnorr requires cryptographic hash function h instantiate sha3 256 6 ec schnorr set algorithms keygen sign verify present section algorithms scalar x point q denote scalar multiplication x q 1 keygen c algorithm takes curve parameters c returns pair public pk private sk keys keygen c p g n $ 1 choose sk xe2 x86 x90 1 n xe2 x88 x92 1 2 set pk xe2 x86 x90 sk g 3 return pk sk 2 sign c pk sk m algorithm run signer takes curve parameters c public key private key pair pk sk message sign m xe2 x88 x88 0 1 xe2 x88 x97 returns signature xcf x83 sign c pk sk m 1 2 3 4 5 6 7 8 11 $ choose k xe2 x86 x90 1 n xe2 x88 x92 1 set q xe2 x86 x90 k g set r xe2 x86 x90 h q pk m mod n r 0 goto 1 set s xe2 x86 x90 k xe2 x88 x92 r xc2 xb7 sk mod n s 0 goto 1 set xcf x83 xe2 x86 x90 r s return xcf x83 x0c3 verify c xcf x83 pk m algorithm run verifier wishes check validity signature takes curve parameters c signature xcf x83 public key pk message m",
    "metadata": {
      "chunk_id": "e137a11fdf19b7255e67029aadc191fb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  },
  {
    "text": "[Section 61] 23 n 1 nodes committee section present tweak protocol inspired 14 tweak consists maintaining bitmaps record participation protocol modified protocol given figure 3 briefly present protocol 1 time identity setup step exactly classical ec schnorr multisignature protocol presented appendix set successfully terminates steps protocol start 2 commitment generation step similar classical ec schnorr multisignature protocol difference participant pi sends public key pki qi aggregator 3 challenge generation step aggregator maintains bitmap bq 1 p initialized 0 qi pki received previous step aggregator sets bq 1 aggregator waits stipulated time handle network propagation delay computes following p aggregated keys pk xe2 x86 x90 pki xe2 x88 x88p pki xc2 xb7 bq e adds public keys p received qi b computes q xe2 x86 x90 bq 1 qi qi xe2 x80 x99s received previous step 1 time identity setup step run participant verifier start protocol signer pi currently involved signing protocol generates ec schnorr",
    "metadata": {
      "chunk_id": "83cbcd6cda262f4456cb58534ca44596",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zilliqa.txt"
    }
  }
]