[
  {
    "text": "[Section 1] b tezos xe2 x80 x94 self amending crypto ledger white paper l m goodman september 2 2014 changes original paper current implementation indicated red xe2 x80 x9cour argument flatly circular like xe2 x80 x9d xe2 x80 x94 willard van orman quine abstract present tezos generic self amending crypto ledger tezos instantiate blockchain based ledger operations regular blockchain implemented purely functional module abstracted shell responsible network operations bitcoin ethereum cryptonote etc represented tezos implementing proper interface network layer importantly tezos supports meta upgrades protocols evolve amending code achieve tezos begins seed protocol defining procedure stakeholders approve amendments protocol including amendments voting procedure unlike philosopher peter suber xe2 x80 x99s nomic 3 game built fully introspective set rules addition tezos xe2 x80 x99s seed protocol based pure proof stake system supports turing complete smart contracts tezos implemented ocaml powerful",
    "metadata": {
      "chunk_id": "fa90a1ebec86e54f530b4229abf57030",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 2] x99s nomic 3 game built fully introspective set rules addition tezos xe2 x80 x99s seed protocol based pure proof stake system supports turing complete smart contracts tezos implemented ocaml powerful functional programming language offering speed unambiguous syntax semantic ecosystem making tezos good candidate formal proofs correctness familiarity bitcoin protocol basic cryptographic primitives assumed rest paper 1 x0ccontents 1 introduction 3 2 self amending cryptoledger 2 1 mathematical representation 2 2 network shell 2 2 1 clock 2 2 2 chain selection algorithm 2 2 3 network level defense 2 3 functional representation 2 3 1 validating chain 2 3 2 amending protocol 2 3 3 rpc 3 3 4 4 4 5 5 5 6 7 3 seed protocol 3 1 economy 3 1 1 coins 3 1 2 mining signing rewards 3 1 3 lost coins 3 1 4 amendment rules 3 2 proof stake mechanism 3 2 1 overview 3 2 2 clock 3 2 3 generating random seed 3 2 4 follow coin procedure 3 2 5 mining blocks 3 2 6 signing blocks 3 2 7 weight chain 3 2 8",
    "metadata": {
      "chunk_id": "cd0e62d79d0afc1c733316b7d2df11ac",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 3] 3 1 4 amendment rules 3 2 proof stake mechanism 3 2 1 overview 3 2 2 clock 3 2 3 generating random seed 3 2 4 follow coin procedure 3 2 5 mining blocks 3 2 6 signing blocks 3 2 7 weight chain 3 2 8 denunciations 3 3 smart contracts 3 3 1 contract type 3 3 2 origination 3 3 3 transactions 3 3 4 storage fees 3 3 5 code 3 3 6 fees 8 8 8 8 9 9 10 10 11 11 12 13 13 14 14 14 14 15 15 16 16 16 4 conclusion 17 2 x0c1 introduction paper discuss concept abstract blockchains implementation self amending crypto ledger second describe proposed seed protocol 2 self amending cryptoledger blockchain protocol decomposed distinct protocols network protocol discovers blocks broadcasts transactions transaction protocol specifies makes transaction valid consensus protocol forms consensus unique chain tezos implements generic network shell shell agnostic transaction protocol consensus protocol refer transaction protocol consensus protocol xe2 x80 x9cblockchain protocol xe2 x80 x9d mathematical",
    "metadata": {
      "chunk_id": "8cffc4ee19fa7b143b1a20d362c35c77",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 4] tezos implements generic network shell shell agnostic transaction protocol consensus protocol refer transaction protocol consensus protocol xe2 x80 x9cblockchain protocol xe2 x80 x9d mathematical representation blockchain protocol describe implementation choices tezos 2 1 mathematical representation blockchain protocol fundamentally monadic implementation concurrent mutations global state achieved defining xe2 x80 x9cblocks xe2 x80 x9d operators acting global state free monoid blocks acting genesis state forms tree structure global canonical state defined minimal leaf specified ordering suggests following abstract representation let s xe2 x89 xa4 totally ordered countable set possible states let xe2 x8a x98 xe2 x88 x88 s represent special invalid state let b xe2 x8a x82 ss xe2 x88 xaa xe2 x8a x98 set blocks set valid blocks b xe2 x88 xa9 ss total order s extended xe2 x88 x80s xe2 x88 x88 s xe2 x8a x98 s order determines leaf block tree considered canonical blocks b seen operators",
    "metadata": {
      "chunk_id": "1ce5ad0a5466021fa685e656b6a0a88d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 5] xe2 x8a x98 set blocks set valid blocks b xe2 x88 xa9 ss total order s extended xe2 x88 x80s xe2 x88 x88 s xe2 x8a x98 s order determines leaf block tree considered canonical blocks b seen operators acting state blockchain protocol1 bitcoin litecoin peercoin ethereum cryptonote etc fully determined tuple s xe2 x89 xa4 xe2 x8a x98 b xe2 x8a x82 ss xe2 x88 xaa xe2 x8a x98 1 ghost approach orders leafs based properties tree approach problematic theoretical practical reasons better emulate inserting proofs mining main chain 3 x0cthe networking protocol fundamentally identical blockchains xe2 x80 x9cmining xe2 x80 x9d algorithms emergent property network given incentives block creation tezos blockchain protocol introspective letting blocks act protocol express set protocols recursively p s xe2 x89 xa4 xe2 x8a x98 b xe2 x8a x82 s s xc3 x97p xe2 x88 xaa xe2 x8a x98 2 2 network shell formal mathematical description doesn xe2 x80 x99t tell build block tree role network shell acts interface",
    "metadata": {
      "chunk_id": "3a9a2fa7cd8207d27bbd23bbcde5a4bd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 6] xe2 x89 xa4 xe2 x8a x98 b xe2 x8a x82 s s xc3 x97p xe2 x88 xaa xe2 x8a x98 2 2 network shell formal mathematical description doesn xe2 x80 x99t tell build block tree role network shell acts interface gossip network protocol network shell works maintaining best chain known client aware type objects transactions blocks propagated network deemed valid protocols ocaml modules amend existing protocol described details later focus transaction blocks arduous network shell protect nodes denial service attacks 2 2 1 clock block carries timestamp visible network shell blocks appear come future buffered timestamps minutes system time rejected protocol design tolerate reasonable clock drifts clients assume timestamps falsified 2 2 2 chain selection algorithm shell maintains single chain tree blocks chain overwritten client aware strictly better chain maintaining tree parsimonious terms network communications susceptible denial service attacks attacker produces large number low scoring valid forks",
    "metadata": {
      "chunk_id": "3c358a5e5ec0238591c4f11c16bb180e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 7] overwritten client aware strictly better chain maintaining tree parsimonious terms network communications susceptible denial service attacks attacker produces large number low scoring valid forks remains possible node lie score given chain lie client uncover having processed potentially large number blocks node subsequently ignored fortunately protocol property low scoring chains exhibit low rate block creation client consider blocks xe2 x80 x9cweak xe2 x80 x9d fork concluding announced score lie 4 x0c2 2 3 network level defense addition shell xe2 x80 x9cdefensive xe2 x80 x9d attempts connect peers ip ranges detects disconnected peers bans malicious nodes protect certain denial service attacks protocol provides shell context dependent bounds size blocks transactions 2 3 2 3 1 functional representation validating chain efficiently capture genericity abstract blockchain structure following ocaml types begin block header defined type raw block header pred block hash t header bytes t",
    "metadata": {
      "chunk_id": "a82d8b296c0d241c24deb1656b3e2493",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 8] representation validating chain efficiently capture genericity abstract blockchain structure following ocaml types begin block header defined type raw block header pred block hash t header bytes t operations operation hash t list timestamp float purposefully typing header field strongly represent arbitrary content type fields necessary operation shell include hash preceding block list operation hashes timestamp practice operations included block transmitted blocks network level operations represented arbitrary blobs type raw operation bytes t state represented help context module encapsulates disk based immutable key value store structure key value store versatile allows efficiently represent wide variety states module context sig type t type key string list val t key bytes t option lwt t val set t key bytes t t lwt t val del t key t lwt t end avoid blocking disk operations functions use asynchronous monad lwt 4 note operations context purely functional uses option monad throwing",
    "metadata": {
      "chunk_id": "ba4b9dd510255270641db181905e34d2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 9] t val set t key bytes t t lwt t val del t key t lwt t end avoid blocking disk operations functions use asynchronous monad lwt 4 note operations context purely functional uses option monad throwing exception set del return new context context module uses combination memory caching disk storage efficiently provide appearance immutable store define module type arbitrary blockchain protocol 5 x0ctype score bytes t list module type protocol sig type operation val parse block header raw block header block header option val parse operation bytes t operation option val apply context t block header option operation hash t operation list context t option lwt t val score context t score lwt t end longer compare states directly mathematical model instead project context list bytes score function list bytes ordered length lexicographic order fairly generic structure similar software versioning versatile representing orderings define comparison function protocol modules hard enforce requirement",
    "metadata": {
      "chunk_id": "26a0441056dfb846d59c953a2581048e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 10] bytes ordered length lexicographic order fairly generic structure similar software versioning versatile representing orderings define comparison function protocol modules hard enforce requirement function represent total order score projection verifies ties broken based hash block second principle need ability compare states distinct protocols specific protocol amendment rules likely extremely unlikely happen network shell know operations parse block header parse operation exposed shell allow pass fully typed operations blocks protocol check operations blocks formed deciding relay operations add blocks local block tree database apply function heart protocol passed block header associated list operations computes changes context returns modified copy internally difference stored versioning system block xe2 x80 x99s hash version handle passed list operations greedily attempts apply operations possible function necessary protocol great use miners attempting form valid blocks 2 3 2",
    "metadata": {
      "chunk_id": "070bf22ef1d77b02a3bfaa3d9a8d300d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 11] system block xe2 x80 x99s hash version handle passed list operations greedily attempts apply operations possible function necessary protocol great use miners attempting form valid blocks 2 3 2 amending protocol tezos xe2 x80 x99s powerful feature ability implement protocol capable self amendment achieved exposing procedures functions protocol set test protocol replaces protocol testnet 6 x0ca new protocol typically adopted stakeholder voter promote test protocol replaces current protocol protocol currently tested functions transform context changing associated protocol new protocol takes effect following block applied chain module context sig type t val set test protocol t protocol hash t lwt t val promote test protocol t protocol hash t t lwt t end protocol hash sha256 hash tarball ml mli files files compiled fly access small standard library sandboxed system functions called apply function protocol returns new context conditions trigger change protocol simplest version stakeholder",
    "metadata": {
      "chunk_id": "fe9c0e481abead2f5752c67f6c6f9728",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 13] procedures input output optionally described json schema note given context typically recent ancestor highest scoring leaf instance querying context blocks highest scoring leaf displays state ledger confirmations ui tailored specific version protocol generically derived json specification 7 x0c3 seed protocol like blockchains start genesis hash tezos starts seed protocol protocol amended reflect virtually blockchain based algorithm 3 1 3 1 1 economy coins initially 10 000 000 000 billion coins initial extent token supply number tokens issued crowdsale specifically xe2 x80 x9c10 billion xe2 x80 x9d merely placeholder change size effect principal hand divisible decimal places sake precision actuality digits decimal suggest single coin referred xe2 x80 x9ctez xe2 x80 x9d smallest unit simply cent suggest use symbol xea x9c xa9 ua729 xe2 x80 x9clatin small letter tz xe2 x80 x9d represent tez 1 cent xea x9c xa90 01 hundreth tez 3 1 2 mining signing rewards principle conjecture security",
    "metadata": {
      "chunk_id": "37719e2675183262f28ba570c1fdeca3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 14] cent suggest use symbol xea x9c xa9 ua729 xe2 x80 x9clatin small letter tz xe2 x80 x9d represent tez 1 cent xea x9c xa90 01 hundreth tez 3 1 2 mining signing rewards principle conjecture security decentralised currency requires incentivize participants pecuniary reward process finalizing rewards schedule moment explained position paper relying transaction costs suffers tragedy commons tezos rely combination bond reward bonds year bonds single cycle given high opportunity cost little benefit security extending bonding period past cycle security deposits purchased miners endorsers required purchase bonds event double signing bonds forfeited year cycle miners endorsers receive reward bond compensate opportunity cost security primarily provided value bond reward need small percentage value purpose bonds diminish reward needed use loss aversion effect network xe2 x80 x99s advantage specifics seed protocol mining block offers reward xea x9c xa9512 requires bond xea x9c xa91536 signing block",
    "metadata": {
      "chunk_id": "7aa171072f8843a233d0464892e533fa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 15] bonds diminish reward needed use loss aversion effect network xe2 x80 x99s advantage specifics seed protocol mining block offers reward xea x9c xa9512 requires bond xea x9c xa91536 signing block offers reward 32 xe2 x88 x86t xe2 x88 x921 tez xe2 x88 x86t time interval minutes block signed predecessor 16 signatures block signing requires bond numbers based supply 10 billions tokens tweak accordingly increase number signatures block xe2 x80 x99ve found simulations strongly increase difficulty forks 8 x0cthus assuming mining rate block minute 8% initial money mass held form safety bonds year subject change based adjustment parameters reward schedule implies 5 4% nominal inflation rate total block rewards start 5% year add asymptotic cap total number tokens think xe2 x80 x99s irrelevant governance model aligned token holder xe2 x80 x99s interest important people xe2 x80 x99re reluctantly considering nominal inflation neutral enrishes impoverishes anyone2 note period year determined block",
    "metadata": {
      "chunk_id": "7c6e8ab76603f38db7436b0011f27042",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 16] model aligned token holder xe2 x80 x99s interest important people xe2 x80 x99re reluctantly considering nominal inflation neutral enrishes impoverishes anyone2 note period year determined block xe2 x80 x99s timestamps number blocks remove uncertainty length commitment miners looking forward proposed reward gives miners 33% return bond xe2 x80 x99re currently revising parameters soon finalize method makes sense parties return needs high early days miners signers commit hold potentially volatile asset entire year bonds cycle year tezos mature return gradually lowered prevailing interest rate nominal rate inflation 1% safely achieved xe2 x80 x99s clear point 3 1 3 lost coins order reduce uncertainty monetary mass addresses showing activity year determined timestamps destroyed coins contain inactive addresses longer lose funds year initially proposed white paper lose staking rights active means address inactive selected create blocks slow consensus algorithm allowed vote reactivated avoid",
    "metadata": {
      "chunk_id": "0d5211a13ae291e5c8a79486f69eab1a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 17] addresses longer lose funds year initially proposed white paper lose staking rights active means address inactive selected create blocks slow consensus algorithm allowed vote reactivated avoid uncertainty participation rate 3 1 4 amendment rules amendments adopted election cycles lasting n 217 131 072 blocks given minute block interval calendar months election cycle divided quarters 215 32 768 blocks cycle relatively short encourage early improvements expected amendments increase length cycle protocol upgrade votes frequent year order allow rapid iteration security measure tezos foundation veto power expiring months rule kinks voting procedure adoption requires certain quorum met quorum starts q 80% 2 contrast bitcoin xe2 x80 x99s mining inflation impoverishes bitcoin holders central banking enrishes financial sector expense savers 9 x0cdynamically adapts reflect average participation necessary deal lost coins quarter protocol amendments suggested submitting hash tarball ml mli files",
    "metadata": {
      "chunk_id": "3032c7577e36547e64f5fda765b080b3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 18] enrishes financial sector expense savers 9 x0cdynamically adapts reflect average participation necessary deal lost coins quarter protocol amendments suggested submitting hash tarball ml mli files representing new protocol stakeholders approve number protocols known xe2 x80 x9capproval voting xe2 x80 x9d particularly robust voting procedure second quarter amendment receiving approval quarter subject vote stakeholders cast vote choose explicitely abstain abstentions count quorum quarter quorum met including explicit abstentions amendment received 80% yays amendment approved replaces test protocol rejected assuming quorum reached q minimum quorum q updated q xe2 x86 x90 0 8q 0 2q goal update avoid lost coins causing voting procedure stuck time minimum quorum exponential moving average quorum reached previous election fourth quarter assuming amendment approved running testnet beginning quarter stakeholders vote second time confirm wish promote test protocol main protocol requires quorum",
    "metadata": {
      "chunk_id": "0f74d578a3fadbd2c9502ae9f177639f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 20] cost immobilizing lot capital safety deposit forfeited event double mining double signing 10 x0cthe protocol unfolds cycles 2048 blocks beginning cycle random seed derived numbers block miners chose committed penultimate cycle revealed random seed follow coin strategy allocate migning rights signing rights specific addresses cycle figure 1 3 2 2 clock protocol imposes minimum delays blocks principle block mined stakeholder given block stakeholder subject random minimum delay stakeholder receiving highest priority block minute previous block stakeholder receiving second highest priority block minutes previous block minutes guarantees fork small fraction stakeholder contribute exhibit low rate block creation weren xe2 x80 x99t case cpu denial service attacks possible tricking nodes verifying long chain claimed high score 3 2 3 generating random seed block mined carries hash commitment random number chosen miner numbers revealed cycle penalty forfeiting safety bond harsh penalty meant",
    "metadata": {
      "chunk_id": "f1af40acbeaf3ff62c5f03aaafb5a3c3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "penalty"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 21] long chain claimed high score 3 2 3 generating random seed block mined carries hash commitment random number chosen miner numbers revealed cycle penalty forfeiting safety bond harsh penalty meant prevent selective whitholding numbers sued attack entropy seed malicious miners cycle attempt censor reveals multiple numbers revealed single block unlikely succeed revealed numbers cycle combined hash list seed derived root scrypt key derivation function key derivation tuned deriving seed takes order fraction percent average validation time block typical desktop pc figure 1 cycles proof stake mechanism 11 x0c3 2 4 follow coin procedure order randomly select stakeholder use follow coin procedure principle idea known bitcoin follow satoshi procedures works xe2 x80 x9cas xe2 x80 x9d satoshi minted unique serial number satoshis implicitly ordered creation time random satoshi drawn tracked blockchain course individual cents tracked directly instead rules applied describe happens inputs combined",
    "metadata": {
      "chunk_id": "0be6ac2a1c149da7357d90e3d9544eab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "penalty"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 22] unique serial number satoshis implicitly ordered creation time random satoshi drawn tracked blockchain course individual cents tracked directly instead rules applied describe happens inputs combined spent multiple output end algorithm keeps track set intervals associated key intervals represents xe2 x80 x9crange xe2 x80 x9d satoshis unfortunately time database fragmented increasing bloat client coin rolls optimize previous algorithm constructing large xe2 x80 x9ccoin rolls xe2 x80 x9d 10 000 tez million rolls existence database maps roll current owner address holds certain set specific rolls loose change desire spend fraction roll roll broken serial number sent lifo queue rolls sort xe2 x80 x9climbo xe2 x80 x9d transaction processed way minimizes number broken rolls address holds coins form roll serial number pulled queue roll formed lifo priority ensures attacker working secret fork change coins holds shuffling change accounts slight drawback approach stake rounded nearest integer",
    "metadata": {
      "chunk_id": "718df83da5822a32e8711b5a019d299d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 23] form roll serial number pulled queue roll formed lifo priority ensures attacker working secret fork change coins holds shuffling change accounts slight drawback approach stake rounded nearest integer number rolls provides massive improvement efficiency follow satoshi approach rolls numbered approach preclude use fungibility preserving protocols like zerocash protocols use xe2 x80 x9climbo xe2 x80 x9d queue technique motivation procedure functionally different merely drawing random address weighted balance secretive fork miner attempt control generation random seed assign signing minting rights creating appropriate addresses ahead time harder achieve rolls randomly selected secretive fork fake ownership certain rolls try preimage hash function applied seed assign signing minting rights cycle length n 2048 holding fraction f rolls receive average f n mining rights effective fraction received 12 x0cf0 standard deviation xe2 x88 x9a xe2 x88 x9a 1 n 1 xe2 x88 x92f f attacker perform brute",
    "metadata": {
      "chunk_id": "4b484c1dae0a6c8dfd715e22d6c74a7b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 24] length n 2048 holding fraction f rolls receive average f n mining rights effective fraction received 12 x0cf0 standard deviation xe2 x88 x9a xe2 x88 x9a 1 n 1 xe2 x88 x92f f attacker perform brute force search w different seeds expected advantage most3 xe2 x88 x9a xe2 x88 x9a 2 log w 1 xe2 x88 x92 f fn n f blocks instance attacker controlling f 10% rolls expect 205 blocks cycle secret fork attempts control seed assuming computed trillion hashes assign 302 blocks 14 7% blocks note hash seed derived expensive key derivation function rendering brute force search impractical linear gains blocks mined attacked needs expend quadratically exponential effort 3 2 5 mining blocks random seed repeatedly select roll roll selected allows stakeholder block minute second minutes xe2 x80 x94 stakeholder observes seed realizes mint high priority block cycle security deposit avoid potentially problematic situation stakeholder safety deposit particular block 16 minutes delay block mined deposit bonds",
    "metadata": {
      "chunk_id": "79e68e592c9ccdd25073aa11397b31c8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 25] observes seed realizes mint high priority block cycle security deposit avoid potentially problematic situation stakeholder safety deposit particular block 16 minutes delay block mined deposit bonds implicitely returned buyers immediately chain block 3 2 6 signing blocks working proof stake system define chain xe2 x80 x99s weight number blocks open door form selfish mining introduce signing scheme block minted random seed randomly assign 16 signing rights 16 rolls stakeholders received signing rights observe blocks minted submit signatures blocks signatures included 3 standard bound expectation maximum w normally distributed variable 13 x0cin block miners attempting secure parent xe2 x80 x99s inclusion blockchain signing reward received signers inversely proportional time interval block predecessor signer strong incentive sign genuinely believe best block produced point strong incentive agree block sign signing rewards paid block ends included blockchain highest priority block isn xe2",
    "metadata": {
      "chunk_id": "791ec7ecf33e6006e53d973ec2695c6a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 27] block double signing block miner include block denunciation denunciation takes form signatures minting signature block signature signs height block making proof malfeasance concise allow denounce malfeasance point allow block miner miner simply copy proof malfeasance pass discovery 4 party found guilty double minting double signing safety bond forfeited 3 3 3 3 1 smart contracts contract type lieu unspent outputs tezos uses stateful accounts accounts specify executable code known generally contracts 4 zero knowledge proof allow benefit denouncing malfeasances xe2 x80 x99s particularly clear carries benefit 14 x0caccount type contract executable code refer xe2 x80 x9dcontracts xe2 x80 x9d generality contract xe2 x80 x9cmanager xe2 x80 x9d case account simply owner contract flagged spendable manager spend funds associated contract addition contract specify hash public key sign blocks proof stake protocol private key controlled manager formally contract represented type contract counter",
    "metadata": {
      "chunk_id": "642e99416df7df6d112d791569cc2a32",
      "entities": {
        "crypto_project": [
          "tezos"
        ],
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 28] manager spend funds associated contract addition contract specify hash public key sign blocks proof stake protocol private key controlled manager formally contract represented type contract counter int counter prevent repeat attacks manager id hash contract s manager public key balance int64 t balance held signer id option id signer code opcode list contract code list opcodes storage data list storage contract spendable bool money spent manager delegatable bool manager change signing key handle contract hash initial content attempting create contract hash collide existing contract invalid operation included valid block note data represented union type type data string string int int int signed 64 bit integer string array 1024 bytes storage capacity limited 16 384 bytes counting integers bytes strings length 3 3 2 origination origination operation create new contract specifies code contract initial content contract xe2 x80 x99s storage handle handle existing contract origination",
    "metadata": {
      "chunk_id": "85c03cd842729d53953a574bb7f23d59",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 29] bytes strings length 3 3 2 origination origination operation create new contract specifies code contract initial content contract xe2 x80 x99s storage handle handle existing contract origination rejected reason happen mistake malice contract needs minimum balance 1 remain active balance falls number contract destroyed 3 3 3 transactions transaction message sent contract contract messages represented type transaction sent parameters data list parameters passed script counter invoice id avoid repeat attacks counter int destination contract hash 15 x0csuch transaction sent contract signed manager xe2 x80 x99s key sent programmatically code executing contract transaction received added destination contract xe2 x80 x99s balance destination contract xe2 x80 x99s code executed code use parameters passed read write contract xe2 x80 x99s storage change signature key post transactions contracts role counter prevent replay attacks transaction valid contract xe2 x80 x99s counter equal transaction",
    "metadata": {
      "chunk_id": "044eebdc09e5b36304bda5f88be541b2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 30] passed read write contract xe2 x80 x99s storage change signature key post transactions contracts role counter prevent replay attacks transaction valid contract xe2 x80 x99s counter equal transaction xe2 x80 x99s counter transaction applied counter increases preventing transaction reused transaction includes block hash recent block client considers valid attacker succeeds forcing long reorganization fork unable include transactions making fork obviously fake line defense tapos great system prevent long reorganizations good system prevent short term double spending pair account handle counter roughly equivalent unspent output bitcoin 3 3 4 storage fees storage imposes cost network minimum fee xea x9c xa9 1 assessed byte increase storage instance execution transaction integer added storage characters appended existing string storage xea x9c xa9 18 withdrawn contract xe2 x80 x99s balance destroyed 3 3 5 code language stack based high level data types primitives strict static type checking",
    "metadata": {
      "chunk_id": "4a6b01fbde2544b76a5fb6553189b8fb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 31] appended existing string storage xea x9c xa9 18 withdrawn contract xe2 x80 x99s balance destroyed 3 3 5 code language stack based high level data types primitives strict static type checking design insipired forth scheme ml cat specification instruction set available 5 specification gives complete instruction set type system semantics language meant precise reference manual easy introduction 3 3 6 fees far system similar way ethereum handles transaction differ way handle fees ethereum allows arbitrarily long programs execute requiring fee increases linearly program xe2 x80 x99s executing time unfortunately provide incentive miner verify transaction provide incentive miners verify transaction practice interesting programs smart contracts short simplify construction imposing hard cap number steps allow programs run 16 x0cif hard cap proves tight programs break execution multiple steps use multiple transactions execute fully tezos amendable cap changed future advanced primitives",
    "metadata": {
      "chunk_id": "79b712b85670303948fe8cf64f77771d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  },
  {
    "text": "[Section 32] number steps allow programs run 16 x0cif hard cap proves tight programs break execution multiple steps use multiple transactions execute fully tezos amendable cap changed future advanced primitives introduced new opcodes account permits signature key changed issuing signed message requesting change 4 conclusion feel xe2 x80 x99ve built appealing seed protocol tezos xe2 x80 x99s true potential lies putting stakeholders charge deciding protocol feel best serves references 1 vitalik buterin slasher punitive proof stake algorithm https blog ethereum org 2014 01 15 slasher punitive proof stake algorithm 2014 2 ariel gabizon iddo bentov alex mizrahi cryptocurrencies proof work http www cs technion ac il idddo coa pdf 2014 3 peter suber nomic game self amendment http legacy earlham edu peters writing nomic htm 1982 4 j xc3 xa9r xc3 xb4me vouillon lwt cooperative thread library 2008 5 tezos project formal specification tezos smart contract language https tezos com pages tech html 2014 17 x0c",
    "metadata": {
      "chunk_id": "9bc2359461ae0ee304126c97b31ba4d9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Tezos.txt"
    }
  }
]