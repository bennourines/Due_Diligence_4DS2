[
  {
    "text": "[Section 1] b ripple labs inc 2014 ripple protocol consensus algorithm david schwartz david ripple com noah youngs nyoungs nyu edu paper reflect current state ledger consensus protocol analysis continue hosting draft historical interest reference updated analysis presentation consensus protocol refer arxiv 1802 07242 https arxiv org abs 1802 07242 released 20 february 2018 arthur britto arthur ripple com abstract consensus algorithms exist byzantine generals problem specifically pertains distributed payment systems suffer high latency induced requirement nodes network communicate synchronously work present novel consensus algorithm circumvents requirement utilizing collectively trusted subnetworks larger network xe2 x80 x9ctrust xe2 x80 x9d required subnetworks fact minimal reduced principled choice member nodes addition minimal connectivity required maintain agreement network result low latency consensus algorithm maintains robustness face byzantine failures present algorithm embodiment ripple",
    "metadata": {
      "chunk_id": "3e4df17bf5673c51f7e13c60f419f859",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 2] member nodes addition minimal connectivity required maintain agreement network result low latency consensus algorithm maintains robustness face byzantine failures present algorithm embodiment ripple protocol 1 introduction contents 1 introduction 1 2 definitions formalization previous work 2 interest research distributed consensus systems increased markedly recent years central focus distributed payment networks networks allow fast low cost transactions controlled centralized source economic benefits drawbacks system worthy research work focuses technical challenges distributed payment systems face problems varied group main categories correctness agreement utility correctness mean necessary distributed system able discern difference correct fraudulent transaction traditional fiduciary settings trust institutions cryptographic signatures guarantee transaction coming institution claims coming distributed systems trust identity members network known alternative methods correctness 2 1",
    "metadata": {
      "chunk_id": "bdc8fd8be20afb17c9f15f5607295fa1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 3] trust institutions cryptographic signatures guarantee transaction coming institution claims coming distributed systems trust identity members network known alternative methods correctness 2 1 ripple protocol components 2 2 2 formalization 3 2 3 existing consensus algorithms 3 2 4 formal consensus goals 3 3 ripple consensus algorithm 4 3 1 definition 4 3 2 correctness 4 3 3 agreement 5 3 4 utility 5 convergence xe2 x80 xa2 heuristics procedures 4 simulation code 7 5 discussion 7 6 acknowledgments 8 references 8 1 x0cutilized agreement refers problem maintaining single global truth face decentralized accounting system similar correctness problem difference lies fact malicious user network unable create fraudulent transaction defying correctness able create multiple correct transactions unaware combine create fraudulent act example malicious user simultaneous purchases funds account cover purchase individually transaction correct executed simultaneously way distributed network unaware",
    "metadata": {
      "chunk_id": "2a19c9f63d4e4c4f6e4c0d515ab02406",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 4] combine create fraudulent act example malicious user simultaneous purchases funds account cover purchase individually transaction correct executed simultaneously way distributed network unaware clear problem arises commonly referred xe2 x80 x9cdouble spend problem xe2 x80 x9d 1 agreement problem summarized requirement set globally recognized transactions exist network utility slightly abstract problem define generally xe2 x80 x9cusefulness xe2 x80 x9d distributed payment system practice simplifies latency system distributed system correct agreement requires year process transaction example obviously inviable payment system additional aspects utility include level computing power required participate correctness agreement processes technical proficiency required end user avoid defrauded network issues explored long advent modern distributed computer systems problem known xe2 x80 x9cbyzantine generals problem xe2 x80 x9d 2 problem group generals control portion army coordinate attack",
    "metadata": {
      "chunk_id": "3c833b10dee9f885001f97fab9bd5398",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 22.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 5] network issues explored long advent modern distributed computer systems problem known xe2 x80 x9cbyzantine generals problem xe2 x80 x9d 2 problem group generals control portion army coordinate attack sending messengers generals unfamiliar hostile territory messengers fail reach destination nodes distributed network fail send corrupted data instead intended message additional aspect problem generals traitors individually conspiring messages arrive intended create false plan doomed failure loyal generals malicious members distributed system attempt convince system accept fraudulent transactions multiple versions truthful transaction result double spend distributed payment system robust face standard failures called xe2 x80 x9cbyzantine xe2 x80 x9d failures coordinated originate multiple sources network work analyze particular implementation distributed payment system ripple protocol focus algorithms utilized achieve goals correctness agreement utility met necessary predetermined",
    "metadata": {
      "chunk_id": "5fc06660bb14806235392eb451eef874",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 6] sources network work analyze particular implementation distributed payment system ripple protocol focus algorithms utilized achieve goals correctness agreement utility met necessary predetermined tolerance thresholds understood addition provide code simulates consensus process parameterizable network size number malicious users message sending latencies 2 definitions formalization previous work begin defining components ripple protocol order prove correctness agreement utility properties formalize properties axioms properties grouped form notion consensus state nodes network reach correct agreement highlight previous results relating consensus algorithms finally state goals consensus ripple protocol formalization framework 2 1 ripple protocol components begin description ripple network defining following terms xe2 x80 xa2 server server entity running ripple server software opposed ripple client software lets user send receive funds participates consensus process xe2 x80 xa2 ledger",
    "metadata": {
      "chunk_id": "15700d1a42c8ca13b3b8c61c1fa57abd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 7] defining following terms xe2 x80 xa2 server server entity running ripple server software opposed ripple client software lets user send receive funds participates consensus process xe2 x80 xa2 ledger ledger record currency user xe2 x80 x99s account represents xe2 x80 x9cground truth xe2 x80 x9d network ledger repeatedly updated transactions successfully pass consensus process xe2 x80 xa2 closed ledger closed ledger recent ledger ratified consensus process represents current state network xe2 x80 xa2 open ledger open ledger current operating status node node maintains open ledger transactions initiated end users given server applied open 2 x0cledger server transactions considered final passed consensus process point open ledger closed ledger previous work included extensions cases participants network known ahead time messages sent asynchronously bound time individual node reach decision delineation notion strong weak consensus pertinent result previous work consensus algorithms fischer",
    "metadata": {
      "chunk_id": "1c935bfe88641cc5b68b5e75a94e62c5",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 9] messages possible algorithms exist higher fault tolerance synchronous case algorithms greater complexity proposed byzantine consensus asynchronous case fab paxos 5 tolerate n 1 5 byzantine failures network n nodes amounting tolerance 20% nodes network colluding maliciously attiya doyev gill 3 introduce phase algorithm asynchronous case tolerate n 1 4 failures 25% network lastly alchieri et al 2008 6 present bft cup achieves byzantine consensus asynchronous case unknown participants maximal bound tolerance n 1 3 failures additional restrictions connectivity underlying network xe2 x80 xa2 unique node list unl server s maintains unique node list set servers s queries determining consensus votes members unl s considered determining consensus opposed node network unl represents subset network taken collectively xe2 x80 x9ctrusted xe2 x80 x9d s collude attempt defraud network note definition xe2 x80 x9ctrust xe2 x80 x9d require individual member unl trusted section 3 2 xe2 x80 xa2 proposer",
    "metadata": {
      "chunk_id": "2f715c0b5719eb350552e249309b04f8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 10] taken collectively xe2 x80 x9ctrusted xe2 x80 x9d s collude attempt defraud network note definition xe2 x80 x9ctrust xe2 x80 x9d require individual member unl trusted section 3 2 xe2 x80 xa2 proposer server broadcast transactions included consensus process server attempts include valid transaction new consensus round starts consensus process proposals servers unl server s considered s 2 2 formalization use term nonfaulty refer nodes network behave honestly error conversely faulty node experiences errors honest data corruption implementation errors etc malicious byzantine errors reduce notion validating transaction simple binary decision problem node decide information given value 0 1 attiya dolev gill 1984 3 define consensus according following axioms 1 c1 nonfaulty node makes decision finite time 2 c2 nonfaulty nodes reach decision value 3 c3 0 1 possible values nonfaulty nodes removes trivial solution nodes decide 0 1 regardless information presented 2 4 formal consensus goals goal",
    "metadata": {
      "chunk_id": "3abd8c0d0cbbdd397fef164648e474e8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 22.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 11] time 2 c2 nonfaulty nodes reach decision value 3 c3 0 1 possible values nonfaulty nodes removes trivial solution nodes decide 0 1 regardless information presented 2 4 formal consensus goals goal work consensus algorithm utilized ripple protocol achieve consensus ledger close consensus trivial consensus transactions rejected trivial consensus reached known probability face byzantine failures 2 3 existing consensus algorithms research algorithms achieve consensus face byzantine errors 3 x0csince node network votes proposals trusted set nodes nodes unl node differing unls consensus reached nodes regardless unl membership goal referred preventing xe2 x80 x9cfork xe2 x80 x9d network situation disjoint sets nodes reach consensus independently different closed ledgers observed nodes node set lastly ripple protocol achieve goals face n 1 5 failures strongest result literature ripple protocol possesses desirable features greatly enhance utility transaction transactions meet requirement applied",
    "metadata": {
      "chunk_id": "1d312ac6d0b22615e61e8b3f63a673b9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 12] ripple protocol achieve goals face n 1 5 failures strongest result literature ripple protocol possesses desirable features greatly enhance utility transaction transactions meet requirement applied ledger ledger closed new closed ledger 3 2 correctness order achieve correctness given maximal byzantine failures shown impossible fraudulent transaction confirmed consensus number faulty nodes exceeds tolerance proof correctness rpca follows directly transaction approved 80% unl server agrees long 80% unl honest fraudulent transactions approved unl n nodes network consensus protocol maintain correctness long 3 ripple consensus algorithm ripple protocol consensus algorithm rpca applied seconds nodes order maintain correctness agreement network consensus reached current ledger considered xe2 x80 x9cclosed xe2 x80 x9d closed ledger assuming consensus algorithm successful fork network closed ledger maintained nodes network identical f xef xa3 xbf n 1 5 1 f number byzantine failures fact face n",
    "metadata": {
      "chunk_id": "de7cbb95d5afa56cb2b645bc938709e6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 13] x9cclosed xe2 x80 x9d closed ledger assuming consensus algorithm successful fork network closed ledger maintained nodes network identical f xef xa3 xbf n 1 5 1 f number byzantine failures fact face n 1 5 1 byzantine failures correctness technically maintained consensus process fail possible confirm fraudulent transaction 4n 1 5 byzantine failures incorrect transaction confirmed second bound bound weak correctness bound strong correctness noted xe2 x80 x9cfraudulent xe2 x80 x9d transactions pose threat confirmed consensus user attempt double spend funds transactions example transactions confirmed consensus process transaction applied second fail funds longer available robustness fact transactions applied deterministically consensus ensures nodes network applying deterministic rules set transactions slightly different analysis let assume probability node decide collude join nefarious cartel pc probability correctness given p xe2 x87 xa4 3 1 definition rpca proceeds rounds round xe2 x80",
    "metadata": {
      "chunk_id": "efa4d4d9605dd4adbdb14d1c5d5de4d9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 14] slightly different analysis let assume probability node decide collude join nefarious cartel pc probability correctness given p xe2 x87 xa4 3 1 definition rpca proceeds rounds round xe2 x80 xa2 initially server takes valid transactions seen prior beginning consensus round applied include new transactions initiated endusers server transactions held previous consensus process etc makes public form list known xe2 x80 x9ccandidate set xe2 x80 x9d xe2 x80 xa2 server amalgamates candidate sets servers unl votes veracity transactions xe2 x80 xa2 transactions receive minimum percentage xe2 x80 x9cyes xe2 x80 x9d votes passed round transactions receive votes discarded included candidate set beginning consensus process ledger xe2 x87 xa4 p d n 5 1 e xe2 x9c x93 xc3 x82 0 xe2 x80 xa2 final round consensus requires minimum percentage 80% server xe2 x80 x99s unl agreeing xe2 x97 x86 n p 1 c pc n 2 probability represents likelihood size nefarious cartel remain maximal 4 x0cthreshold byzantine",
    "metadata": {
      "chunk_id": "32aa854d5fe74a5b51be4ad3ae52855b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 15] consensus requires minimum percentage 80% server xe2 x80 x99s unl agreeing xe2 x97 x86 n p 1 c pc n 2 probability represents likelihood size nefarious cartel remain maximal 4 x0cthreshold byzantine failures given pc likelihood binomial distribution values pc greater 20% result expected cartels size greater 20% network thwarting consensus process practice unl chosen randomly intent minimize pc nodes anonymous cryptographically identifiable selecting unl nodes mixture continents nations industries ideologies etc produce values pc lower 20% example probability anti defamation league westboro baptist church colluding defraud network certainly smaller 20% unl relatively large pc 15% probability correctness extremely high 200 nodes unl 97 8% graphical representation probability incorrectness scales function unl size differing values pc depicted figure 1 note vertical axis represents probability nefarious cartel thwarting consensus lower values indicate greater probability consensus success",
    "metadata": {
      "chunk_id": "7e4e93ff288c09854f0deff135943f82",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 16] function unl size differing values pc depicted figure 1 note vertical axis represents probability nefarious cartel thwarting consensus lower values indicate greater probability consensus success seen figure pc high 10% probability consensus thwarted quickly negligible unl grows past 100 nodes figure 2 example connectivity required prevent fork unl cliques prove agreement given unli unl j 1 max unli unl j 8i j 5 3 upper bound assumes clique like structure unls e nodes form sets unls contain nodes sets upper bound guarantees cliques reach consensus conflicting transactions impossible reach 80% threshold required consensus tighter bound possible indirect edges unls taken account example structure network clique like fork difficult achieve greater entanglement unls nodes interesting note assumptions nature intersecting nodes intersection unls include faulty nodes long size intersection larger bound required guarantee agreement total number faulty nodes bound required satisfy strong",
    "metadata": {
      "chunk_id": "3735bc1a1155652e547c7db081083cc2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 17] assumptions nature intersecting nodes intersection unls include faulty nodes long size intersection larger bound required guarantee agreement total number faulty nodes bound required satisfy strong correctness correctness agreement achieved agreement dependent solely size intersection nodes size intersection nonfaulty nodes 3 3 agreement satisfy agreement requirement shown nonfaulty nodes reach consensus set transactions regardless unls unls server different agreement inherently guaranteed correctness proof example restrictions membership unl size unl larger 0 2 xe2 x87 xa4 ntotal ntotal number nodes entire network fork possible illustrated simple example depicted figure 2 imagine cliques unl graph larger 0 2 xe2 x87 xa4 ntotal cliques mean set nodes node xe2 x80 x99s unl selfsame set nodes cliques share members possible achieve correct consensus independently violating agreement connectivity cliques surpasses 0 2 xe2 x87 xa4 ntotal fork longer possible disagreement cliques prevent",
    "metadata": {
      "chunk_id": "0bebb1ba8575448b4996c92246619d34",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 18] cliques share members possible achieve correct consensus independently violating agreement connectivity cliques surpasses 0 2 xe2 x87 xa4 ntotal fork longer possible disagreement cliques prevent consensus reached 80% agreement threshold required 3 4 utility components utility subjective provable convergence consensus process terminate finite time upper bound connectivity required 5 x0cfigure 1 probability nefarious cartel able thwart consensus function size unl different values pc probability member unl decide collude lower values indicate higher probability consensus success consensus algorithm deterministic preset number rounds t consensus terminated current set transactions declared approved approved point transactions 80% required agreement consensus trivial consensus limiting factor termination algorithm communication latency nodes order bound quantity response time nodes monitored nodes xe2 x80 x99s latency grows larger preset bound b removed unls guarantees consensus terminate",
    "metadata": {
      "chunk_id": "bb5c44034f2b5d400de0ee7e703c780e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 19] termination algorithm communication latency nodes order bound quantity response time nodes monitored nodes xe2 x80 x99s latency grows larger preset bound b removed unls guarantees consensus terminate upper bound tb important note bounds described correctness agreement met final unl nodes 3 4 1 convergence define convergence point rpca reaches consensus strong correctness ledger ledger closed ledger note technically weak correctness represents convergence algorithm convergence trivial case proposition c3 violated transactions confirmed results know strong correctness achievable face n 1 5 byzantine failures consensus achieved entire network long unl connectedness condition met equation 3 remains conditions met consensus reached finite time 6 x0cdropped dropped conditions hold initial unls nodes nodes dropped network latency correctness agreement guarantees automatically hold satisfied new set unls validation xe2 x80 x9d process vote transactions declare participating consensus process",
    "metadata": {
      "chunk_id": "62969e4ff932b1608a40ba3af3ffdaee",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 20] nodes nodes dropped network latency correctness agreement guarantees automatically hold satisfied new set unls validation xe2 x80 x9d process vote transactions declare participating consensus process opposed different consensus process disconnected subnetwork 3 4 2 heuristics procedures xe2 x80 xa2 possible apply rpca round consensus utility gained multiple rounds increasing minimum required percentage agreement final round 80% requirement rounds allow detection latent nodes case nodes creating bottleneck transaction rate network nodes able initially lower requirement rounds fall identified threshold increases case round consensus case transactions pass 80% threshold slow nodes lowering transaction rate entire network mentioned latency bound heuristic enforced nodes ripple network guarantee consensus algorithm converge addition heuristics procedures provide utility rpca xe2 x80 xa2 mandatory 2 second window nodes propose initial candidate sets round consensus introduce lower bound 2",
    "metadata": {
      "chunk_id": "c225ef70bf471448b418e95d79841aed",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 21] consensus algorithm converge addition heuristics procedures provide utility rpca xe2 x80 xa2 mandatory 2 second window nodes propose initial candidate sets round consensus introduce lower bound 2 seconds consensus round guarantees nodes reasonable latency ability participate consensus process xe2 x80 xa2 votes recorded ledger round consensus nodes flagged removed network common easily identifiable malicious behaviors include nodes vote xe2 x80 x9cno xe2 x80 x9d transaction nodes consistently propose transactions validated consensus 4 simulation code provided simulation code demonstrates round rpca parameterizable features number nodes network number malicious nodes latency messages etc simulator begins perfect disagreement half nodes network initially propose xe2 x80 x9cyes xe2 x80 x9d half propose xe2 x80 x9cno xe2 x80 x9d proceeds consensus process showing stage number yes votes network nodes adjust proposals based proposals unl members 80% threshold reached consensus achieved",
    "metadata": {
      "chunk_id": "dc2146cb870d99e9e540a1f9b82ee878",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 22] half propose xe2 x80 x9cno xe2 x80 x9d proceeds consensus process showing stage number yes votes network nodes adjust proposals based proposals unl members 80% threshold reached consensus achieved encourage reader experiment different values constants defined beginning xe2 x80 x9csim cpp xe2 x80 x9d order familiar consensus process different conditions xe2 x80 xa2 curated default unl provided users chosen minimize pc described section 3 2 users select unls default list nodes guarantees naive users participate consensus process achieves correctness agreement extremely high probability xe2 x80 xa2 network split detection algorithm employed avoid fork network consensus algorithm certifies transactions closed ledger correct prohibit possibility lastclosed ledger existing different subsections network poor connectivity try identify split occurred node monitors size active members unl size suddenly drops preset threshold possible split occurred order prevent false positive case large",
    "metadata": {
      "chunk_id": "c2de3503883e9255b980e356e0353a28",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 23] network poor connectivity try identify split occurred node monitors size active members unl size suddenly drops preset threshold possible split occurred order prevent false positive case large section unl temporary latency nodes allowed publish xe2 x80 x9cpartial 5 discussion described rpca satisfies conditions correctness agreement utility outlined result ripple protocol able process secure reliable transactions matter seconds length time required round consensus complete transactions provably secure bounds outlined section 3 strongest available literature asynchronous byzantine consensus 7 x0callow rapid convergence flexibility network membership taken qualities allow ripple network function fast low cost global payment network understood security reliability properties shown ripple protocol provably secure long bounds described equations 1 3 met worth noting maximal bounds practice network secure significantly stringent conditions important recognize satisfying bounds inherent rpca",
    "metadata": {
      "chunk_id": "da135f5289ea24cb5ec9d0799fb03310",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 24] provably secure long bounds described equations 1 3 met worth noting maximal bounds practice network secure significantly stringent conditions important recognize satisfying bounds inherent rpca requires management unls users default unl provided users sufficient user changes unl knowledge bounds addition monitoring global network structure required order ensure bound equation 3 met agreement satisfied believe rpca represents significant step forward distributed payment systems lowlatency allows types financial transactions previously difficult impossible higher latency consensus methods 6 acknowledgments ripple labs like acknowledge people involved development ripple protocol consensus algorithm specifically arthur britto work transaction sets jed mccaleb original ripple protocol consensus concept david schwartz work xe2 x80 x9cfailure agree agreement defer xe2 x80 x9d aspect consensus ripple labs like acknowledge noah youngs efforts preparing reviewing paper references 1 nakamoto",
    "metadata": {
      "chunk_id": "7a1ca9f8f4b049a3f04474dbc719e8c6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  },
  {
    "text": "[Section 25] concept david schwartz work xe2 x80 x9cfailure agree agreement defer xe2 x80 x9d aspect consensus ripple labs like acknowledge noah youngs efforts preparing reviewing paper references 1 nakamoto satoshi xe2 x80 x9cbitcoin peer peer electronic cash system xe2 x80 x9d consulted 1 2012 2008 28 2 lamport leslie robert shostak marshall pease xe2 x80 x9cthe byzantine generals problem xe2 x80 x9d acm transactions programming languages systems toplas 4 3 1982 382 401 3 attiya c d dolev j gill xe2 x80 x9casynchronous byzantine agreement xe2 x80 x9d proc 3rd annual acm symposium principles distributed computing 1984 8 4 fischer michael j nancy lynch michael s paterson xe2 x80 x9cimpossibility distributed consensus faulty process xe2 x80 x9d journal acm jacm 32 2 1985 374 382 5 martin j p lorenzo alvisi xe2 x80 x9cfast byzantine consensus xe2 x80 x9d dependable secure computing ieee transactions 3 3 2006 202 215 6 alchieri eduardo ap et al xe2 x80 x9cbyzantine consensus unknown participants xe2",
    "metadata": {
      "chunk_id": "fd94e4b2e7a9ae9f6cc6e3239a8b7d1c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Ripple.txt"
    }
  }
]