[
  {
    "text": "[Section 1] enigma decentralized computation platform guaranteed privacy guy zyskind oz nathan alex sandy pentland abstract peer peer network enabling different parties jointly store run computations data keeping data completely private enigma s computational model based highly optimized version secure multi party computation guaranteed verifiable secret sharing scheme storage use modified distributed hashtable holding secret shared data external blockchain utilized controller network manages access control identities serves tamper proof log events security deposits fees incentivize operation correctness fairness system similar bitcoin enigma removes need trusted party enabling autonomous control personal data time users able share data cryptographic guarantees privacy 1 motivation early human history centralization major competitive advantage societies centralized governance able develop advanced technology accumulate resources increase population faster 1 societies evolved negative effects",
    "metadata": {
      "chunk_id": "b8dcca2aa3149575df24e8e0c03b9196",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 2] centralization major competitive advantage societies centralized governance able develop advanced technology accumulate resources increase population faster 1 societies evolved negative effects centralization power revealed corruption inequality preservation status quo abuse power turns separation powers 2 necessary modern times strive find balance models maximizing output efficiency centralized control guarded checks balances decentralized governance original narrative web radical decentralization freedom 3 decade web s incredible growth coupled increased centralization large companies important junctures web consequently lot data created web lack transparency control organizations reveals negative aspects centralization manipulation 4 surveillance 5 frequent data breaches 6 bitcoin 9 blockchains 10 e g ethereum promise new future internet applications built decentralized architecture single party absolute power control public nature blockchain guarantees transparency applications",
    "metadata": {
      "chunk_id": "9042db8efcd9596f48276a118ff0f72a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "breach"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 3] blockchains 10 e g ethereum promise new future internet applications built decentralized architecture single party absolute power control public nature blockchain guarantees transparency applications work leaves irrefutable record activities providing strong incentives honest behavior bitcoin currency application initiating new paradigm web intense verification public nature blockchain limits potential use cases modern applications use huge amounts data run extensive analysis data restriction means fiduciary code run blockchain 7 problem sensitive parts modern applications require heavy processing private data current design blockchains handle privacy furthermore suited heavy computations public nature means private data flow node blockchain fully exposed guyz mit edu oznathan gmail com pentland mit edu 1 strange contradiction setup sensitive private data stored processed centralized transparent insecure model seen paradigm lead catastrophic data leaks systematic lack privacy",
    "metadata": {
      "chunk_id": "819f66cb485189b4629547963c7d94fe",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 4] com pentland mit edu 1 strange contradiction setup sensitive private data stored processed centralized transparent insecure model seen paradigm lead catastrophic data leaks systematic lack privacy currently forced accept online lives 2 enigma enigma decentralized computation platform guaranteed privacy goal enable developers build privacy design end end decentralized applications trusted party enigma private secure multi party computation smpc mpc data queries computed distributed way trusted party data split different nodes compute functions leaking information nodes specifically single party access data entirety instead party meaningless e seemingly random piece enigma scalable unlike blockchains computations data storage replicated node network small subset perform computation different parts data decreased redundancy storage computations enables demanding computations key new utility enigma brings table ability run computations data having access raw data example group people",
    "metadata": {
      "chunk_id": "b02555c8dee1e240edd67a34b73c1f33",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 5] parts data decreased redundancy storage computations enables demanding computations key new utility enigma brings table ability run computations data having access raw data example group people provide access salary compute average wage group participant learns relative position group learns members salaries clear motivating example practice program securely evaluated maintaining inputs secret today sharing data irreversible process sent way limit allowing access data secure computations reversible controllable original data owner s raw data presents fundamental change current approaches data analysis 3 design overview enigma designed connect existing blockchain load private intensive computations chain network transactions facilitated blockchain enforces access control based digital signatures programmable permissions code executed blockchain public parts enigma private computationally intensive parts enigma s execution ensures privacy correctness blockchain ensure proofs correct",
    "metadata": {
      "chunk_id": "17334604adbdca7139e2d48c2902c8ab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 6] programmable permissions code executed blockchain public parts enigma private computationally intensive parts enigma s execution ensures privacy correctness blockchain ensure proofs correct execution stored blockchain audited supply scripting language designing end end decentralized applications private contracts powerful variation smart contracts handle private information e state strictly public scripting language turing complete important scalability code execution blockchains decentralized distributed node redundantly executes code maintains public state enigma computational work efficiently distributed network interpreter breaks execution private contract illustrated figure 1 resulting improved run time maintaining privacy verifiability chain network solves following issues blockchain technology handle 1 storage blockchains general purpose databases enigma decentralized offchain distributed hash table dht accessible blockchain stores references data data private data encrypted",
    "metadata": {
      "chunk_id": "9097a2e1e1654edc71a44c6dafbcb3f9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 7] technology handle 1 storage blockchains general purpose databases enigma decentralized offchain distributed hash table dht accessible blockchain stores references data data private data encrypted client storage access control protocols programmed blockchain enigma provides simple apis tasks scripting language 2 blockchain enigma f x y opi public private figure 1 code execution model 2 privacy enforcing computation enigma s network execute code leaking raw data nodes ensuring correct execution key replacing current centralized solutions trusted overlay networks process sensitive business logic way negates benefits blockchain computational model described detail section 5 3 heavy processing privacy concern blockchain scale clearing complex transactions chain computational network run heavy publicly verifiable computations broadcast blockchain 4 chain storage chain nodes construct distributed database node distinct view shares encrypted data computation process guaranteed privacy",
    "metadata": {
      "chunk_id": "cb653eb1c3f9ff7cf3084b43cf3d34c5",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 8] heavy publicly verifiable computations broadcast blockchain 4 chain storage chain nodes construct distributed database node distinct view shares encrypted data computation process guaranteed privacy preserving fault tolerant possible store large public data e g files unencrypted link blockchain figure 2 illustrates database view single node shares encrypted data public data figure 2 node s local view chain data network level distributed storage based modified kademlia dht protocol 11 added persistence secure point point channels simulated broadcast channel public key encryption protocol assists distributing shares efficient manner storing shares original kademlia distance metric modified account preferential probability node 3 5 privacy enforcing computation section describe enigma s computational model begin brief introduction publicly verifiable secure mpc based state art advances cryptography describe series performance improvements secure mpc makes technology practical network",
    "metadata": {
      "chunk_id": "24452fc9fe3d2af0c4bb66b546d98d94",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 9] model begin brief introduction publicly verifiable secure mpc based state art advances cryptography describe series performance improvements secure mpc makes technology practical network large hierarchical secure mpc network reduction adaptable circuits use enigma developers write high level code public parts executed blockchain private parts run chain enigma s platform private contracts smart contracts handle private information 5 1 overview secure multi party computation 5 1 1 privacy passive adversaries yao introduced solution secure party computation protocols 1982 12 paper yao suggested popular millionaire problem describing millionaires interested knowing richer revealing actual net worth decades party problem generalized mpc refers n party case generalpurpose mpc protocol composed circuit elementary mpc gates major approaches developed years yao s garbaled boolean circuits 13 mpc based secret sharing commonly production systems e g 14 15 focus threshold cryptosystem defined t 1",
    "metadata": {
      "chunk_id": "9e1b6457bf9e6a35aadcfb09efadde11",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 10] elementary mpc gates major approaches developed years yao s garbaled boolean circuits 13 mpc based secret sharing commonly production systems e g 14 15 focus threshold cryptosystem defined t 1 n threshold n number parties t 1 minimal number parties required decrypt secret encrypted threshold encryption secret sharing example threshold cryptosystem secret s divided n s t t 1 required reconstruct s subset t parties learn secret linear secret sharing scheme lsss partitions secret shares shares linear combination secret shamir s secret sharing sss example lsss uses polynomial interpolation secure finite field fp 16 specifically share secret s select random t degree polynomial q x q x a0 a1x atxt 1 a0 s ai u 0 p 1 2 shares given 8i 2 f1 ng s pi q 3 given t 1 shares q x trivially reconstructed lagrange interpolation secret s recovered s q 0 sss linear additively homomorphic addition multiplication scalar operations performed directly shares interaction formally c s reconstruct fc s pigt 1",
    "metadata": {
      "chunk_id": "5a3f0c3b18a0d1001a4987c3e71700d1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 11] lagrange interpolation secret s recovered s q 0 sss linear additively homomorphic addition multiplication scalar operations performed directly shares interaction formally c s reconstruct fc s pigt 1 i2n 4 s1 s2 reconstruct f s1 pi s2 pigt 1 i2n 5 multiplication secrets s1 s2 somewhat involved party attempt locally compute product secrets collectively obtain polynomial degree 2t requiring polynomial reduction step 2t t information theoretic setting result adds honest majority constraint e t n 2 privacy correctness bound adversary s computational power properties assured number corrupted parties fairness deciding output requires honest majority 17 performance sharing step required degree reduction step implying parties interact parties o n2 communications makes mpc impractical larger small constant number parties n optimized solutions exist 4 improving amortized complexity based assumptions restrict functionality practice conversely describe generic solution problem functionality",
    "metadata": {
      "chunk_id": "0e25f4641f6a4d907b20f133168ee444",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 12] small constant number parties n optimized solutions exist 4 improving amortized complexity based assumptions restrict functionality practice conversely describe generic solution problem functionality section 5 2 makes secure mpc feasible arbitrarily large networks note secure addition multiplication protocols construct circuit arithmetic function turing completeness need handle control flow conditional statements involving secret values means evaluating branches dynamic loops add randomness execution general purpose mpc interpreter based core concepts optimizations presented paper 5 1 2 correctness malicious adversaries far discussed privacy property liveness computations terminate system progress implied given honest majority needed reconstruction intermediate output values current framework guarantees correctness output party pi send invalid result computation process invalidate output bgw 17 presented information theoretic solution verifiable mpc practical complexity bad o n8 given",
    "metadata": {
      "chunk_id": "494e2ce93a580829e62ce694310934f0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 13] guarantees correctness output party pi send invalid result computation process invalidate output bgw 17 presented information theoretic solution verifiable mpc practical complexity bad o n8 given naive implementation goal design mpc framework secure malicious adversaries complexity semi honest setting o n2 later optimize recently baum et al developed publicly auditable secure mpc system ensures correctness computing nodes covertly malicious single node actively malicious 18 state art results based variation spdz pronounced speedz 19 depend public append bulletin board stores trail computation allows auditing party check output correct comparing public ledger s trail proofs system uses blockchain bulletin board overall security reduced hosting blockchain spdz protocol secure malicious adversaries dishonest majority providing correctness guarantees mpc essence protocol comprised expensive offline preprocessing step uses somewhat homomorphic encryption generate shared randomness online",
    "metadata": {
      "chunk_id": "dcfde5026fbd4b15fc7a39a26484366c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 14] dishonest majority providing correctness guarantees mpc essence protocol comprised expensive offline preprocessing step uses somewhat homomorphic encryption generate shared randomness online stage computation similar passive case expensive public key cryptography involved online stage share represented additive share mac follows hsipi s pi s pi s t s s 6 fixed secret shared mac key h denotes modified secret sharing scheme additively homomorphic h sharing works opening shares global mac key reused multiplication involved multiplication consumes fhai hbi hcig triplets s t c ab generated pre processing step triplets generated given secrets s1 s2 shared h sharing secret sharing product s s1s2 achieved consuming triplet follows hsi hci hbi hai 7 hs1i hai hs2i hbi 8 mentioned generating triplets expensive process based protocol including security proofs found 18 verification achieved solving s 0 9 5 s secret loss generality reconstructed result secure computation intuitively comparison",
    "metadata": {
      "chunk_id": "1d47e3f79e45294a9d16c8fb9d975495",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 15] expensive process based protocol including security proofs found 18 verification achieved solving s 0 9 5 s secret loss generality reconstructed result secure computation intuitively comparison computation mac computed result times secret mac key reason performing actual comparison remains secret reused h sharing similar properties sss additively homomorphic requires sharing round multiplication o n2 communication complexity addition ensures correctness n 1 active adversaries offline round easily amortized computations computed parallel computations running significantly affect overall efficiency publicly verifiable spdz publicly verifiable case macs commitments stored blockchain making scheme secure n computing parties malicious follow representation 18 defines j k sharing jsk hsi hri hgshri 10 s secret r random value c gshr pedersen commitment g h serving generators j k sharing preserves additive homomorphic properties slightly modified multiplication protocol use idea generating",
    "metadata": {
      "chunk_id": "0bcd3630b9f8a068ffa040455421395b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 16] hgshri 10 s secret r random value c gshr pedersen commitment g h serving generators j k sharing preserves additive homomorphic properties slightly modified multiplication protocol use idea generating triplets fjak jbk jckg offline key observation nodes need compute h shared values commitments stored blockchain later addressed public validator output single node broken commitment evident auditor 5 2 hierarchical secure mpc information theoretic results secure mpc protocols require computing node interact nodes o n2 communication complexity constant number rounds case lsss computational complexity applies multiplication operation addition operations computed parallel intercommunication previously mentioned secure addition multiplication protocols sufficient construct general purpose interpreter securely evaluates code 17 cohen et al 20 recently proposed method simulating n party secure protocol logdepth formula constant size mpc gates illustrated figure 3 extend result lsss able reduce",
    "metadata": {
      "chunk_id": "0fd845d1f340f3994ab67d002bacdd7f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 18] perform computation random process preferentially selects nodes based load balancing requirements accumulated reputation measured publicly validated actions ensures network fully utilized given point 5 4 adaptable circuits code evaluated system guaranteed leak information dishonest majority colludes t n 2 true inputs interim variables computed code evaluated observant reader notice function evaluated inputs outputs interim results generally descriptive aggregative simple functions functions involving inputs hold true functions fast compute additional steps needed computationally expensive functions involving lines code large number inputs dynamically reduce number computing nodes progress instead having fixed n entire function evaluation process specifically design feed forward network figure 5 propagates results inputs outputs original code reorganized process addition gates inputs followed processing multiplication gates interim results secret shared n c nodes process repeated",
    "metadata": {
      "chunk_id": "b858c8034c9ae54dc734c5a1cbcf752d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 19] figure 5 propagates results inputs outputs original code reorganized process addition gates inputs followed processing multiplication gates interim results secret shared n c nodes process repeated recursively 5 5 scripting previously mentioned end end decentralized apps developed private contracts partitioned chain chain execution chain code returns results privately sending correctness proofs blockchain simplicity scripting language similar syntax known programming languages major additions scripting language require detail 5 6 private data types developers use private keyword specify private objects automatically ensures computation involving objects remains secure private working private objects data locally available reference 7 input 1 input 2 input 3 input 4 input 5 output addition layer1 mult layer1 addition layer2 mult layer2 output layer figure 5 feed forward flow secure code evaluation 5 7 data access distinct decentralized databases living system accessible global singleton",
    "metadata": {
      "chunk_id": "61eb5c55ef78b77a5f8646d688749410",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 20] mult layer1 addition layer2 mult layer2 output layer figure 5 feed forward flow secure code evaluation 5 7 data access distinct decentralized databases living system accessible global singleton dictionary specifically 1 public ledger blockchain s public ledger accessed manipulated l example l k 1 update key k nodes ledger completely public append entire history stored read accessible l k t 2 dht chain data stored dht accessible way public ledger default data encrypted locally transmission signing entity request data dht set k v p k key v value p predicate p x f0 1g sets v accessible k p satisfied supply built predicates language limiting access list public keys encryption turned default predicate 8x p x 1 data public distributed chain 3 mpc syntactically mpc equivalent dht underlying process differs particular executing mpc set k v p secret shares v shares distributed potential computing parties store shares local view p specify reference data computation vref mpc k revealing v",
    "metadata": {
      "chunk_id": "a9d43b93c86a453f83c5ed0940bef9e6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 21] process differs particular executing mpc set k v p secret shares v shares distributed potential computing parties store shares local view p specify reference data computation vref mpc k revealing v default original dealer ask raw data running v mpc declassify k similar sharing process collects shares parties reconstructs secret value locally addition entities belonging shared identity reference data computation details shared identities section 6 1 note simplicity addressed keys l dht mpc dictionaries single namespace practice finer granularity available segmented databases tables finer hierarchies 6 blockchain interoperability section enigma interoperates blockchain specifically detail complex identities formed digital signatures automatically compatible blockchains continue describe detail core protocols linking enigma s chain storage computation blockchain 8 6 1 identity management recent survey paper divided blockchain inspired technologies fully decentralized permission ledgers e",
    "metadata": {
      "chunk_id": "d9156da31d79ffe7abd59ee1df127ea1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 22] core protocols linking enigma s chain storage computation blockchain 8 6 1 identity management recent survey paper divided blockchain inspired technologies fully decentralized permission ledgers e g bitcoin ethereum semi centralized permissioned ledgers e g ripple 21 paper author argues inherent trade having pseudo anonymous system trusted information remain public having somewhat centralized system trusted nodes verify true underlying identities chain technology linked blockchain trade avoided network remains fully decentralized work define extended version identities captures shared identities multiple entities semantic meaning formally pseudo anonymous portion shared identity 2n 1 tuple sharedidentityp addrp pk p1 sig pk p2 sig pk pn sig 11 n denotes number parties clear n 1 revert special pseudo identity case complete definition shared identities incorporate idea meta data meta data encapsulates underlying semantic meaning identity primarily include public accesscontrol rules",
    "metadata": {
      "chunk_id": "987cfcfb204dd4e9957a15e9b05aa768",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 23] special pseudo identity case complete definition shared identities incorporate idea meta data meta data encapsulates underlying semantic meaning identity primarily include public accesscontrol rules defined predicates mentioned earlier network uses moderate access control public private data relevant example alice want share bob height weight alternatively want tell bob exact height allow use height aggregate computations case alice bob establish shared identity purpose alice invokes private contract shares height usingmpc 0alice height0 alice height bob reference computations accessing alice s height value directly default mpc predicate establishes alice s pseudonym owner shared information bob restricted access predicate shared identity s list addresses reference data stored blockchain collectively define public meta data words information related identity sensitive publicly verify access rights additional meta data private words alice bob access securely stored chain dht clear",
    "metadata": {
      "chunk_id": "6325ea7237b8821b113d22b15b5e466e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 24] collectively define public meta data words information related identity sensitive publicly verify access rights additional meta data private words alice bob access securely stored chain dht clear system solves need trusted nodes public transactions validated blockchain shared identities predicates governing accesscontrol stored ledger blockchain moderate access chain resources involving private meta data chain network act trustless privacy preserving verifier 6 2 link protocols discuss core protocols linking blockchain chain resources specifically elaborate identities formed stored ledger chain storage dht computation mpc requests routed blockchain conditional satisfying predicates 6 2 1 access control protocol 1 describes process creating shared identity protocol 2 implements publiclyverifiable contract satisfying predicates 6 2 2 store load storing loading data direct access dht shown protocol 3 storing data write permissions examined given qstore predicate storing party provide",
    "metadata": {
      "chunk_id": "34b6711568b5f7ee24d51b183175bc72",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 25] contract satisfying predicates 6 2 2 store load storing loading data direct access dht shown protocol 3 storing data write permissions examined given qstore predicate storing party provide custom predicate verifying read data underlying process abstracted away dht singleton object scripting language 9 algorithm 1 generating shared identity input p fpigni 1 parties fpolicypign 1 output ledger l stores reference shared identity addrp 0 acl pi 2 p pk pi sig sk pi sig gsig addrp addrp pk pi sig acl pksig pi end m addrp acl send signed tx m network procedure storeidentity addrp acl l addrp acl end procedure algorithm 2 permissions check blockchain input pk pi sig requesting party signature addrp shared identity s address q predicate verifying pi sufficient access rights output s 2 f0 1g procedure checkpermission pk pi sig addrp q s 0 l addrp 6 acl l addrp q acl pk pi sig s 1 end end return s end procedure 10 algorithm 3 storing loading data input pk pi sig addrp x data q x read predicate",
    "metadata": {
      "chunk_id": "0e178f07e69c021077a63e23687d2d3c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 27] dht allow working references data keeping data secure algorithm 4 secure computation secret sharing protocols input pk pi sig addrp x data xref reference computation q x compute predicate verifying computation rights output successful returns pointer xref future computation o w procedure share pkpi sig addrp x xref q x compute n t x p v ss n t peers sample n peers peer 2 peers send x peer p peer secure channel end return store pk pi sig addrp xref q x compute end procedure input pk pi sig addrp axref reference data address f unsecure code rewritten secure protocol output successful returns f x revealing x o w procedure compute pkpi sig addrp axref f xref load pk pi sig addrp axref xref 6 fs generate secure computation protocol f return fs xref end return end procedure 11 7 incentives enigma cryptocurrency blockchain incentive scheme based fees mining rewards nodes compensated providing computational resources nodes required provide security deposit making malicious behaviour",
    "metadata": {
      "chunk_id": "5b32013214a1f4cc3ef152d54aff8297",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 28] enigma cryptocurrency blockchain incentive scheme based fees mining rewards nodes compensated providing computational resources nodes required provide security deposit making malicious behaviour punishable 7 1 security deposits possible attack mpc protocols takes advantage lack guaranteed fairness protocol certain conditions malicious party learn output abort protocol parties learn output attack carried majority prevented penalized bitcoin security deposits punishing malicious nodes mpc investigated scholars recently 22 23 use similar model extend penalize malicious behaviors breaking correctness validated spdz protocol section 5 1 2 participate network store data perform computations receive fees node submit security deposit private contract computation completed private contract verifies correctness fairness maintained node found lie outcome aborts computation prematurely loses deposit split honest nodes computation continued malicious node e g setting share data 0 7 2 computation",
    "metadata": {
      "chunk_id": "c6004d595d06ed05fe684b972bb9d27f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 29] correctness fairness maintained node found lie outcome aborts computation prematurely loses deposit split honest nodes computation continued malicious node e g setting share data 0 7 2 computation fees request network storage data retrieval computation fixed price similar concept gas ethereum unlike ethereum computation run node enigma different nodes execute different parts computation need compensated according contribution measured rounds recall function reduced circuit addition multiplication gates takes rounds node participating computation paid weighted sum number rounds contributed operations performed addition multiplication platform turing complete exact cost request pre calculated computation finalized cost request deducted account balance node maintains request account balance minimum threshold 7 3 storage fees fees data storage market based time limited hosting contract automatically renewed owner s account balance balance low access data restricted additional funds",
    "metadata": {
      "chunk_id": "5d48f749b5809c18c112472fb269f608",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 30] minimum threshold 7 3 storage fees fees data storage market based time limited hosting contract automatically renewed owner s account balance balance low access data restricted additional funds deposited data deleted certain time 8 applications 8 1 data marketplace direct consumer business marketplace data guaranteed privacy autonomous control increased security consumers sell access data example pharmaceutical company looking patients clinical trials scan genomic databases candidates marketplace eliminate tremendous amounts friction lower costs customer acquisition offer new income stream consumers 8 2 secure backend companies today store large amounts customer data use data provide personalized services match individual preferences target ads offers etc enigma companies 12 use data purposes today actually storing processing data servers removing security risks assuring privacy customers 8 3 internal compartmentalization large organizations use enigma protect data trade secrets",
    "metadata": {
      "chunk_id": "ea38fc7f4176799901963f0bab37f054",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 31] purposes today actually storing processing data servers removing security risks assuring privacy customers 8 3 internal compartmentalization large organizations use enigma protect data trade secrets corporate espionage rogue employees employees use analyze data benefit organization won t able steal data productivity inside organizations improved people access data costs security lower 8 4 n factor authentication voice face fingerprint recognition stored computed enigma user access data policies additional keys required set inside private contract unexposed potential attacker 8 5 identity authenticating securely storing identities fully anonymous provably correct fashion trivial enigma requires little lines code process simple user secretshares personal information required authentication user logs authenticating private contract executed validating user linking real identity public pseudoidentity process completely trust privacy preserving 8 6 iot store manage use highly sensitive",
    "metadata": {
      "chunk_id": "f5f9ca7e9cfe17ff809633a6af2702d8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 32] user logs authenticating private contract executed validating user linking real identity public pseudoidentity process completely trust privacy preserving 8 6 iot store manage use highly sensitive data collected iot devices decentralized trustless cloud 8 7 distributed personal data stores store share data parties maintaining control ownership set specific policies service private contracts identity truly protected decision share data reversible services access raw data run secure computations 8 8 crypto bank run service crypto bank exposing private internal details users loans deposit cryptocurrencies buy investment products autonomous control blockchain publicly revealing financial situation 8 9 blind e voting votes political elections company board meetings exposing final outcome privacy voter maintained actual votecount remain private example elections require kind majority vote details distribution unanimous decision indistinguishable decided single vote 8 10 bitcoinwallet 1",
    "metadata": {
      "chunk_id": "2730c330fb64108b899781d5c18fab00",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "bank run"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 33] voter maintained actual votecount remain private example elections require kind majority vote details distribution unanimous decision indistinguishable decided single vote 8 10 bitcoinwallet 1 decentralized private key generation multiple enigma nodes locally create segment key key assembled user trail evidence left 2 decentralized transaction signing transactions signed exposing private key leaving trail 13 3 decentralized controls set spending limits multi sig checklocktimeverify like controls private script lock time limits number required signatures completely invisible potential attacker references 1 diamond jared germs guns steel fates human societies new york w w norton 1997 2 de montesquieu charles spirit laws digireads com publishing 2004 3 perry barlow john declaration independence cyberspace electronic frontier foundation 8 1996 4 vindu goel facebook tinkers users emotions news feed experiment stirring outcry new york times 2014 5 james ball nsas prism surveillance program",
    "metadata": {
      "chunk_id": "719c71ca861acb97b516085a53ff3547",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 34] cyberspace electronic frontier foundation 8 1996 4 vindu goel facebook tinkers users emotions news feed experiment stirring outcry new york times 2014 5 james ball nsas prism surveillance program works guardian 2013 6 bill hardekopf big data breaches 2014 forbes 2015 7 nick szabo dawn trustworthy computing 2014 8 nick szabo god protocols 1997 9 nakamoto satoshi bitcoin peer peer electronic cash system consulted 1 2012 2008 28 10 clark joseph bonneau andrew miller jeremy arvind narayanan joshua kroll edward w felten sok research perspectives challenges bitcoin cryptocurrencies security privacy sp 2015 ieee symposium ieee 2015 11 maymounkov petar david mazieres kademlia peer peer information system based xor metric peer peer systems pp 53 65 springer berlin heidelberg 2002 12 yao andrew c protocols secure computations 2013 ieee 54th annual symposium foundations computer science ieee 1982 13 ben david assaf noam nisan benny pinkas fairplaymp system secure multiparty computation",
    "metadata": {
      "chunk_id": "f724f898821f4dcfcfdd8fee4bf3b642",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "breach"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 35] c protocols secure computations 2013 ieee 54th annual symposium foundations computer science ieee 1982 13 ben david assaf noam nisan benny pinkas fairplaymp system secure multiparty computation proceedings 15th acm conference computer communications security acm 2008 14 bogdanov dan sven laur jan willemson sharemind framework fast privacypreserving computations computer security esorics 2008 springer berlin heidelberg 2008 192 206 15 team viff developement viff virtual ideal functionality framework 2009 16 shamir adi share secret communications acm 22 11 1979 612 613 17 ben michael shafi goldwasser avi wigderson completeness theorems noncryptographic fault tolerant distributed computation proceedings twentieth annual acm symposium theory computing acm 1988 18 baum carsten ivan damgrd claudio orlandi publicly auditable secure multi party computation security cryptography networks springer international publishing 2014 175 196 19 damgrd ivan et al practical covertly secure mpc dishonest",
    "metadata": {
      "chunk_id": "0d682d2d1671fb7a63aa52258c46f2d4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  },
  {
    "text": "[Section 36] orlandi publicly auditable secure multi party computation security cryptography networks springer international publishing 2014 175 196 19 damgrd ivan et al practical covertly secure mpc dishonest majorityor breaking spdz limits computer securityesorics 2013 springer berlin heidelberg 2013 1 18 20 cohen gil et al efficient multiparty protocols log depth threshold formulae advances cryptologycrypto 2013 springer berlin heidelberg 2013 185 202 21 swanson tim consensus service brief report emergence permissioned distributed ledger systems 2015 22 bentov iddo ranjit kumaresan use bitcoin design fair protocols advances cryptologycrypto 2014 springer berlin heidelberg 2014 421 439 23 andrychowicz marcin et al secure multiparty computations bitcoin security privacy sp 2014 ieee symposium ieee 2014 14",
    "metadata": {
      "chunk_id": "372195ef173ac5b958947bba5f74257f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Enigma.txt"
    }
  }
]