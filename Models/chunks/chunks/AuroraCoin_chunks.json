[
  {
    "text": "[Section 1] bitcoin apeer peerelectroniccashsystem satoshi nakamoto satoshin gmx com www bitcoin org abstract purely peer peer version electronic cash allow online payments sent directly party going financial institution digital signatures provide solution main benefits lost trusted party required prevent double spending propose solution double spending problem peer peer network network timestamps transactions hashing ongoing chain hash based proof work forming record changed redoing proof work longest chain serves proof sequence events witnessed proof came largest pool cpu power long majority cpu power controlled nodes cooperating attack network ll generate longest chain outpace attackers network requires minimal structure messages broadcast best effort basis nodes leave rejoin network accepting longest proof work chain proof happened gone 1 introduction commerce internet come rely exclusively financial institutions serving trusted parties process electronic payments system works transactions",
    "metadata": {
      "chunk_id": "e6067cb65608f4cd7e2f12951669fa6a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 2] proof work chain proof happened gone 1 introduction commerce internet come rely exclusively financial institutions serving trusted parties process electronic payments system works transactions suffers inherent weaknesses trust based model completely non reversible transactions possible financial institutions avoid mediating disputes cost mediation increases transaction costs limiting minimum practical transaction size cutting possibility small casual transactions broader cost loss ability non reversible payments non reversible services possibility reversal need trust spreads merchants wary customers hassling information need certain percentage fraud accepted unavoidable costs payment uncertainties avoided person physical currency mechanism exists payments communications channel trusted party needed electronic payment system based cryptographic proof instead trust allowing willing parties transact directly need trusted party transactions computationally impractical reverse protect",
    "metadata": {
      "chunk_id": "009c242ad583b0f8fddf08ded5614a1f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 3] party needed electronic payment system based cryptographic proof instead trust allowing willing parties transact directly need trusted party transactions computationally impractical reverse protect sellers fraud routine escrow mechanisms easily implemented protect buyers paper propose solution double spending problem peer peer distributed timestamp server generate computational proof chronological order transactions system secure long honest nodes collectively control cpu power cooperating group attacker nodes 1 2 transactions define electronic coin chain digital signatures owner transfers coin digitally signing hash previous transaction public key owner adding end coin payee verify signatures verify chain ownership problem course payee t verify owners double spend coin common solution introduce trusted central authority mint checks transaction double spending transaction coin returned mint issue new coin coins issued directly mint trusted double spent problem solution fate entire",
    "metadata": {
      "chunk_id": "d09653eb3656353b20ef4fffb22fe1f9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 22.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 4] introduce trusted central authority mint checks transaction double spending transaction coin returned mint issue new coin coins issued directly mint trusted double spent problem solution fate entire money system depends company running mint transaction having like bank need way payee know previous owners sign earlier purposes earliest transaction counts donabout later attempts double spend way confirm absence transaction aware transactions mint based model mint aware transactions decided arrived accomplish trusted party transactions publicly announced 1 need system participants agree single history order received payee needs proof time transaction majority nodes agreed received timestamp server solution propose begins timestamp server timestamp server works taking hash block items timestamped widely publishing hash newspaper usenet post 2 5 timestamp proves data existed time obviously order hash timestamp includes previous timestamp hash forming chain additional timestamp reinforcing",
    "metadata": {
      "chunk_id": "5089deacea0c292ac425fdcf0633ccab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 5] widely publishing hash newspaper usenet post 2 5 timestamp proves data existed time obviously order hash timestamp includes previous timestamp hash forming chain additional timestamp reinforcing ones hash hash owner 2 s private key owner 1 s private key signsign owner 3 s private key transaction owner 1 s public key owner 0 s signature hash transaction owner 2 s public key owner 1 s signature hash verify transaction owner 3 s public key owner 2 s signature hash verify transactions t care 3 block block item item item item 2 4 proof work implement distributed timestamp server peer peer basis need use proofof work system similar adam s hashcash 6 newspaper usenet posts proof work involves scanning value hashed sha 256 hash begins number zero bits average work required exponential number zero bits required verified executing single hash timestamp network implement proof work incrementing nonce block value found gives block s hash required zero bits cpu effort expended satisfy proof work",
    "metadata": {
      "chunk_id": "a182347f2275e55ef2e6c6aa4c15ea69",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 6] bits required verified executing single hash timestamp network implement proof work incrementing nonce block value found gives block s hash required zero bits cpu effort expended satisfy proof work block changed redoing work later blocks chained work change block include redoing blocks block prev hash nonce tx tx block prev hash nonce tx tx proof work solves problem determining representation majority decision making majority based ip address vote subverted able allocate ips proof work essentially cpu vote majority decision represented longest chain greatest proof work effort invested majority cpu power controlled honest nodes honest chain grow fastest outpace competing chains modify past block attacker redo proof work block blocks catch surpass work honest nodes later probability slower attacker catching diminishes exponentially subsequent blocks added compensate increasing hardware speed varying interest running nodes time proof work difficulty determined moving average targeting",
    "metadata": {
      "chunk_id": "d4aadec78e8420fc7c7ada722f18760d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 7] attacker catching diminishes exponentially subsequent blocks added compensate increasing hardware speed varying interest running nodes time proof work difficulty determined moving average targeting average number blocks hour generated fast difficulty increases 5 network steps run network follows 1 new transactions broadcast nodes 2 node collects new transactions block 3 node works finding difficult proof work block 4 node finds proof work broadcasts block nodes 5 nodes accept block transactions valid spent 6 nodes express acceptance block working creating block chain hash accepted block previous hash nodes consider longest chain correct working extending nodes broadcast different versions block simultaneously nodes receive case work received save branch case longer tie broken proofof work found branch longer nodes working branch switch longer 3 new transaction broadcasts necessarily need reach nodes long reach nodes block long block broadcasts tolerant dropped messages node receive",
    "metadata": {
      "chunk_id": "b9bd19cac997e3c28f6a8fc12851c748",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 8] found branch longer nodes working branch switch longer 3 new transaction broadcasts necessarily need reach nodes long reach nodes block long block broadcasts tolerant dropped messages node receive block request receives block realizes missed 6 incentive convention transaction block special transaction starts new coin owned creator block adds incentive nodes support network provides way initially distribute coins circulation central authority issue steady addition constant new coins analogous gold miners expending resources add gold circulation case cpu time electricity expended incentive funded transaction fees output value transaction input value difference transaction fee added incentive value block containing transaction predetermined number coins entered circulation incentive transition entirely transaction fees completely inflation free incentive help encourage nodes stay honest greedy attacker able assemble cpu power honest nodes choose defraud people stealing payments generate",
    "metadata": {
      "chunk_id": "244e31d18fa947d00834b719da5a507f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 9] entirely transaction fees completely inflation free incentive help encourage nodes stay honest greedy attacker able assemble cpu power honest nodes choose defraud people stealing payments generate new coins ought find profitable play rules rules favour new coins combined undermine system validity wealth 7 reclaiming disk space latest transaction coin buried blocks spent transactions discarded save disk space facilitate breaking block s hash transactions hashed merkle tree 7 2 5 root included block s hash old blocks compacted stubbing branches tree interior hashes need stored block block block header block hash prev hash nonce hash01 hash0 hash1 hash2 hash3 hash23 root hash hash01 hash2 tx3 hash23 block header block hash root hash prev hash nonce hash3 tx0 tx1 tx2 tx3 transactions hashedina merkletree pruningtx0 2from block block header transactions 80 bytes suppose blocks generated 10 minutes 80 bytes 6 24 365 4 2mb year computer systems typically selling 2gb ram 2008 moore s law",
    "metadata": {
      "chunk_id": "185368327c2ac5e74f85e7955ccda21a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 10] merkletree pruningtx0 2from block block header transactions 80 bytes suppose blocks generated 10 minutes 80 bytes 6 24 365 4 2mb year computer systems typically selling 2gb ram 2008 moore s law predicting current growth 1 2gb year storage problem block headers kept memory 4 8 simplified payment verification possible verify payments running network node user needs copy block headers longest proof work chain querying network nodes s convinced longest chain obtain merkle branch linking transaction block s timestamped t check transaction linking place chain network node accepted blocks added confirm network accepted longest proof work chain hash01 hash2 hash3 hash23 block header merkle root prev hash nonce block header merkle root prev hash nonce block header merkle root prev hash nonce merkle branch tx3 tx3 verification reliable long honest nodes control network vulnerable network overpowered attacker network nodes verify transactions simplified method fooled attacker s fabricated",
    "metadata": {
      "chunk_id": "1df70cbda97ba7ea7921176c99a8c067",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 11] merkle branch tx3 tx3 verification reliable long honest nodes control network vulnerable network overpowered attacker network nodes verify transactions simplified method fooled attacker s fabricated transactions long attacker continue overpower network strategy protect accept alerts network nodes detect invalid block prompting user s software download block alerted transactions confirm inconsistency businesses receive frequent payments probably want run nodes independent security quicker verification 9 combining splitting value possible handle coins individually unwieldy separate transaction cent transfer allow value split combined transactions contain multiple inputs outputs normally single input larger previous transaction multiple inputs combining smaller amounts outputs payment returning change sender transaction noted fan transaction depends transactions transactions depend problem need extract complete standalone copy transaction s history 5 10 privacy traditional banking model",
    "metadata": {
      "chunk_id": "611cad586f199e57fe96fd15e4e296c6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 12] change sender transaction noted fan transaction depends transactions transactions depend problem need extract complete standalone copy transaction s history 5 10 privacy traditional banking model achieves level privacy limiting access information parties involved trusted party necessity announce transactions publicly precludes method privacy maintained breaking flow information place keeping public keys anonymous public sending information linking transaction similar level information released stock exchanges time size individual trades tape public telling parties traditional privacy model identities transactions trusted party counterparty public newprivacy model transactions identities public additional firewall new key pair transaction linked common owner linking unavoidable multi input transactions necessarily reveal inputs owned owner risk owner key revealed linking reveal transactions belonged owner 11 calculations consider scenario attacker trying generate alternate chain faster",
    "metadata": {
      "chunk_id": "276655eb0a9233aa09dd2ca15b4fbe13",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 13] transactions necessarily reveal inputs owned owner risk owner key revealed linking reveal transactions belonged owner 11 calculations consider scenario attacker trying generate alternate chain faster honest chain accomplished throw system open arbitrary changes creating value thin air taking money belonged attacker nodes going accept invalid transaction payment honest nodes accept block containing attacker try change transactions money recently spent race honest chain attacker chain characterized binomial random walk success event honest chain extended block increasing lead 1 failure event attacker s chain extended block reducing gap 1 probability attacker catching given deficit analogous gambler s ruin problem suppose gambler unlimited credit starts deficit plays potentially infinite number trials try reach breakeven calculate probability reaches breakeven attacker catches honest chain follows 8 p probability honest node finds block q probability attacker finds block qz probability",
    "metadata": {
      "chunk_id": "d95a808b275a91cf2751c6764519ab78",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 14] trials try reach breakeven calculate probability reaches breakeven attacker catches honest chain follows 8 p probability honest node finds block q probability attacker finds block qz probability attacker catch z blocks 1 p q qz q p z p q 6 given assumption p q probability drops exponentially number blocks attacker catch increases odds doesn t lucky lunge forward early chances vanishingly small falls consider long recipient new transaction needs wait sufficiently certain sender t change transaction assume sender attacker wants recipient believe paid switch pay time passed receiver alerted happens sender hopes late receiver generates new key pair gives public key sender shortly signing prevents sender preparing chain blocks ahead time working continuously lucky far ahead executing transaction moment transaction sent dishonest sender starts working secret parallel chain containing alternate version transaction recipient waits transaction added block z blocks linked doesn t know exact",
    "metadata": {
      "chunk_id": "090f3eb1889e9e914539cd66d5248312",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 15] moment transaction sent dishonest sender starts working secret parallel chain containing alternate version transaction recipient waits transaction added block z blocks linked doesn t know exact progress attacker assuming honest blocks took average expected time block attacker s potential progress poisson distribution expected value q z p probability attacker catch multiply poisson density progress probability catch point 8 k e q p z k k z s k 0 k 1 k z rearranging avoid summing infinite tail distribution z k e 1 1 q p z k k 0 k converting c code include math h double attackersuccessprobability double q int z double p 1 0 q double lambda z q p double sum 1 0 int k k 0 k z k double poisson exp lambda 1 k poisson lambda sum poisson 1 pow q p z k return sum 7 running results probability drop exponentially z q 0 1z 0 p 1 0000000 z 1 p 0 2045873 z 2 p 0 0509779 z 3 p 0 0131722 z 4 p 0 0034552 z 5 p 0 0009137 z 6 p 0 0002428 z 7 p 0 0000647 z 8 p 0 0000173 z 9 p 0 0000046 z 10 p 0 0000012 q",
    "metadata": {
      "chunk_id": "6b39c8029addbd814e70468ac2e2e90d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 16] exponentially z q 0 1z 0 p 1 0000000 z 1 p 0 2045873 z 2 p 0 0509779 z 3 p 0 0131722 z 4 p 0 0034552 z 5 p 0 0009137 z 6 p 0 0002428 z 7 p 0 0000647 z 8 p 0 0000173 z 9 p 0 0000046 z 10 p 0 0000012 q 0 3z 0 p 1 0000000 z 5 p 0 1773523 z 10 p 0 0416605 z 15 p 0 0101008 z 20 p 0 0024804 z 25 p 0 0006132 z 30 p 0 0001522 z 35 p 0 0000379 z 40 p 0 0000095 z 45 p 0 0000024 z 50 p 0 0000006 solving p 0 1% p 0 001 q 0 10 z 5 q 0 15 z 8 q 0 20 z 11 q 0 25 z 15 q 0 30 z 24 q 0 35 z 41 q 0 40 z 89 q 0 45 z 340 12 conclusion proposed system electronic transactions relying trust started usual framework coins digital signatures provides strong control ownership incomplete way prevent double spending solve proposed peer peer network proof work record public history transactions quickly computationally impractical attacker change honest nodes control majority cpu power network robust unstructured simplicity nodes work little coordination need identified messages routed particular place need",
    "metadata": {
      "chunk_id": "5cc89207f0f3b4f64cec1a99df73045f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 17] impractical attacker change honest nodes control majority cpu power network robust unstructured simplicity nodes work little coordination need identified messages routed particular place need delivered best effort basis nodes leave rejoin network accepting proof work chain proof happened gone vote cpu power expressing acceptance valid blocks working extending rejecting invalid blocks refusing work needed rules incentives enforced consensus mechanism 8 references 1 w dai b money http www weidai com bmoney txt 1998 2 h massias x s avila j j quisquater design secure timestamping service minimal trust requirements 20th symposium information theory benelux 1999 3 s haber w s stornetta time stamp digital document journal cryptology vol 3 2 pages 99 111 1991 4 d bayer s haber w s stornetta improving efficiency reliability digital time stamping sequences ii methods communication security computer science pages 329 334 1993 5 s haber w s stornetta secure names bit strings proceedings 4th acm",
    "metadata": {
      "chunk_id": "db85477014214a020f5c5a84de815b64",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  },
  {
    "text": "[Section 18] efficiency reliability digital time stamping sequences ii methods communication security computer science pages 329 334 1993 5 s haber w s stornetta secure names bit strings proceedings 4th acm conference computer communications security pages 28 35 april 1997 6 hashcash denial service counter measure http www hashcash org papers hashcash pdf 2002 7 r c merkle protocols public key cryptosystems proc 1980 symposium security privacy ieee computer society pages 122 133 april 1980 8 w feller introduction probability theory applications 1957 9",
    "metadata": {
      "chunk_id": "8d56bb215428177b24f020dff32a2557",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "AuroraCoin.txt"
    }
  }
]