[
  {
    "text": "[Section 1] b technical paper v1 0 x0ccontents introduction 3 1 blockchain 4 1 1 2 1 1 1 subsystems 4 1 1 2 p2p network 4 1 1 3 global shared state execution layer 4 1 1 4 consensus layer 5 1 1 5 block execution layer 6 1 2 graphene trading engine 6 1 3 transaction types 7 1 4 transaction fees 7 tokens 8 2 1 dascoin 8 2 2 webeuro 8 2 2 1 issuance authority 8 2 2 2 pegging mechanism 8 2 3 3 4 cycles 8 minting issuance 9 3 1 description 9 3 2 licence levels 11 governance 12 4 1 5 description 4 structure 12 4 1 1 voting nodes 12 4 1 2 dascoin board 12 4 1 3 chain authorities 13 frequency 16 5 1 description 16 5 2 global frequency 16 5 3 centralize vs calculation algorithm 16 5 4 upgrades 16 5 4 1 1 p age description 16 x0c6 7 5 5 current cycle implementation 17 5 6 bonus cycles 17 5 7 cycles issuance authority description 17 nodes 18 6 1 master nodes 18 6 2 ledger nodes 18 6 3 node operations 19 6 3 1 create witness operation 19 6 3 2 update witness operation 19 6 3 3 remove witness operation 20 6 3",
    "metadata": {
      "chunk_id": "53c6cfc3a3393b36561152c620efda59",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 2] description 17 nodes 18 6 1 master nodes 18 6 2 ledger nodes 18 6 3 node operations 19 6 3 1 create witness operation 19 6 3 2 update witness operation 19 6 3 3 remove witness operation 20 6 3 4 activate witness operation 20 webwallet 21 7 1 security 22 7 2 validator 22 7 2 1 7 3 identity management 23 7 3 1 7 4 8 kyc 23 sample ui 24 api 25 8 1 websocket calls notifications 25 8 1 1 requesting api access 26 8 1 2 database notifications 27 8 1 3 example session 28 8 2 9 account recovery 23 operations 28 appendix blockchain api 29 9 1 database api 29 9 2 account history api 46 9 3 crypto api 47 9 4 network broadcast api 48 9 5 network nodes api 48 9 6 wallet api 49 10 appendix b operations 83 2 p age x0cintroduction dascoin designed solve core problems inherent storing exchanging value dascoin blockchain mutual distributed ledger creates distributes cryptographic assets securely facilitates storage exchange prime objective dascoin use infrastructure digital asset system build effective",
    "metadata": {
      "chunk_id": "f421d9e694e6a55b88879095385d6542",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 3] blockchain mutual distributed ledger creates distributes cryptographic assets securely facilitates storage exchange prime objective dascoin use infrastructure digital asset system build effective network trust enabling participants stake holders share common goal increasing value network cultivating growth private permissioned blockchain architecture incorporated enhanced security inherent efficiency ability scale easily deployment control fortifying secure foundation authentication users accordance bankingstandard kyc know customer requirements implementation xe2 x80 x9chardware required xe2 x80 x9d digital wallet system like system value dascoin establish fundamental elements include defining initial money supply initial distribution basis value expansion contraction mechanisms money supply controls means production allocation inflation allocation credit dascoin offers hybrid structure solve issues associated economics based elements technical whitepaper depth technical",
    "metadata": {
      "chunk_id": "9253bf4f636f4690b0351fa87327e9a0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 4] money supply controls means production allocation inflation allocation credit dascoin offers hybrid structure solve issues associated economics based elements technical whitepaper depth technical specifications dascoin blockchain establish fundamental elements start basic description blockchain reader general overview follow chapters clarify specific individual parts blockchain end include list api calls paper finish added appendix detailed explanation api 3 p age x0c1 blockchain 1 1 description dascoin blockchain distributed ledger based payment token exchange system supports base system tokens cycles dascoin enables creation arbitrary number different asset tokens dascoin blockchain determines block production assigning authorized nodes master nodes block validators system relies centralized distribution dascoin minting process semi decentralized governance mechanism dascoin board determines chain parameters determines block producers eligible candidates dascoin blockchain built",
    "metadata": {
      "chunk_id": "58faf7f45b6a917d96c733d00358a3f9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 5] distribution dascoin minting process semi decentralized governance mechanism dascoin board determines chain parameters determines block producers eligible candidates dascoin blockchain built graphene toolkit direct basis bitshares blockchain indirectly steem eos blockchains dascoin blockchain inherits base consensus model graphene p2p network execution user operations system wide block produced actions main differences lie implementation governance dascoin distribution minting storing user states implementation user administrative actions chain operations 1 1 1 subsystems dascoin blockchain seen union subsystems handle tasks facilitating communication nodes system executing user block operations updating global shared state maintaining ledger confirmed transaction updates 1 1 2 p2p network p2p node network base layer dascoin blockchain graphene toolkit network responsible handling connections nodes user endpoints wallet instances websockets relaying messages nodes receiving messages",
    "metadata": {
      "chunk_id": "895d4db98a3ccc9157cf7df7308087c7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 6] p2p node network base layer dascoin blockchain graphene toolkit network responsible handling connections nodes user endpoints wallet instances websockets relaying messages nodes receiving messages client endpoint network layer handles unmarshalling message passes operations layer network layer marshals response client success state update query interaction network layer handles connections nodes nodes discovery protocol relying instead preconfigured addresses network layer maintains gossip state update protocol node broadcasts relevant messages valid transactions created blocks known nodes left consensus mechanism global shared state fto handle deduplication updates 1 1 3 global shared state execution layer global shared state memory database relevant user system data objects graphene toolkit nodes entire copy global shared state objects unique identifier based number system denoting domain type order number instantiation object types accessed generalized object api specific",
    "metadata": {
      "chunk_id": "7cc70c595ea5d925a81f3dc79df66756",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 7] toolkit nodes entire copy global shared state objects unique identifier based number system denoting domain type order number instantiation object types accessed generalized object api specific formatting apis handle client needs 4 p age x0cthe global shared state features transaction rollback mechanism necessary establishing consensus rollback mechanism detect roll state case dominant block history emerging maximum defined divergence point commonly manifested block updates pending transaction state discarded replaced result confirmed transactions blocks execution layer verifies executes user initiated operations operations received network layer checked presence correct signatures operation validly signed validated checks independent current state ie sending negative balance transfer operation properly signed valid independent current state checked relevant objects state ie transfer check account balance sufficient operation fully verified state locked operation executed current",
    "metadata": {
      "chunk_id": "f6881e8773111d76735a38343a80fa3f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 21.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 8] operation properly signed valid independent current state checked relevant objects state ie transfer check account balance sufficient operation fully verified state locked operation executed current state performing state transition multi step validation system ensures early fail invalid transactions lowers time execution operations additionally bundled transactions similar functionality database management systems executed transactions sent network layer rebroadcast nodes execution layer features deduplication mechanism making sure transaction executed executed transactions operations placed pending state verified executed confirmed consensus state node matches transaction executed regardless confirmed state block update received checked signatures matches block production schedule signed right block producer right time case transactions rolled joining point block blockchain chain split usually block transactions block update executed order new confirmed state formed 1 1 4 consensus",
    "metadata": {
      "chunk_id": "c639c0175856a128154c432a4d3cdd63",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 9] right block producer right time case transactions rolled joining point block blockchain chain split usually block transactions block update executed order new confirmed state formed 1 1 4 consensus layer consensus layer ensures byzantine fault tolerance guarantee entire network converge globally shared state updates local copy block ledger maintains set execution rules platform rules consensus layer modified graphene implementation dascoin blockchain consensus based known set validators nodes authorized block signing private key block signed correct master key properly signed block producers added list active block producers dascoin board signing appropriate operation board privilege remove master node block producer list block production algorithm proceeds rounds block producer shuffled schedule valid single round block producer given time slot based respective position schedule slot length unit block time initially set 6 seconds duty block producer collate user transactions verify",
    "metadata": {
      "chunk_id": "6492c189b377d136b39054ecbe0cc17f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 10] schedule valid single round block producer given time slot based respective position schedule slot length unit block time initially set 6 seconds duty block producer collate user transactions verify execute produce signed block send network nodes actively listen block updates block update received node network properly signed checked schedule block producer scheduled produce block moment time block rejected ensures block producers chance produce block distributing trust 5 p age x0cthrough network time maintaining fast predictable speed confirmed transactions 1 1 5 block execution layer certain system wide actions attached predictable rhythm producing blocks node executes certain system defined code block produced set multiple number blocks 10th block example corresponds currently minute enables actions time based maximum resolution block time currently 6 seconds process minting dascoin parts trade engine operation cleanup unused memory implemented layer system periodically reserves",
    "metadata": {
      "chunk_id": "8213d291d44111263bb5c41be03a9335",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 11] enables actions time based maximum resolution block time currently 6 seconds process minting dascoin parts trade engine operation cleanup unused memory implemented layer system periodically reserves time currently day system wide maintenance interval block production stalled allow nodes compute resource intensive changes state parallel execution available changes require reading writing large state upgrades relegated interval 1 2 graphene trading engine decentralized exchange dex built consensus operations layer blockchain xe2 x80 x99s native application feature rely user defined code execution functionality built node software dex trading engine parts graphene toolkit dex allows users create limit orders trade different assets dascoin blockchain present moment exchange supports trade dascoin dasc webeuro w xe2 x82 xac assets user creates trade placed market market tracks open filled orders certain trading pair tracks price 24h volume markets defined dasc w xe2 x82 xac w xe2 x82 xac",
    "metadata": {
      "chunk_id": "c8ecfa298bd854c956356239cae9147c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 12] dasc webeuro w xe2 x82 xac assets user creates trade placed market market tracks open filled orders certain trading pair tracks price 24h volume markets defined dasc w xe2 x82 xac w xe2 x82 xac dasc dex supports arbitrary number markets assets order matched engine criteria best price time creation fitting order created dex orders partially filled remainder remaining open position user option create fill kill order matched creation users cancel open orders time dex enabled user signed operations create cancel limit orders user properly sign valid create limit order operation order create limit order operation considered valid user funds create order operation executed trading engine attempt match order tied block creation consensus mechanism confirming transactions trading engine proceed search limit orders given market pair sorted price ratio time creation match order fully filled trading engine exchange assets trading accounts swapping appropriate amounts tokens complete trade order",
    "metadata": {
      "chunk_id": "bfa209dd5f427928ee8854f8e77cbbfb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 13] limit orders given market pair sorted price ratio time creation match order fully filled trading engine exchange assets trading accounts swapping appropriate amounts tokens complete trade order partially matched matched unique order object created global share state user notified id unique order object contains information type tokens sell minimal receive values equal original values input user create limit order operation order filled adjusted match partial filling order match happened 6 p age x0cthe order fully filled object persists state filled entirely created limit order cancelled user user cancel open limit order properly signing valid cancel limit order operation operation valid contains id existing limit order object signed creator object limit order important thing note trades executed immediately regardless confirmation achieve additional confidence user wish wait confirmed limit order appear meaning order confirmed block trade accordance confirmed order block types",
    "metadata": {
      "chunk_id": "7172c0d972265882337a3f35838ed62a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 14] executed immediately regardless confirmation achieve additional confidence user wish wait confirmed limit order appear meaning order confirmed block trade accordance confirmed order block types explained description section document dascoin blockchain contains mechanism executing system code block produced mechanism minting blocks blocks designated distribute dascoin way minting queue blocks designated perform staking rewards execute delayed user code information operations appendix operations 1 3 transaction types explained description section document dascoin blockchain based user signed operations modify global shared state operations bundled transactions way operations transaction pass order fail rolled transaction contain operation operations divided authority user operations authority operations signed named authority responsible governing chain handling actions require trust good example choosing block producers handled root authority issuing licenses handled license authority",
    "metadata": {
      "chunk_id": "b1722898ab376a99e5ce63a9935a5071",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 15] operations signed named authority responsible governing chain handling actions require trust good example choosing block producers handled root authority issuing licenses handled license authority actions require oracle input outside chain signed trusted authorities user operations signed user actions manipulate user state token balance open trade orders etc user operations valid bounds user state properly signed information list operations appendix b operations 1 4 transaction fees exchanges digital wallets charge fee conducted transactions cases fee calculated currency trading comes form percentage traded cryptocurrency market volatile price coin rise fall drastically short period time actual fee user pays depends current value coin trading avoid kind volatility instead charging fees dascoin instead cycles xe2 x80 x93 heart dascoin platform xe2 x80 x93 transaction fees transaction user conducts regardless sending cost cycle user uses cycles xe2 x80 x99ll able purchase dascoin user",
    "metadata": {
      "chunk_id": "9ee65df9db5bb9ea6da3f40aa22951fc",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 16] instead cycles xe2 x80 x93 heart dascoin platform xe2 x80 x93 transaction fees transaction user conducts regardless sending cost cycle user uses cycles xe2 x80 x99ll able purchase dascoin user xe2 x80 x99s account reserved purchase cycles situation cycles dascoin purchase 7 p age x0c2 tokens 2 1 dascoin dascoin hybrid currency designed combine best qualities decentralized cryptocurrencies best aspects centralized currencies xe2 x80 x93 eliminate respective weaknesses dascoin convertible xe2 x80 x9cstore value xe2 x80 x9d unit serves foundation digital asset system dascoin main crypto asset previously described customers acquire dascoin licenses minting 2 2 webeuro webeuro cryptographic asset defined dascoin blockchain represents euro denomination 2 2 1 issuance authority issuance authority responsible webeuro called issue webasset find details operation appendix section 2 2 2 pegging mechanism mentioned webeuro equivalent fiat currency euro value fixed exchange rate earn webeuro",
    "metadata": {
      "chunk_id": "3738a80f64d21b14436e5a4b4658b9a7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 17] responsible webeuro called issue webasset find details operation appendix section 2 2 2 pegging mechanism mentioned webeuro equivalent fiat currency euro value fixed exchange rate earn webeuro trading dascoin internal market netleaders commission bonuses customers cash webeuros euros manually netleaders platform 2 3 cycles cycles cryptographic asset defined dascoin blockchain cycles represent stored capacity dasnet paying fees dascoin blockchain paying network services submitted minting queue exchanged dascoins cycle indivisible asset meaning half cycle quarter cycles acquired purchase system license bitcoin euros bought dascoin order buy fees dascoin blockchain internally cycles represented asset equal webeuro dascoin traded exchange transferred wallet transferred license vault tethered wallet periodically accordance predetermined upgrade interval cycle balances experience upgrade balances accounts double cycles dascoin minting queue cycles unaffected associated account frequency",
    "metadata": {
      "chunk_id": "f7aa0c7821d1333407712ce40958da21",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 18] wallet periodically accordance predetermined upgrade interval cycle balances experience upgrade balances accounts double cycles dascoin minting queue cycles unaffected associated account frequency lock 8 p age x0c3 minting issuance 3 1 description process producing distributing new dascoins known minting minting allows person entity store value form dascoin order obtain dascoins people submit cycles network assigned place dascoin minting queue minting queue functions basis dascoins distributed account line distribution queue dascoin distribution interval specific dascoins distributed participants queue dascoins user receives regulated adjustable conversion factor called frequency dascoin distribution functions way cycles submitted divided frequency equals number dascoins distributed person cycles deducted time submission xe2 x80 x9cminting queue xe2 x80 x9d time distribution dascoins automatically transferred account blockchain software total dascoins minted capped 2 power 33 parties",
    "metadata": {
      "chunk_id": "a5f42f191c99d573a196457f13eaa2eb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 19] cycles deducted time submission xe2 x80 x9cminting queue xe2 x80 x9d time distribution dascoins automatically transferred account blockchain software total dascoins minted capped 2 power 33 parties executives developers able pre mint pre predistribute dascoins cycles received exchange value transferred system cycles submitted system direct distribution dascoins minting process customer mint dascoin need cycles cycles resource defined dascoin blockchain acquired purchase system license netleaders bitcoin euros network services submitted exchange dascoins cycles received exchange value transferred system user submit system order acquire dascoins minting process 9 p age x0cdepending conversion factor frequency customer receive certain dascoins end minting process frequency conversion factor minting process cycles dascoins value cycles blockchain secured distributed ledger precise amounts encoded blockchain state currently fixed way change base cycles license provides vote involving",
    "metadata": {
      "chunk_id": "9e177330183438290ed57d92cdf238f0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 20] minting process cycles dascoins value cycles blockchain secured distributed ledger precise amounts encoded blockchain state currently fixed way change base cycles license provides vote involving committed shareholders dascoin direct vote delegates blockchain called minting queue following elements xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 cycles xe2 x80 x93 number cycles submitted customers queue frequency xe2 x80 x93 value determined license user submits cycles user id xe2 x80 x93 unique account identifier customer submit certain number cycles license minting queue minting mechanism elements determine queue processed moment time queue processed called dascoin reward event dascoin reward event certain dascoins produced distributed xe2 x80 xa2 xe2 x80 xa2 reward interval xe2 x80 x93 time interval dascoin reward event reward xe2 x80 x93 coins produced distributed dascoin reward event example pro license higher number cycles standard license smaller cycles standard license larger pro dascoin",
    "metadata": {
      "chunk_id": "db0a6218693ce210462dacf3e314b4f0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 21] dascoin reward event reward xe2 x80 x93 coins produced distributed dascoin reward event example pro license higher number cycles standard license smaller cycles standard license larger pro dascoin minted redistribute larger portion client owned pro license smaller portion client owned standard cycles begin converted dascoin added wallet license tapped cycles happens chronologically based license purchased e clients purchased licenses cycles submitted cycles eventually reach determined dascoin license supposed receive immediate thing process accumulates time license purchase cycles migrated webwallet vault cycles vault submitted minting queue certain frequency lock 10 p g e x0cto calculate dascoin receive initial submission divide cycles c associated license level frequency lock fl given time license activation upgrade period reached time cycles far submitted dasnet system matched netleaders resulting cycles resubmitted dasnet system minting 3 2 licence levels previously mentioned",
    "metadata": {
      "chunk_id": "f41673e07cf99d2e343700c0a5b46f95",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 22] time license activation upgrade period reached time cycles far submitted dasnet system matched netleaders resulting cycles resubmitted dasnet system minting 3 2 licence levels previously mentioned participate minting dascoin customer needs acquire netleaders license license provides customer things xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 authentication customers identity verified authorization customer receive license certificate able generate keys webwallet provide access dasnet capacity customer receive cycles xe2 x80 x93 units network capacity dasnet depending level license customer receive certain cycles use mint dascoins currently 6 types licenses license number cycles bonus cycles network upgrades price standard 1100 440 1 100 xe2 x82 xac manager 5500 2200 1 500 xe2 x82 xac pro 24000 9600 1 2000 xe2 x82 xac executive 65000 26000 2 5000 xe2 x82 xac vicepresident 225000 90000 2 12500 xe2 x82 xac president 325000 130000 3 25000 xe2 x82 xac frequency visit website current frequency",
    "metadata": {
      "chunk_id": "e11f88814c01fc90d7817e601daa2b2d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 23] 9600 1 2000 xe2 x82 xac executive 65000 26000 2 5000 xe2 x82 xac vicepresident 225000 90000 2 12500 xe2 x82 xac president 325000 130000 3 25000 xe2 x82 xac frequency visit website current frequency subjected change details licenses marketing incentives netleaders platform https netleaders com en products 11 p g e x0c4 governance dascoin governed elected individuals businesses called committee set individuals change blockchain parameters block size block confirmation time importantly deal business plan blockchain tweak costs revenue streams mainly transaction fees fortunately shareholders final approve executive committee businesses competing seats committee define blockchain parameters business ideas requires certain blockchain parameters particular set fees profitable options xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 argue shareholders approve committee members vote favour elected committee member showing business worth available particular chain deploy innovative business shareholders",
    "metadata": {
      "chunk_id": "22048e92db8471550104ef7696c9715d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 24] xa2 xe2 x80 xa2 xe2 x80 xa2 argue shareholders approve committee members vote favour elected committee member showing business worth available particular chain deploy innovative business shareholders approve upgrade 4 1 structure 4 1 1 voting nodes voting nodes non authoritative influencers dascoin blockchain nodes control daily functions dascoin system fully control sits dascoin board proposals passed system voting nodes represent significant stakeholders demonstrated long term view dascoin given privilege influence chain governance qualified voting node initiate proposal dascoin board responsible organizing presenting proposals voting node population mechanism voting system allows voting nodes directly present referendum membership going board review process prevent board withholding certain proposal voting nodes 4 1 2 dascoin board dascoin blockchain enables governing board regulate parameters network dascoin board comprised members elected voting nodes role board 1 propose modify",
    "metadata": {
      "chunk_id": "aae79702631454ed3959a3b584e30706",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 25] proposal voting nodes 4 1 2 dascoin board dascoin blockchain enables governing board regulate parameters network dascoin board comprised members elected voting nodes role board 1 propose modify chain parameters support normal functioning growth network 2 delegate certain executive roles certain chain executives issuing licenses authenticating said licenses 3 act check power said executives having ability terminate access network board control state database construction dascoin blockchain programmatically prevented making changes network manages maintains state transaction ledger way undesired change subvert majority master nodes board designed consist 7 individual 12 p g e x0cdirectors bestowed voting privileges generally director serves 6year term initial directors serving staggered terms 2 6 years ensure continuity experience minimum 3 directors required governance dascoin ecosystem 9 serve board addition ombudsman member board vote hold responsibilities board attends board",
    "metadata": {
      "chunk_id": "e5c97457eb5150111b749deb50c9931a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 26] terms 2 6 years ensure continuity experience minimum 3 directors required governance dascoin ecosystem 9 serve board addition ombudsman member board vote hold responsibilities board attends board meetings provides degree independence transparency board xe2 x80 x99s governance process finally executive director works board responsible ensuring decisions initiatives enacted enforced executive director attends board meetings permitted vote executive director responsible directly overseeing chain authorities 4 1 3 chain authorities chain authority roles exist handle smooth inputs blockchain user data exists outside system problem fully decentralized systems fact reliable inputs example bitcoin created internally bitcoin blockchain merely transferred order proof value work certainty user actually bringing value network value exist independent observer xe2 x80 x93 way verify user submitted value system maintain impartial observer authority role set way 1 way authority meaningful unwanted",
    "metadata": {
      "chunk_id": "03d66097f2287af6da408b11af594ff3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 28] include o overall cycles system o cycles authorized recent 2 week period o velocity cycle growth previous periods projected cycle growth system size minting blocks start upgrade interval size super blocks treasury blocks proposals submitted voting nodes use funds treasury blocks authorization master nodes ledger nodes dasnet infrastructure intervention times crisis elements 13 p g e x0cthe executive director oversees performance chain authorities kyc functions manages flow proposals board consider facilitates referendums proper thresholds surpassed responsible enforcing board initiatives decisions fully accountable board operations system chain authorities oversee issuance authentication licenses webeuros supervision executive director upgrades automatically occur system wide basis specific dates starting 108 days launch dascoin blockchain unlikely interval altered point future remains capability board adjustment feel needed listed set parameters dascoin board propose changes xe2 x80",
    "metadata": {
      "chunk_id": "d265711d477e00552d7a40666e3801a4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 29] dates starting 108 days launch dascoin blockchain unlikely interval altered point future remains capability board adjustment feel needed listed set parameters dascoin board propose changes xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 license issuing authority xe2 x80 x93 privilege assign license vault account determine level license license authenticating authority xe2 x80 x93 ability cancel issuance new license account event error webeuro issuing authority xe2 x80 x93 privilege transfer webeur balance vault account webeuro authenticating authority xe2 x80 x93 ability cancel issuance webeur balance account event error cycle upgrade date interval xe2 x80 x93 exact date upgrade upgrade interval upgrade interval current set 108 days expected changed frequency xe2 x80 x93 conversion factor cycles exchanged dascoins minting process block xe2 x80 x93 measurement",
    "metadata": {
      "chunk_id": "f943dacd9b00c12577e58a3bd2213b01",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 30] date upgrade upgrade interval upgrade interval current set 108 days expected changed frequency xe2 x80 x93 conversion factor cycles exchanged dascoins minting process block xe2 x80 x93 measurement accumulated transactions system currently records block accordance designated period known block interval block interval xe2 x80 x93 time takes create confirmation single block transactions default transactions confirmed 6 seconds future decreased code base optimized minting block xe2 x80 x93 dascoins distributed completion minting interval minting interval xe2 x80 x93 time takes minting block created default minting interval system 10 minutes expected changed maintenance period xe2 x80 x93 number blocks pass maintenance performed blockchain maintenance skip slots xe2 x80 x93 maintenance period blocks skipped parameter sets system skip performing maintenance period super block xe2 x80 x93 dascoins distributed completion type super block interval size super blocks expressed percentage",
    "metadata": {
      "chunk_id": "cdec6e36f6c2beef835bb6454284706e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 31] period blocks skipped parameter sets system skip performing maintenance period super block xe2 x80 x93 dascoins distributed completion type super block interval size super blocks expressed percentage cumulative dascoins distributed minting blocks super block interval super block intervals xe2 x80 x93 time takes super blocks created 3 super block intervals system corresponds type super block voting super block intervals 1 week duration ledger super block intervals 2 weeks duration master super block intervals 3 weeks duration 14 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 treasury block xe2 x80 x93 dascoins distributed completion treasury block interval like super blocks treasury blocks expressed percentage cumulative dascoins distributed minting blocks treasury block interval treasury block interval xe2 x80 x93 time takes treasury block created treasury block intervals 4 weeks duration maximum block size xe2 x80 x93 maximum size bytes block signed blockchain",
    "metadata": {
      "chunk_id": "d545fbe9829a2300a921cbd9f191abc3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 32] interval treasury block interval xe2 x80 x93 time takes treasury block created treasury block intervals 4 weeks duration maximum block size xe2 x80 x93 maximum size bytes block signed blockchain maximum transaction size xe2 x80 x93 maximum allowable size bytes single transaction maximum witness count xe2 x80 x93 maximum number master nodes active network 4 1 3 2 license issuing authority holds privilege assign license vault account determine level license 4 1 3 3 license authenticating authority holds ability cancel issuance new license account event error 4 1 3 4 license administrator authority holds ability manage license limits upgrades etc 4 1 3 5 webeuro issuing authority holds privilege transfer webeuro balance vault account 4 1 3 6 webeuro authenticating authority holds ability cancel issuance webeuro balance account event error 4 1 3 7 cycle issuing authority holds privilege issue cycles vault account 4 1 3 8 cycle authenticating authority holds privilege allow cycle",
    "metadata": {
      "chunk_id": "083f0a43cab2d70251dedddcdf26368b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 33] cancel issuance webeuro balance account event error 4 1 3 7 cycle issuing authority holds privilege issue cycles vault account 4 1 3 8 cycle authenticating authority holds privilege allow cycle operations 4 1 3 9 registrar authority holds privilege register account 4 1 3 10 personal information authority holds privilege validation personal information key roll 4 1 3 11 wire authority holds privilege handling wire payments 15 p g e x0c5 frequency 5 1 description frequency conversion factor minting process cycles dascoins dasnet expands number positive dynamics occur risk reduced circle users widens infrastructure system grows larger consequently value unit stored value dascoin system increases relation unit stored network capacity cycle results cycles needed produce single unit dascoin dynamic reflected increase frequency proportionate incremental growth network creating index based initial network size increasing index direct proportion increase network size allows steady decrease",
    "metadata": {
      "chunk_id": "9b232c95342c3487d702bab2f4b119f1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 34] dynamic reflected increase frequency proportionate incremental growth network creating index based initial network size increasing index direct proportion increase network size allows steady decrease dascoin circulation steadily decreasing level dascoin actually circulation allows certain control potential loss value inflation ensures dascoin xe2 x80 x99s monetary value exchange rate maintained kept steady 5 2 global frequency basically difference global frequency frequency use calculation global frequency current representation frequency website calculation use frequency number global frequency purchase license example global frequency customer bought license xe2 x80 x9c15 xe2 x80 x9d number later customer mints coins disregarding current global frequency xe2 x80 x9cfrequency locking xe2 x80 x9d frequency locked number effect purchased license 5 3 centralize vs calculation algorithm currently manually calculating frequency based network size number coins soon implement calculation",
    "metadata": {
      "chunk_id": "a551906fab5cad8e934b7e7b6bbbf87e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 36] cycles available network number xe2 x80 x9cupgrades xe2 x80 x9d stated software license important xe2 x80 x93 upgrades eligible times cycles opportunity double number 108 days cycles haven xe2 x80 x99t submitted minting queue doubled reflect growing power network powerful reward allowing benefit efficiency dasnet increases 16 p g e x0c5 5 current cycle implementation mentioned cycles implemented cryptographic asset decimals means case cycles lowest value 1 cycle 5 6 bonus cycles purchased license customer rewarded bonus cycles added cycles 40% receive license purchase promotion event way saying xe2 x80 x9cthank xe2 x80 x9d new people helping expand network 5 7 cycles issuance authority description authority responsible issuance cycles called issue cycles license find details operations appendix 17 p g e x0c6 nodes 6 1 master nodes master nodes exclusively hosted data centers based requirement access server rack physically secured compatible connected data centers world leased direct",
    "metadata": {
      "chunk_id": "172be513c465871caa5573c1c0c77d28",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 37] 17 p g e x0c6 nodes 6 1 master nodes master nodes exclusively hosted data centers based requirement access server rack physically secured compatible connected data centers world leased direct lines affording reliable highly connected bandwidth approach gives dasnet control entire path data centers permits prevention man middle attacks denial service distributed denial service attacks nodes maintain blockchain connectivity service dasnet 2 additional layers handling transaction capture network connectivity addition core infrastructure features mentioned previously server configuration involves state art quality components protection high end threat prevention hardware based firewall solutions commonly utilized banks highly secure environments addition dasnet hosted powerful servers operate 44 cores server provides efficient space power consumption scale high traffic global utilization dasnet total 33 core master nodes operating data centers 33 different jurisdictions world core master",
    "metadata": {
      "chunk_id": "abcd3075cbac2cd5b686453a3e75d7cb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 38] 44 cores server provides efficient space power consumption scale high traffic global utilization dasnet total 33 core master nodes operating data centers 33 different jurisdictions world core master node installations occur pace approximately 2 month approximately 3 000 core ledger nodes running dasnet note moment connect nodes peer peer network permission based network role master node aggregate transactions intention produce blocks master nodes authority write transactions blockchain ledger history master node aware voted governing system master nodes novel authority represented cryptographic keys means master node registered public key sign private key time block production possible hold particular master node accountable actions moment 5 master nodes end 2018 plan 6 2 ledger nodes ledger nodes non authoritative maintainers dascoin blockchain words ledger nodes produce blocks aggregate transactions pass master nodes block inclusion ledger nodes verify transactions useful increasing",
    "metadata": {
      "chunk_id": "836aa3757f8950c33491f8f3afd38b93",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 39] nodes non authoritative maintainers dascoin blockchain words ledger nodes produce blocks aggregate transactions pass master nodes block inclusion ledger nodes verify transactions useful increasing footprint dascoin consensus network permitting connectivity reach farther requiring need assign authority nodes transaction propagation accelerated ledger nodes currently 16 ledger nodes located following locations xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 belgrade london oregon taiwan amsterdam 18 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 frankfurt bangalore sydney brazil ledger nodes deployed belgrade datacenter london oregon taiwan ledger nodes located google cloud datacenters rest digitalocean amazon datacenters ledger node node structure master node permitted sign blocks way master node block production graphene master node picking different voting master nodes permissioned blockchain system master nodes chosen xe2 x80 x98root authority xe2 x80 x99 able",
    "metadata": {
      "chunk_id": "a06e2ad017bb2d10a7d7852d96705ec0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 40] sign blocks way master node block production graphene master node picking different voting master nodes permissioned blockchain system master nodes chosen xe2 x80 x98root authority xe2 x80 x99 able promote ledger node master node run node ledger starting ledger need provide additional parameters xe2 x80 x98witness id xe2 x80 x98 xe2 x80 x98private key xe2 x80 x99 xe2 x80 x98root authority xe2 x80 x99 issue operations node behave master node operations related functionality xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 create witness operation update witness operation remove witness operation activate witness operation deactivate witness operation 6 3 node operations 6 3 1 create witness operation operation xe2 x80 x98create witness operation xe2 x80 x99 witness object object database objects marked id xe2 x80 x981 6 x xe2 x80 x99 id needs provided running master node argument xe2 x80 x98witness id xe2 x80 x98 operation properties xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2",
    "metadata": {
      "chunk_id": "9df5dd218bac6d22226d563fc0536062",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 41] database objects marked id xe2 x80 x981 6 x xe2 x80 x99 id needs provided running master node argument xe2 x80 x98witness id xe2 x80 x98 operation properties xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 x98fee xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98authority xe2 x80 x99 root account authority xe2 x80 x98witness account xe2 x80 x99 existing account want promote master node candidate xe2 x80 x98block signing key xe2 x80 x99 public key signing blocks xe2 x80 x98url xe2 x80 x99 optional field specify url address witness node xe2 x80 x98comment xe2 x80 x99 optional field 6 3 2 update witness operation operation xe2 x80 x98update witness operation xe2 x80 x99 change properties existent witness object 19 p g e x0coperation properties xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 x98fee xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98witness xe2 x80 x99 id witness object",
    "metadata": {
      "chunk_id": "591300708e6d2c62ba7cd9cbba231599",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 42] x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 x98fee xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98witness xe2 x80 x99 id witness object database xe2 x80 x98authority xe2 x80 x99 root account authority xe2 x80 x98witness account xe2 x80 x99 optional field specify existing account want promote master node candidate xe2 x80 x98block signing key xe2 x80 x99 optional field specify public key signing blocks xe2 x80 x98url xe2 x80 x99 optional field specify url address witness node xe2 x80 x98comment xe2 x80 x99 optional field 6 3 3 remove witness operation operation xe2 x80 x98remove witness operation xe2 x80 x99 remove existent witness object database operation properties xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 x98fee xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98witness xe2 x80 x99 id witness object database deleted xe2 x80 x98authority xe2 x80 x99 root account authority xe2 x80 x98comment xe2",
    "metadata": {
      "chunk_id": "5278edb916fc781ce878238cd2169090",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 43] xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98witness xe2 x80 x99 id witness object database deleted xe2 x80 x98authority xe2 x80 x99 root account authority xe2 x80 x98comment xe2 x80 x99 optional field 6 3 4 activate witness operation operation xe2 x80 x98activate witness operation xe2 x80 x99 add existent witness object active witness objects witness scheduler reserve slot witness signing round witness node instance able sign blocks slot time node instance running slot missing blocks example 3 witness nodes active running slot time missing block operation properties xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 x98fee xe2 x80 x99 fee payed currently free charge operation xe2 x80 x98witness xe2 x80 x99 id witness object database activated xe2 x80 x98authority xe2 x80 x99 root account authority xe2 x80 x98comment xe2 x80 x99 optional field 20 p g e x0c7 webwallet webwallet secure access point users access relevant data dascoin blockchain interact global",
    "metadata": {
      "chunk_id": "8270c15eda22cefe4bb52d06980233c8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 44] xe2 x80 x99 root account authority xe2 x80 x98comment xe2 x80 x99 optional field 20 p g e x0c7 webwallet webwallet secure access point users access relevant data dascoin blockchain interact global state way signing transactions cryptographic web based wallet client end running user xe2 x80 x99s browser application server backend hosted internet web server webwallet serves user xe2 x80 x99s point entry secure dascoin network webwallet account links users vaults wallets store validate personal kyc aml information users authenticated webwallet access relevant data global blockchain state xe2 x80 x93 balances vaults license purchases transaction history etc webwallet consists vault hotwallet vault storing assets come netleaders site netleaders account corresponding vault webwallet contain single multiple vaults depending user registers account received webwallet invitation email assets stored vault xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 dascoin xe2 x80 x93 received vault minting",
    "metadata": {
      "chunk_id": "533e95498d25865362acee0ff4c5a9b9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 45] multiple vaults depending user registers account received webwallet invitation email assets stored vault xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 dascoin xe2 x80 x93 received vault minting process purchased exchange reserved webeuros xe2 x80 x93 reserve euro commission earnings netleaders automatically transferred vault converted dasexchange currency webeuros cash webeuros xe2 x80 x93 transfer euros netleaders balance vault converted dasexchange currency webeuros accumulate cash webeuros selling dascoins internal exchange cycles xe2 x80 x93 cycles acquired licenses manually submitted minting queue vault 21 p g e x0c7 1 security vault account licensed person entity access dasnet license level corresponding kyc levels determine daily amounts vault account eligible transfer wallet account higher license level enables person entity increase level authentication increases access capacity system higher withdrawal privileges way dascoin blockchain dasnet fully compliant global",
    "metadata": {
      "chunk_id": "48d52808217eff883c31735e9e3aa3c4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 46] account higher license level enables person entity increase level authentication increases access capacity system higher withdrawal privileges way dascoin blockchain dasnet fully compliant global regulations require account holders identified good standing engaging commerce participants dasnet type authentication protocol results higher level integrity participants likely lead acceptance regulated jurisdictions world 7 2 validator webwallet relies cryptographic hardware store managing keys securely signing blockchain transactions proprietary hardware device known validator ability generate store ecdsa private keys corresponding users xe2 x80 x99 blockchain vaults validator secured pin passphrase prevents misuse theft keys signing blockchain transactions webwallet interfaces validator hardware device user unlock validator required private ecdsa key transferred browser memory javascript client application confirmation transaction dascoin transaction validation cryptographic hardware",
    "metadata": {
      "chunk_id": "d31fa688222bc898e3c9089432366469",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 47] device user unlock validator required private ecdsa key transferred browser memory javascript client application confirmation transaction dascoin transaction validation cryptographic hardware device system provides highest level safety security authentication transactions key stored memory shortest possible time required sign transaction purged client memory private key xe2 x80 x98hot xe2 x80 x99 xe2 x80 x93 crosses wire encrypted form need validator xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 withdraw euros webwallet account send dascoin webwallet account trade dascoin dasexchange access reserve funds set hotwallet transfer funds 22 p g e x0c7 2 1 account recovery user mnemonic consisting 24 words entropy generating private key case theft loss hardware device user use mnemonic reconstruct original private key restoring access account 7 3 identity management 7 3 1 kyc aml stands anti money laundering phrase applies procedures laws regulations designed stop practice",
    "metadata": {
      "chunk_id": "2aa5473581844bd87837ec68163d4a92",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 48] mnemonic reconstruct original private key restoring access account 7 3 identity management 7 3 1 kyc aml stands anti money laundering phrase applies procedures laws regulations designed stop practice generating income illegal actions dasnet verify identity bank standard know customer protocols help safeguard dascoin s position currency trust depending country residence kyc verification process typically takes 10 minutes certain cases 48h process required upload additional documents verify identity additional documents required contact email instructions provide status updates process needed upload government issued documents personal id cards driver xe2 x80 x99s licenses passports proof address upload government issued documents residential address visible credit card bank statement month old enjoy benefits platform provides kyc verification mandatory step kyc customer receive access webwallet successful kyc verification need upload 3 document types xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2",
    "metadata": {
      "chunk_id": "346eb434ae86e41ad5c86b0f4f7813a0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "illegal"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 49] old enjoy benefits platform provides kyc verification mandatory step kyc customer receive access webwallet successful kyc verification need upload 3 document types xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 proof address id proof xe2 x80 x93 id proof xe2 x80 x93 23 p g e x0c7 4 sample ui quick preview webwallet interface structure webwallet consist xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 webwallet website xe2 x80 x93 gui representation customers xe2 x80 x99 wallets easy access dasexchange vault xe2 x80 x93 storing assets coming netleaders website hotwallet xe2 x80 x93 hold funds trade withdraw minting queue xe2 x80 x93 mint dascoins cycles internal exchange dasexchange main parts webwallet platform internal exchange customers sell buy dascoins dasexchange extremely easy use contains information customer need overview value fluctuation set daily weekly monthly periods period extending moment platform went live present day information like trade history buy orders sell",
    "metadata": {
      "chunk_id": "1cb0211a7f31f9df353b63fbc494c22a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 50] contains information customer need overview value fluctuation set daily weekly monthly periods period extending moment platform went live present day information like trade history buy orders sell orders 24 p g e x0c8 api list api calls details appendix visit regularly updated api website https docs dascoin com 8 1 websocket calls notifications format dascoin websocket calls stateful accessible regular websocket connection json following structure id 1 method params 0 accounts 1 2 0 parameters params following structure api identifier method parameters example query database api carries identifier 0 example example wscat note examples section assume node running listening port 9880 locally following usage websocket connections use wscat application available npm npm install g wscat non restricted node form wscat c ws 127 0 0 1 9880 id 1 method params 0 accounts 1 2 0 successful calls api return json formatted response carrying id request distinguish subsequent calls id 1 result 25 p g",
    "metadata": {
      "chunk_id": "e2c03074af1a7f013d3abf702e069cee",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 51] node form wscat c ws 127 0 0 1 9880 id 1 method params 0 accounts 1 2 0 successful calls api return json formatted response carrying id request distinguish subsequent calls id 1 result 25 p g e data x0cerrors case error resulting answer carry error attribute detailed description id 0 ssid error data code error code exception message message exception stack stack trace code 1 8 1 1 requesting api access dascoin node offers wide range apis accessed websockets procedure works follows 1 2 3 4 login node request access api obtain api identifier methods specific api providing identifier find list available apis xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 database api account history api network broadcast api network nodes api login thing need log id 2 method params 1 login id 2 result true restricted access required username password quotes accordingly furthermore verify result gives positive confirmation login requesting access api data queried database api register following id 2",
    "metadata": {
      "chunk_id": "1a0bbed2df123d59cf8e59458fa99cab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 52] restricted access required username password quotes accordingly furthermore verify result gives positive confirmation login requesting access api data queried database api register following id 2 method params 1 database 26 p g e x0cobtain api identifier requesting access node deny access return identifier future calls id 2 result 2 result identifier database api following called database api id methods specific api providing identifier methods available database api id 1 method params database api id accounts 1 2 0 8 1 2 database notifications dascoin websocket connection notifications objects database change particular event filled orders occurs available subscriptions set subscribe callback set subscribe callback int identifier bool clear filter simplify development global subscription callback registered notification initiated node carry particular id defined user identifier parameter set pending transaction callback set pending transaction callback int identifier notifications",
    "metadata": {
      "chunk_id": "7c30ec6292527651e1c278214204881a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 53] callback registered notification initiated node carry particular id defined user identifier parameter set pending transaction callback set pending transaction callback int identifier notifications incoming unconfirmed transactions set block applied callback set block applied callback block id gives notification block block id applied blockchain subscribe market subscribe market int identifier asset id asset id b subscribes market changes market b sends notifications id identifier accounts accounts array account ids bool subscribe returns account object accounts array account ids subscribes changed account subscribe set true subscription format 27 p g e x0clet xe2 x80 x99s global subscription callback distinguish notifications regular rpc calls id 4 method params database api id set subscribe callback subscription id true register subscription id id notifications object witness e g objects automatically subscribe future changes object calling set subscribe callback witness start send",
    "metadata": {
      "chunk_id": "03055e5ed541c03fc995855e10d6746b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 54] callback subscription id true register subscription id id notifications object witness e g objects automatically subscribe future changes object calling set subscribe callback witness start send notices time object changes method notice params subscription id id 2 1 0 id id id 8 1 3 example session example session id 2 method params 1 login id 2 result true id 3 method params 1 database id 3 result 2 id 4 method params 1 history id 4 result 3 id 5 method params 2 set subscribe callback 5 false id 5 result null id 6 method params 2 objects 2 1 0 plenty data coming point complete list dascoin api calls appendix 8 2 operations list operations details appendix b 28 p g e x0c9 appendix blockchain api 9 1 database api database api available node websockets set websockets connection read article 9 1 1 1 objects fc variants graphene app database api objects const vector object id type ids const objects corresponding provided ids provided ids map object null variant returned position return",
    "metadata": {
      "chunk_id": "2755d73e989fccd872ca2fa5caa21717",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 57] count std vector uint16 t virtual operation ids const return array signed blocks contains virtual operations starting specified height return array enumerated blocks parameters start block num height starting block count number blocks return virtual operation ids array virtual operation ids included result returned processed transaction graphene app database api transaction uint32 t block num uint32 t trx block const fetch individual transaction optional signed transaction graphene app database api recent transaction id const transaction id type id const transaction expired method return transaction given id return null known known mean wasn t included blockchain 9 1 1 4 globals chain property object graphene app database api chain properties const retrieve chain property object associated chain 30 p g e x0cglobal property object graphene app database api global properties const retrieve current global property object fc variant object graphene app database api config const retrieve",
    "metadata": {
      "chunk_id": "2e21aa28de64f18f1bdf65ea638cdbc7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 63] amounts frequency locks account parameters account id id account retrieve vector acc id vec cycle agreement res graphene app database api cycle balances accounts vector account id type ids const deprecated cycle balances list accounts return vector objects containing account id cycle frequency lock parameters ids vector account ids signed transaction graphene app database api purchase cycle asset string account string sell string symbol sell double frequency double cycles receive bool broadcast false purchase cycles parameters account account id sell asset sell symbol sell symbol asset sell frequency frequency buy 34 p g e x0camount cycles receive cycles receive buy optional cycle price graphene wallet wallet api calculate cycle price share type cycle asset id type asset id const calculates returns asset needs pay given cycles return cycle price structure optional parameters cycle desired cycles asset id type asset pay acc id share t res graphene app database api dascoin balance",
    "metadata": {
      "chunk_id": "cceda3891705893651a3a5875a779e70",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 65] p g e x0cacc id queue subs w pos res graphene app database api queue submissions pos account id type account id const current submissions reward queue single account parameters account id id account submissions returned return elements dascoin reward queue submitted given account vector acc id queue subs w pos res graphene app database api queue submissions pos accounts vector account id type ids const current submissions reward queue multiple account parameters ids vector account ids return elements dascoin reward queue submitted given accounts 9 1 1 9 requests vector issue asset request object graphene app database api webasset issue requests const webasset issue request objects sorted expiration return vector webasset issue request objects vector wire holder object graphene app database api wire holders const wire holder objects return vector wire holder objects vector wire fee holder object graphene app database api wire fee holders const wire fee holder objects return vector wire",
    "metadata": {
      "chunk_id": "f790492a13857f61844091a2c674b7eb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 76] vector variant graphene app database api lookup vote ids const vector vote id type votes const given set votes return objects voting mixture committee member object witness objects worker objects results order votes null returned vote ids found 9 1 1 16 authority validation std string graphene app database api transaction hex const signed transaction trx const hexdump serialized binary form transaction set public key type graphene app database api required signatures const signed transaction trx constflat set public key type available keys const api partially signed transaction set public keys owner ability sign return minimal subset public keys add signatures transaction set public key type graphene app database api potential signatures const signed transaction trx const 42 p g e x0cthis method return set public keys possibly sign given transaction wallets filter set public keys relevant subset prior calling required signatures minimum subset set address graphene app database api",
    "metadata": {
      "chunk_id": "b74bf5fd877e49e84dc185df9dfdc373",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 77] method return set public keys possibly sign given transaction wallets filter set public keys relevant subset prior calling required signatures minimum subset set address graphene app database api potential address signatures const signed transaction trx const bool graphene app database api verify authority const signed transaction trx const return true trx required signatures throws exception bool graphene app database api verify account authority const string id const flat set public key type signers const return true signers authority authorize account processed transaction graphene app database api validate transaction const signed transaction trx const validates transaction current state broadcasting network vector fc variant graphene app database api required fees const vector operation ops asset id type id const operation calculate required fee specified asset type asset type valid core exchange rate 9 1 1 17 proposed transactions vector proposal object graphene app database api",
    "metadata": {
      "chunk_id": "b8e16c12c2f5f8ce400f6fa90d1fab72",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 78] ops asset id type id const operation calculate required fee specified asset type asset type valid core exchange rate 9 1 1 17 proposed transactions vector proposal object graphene app database api proposed transactions account id type id return set proposed transactions relevant specified account id 9 1 1 18 blinded balances vector blinded balance object graphene app database api blinded balances const flat set commitment type commitments const return set blinded balance objects commitment id 9 1 1 19 licenses optional license type object graphene app database api license type 43 p g e const x0clicense type id type const license type ids found blockchain returns license type id found parameters license type id type id block vector license type object graphene app database api license types const license type ids found blockchain returns vector license type ids found vector pair string license type id type graphene app database api license type names ids const license type ids found",
    "metadata": {
      "chunk_id": "05637e52b2f6041ef4d7eb61c1eec025",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 84] sequence number recent operation retrieve 0 default start querying recent operation 46 p g e x0c9 2 1 2 market history vector order history object graphene app history api fill order history asset id type asset id type b uint32 t limit const vector bucket object graphene app history api market history asset id type asset id type b uint32 t bucket seconds fc time point sec start fc time point sec end const flat set uint32 t graphene app history api market history buckets const 9 3 crypto api 9 3 1 1 blinding un blinding blind signature graphene app crypto api blind sign const extended private key type key const fc ecc blinded hash hash int signature type graphene app crypto api unblind signature const extended private key type key const extended public key type bob const fc ecc blind signature sig const fc sha256 hash int commitment type graphene app crypto api blind const fc ecc blind factor type blind uint64 t value blind factor type graphene app crypto api blind sum const std vector",
    "metadata": {
      "chunk_id": "0dbfa855dc6724cf695d35106622a74e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 85] sig const fc sha256 hash int commitment type graphene app crypto api blind const fc ecc blind factor type blind uint64 t value blind factor type graphene app crypto api blind sum const std vector blind factor type blinds uint32 t non neg 9 3 1 2 rage proofs range proof info graphene app crypto api range info const std vector char proof std vector char graphene app crypto api range proof sign uint64 t min value const commitment type commit const blind factor type commit blind const blind factor type nonce int8 t base10 exp uint8 t min bits uint64 t actual value 9 3 1 3 verification bool graphene app crypto api verify sum const std vector commitment type commits const std vector commitment type neg commits int64 t excess verify range result graphene app crypto api verify range const fc ecc commitment type commit const std vector char proof verify range proof rewind result graphene app crypto api verify range proof rewind const blind factor type nonce const fc ecc commitment type commit",
    "metadata": {
      "chunk_id": "06e71a54a358cfb355062377624d12dc",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 86] commitment type commit const std vector char proof verify range proof rewind result graphene app crypto api verify range proof rewind const blind factor type nonce const fc ecc commitment type commit const std vector char proof 47 p g e x0c9 4 network broadcast api network broadcast api class allows broadcasting transactions 9 4 1 1 transactions void graphene app network broadcast api broadcast transaction const signed transaction trx broadcast transaction network transaction checked validity local database prior broadcasting fails apply locally error thrown transaction broadcast parameters xe2 x80 xa2 trx transaction broadcast void graphene app network broadcast api broadcast transaction callback confirmation callback cb const signed transaction trx version broadcast transaction registers callback method called transaction included block callback method includes transaction id block number transaction number block 9 4 1 2 block void graphene app network broadcast api broadcast block",
    "metadata": {
      "chunk_id": "4aee4492e788f832a7815777eb84dff2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 87] callback method called transaction included block callback method includes transaction id block number transaction number block 9 4 1 2 block void graphene app network broadcast api broadcast block const signed block block 9 5 network nodes api network node api class allows maintenance p2p connections 9 5 1 1 obtain network information fc variant object graphene app network node api info const return general network information p2p port std vector net peer status graphene app network node api connected peers const status current connections peers std vector net potential peer record graphene app network node api potential peers const return list potential peers fc variant object graphene app network node api advanced node parameters const advanced node parameters desired max number connections 9 5 1 2 change network settings void graphene app network node api add node const fc ip endpoint ep add node connect new peer parameters xe2 x80 xa2 ep ip port peer connect 48 p g e x0cvoid",
    "metadata": {
      "chunk_id": "0d0693f862ab611f60df4e9e69c4079e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 88] 9 5 1 2 change network settings void graphene app network node api add node const fc ip endpoint ep add node connect new peer parameters xe2 x80 xa2 ep ip port peer connect 48 p g e x0cvoid graphene app network node api set advanced node parameters const fc variant object params set advanced node parameters desired max number connections parameters xe2 x80 xa2 params json object containing value pairs parameters set 9 6 wallet api 9 6 1 1 general calls help string graphene wallet wallet api help const returns list commands supported wallet api lists command arguments return types detailed help single command use help return multiline string suitable displaying terminal gethelp string graphene wallet wallet api gethelp const string method const returns detailed help single api command return multi line string suitable displaying terminal parameters xe2 x80 xa2 method api command want help variant info graphene wallet wallet api info returns json string informations current blockchain",
    "metadata": {
      "chunk_id": "a37cb7cbf76c2717ab13a925e4dfad8f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 89] multi line string suitable displaying terminal parameters xe2 x80 xa2 method api command want help variant info graphene wallet wallet api info returns json string informations current blockchain state return json string variant object graphene wallet wallet api const returns info client version git version graphene fc version boost openssl return compile time info client dependencies versions network add nodes void graphene wallet wallet api network add nodes const vector string nodes connect new peer parameters 49 p g e x0c xe2 x80 xa2 nodes list ip addresses ports new nodes network connected peers vector variant graphene wallet wallet api network connected peers status current connections peers 9 6 1 2 wallet calls new bool graphene wallet wallet api new const checks wallet created password set calling set password transition wallet locked state return true wallet new locked bool graphene wallet wallet api locked const checks wallet locked unable use private keys state changed",
    "metadata": {
      "chunk_id": "ddf8d091e8dd1fa8585d3c403f9b6dbe",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 91] wallet api dump private keys dumps private keys owned wallet keys printed wif format import keys wallet import key return map containing private keys indexed public key import key bool graphene wallet wallet api import key string account id string wif key imports private key existing account private key match owner key active key named account dump private keys return true key imported parameters xe2 x80 xa2 account id account owning key xe2 x80 xa2 wif key private key wif format import accounts map string bool graphene wallet wallet api import accounts string filename string password import account keys bool graphene wallet wallet api import account keys string filename string password string src account string dest account import balance vector signed transaction graphene wallet wallet api import balance string account id const vector string wif keys bool broadcast construct transaction s claim balances controlled wif keys deposit given account suggest brain key brain key info",
    "metadata": {
      "chunk_id": "0890958c6f178050717be78d43f77c80",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 92] api import balance string account id const vector string wif keys bool broadcast construct transaction s claim balances controlled wif keys deposit given account suggest brain key brain key info graphene wallet wallet api suggest brain key const suggests safe brain key use creating account create account brain key requires specify xe2 x80 x98brain key xe2 x80 x99 long passphrase provides entropy generate cryptographic keys function suggest suitably random string easy write effort memorize 51 p g e x0ccreate account brain key return suggested brain key transaction id transaction id type graphene wallet wallet api transaction id const signed transaction trx const method convert json transaction transaction id private key string graphene wallet wallet api private key public key type pubkey const wif private key corresponding public key private key wallet load wallet file bool graphene wallet wallet api load wallet file string wallet filename loads specified graphene wallet current wallet",
    "metadata": {
      "chunk_id": "2e09c04d243a7c3575f095924bf2ead1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 95] parameters xe2 x80 xa2 wallet filename filename new wallet json file create overwrite wallet filename save current filename 9 6 1 3 account calls list accounts vector account object graphene wallet wallet api list accounts lists accounts controlled wallet returns list account objects accounts private keys possess return list account objects list accounts map string account id type graphene wallet wallet api list accounts const string lowerbound uint32 t limit lists accounts registered blockchain returns list account names account ids sorted account use lowerbound limit parameters page list retrieve accounts start setting lowerbound string iteration pass account returned lowerbound list accounts return list accounts mapping account names account ids parameters 53 p g e x0c xe2 x80 xa2 xe2 x80 xa2 lowerbound account return named account exist list start account comes lowerbound limit maximum number accounts return max 1000 list account balances vector asset graphene wallet wallet api",
    "metadata": {
      "chunk_id": "0fa586656a1e5e2f4ea0e954c698ed6d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 96] x80 xa2 lowerbound account return named account exist list start account comes lowerbound limit maximum number accounts return max 1000 list account balances vector asset graphene wallet wallet api list account balances const string id list balances account account multiple balances type asset owned account returned list contain assets account nonzero balance return list given account balances parameters xe2 x80 xa2 id id account balances want register account signed transaction graphene wallet wallet api register account string public key type owner public key type active string registrar account string referrer account uint32 t referrer percent bool broadcast false registers party xe2 x80 x99s account blockchain function register account private keys acting registrar end user generate private keys send public keys registrar use function register account behalf end user create account brain key return signed transaction registering account parameters xe2 x80 xa2 account unique",
    "metadata": {
      "chunk_id": "fd9775ef1c6514830405f9180a3baab3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 97] private keys send public keys registrar use function register account behalf end user create account brain key return signed transaction registering account parameters xe2 x80 xa2 account unique blockchain shorter names expensive register rules flux general names 8 characters digit cheap xe2 x80 xa2 owner owner key new account xe2 x80 xa2 active active key new account xe2 x80 xa2 registrar account account pay fee register user xe2 x80 xa2 referrer account account acting referrer receive portion user xe2 x80 x99s transaction fees registrar account referrer xe2 x80 xa2 referrer percent percentage 0 100 new user xe2 x80 x99s transaction fees claimed blockchain distributed referrer rest sent registrar multiplied graphene 1 percent constructing transaction xe2 x80 xa2 broadcast true broadcast transaction network register vault account 54 p g e x0csigned transaction graphene wallet wallet api register vault account string public key type owner public key type active bool broadcast false",
    "metadata": {
      "chunk_id": "018a78eceb26729506630335a59f977f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 98] transaction network register vault account 54 p g e x0csigned transaction graphene wallet wallet api register vault account string public key type owner public key type active bool broadcast false registers party s vault account blockchain function register vault account private keys acting registrar end user generate private keys send public keys registrar use function register account behalf end user register account return signed transaction registering vault account parameters xe2 x80 xa2 account unique blockchain shorter names expensive register rules flux general names 8 characters digit cheap xe2 x80 xa2 owner owner key new account xe2 x80 xa2 active active key new account xe2 x80 xa2 broadcast true broadcast transaction network tether accounts signed transaction graphene wallet wallet api tether accounts string wallet string vault bool broadcast false tethers wallet account vault account blockchain function tether accounts wallet vault return signed transaction tethering",
    "metadata": {
      "chunk_id": "502da688a9c34cef85de8a1c129ec55a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 99] wallet api tether accounts string wallet string vault bool broadcast false tethers wallet account vault account blockchain function tether accounts wallet vault return signed transaction tethering accounts parameters xe2 x80 xa2 wallet id wallet account tether xe2 x80 xa2 vault id vault account tether xe2 x80 xa2 broadcast true broadcast transaction network upgrade account signed transaction graphene wallet wallet api upgrade account string bool broadcast upgrades account prime status makes account holder xe2 x80 x98lifetime member xe2 x80 x99 return signed transaction upgrading account parameters xe2 x80 xa2 id account upgrade xe2 x80 xa2 broadcast true broadcast transaction network create account brain key signed transaction graphene wallet wallet api create account brain key string brain key 55 p g e x0cstring account string registrar account string referrer account bool broadcast false creates new account registers blockchain suggest brain key register account return signed",
    "metadata": {
      "chunk_id": "a3657b5ca2d260de4df5ced9406ee2cc",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 100] brain key 55 p g e x0cstring account string registrar account string referrer account bool broadcast false creates new account registers blockchain suggest brain key register account return signed transaction registering account parameters xe2 x80 xa2 brain key brain key generating account xe2 x80 x99s private keys xe2 x80 xa2 account account unique blockchain shorter names expensive register rules flux general names 8 characters digit cheap xe2 x80 xa2 registrar account account pay fee register user xe2 x80 xa2 referrer account account acting referrer receive portion user xe2 x80 x99s transaction fees registrar account referrer xe2 x80 xa2 broadcast true broadcast transaction network create account signed transaction graphene wallet wallet api create account account kind kind string public key type owner public key type active bool broadcast false registers party s account blockchain function register account private keys acting registrar end user generate private keys send public",
    "metadata": {
      "chunk_id": "6edd1c1ea43a293f931c0a8adda7c16b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 101] key type owner public key type active bool broadcast false registers party s account blockchain function register account private keys acting registrar end user generate private keys send public keys registrar use function register account behalf end user create account brain key return signed transaction registering account parameters xe2 x80 xa2 kind kind account e vault xe2 x80 xa2 account unique blockchain shorter names expensive register rules flux general names 8 characters digit cheap xe2 x80 xa2 owner owner key new account xe2 x80 xa2 active active key new account xe2 x80 xa2 broadcast true broadcast transaction network transfer signed transaction graphene wallet wallet api transfer string string string string asset symbol string memo bool broadcast false transfer account return signed transaction transferring funds parameters 56 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 id account sending funds id account receiving funds send nominal",
    "metadata": {
      "chunk_id": "b18cc92a361eca532e7ab21d90f5bc2c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 102] signed transaction transferring funds parameters 56 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 id account sending funds id account receiving funds send nominal units send half bts specify 0 5 asset symbol symbol id asset send memo memo attach transaction memo encrypted transaction readable receiver length limit limit imposed maximum transaction size transaction increase transaction size broadcast true broadcast transaction network transfer2 pair transaction id type signed transaction graphene wallet wallet api transfer2 string string string string asset symbol string memo method works like transfer broadcasts returns transaction id signed transaction whitelist account signed transaction graphene wallet wallet api whitelist account string authorizing account string account list account whitelist operation account listing new listing status bool broadcast false whitelist blacklist accounts primarily transacting whitelisted assets accounts freely",
    "metadata": {
      "chunk_id": "8c29d3b816a886b209d65f16960b342b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 103] account string account list account whitelist operation account listing new listing status bool broadcast false whitelist blacklist accounts primarily transacting whitelisted assets accounts freely specify opinions accounts form whitelisting blacklisting information chain validation determine account authorized transact asset type enforces whitelist parties use information uses long conflict use whitelisted assets asset enforces whitelist specifies list accounts maintain whitelist list accounts maintain blacklist order given account hold transact whitelisted asset s whitelisted s xe2 x80 x99s whitelist authorities blacklisted s xe2 x80 x99s blacklist authorities receives balance s later removed whitelist s allowed hold s added blacklist s specifies authoritative xe2 x80 x99s balance s frozen xe2 x80 x99s authorization reinstated return signed transaction changing whitelisting status parameters xe2 x80 xa2 authorizing account account whitelisting xe2 x80 xa2 account list account",
    "metadata": {
      "chunk_id": "416ac89a3ce7a640548e13065ddd354d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 104] s frozen xe2 x80 x99s authorization reinstated return signed transaction changing whitelisting status parameters xe2 x80 xa2 authorizing account account whitelisting xe2 x80 xa2 account list account whitelisted xe2 x80 xa2 new listing status new whitelisting status xe2 x80 xa2 broadcast true broadcast transaction network vesting balances vector vesting balance object info graphene wallet wallet api vesting balances string account information vesting balance object parameters 57 p g e x0c xe2 x80 xa2 account account account id vesting balance object id withdraw vesting signed transaction graphene wallet wallet api withdraw vesting string witness string string asset symbol bool broadcast false withdraw vesting balance parameters xe2 x80 xa2 witness account witness accepts account id vesting balance id type xe2 x80 xa2 withdraw xe2 x80 xa2 asset symbol symbol asset withdraw xe2 x80 xa2 broadcast true wish broadcast transaction account account object graphene wallet wallet api account",
    "metadata": {
      "chunk_id": "5f1cb38bdf958edd984075e52ab2282b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 105] balance id type xe2 x80 xa2 withdraw xe2 x80 xa2 asset symbol symbol asset withdraw xe2 x80 xa2 broadcast true wish broadcast transaction account account object graphene wallet wallet api account string account id const returns information given account return public account data stored blockchain parameters xe2 x80 xa2 account id id account provide information account id account id type graphene wallet wallet api account id string account id const lookup id named account return id named account parameters xe2 x80 xa2 account id account look account history vector operation detail graphene wallet wallet api account history string int limit const returns recent operations named account returns list operation history objects describe activity account return list operation history objects parameters xe2 x80 xa2 id account xe2 x80 xa2 limit number entries return starting recent 58 p g e x0capprove proposal signed transaction graphene wallet wallet api approve proposal const string fee",
    "metadata": {
      "chunk_id": "f8548f59c81b0ea51b1424f8c9fee4bd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 106] parameters xe2 x80 xa2 id account xe2 x80 xa2 limit number entries return starting recent 58 p g e x0capprove proposal signed transaction graphene wallet wallet api approve proposal const string fee paying account const string proposal id const approval delta delta bool broadcast approve disapprove proposal return signed version transaction parameters xe2 x80 xa2 fee paying account account paying fee op xe2 x80 xa2 proposal id proposal modify xe2 x80 xa2 delta members contain approvals create remove json leave members undefined xe2 x80 xa2 broadcast true wish broadcast transaction account cycle balance acc id share t res graphene wallet wallet api account cycle balance const string account const cycles account return cycle balance account parameters xe2 x80 xa2 account account stringified id cycle balances acc id vec cycle agreement res graphene wallet wallet api cycle balances const string account const deprecated purchase cycle asset signed transaction graphene wallet wallet api",
    "metadata": {
      "chunk_id": "53a18fb588af4fca33a309c0bb9880b3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 107] id cycle balances acc id vec cycle agreement res graphene wallet wallet api cycle balances const string account const deprecated purchase cycle asset signed transaction graphene wallet wallet api purchase cycle asset string account string sell string symbol sell double frequency double cycles receive bool broadcast false purchase cycles parameters xe2 x80 xa2 account account id xe2 x80 xa2 sell asset sell xe2 x80 xa2 symbol sell symbol asset sell xe2 x80 xa2 frequency frequency buy xe2 x80 xa2 cycles receive cycles receive buy calculate cycle price 59 p g e x0coptional cycle price graphene wallet wallet api calculate cycle price share type cycle asset id type asset id const calculates returns asset needs pay given cycles return cycle price structure optional parameters xe2 x80 xa2 cycle desired cycles xe2 x80 xa2 asset id type asset pay dascoin balance acc id share t res graphene wallet wallet api dascoin balance const string account const dascoin account return object containing",
    "metadata": {
      "chunk_id": "489daf6c9d83ae1011d175de5057d1a7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 108] desired cycles xe2 x80 xa2 asset id type asset pay dascoin balance acc id share t res graphene wallet wallet api dascoin balance const string account const dascoin account return object containing dascoin balance account parameters xe2 x80 xa2 account account stringified id 9 6 1 4 wire calls wire signed transaction graphene wallet wallet api wire const string account share type bool broadcast const wire webasset return signed transaction wiring webasset parameters xe2 x80 xa2 account account stringified id xe2 x80 xa2 wire xe2 x80 xa2 broadcast true broadcast transaction network wire fee signed transaction graphene wallet wallet api wire fee const string account share type const string currency choice const string address const string memo bool broadcast const wire fee webasset return signed transaction wiring webasset parameters xe2 x80 xa2 account account stringified id xe2 x80 xa2 wire 60 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 9 6 1 5 currency choice currency",
    "metadata": {
      "chunk_id": "7121bc9a267b8f523725cc48a1447016",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 109] signed transaction wiring webasset parameters xe2 x80 xa2 account account stringified id xe2 x80 xa2 wire 60 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 9 6 1 5 currency choice currency choice string abbreviation user wants wire address destination blockchain address needs wired memo optional note broadcast true broadcast transaction network trading calls sell asset signed transaction graphene wallet wallet api sell asset string seller account string sell string symbol sell string min receive string symbol receive uint32 t timeout sec 0 bool fill kill false bool broadcast false place limit order attempting sell asset buying selling operation graphene want buy dasc usd sell usd dasc blockchain attempt sell symbol sell symbol receive possible long price min receive sell addition transaction fees market fees apply specified issuer selling asset receiving asset percentage exchanged selling asset receiving asset whitelist restricted order created seller whitelist restricted",
    "metadata": {
      "chunk_id": "5fff59f7e06b7d3391eabcb51e13f1e1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 110] transaction fees market fees apply specified issuer selling asset receiving asset percentage exchanged selling asset receiving asset whitelist restricted order created seller whitelist restricted asset type market orders matched order included blockchain return signed transaction selling funds parameters xe2 x80 xa2 seller account account providing asset sold receive proceeds sale xe2 x80 xa2 sell asset sold sell nominal units xe2 x80 xa2 symbol sell id asset sell xe2 x80 xa2 min receive minimum willing receive return selling entire sell xe2 x80 xa2 symbol receive id asset wish receive xe2 x80 xa2 timeout sec order fill immediately length time order remain order books cancelled un spent funds returned seller xe2 x80 x99s account xe2 x80 xa2 fill kill true order included blockchain filled immediately false open order left books fill filled immediately xe2 x80 xa2 broadcast true broadcast transaction network sell signed transaction graphene wallet wallet api sell string seller account",
    "metadata": {
      "chunk_id": "58515b470ccd07a3af4cd9d2a15abaa8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 111] immediately false open order left books fill filled immediately xe2 x80 xa2 broadcast true broadcast transaction network sell signed transaction graphene wallet wallet api sell string seller account string base string quote string rate double bool broadcast false place limit order attempting sell asset api abstracts away details sell asset user friendly orders placed sell timeout killed filled 61 p g e x0cimmediately wish parameters different sell asset instead return signed transaction selling funds parameters xe2 x80 xa2 seller account account providing asset sold receive proceeds sale xe2 x80 xa2 base id asset sell xe2 x80 xa2 quote id asset receive xe2 x80 xa2 rate rate base quote want sell xe2 x80 xa2 base want sell xe2 x80 xa2 broadcast true broadcast transaction network buy signed transaction graphene wallet wallet api buy string buyer account string base string quote double rate double bool broadcast false place limit order attempting buy asset api abstracts away details sell",
    "metadata": {
      "chunk_id": "18a52b3353590e790b3f5ef145d27401",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 112] transaction graphene wallet wallet api buy string buyer account string base string quote double rate double bool broadcast false place limit order attempting buy asset api abstracts away details sell asset user friendly orders placed buy timeout killed filled immediately wish parameters different sell asset instead return signed transaction buying funds parameters xe2 x80 xa2 buyer account account buying asset asset xe2 x80 xa2 base id asset buy xe2 x80 xa2 quote id asset offered payment xe2 x80 xa2 rate rate base quote want buy xe2 x80 xa2 base want buy xe2 x80 xa2 broadcast true broadcast transaction network borrow asset signed transaction graphene wallet wallet api borrow asset string borrower string borrow string asset symbol string collateral bool broadcast false borrow asset update debt collateral ratio loan step shorting asset sell asset complete short return signed transaction borrowing asset parameters xe2 x80 xa2 borrower id account associated transaction xe2 x80 xa2 borrow",
    "metadata": {
      "chunk_id": "45fd13c3eb1803984fed2098ebf86aa4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 113] debt collateral ratio loan step shorting asset sell asset complete short return signed transaction borrowing asset parameters xe2 x80 xa2 borrower id account associated transaction xe2 x80 xa2 borrow asset borrowed value negative pay debt xe2 x80 xa2 asset symbol symbol id asset borrowed 62 p g e x0c xe2 x80 xa2 xe2 x80 xa2 collateral backing asset add collateral position negative claim collateral backing asset defined bitasset options asset borrowed broadcast true broadcast transaction network cancel order signed transaction graphene wallet wallet api cancel order object id type order id bool broadcast false cancel existing order return signed transaction canceling order parameters xe2 x80 xa2 order id id order cancelled xe2 x80 xa2 broadcast true broadcast transaction network settle asset signed transaction graphene wallet wallet api settle asset string account settle string settle string symbol bool broadcast false schedules market issued asset automatic settlement holders market",
    "metadata": {
      "chunk_id": "3f60f3f9d3834b35999a12a2546d7fad",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 114] signed transaction graphene wallet wallet api settle asset string account settle string settle string symbol bool broadcast false schedules market issued asset automatic settlement holders market issued assets request forced settlement asset means specified sum locked chain held settlement period time chain choose margin position holder buy settled asset margin collateral price sale based feed price market issued asset settled exact settlement price feed price time settlement offset favor margin position offset blockchain parameter set global property object return signed transaction settling named asset parameters xe2 x80 xa2 account settle id account owning asset xe2 x80 xa2 settle named asset schedule settlement xe2 x80 xa2 symbol id asset settlement xe2 x80 xa2 broadcast true broadcast transaction network market history vector bucket object graphene wallet wallet api market history string symbol string symbol2 uint32 t bucket fc time point sec start fc time point sec end const",
    "metadata": {
      "chunk_id": "eaff3a27639e5138f52f25aed956da68",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 115] transaction network market history vector bucket object graphene wallet wallet api market history string symbol string symbol2 uint32 t bucket fc time point sec start fc time point sec end const limit orders vector limit order object graphene wallet wallet api limit orders string string b uint32 t limit const 63 p g e x0cget orders vector order object graphene wallet wallet api orders string uint32 t limit const settle orders vector force settlement object graphene wallet wallet api settle orders string uint32 t limit const 9 6 1 6 asset calls list assets vector asset object graphene wallet wallet api list assets const string lowerbound uint32 t limit const lists assets registered blockchain list assets pass string lowerbound start beginning list iterate necessary return list asset objects ordered symbol parameters xe2 x80 xa2 lowerbound symbol asset include list xe2 x80 xa2 limit maximum number assets return max 100 create asset signed transaction graphene wallet wallet api create",
    "metadata": {
      "chunk_id": "213c0723842af1728da07169dc0204f4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 116] ordered symbol parameters xe2 x80 xa2 lowerbound symbol asset include list xe2 x80 xa2 limit maximum number assets return max 100 create asset signed transaction graphene wallet wallet api create asset string issuer string symbol uint8 t precision asset options common fc optional bitasset options bitasset opts bool broadcast false creates new user issued market issued asset options changed later update asset right function difficult use provide raw json data structures options objects include prices asset ids return signed transaction creating new asset parameters xe2 x80 xa2 issuer id account pay fee issuer new asset updated later xe2 x80 xa2 symbol ticker symbol new asset xe2 x80 xa2 precision number digits precision right decimal point equal 12 xe2 x80 xa2 common asset options required new assets note core exchange rate technically needs store asset id new asset id known time operation created create price new asset instance id 1 chain overwrite new asset xe2 x80 x99s id xe2 x80",
    "metadata": {
      "chunk_id": "5d0f5ffc4867c2a87f603a272fa03fe7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 117] new assets note core exchange rate technically needs store asset id new asset id known time operation created create price new asset instance id 1 chain overwrite new asset xe2 x80 x99s id xe2 x80 xa2 bitasset opts options specific bitassets null market issued flag set common flags xe2 x80 xa2 broadcast true broadcast transaction network 64 p g e x0cupdate asset signed transaction graphene wallet wallet api update asset string symbol optional string new issuer asset options new options bool broadcast false update core options asset number options assets network use options enumerated asset object asset options struct command update options existing asset note operation update bitasset specific options options update bitasset instead return signed transaction updating asset parameters xe2 x80 xa2 symbol id asset update xe2 x80 xa2 new issuer changing asset xe2 x80 x99s issuer id new issuer null wish remain issuer asset xe2 x80 xa2 new options new asset options object entirely replace",
    "metadata": {
      "chunk_id": "4f3720e9de9eb3eadbf82485f81f2a92",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 118] x80 xa2 symbol id asset update xe2 x80 xa2 new issuer changing asset xe2 x80 x99s issuer id new issuer null wish remain issuer asset xe2 x80 xa2 new options new asset options object entirely replace existing options xe2 x80 xa2 broadcast true broadcast transaction network update bitasset signed transaction graphene wallet wallet api update bitasset string symbol bitasset options new options bool broadcast false update options specific bitasset bitassets options relevant asset types operation update options existing bitasset update asset return signed transaction updating bitasset parameters xe2 x80 xa2 symbol id asset update market issued asset xe2 x80 xa2 new options new bitasset options object entirely replace existing options xe2 x80 xa2 broadcast true broadcast transaction network update asset feed producers signed transaction graphene wallet wallet api update asset feed producers string symbol flat set string new feed producers bool broadcast false update set feed producing",
    "metadata": {
      "chunk_id": "e5eab67bf2e57e583088d7ff1a0459c1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 119] update asset feed producers signed transaction graphene wallet wallet api update asset feed producers string symbol flat set string new feed producers bool broadcast false update set feed producing accounts bitasset bitassets price feeds selected taking median values recommendations set feed producers command specify accounts produce feeds given bitasset return signed transaction updating bitasset xe2 x80 x99s feed producers parameters xe2 x80 xa2 symbol id asset update 65 p g e x0c xe2 x80 xa2 xe2 x80 xa2 new feed producers list account names ids authorized produce feeds asset list completely replace existing list broadcast true broadcast transaction network publish asset feed signed transaction graphene wallet wallet api publish asset feed string publishing account string symbol price feed feed bool broadcast false publishes price feed named asset price feed providers use command publish price feeds market issued assets price feed tune market particular market issued asset value",
    "metadata": {
      "chunk_id": "a203a4608a8b5f2d78a07edb74c687b1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 121] xe2 x80 xa2 symbol id asset feed xe2 x80 x99re publishing xe2 x80 xa2 feed price feed object containing prices making feed xe2 x80 xa2 broadcast true broadcast transaction network issue asset signed transaction graphene wallet wallet api issue asset string account string string symbol string memo bool broadcast false issue new shares asset return signed transaction issuing new shares parameters xe2 x80 xa2 account id account receive new shares xe2 x80 xa2 issue nominal units xe2 x80 xa2 symbol ticker symbol asset issue xe2 x80 xa2 memo memo include transaction readable recipient xe2 x80 xa2 broadcast true broadcast transaction network issue webasset signed transaction graphene wallet wallet api issue webasset string account string string reserved bool broadcast false issue webasset account xe2 x80 x99s balance return 66 p g e x0cthe signed transaction issuing webasset parameters xe2 x80 xa2 account id account receive new shares xe2 x80 xa2 issue nominal units xe2 x80 xa2 reserved",
    "metadata": {
      "chunk_id": "1caaa14a370fddd2e0a7427fa65d21a3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 122] xe2 x80 x99s balance return 66 p g e x0cthe signed transaction issuing webasset parameters xe2 x80 xa2 account id account receive new shares xe2 x80 xa2 issue nominal units xe2 x80 xa2 reserved reserved issue nominal units xe2 x80 xa2 broadcast true broadcast transaction network asset asset object graphene wallet wallet api asset string asset id const returns information given asset return information asset stored blockchain parameters xe2 x80 xa2 asset id symbol id asset question asset id asset id type graphene wallet wallet api asset id string asset id const lookup id named asset return id given asset parameters xe2 x80 xa2 asset id symbol id asset question bitasset data asset bitasset data object graphene wallet wallet api bitasset data string asset id const returns bitasset specific data given asset market issued assets xe2 x80 x99s behavior determined xe2 x80 x9cbitasset data xe2 x80 x9d basic asset data returned asset return bitasset specific data asset parameters xe2 x80 xa2",
    "metadata": {
      "chunk_id": "7f3d1db6d57afb868861363fb35b5692",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 123] data given asset market issued assets xe2 x80 x99s behavior determined xe2 x80 x9cbitasset data xe2 x80 x9d basic asset data returned asset return bitasset specific data asset parameters xe2 x80 xa2 asset id symbol id bitasset question fund asset fee pool signed transaction graphene wallet wallet api fund asset fee pool string string symbol string bool broadcast false pay fee pool given asset user issued assets optionally pool core asset automatically pay transaction fees transaction asset asset xe2 x80 x99s core exchange rate command allows deposit core asset fee pool return 67 p g e x0cthe signed transaction funding fee pool parameters xe2 x80 xa2 id account sending core asset xe2 x80 xa2 symbol id asset fee pool wish fund xe2 x80 xa2 core asset deposit xe2 x80 xa2 broadcast true broadcast transaction network reserve asset signed transaction graphene wallet wallet api reserve asset string string string symbol bool broadcast false burns given user issued asset command burns user",
    "metadata": {
      "chunk_id": "a0ae7bfa10b14f060d42fc438224a08a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 124] transaction network reserve asset signed transaction graphene wallet wallet api reserve asset string string string symbol bool broadcast false burns given user issued asset command burns user issued asset reduce circulation note burn market issued assets return signed transaction burning asset parameters xe2 x80 xa2 account containing asset wish burn xe2 x80 xa2 burn nominal units xe2 x80 xa2 symbol id asset burn xe2 x80 xa2 broadcast true broadcast transaction network global settle asset signed transaction graphene wallet wallet api global settle asset string symbol price settle price bool broadcast false forces global settling given asset black swan prediction markets order use operation asset settle global settle flag set operation executed balances converted backing asset settle price open margin positions called settle price asset backing bitassets bitassets force settled current feed price note operation asset issuer settle asset user owning asset return signed transaction",
    "metadata": {
      "chunk_id": "19e56309df1c54faf52e659058a9a14b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 125] price open margin positions called settle price asset backing bitassets bitassets force settled current feed price note operation asset issuer settle asset user owning asset return signed transaction settling named asset parameters xe2 x80 xa2 symbol id asset force settlement xe2 x80 xa2 settle price price settle xe2 x80 xa2 broadcast true broadcast transaction network 9 6 1 7 licence calls issue license signed transaction graphene wallet wallet api issue license const string issuer const string account const string license share type bonus percentage frequency type frequency bool broadcast false issue license account create license request object denied license authentication authority return signed version transaction 68 p g e x0cparameters xe2 x80 xa2 issuer license issuing chain authority xe2 x80 xa2 account account benefit license xe2 x80 xa2 license id license granted account xe2 x80 xa2 bonus percentage bonus percentage license base cycles issued value greater 100 xe2 x80 xa2",
    "metadata": {
      "chunk_id": "f2df0c078edefeaf82fac90fdbd75717",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 126] xe2 x80 xa2 account account benefit license xe2 x80 xa2 license id license granted account xe2 x80 xa2 bonus percentage bonus percentage license base cycles issued value greater 100 xe2 x80 xa2 frequency frequency lock license xe2 x80 xa2 broadcast true wish broadcast transaction license types vector license type object graphene wallet wallet api license types const license type ids found blockchain returns vector license type ids license type names ids vector pair string license type id type graphene wallet wallet api license type names ids const names license type ids found blockchain return vector license type ids pairs license information vector optional license information object graphene wallet wallet api license information const vector account id type account ids const list account issued license types function semantics identical objects return vector issued license information objects parameters xe2 x80 xa2 account ids ids accounts retrieve 9 6 1 8 reward queue calls update",
    "metadata": {
      "chunk_id": "53058635a77b9c97614fae55f499b7da",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 127] issued license types function semantics identical objects return vector issued license information objects parameters xe2 x80 xa2 account ids ids accounts retrieve 9 6 1 8 reward queue calls update queue parameters signed transaction graphene wallet wallet api update queue parameters optional bool enable dascoin queue optional uint32 t reward interval time seconds optional share type dascoin reward bool broadcast const update reward queue parameters return signed transaction updating queue parameters 69 p g e x0c xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 xe2 x80 xa2 enable dascoin queue true minting enabled reward interval time seconds time interval dascoin reward events dascoin reward dascoins produced dascoin reward event broadcast true wish broadcast transaction order book order book graphene wallet wallet api order book const string base const string quote unsigned limit 50 returns order book market base quote return order book market parameters xe2 x80 xa2 base asset xe2 x80 xa2 quote",
    "metadata": {
      "chunk_id": "4fb8c1c683aa64f8347a6b142638bfe9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 128] wallet wallet api order book const string base const string quote unsigned limit 50 returns order book market base quote return order book market parameters xe2 x80 xa2 base asset xe2 x80 xa2 quote second asset xe2 x80 xa2 limit order book limit asks bids capped 50 prioritizes moderate reward queue size uint32 t graphene wallet wallet api reward queue size const gives size dascoin reward queue return number elements dascoin queue reward queue vector reward queue object graphene wallet wallet api reward queue const gives entire reward queue return vector reward queue objects reward queue page vector reward queue object graphene wallet wallet api reward queue page uint32 t uint32 t const returns reward queue return vector reward queue objects parameters xe2 x80 xa2 starting page xe2 x80 xa2 number pages queue submissions pos 70 p g e x0cacc id queue subs w pos res queue submissions pos account id type account id const current submissions reward queue account id return elements dascoin",
    "metadata": {
      "chunk_id": "44f7f5ba3b33872f753c2c27bf34c532",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 129] number pages queue submissions pos 70 p g e x0cacc id queue subs w pos res queue submissions pos account id type account id const current submissions reward queue account id return elements dascoin reward queue submitted given account parameters xe2 x80 xa2 account id id account submissions returned 9 6 1 9 requests inspection webasset issue requests vector issue asset request object graphene app database api webasset issue requests const webasset issue request objects sorted expiration return vector webasset issue request objects wire holders vector wire holder object graphene app database api wire holders const wire holder objects return vector wire holder objects wire fee holder vector wire fee holder object graphene app database api wire fee holders const wire fee holder objects return vector wire fee holder objects 9 6 1 10 governance create committee member signed transaction graphene wallet wallet api create committee member string owner account string url bool broadcast false",
    "metadata": {
      "chunk_id": "53b7497e5ca39e9072bfb79c8d9d468e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 130] vector wire fee holder objects 9 6 1 10 governance create committee member signed transaction graphene wallet wallet api create committee member string owner account string url bool broadcast false creates committee member object owned given account account committee member object return signed transaction registering committee member parameters xe2 x80 xa2 owner account id account creating committee member xe2 x80 xa2 url url include committee member record blockchain clients display showing list committee members blank 71 p g e x0c xe2 x80 xa2 broadcast true broadcast transaction network witness witness object graphene wallet wallet api witness string owner account returns information given witness return information witness stored blockchain parameters xe2 x80 xa2 owner account id witness account owner id witness committee member committee member object graphene wallet wallet api committee member string owner account returns information given committee member return information",
    "metadata": {
      "chunk_id": "58d3eacea71bd59515d236ab3f1a75e7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 131] account owner id witness committee member committee member object graphene wallet wallet api committee member string owner account returns information given committee member return information committee member stored blockchain parameters xe2 x80 xa2 owner account id committee member account owner id committee member list witnesses map string witness id type graphene wallet wallet api list witnesses const string lowerbound uint32 t limit lists witnesses registered blockchain returns list account names witnesses associated witness id sorted lists witnesses currently voted use lowerbound limit parameters page list retrieve witnesses start setting lowerbound string iteration pass witness returned lowerbound list witnesss return list witnesses mapping witness names witness ids parameters xe2 x80 xa2 lowerbound witness return named witness exist list start witness comes lowerbound xe2 x80 xa2 limit maximum number witnesses return max 1000 list committee members map string committee member",
    "metadata": {
      "chunk_id": "3b8f293e5ddb9502f50e19b6ed61f3d7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 132] x80 xa2 lowerbound witness return named witness exist list start witness comes lowerbound xe2 x80 xa2 limit maximum number witnesses return max 1000 list committee members map string committee member id type graphene wallet wallet api list committee members const string lowerbound uint32 t limit 72 p g e x0clists committee members registered blockchain returns list account names committee members associated committee member id sorted lists committee members currently voted use lowerbound limit parameters page list retrieve committee members start setting lowerbound string iteration pass committee member returned lowerbound list committee members return list committee members mapping committee member names committee member ids parameters xe2 x80 xa2 lowerbound committee member return named committee member exist list start committee member comes lowerbound xe2 x80 xa2 limit maximum number committee members return max 1000 create witness signed transaction graphene wallet wallet api",
    "metadata": {
      "chunk_id": "5f80b58cb1d4a14ea29b39ed57c74b25",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 133] committee member exist list start committee member comes lowerbound xe2 x80 xa2 limit maximum number committee members return max 1000 create witness signed transaction graphene wallet wallet api create witness string owner account string url bool broadcast false creates witness object owned given account account witness object return signed transaction registering witness parameters xe2 x80 xa2 owner account id account creating witness xe2 x80 xa2 url url include witness record blockchain clients display showing list witnesses blank xe2 x80 xa2 broadcast true broadcast transaction network update witness signed transaction graphene wallet wallet api update witness string witness string url string block signing key bool broadcast false update witness object owned given account return signed transaction parameters xe2 x80 xa2 witness witness xe2 x80 x99s owner account accepts id owner account id witness xe2 x80 xa2 url create witness string makes remain xe2 x80 xa2 block signing key new",
    "metadata": {
      "chunk_id": "66cbeab262778321c7947c65ad4d01fc",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 134] transaction parameters xe2 x80 xa2 witness witness xe2 x80 x99s owner account accepts id owner account id witness xe2 x80 xa2 url create witness string makes remain xe2 x80 xa2 block signing key new block signing public key string makes remain xe2 x80 xa2 broadcast true wish broadcast transaction create worker signed transaction graphene wallet wallet api create worker string owner account time point sec work begin date time point sec work end date 73 p g e x0cshare type daily pay string string url variant worker settings bool broadcast false create worker object parameters xe2 x80 xa2 owner account account owns worker paid xe2 x80 xa2 work begin date work begins xe2 x80 xa2 work end date work ends xe2 x80 xa2 daily pay pay day maint interval xe2 x80 xa2 text xe2 x80 xa2 url text xe2 x80 xa2 worker settings xe2 x80 x9ctype xe2 x80 x9d xe2 x80 x9cburn xe2 x80 x9d xe2 x80 x9drefund xe2 x80 x9d xe2 x80 x9dvesting xe2 x80 x9d xe2 x80 x9cpay vesting period days xe2 x80 x9d x xe2 x80 xa2",
    "metadata": {
      "chunk_id": "cccf8edd0fe44226afb8d6d8fe8016db",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 135] xa2 worker settings xe2 x80 x9ctype xe2 x80 x9d xe2 x80 x9cburn xe2 x80 x9d xe2 x80 x9drefund xe2 x80 x9d xe2 x80 x9dvesting xe2 x80 x9d xe2 x80 x9cpay vesting period days xe2 x80 x9d x xe2 x80 xa2 broadcast true wish broadcast transaction update worker votes signed transaction graphene wallet wallet api update worker votes string account worker vote delta delta bool broadcast false update votes worker parameters xe2 x80 xa2 account account pay fee update votes xe2 x80 xa2 worker vote delta xe2 x80 x9cvote xe2 x80 x9d xe2 x80 xa6 xe2 x80 x9cvote xe2 x80 x9d xe2 x80 xa6 xe2 x80 x9cvote abstain xe2 x80 x9d xe2 x80 xa6 xe2 x80 xa2 broadcast true wish broadcast transaction vote committee member signed transaction graphene wallet wallet api vote committee member string voting account string committee member bool approve bool broadcast false vote given committee member account publish list committee memberes approve command allows add remove committee memberes list account xe2 x80 x99s vote",
    "metadata": {
      "chunk_id": "497861bcfe94c13978ea48c3b81075f5",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 136] member bool approve bool broadcast false vote given committee member account publish list committee memberes approve command allows add remove committee memberes list account xe2 x80 x99s vote weighted according number shares core asset owned account time votes tallied note vote committee member vote committee member vote committee member return signed transaction changing vote given committee member parameters xe2 x80 xa2 voting account id account voting shares xe2 x80 xa2 committee member id committee member xe2 x80 x99 owner account xe2 x80 xa2 approve true wish vote favor committee member false remove vote favor committee member xe2 x80 xa2 broadcast true wish broadcast transaction 74 p g e x0cvote witness signed transaction graphene wallet wallet api vote witness string voting account string witness bool approve bool broadcast false vote given witness account publish list witnesses approve command allows add remove witnesses list account xe2 x80 x99s vote weighted according",
    "metadata": {
      "chunk_id": "2697efee51bb403eb1f64a939ffbe182",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 137] string witness bool approve bool broadcast false vote given witness account publish list witnesses approve command allows add remove witnesses list account xe2 x80 x99s vote weighted according number shares core asset owned account time votes tallied note vote witness vote witness vote witness return signed transaction changing vote given witness parameters xe2 x80 xa2 voting account id account voting shares xe2 x80 xa2 witness id witness xe2 x80 x99 owner account xe2 x80 xa2 approve true wish vote favor witness false remove vote favor witness xe2 x80 xa2 broadcast true wish broadcast transaction set voting proxy signed transaction graphene wallet wallet api set voting proxy string account modify optional string voting account bool broadcast false set voting proxy account user wish active voting choose allow account vote stake setting vote proxy remove previous votes blockchain remain ignored later null vote proxy previous votes effect setting changed time return signed transaction",
    "metadata": {
      "chunk_id": "716401181e8c0a75ac8bec02ec49fbbd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 138] voting choose allow account vote stake setting vote proxy remove previous votes blockchain remain ignored later null vote proxy previous votes effect setting changed time return signed transaction changing vote proxy settings parameters xe2 x80 xa2 account modify id account update xe2 x80 xa2 voting account id account authorized vote account modify xe2 x80 x99s shares null vote shares xe2 x80 xa2 broadcast true wish broadcast transaction set desired witness committee member count signed transaction graphene wallet wallet api set desired witness committee member count string account modify uint16 t desired number witnesses uint16 t desired number committee members bool broadcast false set vote number witnesses committee members system account voice opinion committee members witnesses active committee member active witness list independent vote approval committee members witnesses claim xe2 x80 x99t 20 committee members vote 10 maximum values set blockchain parameters currently",
    "metadata": {
      "chunk_id": "76d7c3b9286c5cfa980d9bf97ae8d894",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 139] active committee member active witness list independent vote approval committee members witnesses claim xe2 x80 x99t 20 committee members vote 10 maximum values set blockchain parameters currently defaulting 1001 setting changed time account voting proxy set preferences ignored 75 p g e x0creturn signed transaction changing vote proxy settings parameters xe2 x80 xa2 account modify id account update xe2 x80 xa2 number committee members number xe2 x80 xa2 broadcast true wish broadcast transaction propose parameter change signed transaction graphene wallet wallet api propose parameter change const string proposing account fc time point sec expiration time const variant object changed values bool broadcast false creates transaction propose parameter change multiple parameters specified atomic change desired return signed version transaction parameters xe2 x80 xa2 proposing account account paying fee propose tx xe2 x80 xa2 expiration time timestamp specifying proposal effect expire xe2 x80",
    "metadata": {
      "chunk_id": "4bee03dd99a54cfe1afe589af3e62bf7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 140] change desired return signed version transaction parameters xe2 x80 xa2 proposing account account paying fee propose tx xe2 x80 xa2 expiration time timestamp specifying proposal effect expire xe2 x80 xa2 changed values values change chain parameters filled default values xe2 x80 xa2 broadcast true wish broadcast transaction propose fee change signed transaction graphene wallet wallet api propose fee change const string proposing account fc time point sec expiration time const variant object changed values bool broadcast false propose fee change return signed version transaction parameters xe2 x80 xa2 proposing account account paying fee propose tx xe2 x80 xa2 expiration time timestamp specifying proposal effect expire xe2 x80 xa2 changed values map operation type new fee operations specified id xe2 x80 x9cscale xe2 x80 x9d key changes scale operations maintain current values xe2 x80 xa2 broadcast true wish broadcast transaction 9 6 1 11 privacy mode set key label 76 p g e x0cbool",
    "metadata": {
      "chunk_id": "c3c70b77b94f70cdeb1d4a90e68c9ba4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 141] id xe2 x80 x9cscale xe2 x80 x9d key changes scale operations maintain current values xe2 x80 xa2 broadcast true wish broadcast transaction 9 6 1 11 privacy mode set key label 76 p g e x0cbool graphene wallet wallet api set key label public key type key string label methods stealth transfers method set label public key note keys label return true label set false key label string graphene wallet wallet api key label public key type key const public key public key type graphene wallet wallet api public key string label const return public key associated given label blind accounts map string public key type graphene wallet wallet api blind accounts const return blind accounts blind accounts map string public key type graphene wallet wallet api blind accounts const return blind accounts wallet private key blind balances vector asset graphene wallet wallet api blind balances string key label return total balance blinded commitments claimed given account key label create blind account 77 p g",
    "metadata": {
      "chunk_id": "9584f9dc46a235c158432f846750ad8c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 142] private key blind balances vector asset graphene wallet wallet api blind balances string key label return total balance blinded commitments claimed given account key label create blind account 77 p g e x0cpublic key type graphene wallet wallet api create blind account string label string brain key generates new blind account given brain key assigns given label transfer blind blind confirmation graphene wallet wallet api transfer blind string account id string asset symbol vector pair string string amounts bool broadcast false transfers public balance blinded balances stealth transfer parameters xe2 x80 xa2 amounts map key label transfer blind blind confirmation graphene wallet wallet api transfer blind string blind account key label string account id string string asset symbol bool broadcast false transfers funds set blinded balances public account balance blind transfer blind confirmation graphene wallet wallet api blind transfer string key label string key label string string symbol",
    "metadata": {
      "chunk_id": "793ba18551c16a5b9fb670e4b3964aa8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 143] false transfers funds set blinded balances public account balance blind transfer blind confirmation graphene wallet wallet api blind transfer string key label string key label string string symbol bool broadcast false transfer set blinded balances blind history vector blind receipt graphene wallet wallet api blind history string key account return blind receipts form particular account receive blind transfer blind receipt graphene wallet wallet api receive blind transfer string confirmation receipt string opt string opt memo given confirmation receipt method parse blinded balance confirm exists blockchain exists report received sent parameters xe2 x80 xa2 confirmation receipt base58 encoded stealth confirmation xe2 x80 xa2 opt sender unknown public key unknown public key given label opt 9 6 1 12 blockchain inspection block 78 p g e x0coptional signed block info graphene wallet wallet api block uint32 t num account count uint64 t graphene wallet wallet api account count const returns",
    "metadata": {
      "chunk_id": "a5979746852a7bc11960cdf937bbe849",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 144] 9 6 1 12 blockchain inspection block 78 p g e x0coptional signed block info graphene wallet wallet api block uint32 t num account count uint64 t graphene wallet wallet api account count const returns number accounts registered blockchain global properties global property object graphene wallet wallet api global properties const returns block chain xe2 x80 x99s slowly changing settings object contains properties blockchain fixed change maintenance interval daily current list witnesses committee members block interval etc dynamic global properties frequently changing properties dynamic global properties dynamic global property object graphene wallet wallet api dynamic global properties const returns block chain xe2 x80 x99s rapidly changing properties returned object contains information changes block interval head block number witness etc global properties frequently changing properties object variant graphene wallet wallet api object object id type id const returns blockchain object",
    "metadata": {
      "chunk_id": "f18de5a171c5f304e2a3a1b6aa2f825d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 145] block interval head block number witness etc global properties frequently changing properties object variant graphene wallet wallet api object object id type id const returns blockchain object corresponding given id generic function retrieve object blockchain assigned id certain types objects specialized convenience functions return objects e g assets asset accounts account function work object return requested object parameters xe2 x80 xa2 id id object return 9 6 1 13 transaction builder begin builder transaction transaction handle type graphene wallet wallet api begin builder transaction 79 p g e x0cadd operation builder transaction void graphene wallet wallet api add operation builder transaction transactio n handle type transaction handle const operation op replace operation builder transaction void graphene wallet wallet api replace operation builder transaction transa ction handle type handle unsigned operation index const operation new op set fees builder transaction asset",
    "metadata": {
      "chunk_id": "ecfe2c431b6cd1b8a6dcced1a51ef708",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 146] transaction void graphene wallet wallet api replace operation builder transaction transa ction handle type handle unsigned operation index const operation new op set fees builder transaction asset graphene wallet wallet api set fees builder transaction transaction han dle type handle string fee asset graphene symbol preview builder transaction transaction graphene wallet wallet api preview builder transaction transaction handle type handle sign builder transaction signed transaction graphene wallet wallet api sign builder transaction transaction handle typ e transaction handle bool broadcast true propose builder transaction signed transaction graphene wallet wallet api propose builder transaction transaction handle type handle time point sec expiration time point fc minutes 1 uint32 t review period seconds 0 bool broadcast true propose builder transaction2 signed transaction graphene wallet wallet api propose builder transaction2 transaction handle 80 p g e x0c type handle string",
    "metadata": {
      "chunk_id": "07db4baa528c746934e4d32b0d5badd1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 147] review period seconds 0 bool broadcast true propose builder transaction2 signed transaction graphene wallet wallet api propose builder transaction2 transaction handle 80 p g e x0c type handle string account id time point sec expiration time point fc minutes 1 uint32 t review period seconds 0 bool broadcast true remove builder transaction void graphene wallet wallet api remove builder transaction transaction handle t ype handle serialize transaction string graphene wallet wallet api serialize transaction signed transaction tx const converts signed transaction json form binary representation return binary form transaction hex encoded returns raw string null characters embedded parameters xe2 x80 xa2 tx transaction serialize sign transaction signed transaction graphene wallet wallet api sign transaction signed transaction tx bool broadcast false signs transaction given fully formed transaction lacking signatures signs transaction necessary keys optionally broadcasts transaction return",
    "metadata": {
      "chunk_id": "51f63e46d1fe5795a82267130c00fade",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 148] transaction signed transaction tx bool broadcast false signs transaction given fully formed transaction lacking signatures signs transaction necessary keys optionally broadcasts transaction return signed version transaction parameters xe2 x80 xa2 tx unsigned transaction xe2 x80 xa2 broadcast true wish broadcast transaction sign transaction keys signed transaction graphene wallet wallet api sign transaction signed transaction tx std vector string wif keys bool broadcast false signs transaction given fully formed transaction lacking signatures list keys signs transaction optionally broadcasts transaction return signed version transaction parameters xe2 x80 xa2 tx unsigned transaction xe2 x80 xa2 wif keys list keys xe2 x80 xa2 broadcast true wish broadcast transaction 81 p g e x0cget prototype operation operation graphene wallet wallet api prototype operation string operation type returns uninitialized object representing given blockchain operation returns defaultinitialized object given",
    "metadata": {
      "chunk_id": "e313f4a1d18af044f61f781b8cf589b6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 149] operation operation graphene wallet wallet api prototype operation string operation type returns uninitialized object representing given blockchain operation returns defaultinitialized object given type early development wallet don xe2 x80 x99t custom commands creating operations blockchain supports operation blockchain supports created transaction builder xe2 x80 x99s add operation builder transaction cli need know json form operation looks like template fill xe2 x80 x99s better return default constructed operation given type parameters xe2 x80 xa2 operation type type operation return operations defined graphene chain operations hpp e g xe2 x80 x9cglobal parameters update operation xe2 x80 x9d 82 p g e x0c10 appendix b operations list operations details transfer operation transfer account fees paid account parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account transfer asset xe2 x80 xa2 account id type account transfer asset xe2 x80 xa2 asset asset transfer xe2 x80 xa2",
    "metadata": {
      "chunk_id": "ec648d591349f98b3b8fc07a3155b21a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 150] fees paid account parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account transfer asset xe2 x80 xa2 account id type account transfer asset xe2 x80 xa2 asset asset transfer xe2 x80 xa2 optional memo data memo user provided data encrypted memo key account xe2 x80 xa2 extensions type extensions precondition xe2 x80 xa2 0 xe2 x80 xa2 fee 0 xe2 x80 xa2 postcondition xe2 x80 xa2 account s balance reduced fee xe2 x80 xa2 account s balance increased limit order create operation instructs blockchain attempt sell asset blockchain atempt sell sell asset id min receive asset id possible fee paid seller s account market fees apply specified issuer selling asset receiving asset percentage exchanged selling asset receiving asset white list restricted order created seller white list restricted asset type market orders matched order included blockchain parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type seller xe2 x80 xa2 asset sell xe2 x80 xa2 asset min receive xe2 x80 xa2",
    "metadata": {
      "chunk_id": "c90175afba197105d798eec6d5f51a9f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 151] asset type market orders matched order included blockchain parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type seller xe2 x80 xa2 asset sell xe2 x80 xa2 asset min receive xe2 x80 xa2 share type reserved xe2 x80 xa2 optional account id type account credit xe2 x80 xa2 time point sec expiration time point sec maximum xe2 x80 xa2 bool fill kill false flag set entire order filled operation rejected xe2 x80 xa2 extensions type extensions limit order cancel operation cancel existing limit order fee pay account account receive proceeds order seller returns 83 p g e x0cthe actually refunded parameters xe2 x80 xa2 asset fee xe2 x80 xa2 limit order id type order xe2 x80 xa2 account id type fee paying account xe2 x80 xa2 extensions type extensions order update operation operation add collateral cover adjust margin price particular user prediction markets collateral debt equal operation fail trigger margin couldn t filled margin hits price limit fail price settlement price note operation",
    "metadata": {
      "chunk_id": "b49d1fcb98f919ad6469f9de0c400765",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 152] cover adjust margin price particular user prediction markets collateral debt equal operation fail trigger margin couldn t filled margin hits price limit fail price settlement price note operation force market order collateral requiring outside funds parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type funding account pays fee collateral cover xe2 x80 xa2 asset delta collateral collateral add margin position xe2 x80 xa2 asset delta debt debt paid negative issue new debt xe2 x80 xa2 extensions type extensions account create operation create account parameters xe2 x80 xa2 asset fee xe2 x80 xa2 uint8 t kind account kind wallet vault special xe2 x80 xa2 account id type registrar current registrar chain authority xe2 x80 xa2 account id type referrer account receives portion fee split registrar referrer member xe2 x80 xa2 uint16 t referrer percent 0 xe2 x80 xa2 string xe2 x80 xa2 authority owner xe2 x80 xa2 authority active xe2 x80 xa2 account options options xe2 x80 xa2 extension",
    "metadata": {
      "chunk_id": "860c1e417426639e3950b233e1a58b9c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 156] lifetime member use operation anymore parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account upgrade account upgrade lifetime member xe2 x80 xa2 bool upgrade lifetime member false true account upgraded lifetime member add year subscription 85 p g e x0c xe2 x80 xa2 extensions type extensions account transfer operation transfers account account clearing white list theory account transferred simply updating authorities kind transfer lacks semantic meaning rotate keys transferring ownership operation indicate legal transfer title account break operation history account id s owner active voting memo authority set new owner operation clear account s whitelist statuses blacklist statuses parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account id xe2 x80 xa2 account id type new owner xe2 x80 xa2 extensions type extensions asset create operation creates asset parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type issuer account sign pay fee operation later",
    "metadata": {
      "chunk_id": "3d0cc068280cb128d393df98cf53f34c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 166] op wrapper proposed ops xe2 x80 xa2 time point sec expiration time xe2 x80 xa2 optional uint32 t review period seconds xe2 x80 xa2 extensions type extensions proposal update operation operation allows accounts add revoke approval proposed transaction signatures sufficient satisfy authority account approvals required transaction containing operation account multi signature authority listed approvals add approvals remove required signatures satisfy account s authority provided transaction containing operation secondary proposal created contains operation note proposal requires account s active authority account update adding owner authority s approval considered error owner approval added proposal requires owner s authority account s owner active authority required owner authority approve attempt add remove active authority approval proposal fail parameters xe2 x80 xa2 account id type fee paying account xe2 x80 xa2 asset fee xe2 x80 xa2 proposal id type proposal xe2 x80 xa2 flat set",
    "metadata": {
      "chunk_id": "519e0df155a8e623edeef8d4f9359b92",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 167] attempt add remove active authority approval proposal fail parameters xe2 x80 xa2 account id type fee paying account xe2 x80 xa2 asset fee xe2 x80 xa2 proposal id type proposal xe2 x80 xa2 flat set account id type active approvals add xe2 x80 xa2 flat set account id type active approvals remove xe2 x80 xa2 flat set account id type owner approvals add xe2 x80 xa2 flat set account id type owner approvals remove xe2 x80 xa2 flat set public key type key approvals add xe2 x80 xa2 flat set public key type key approvals remove 90 p g e x0c xe2 x80 xa2 extensions type extensions proposal delete operation proposal delete operation deletes existing transaction proposal operation allows early veto proposed transaction account required authority proposed transaction account s holder feels proposal illadvised decides approve wishes end discussion issue required authority simply refuse add approval leave topic open debate proposal expires operation prevent breath wasted absurd proposal parameters",
    "metadata": {
      "chunk_id": "681ce2153425613f0b1e78f7ec988ec9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 168] decides approve wishes end discussion issue required authority simply refuse add approval leave topic open debate proposal expires operation prevent breath wasted absurd proposal parameters xe2 x80 xa2 account id type fee paying account xe2 x80 xa2 bool owner authority false xe2 x80 xa2 asset fee xe2 x80 xa2 proposal id type proposal xe2 x80 xa2 extensions type extensions withdraw permission create operation create new withdrawal permission operation creates withdrawal permission allows authorized account withdraw authorizing account operation primarily useful scheduling recurring payments withdrawal permissions define withdrawal periods span time authorized account withdrawal number withdrawals long total withdrawn period exceed limit given period withdrawal permissions authorize specific pairing e permission authorizes specified authorized account withdraw specified authorizing account withdrawals limited exceed withdrawal limit withdrawal asset limit attempts withdraw asset type",
    "metadata": {
      "chunk_id": "823f0e0ff702054edb46b35835bac0ba",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 174] xe2 x80 xa2 asset fee xe2 x80 xa2 committee member id type committee member committee member update xe2 x80 xa2 account id type committee member account account owns committee member account pays fee operation xe2 x80 xa2 optional string new url committee member update global parameters operation committee members update global parameters blockchain operation allows committee members update global parameters blockchain control tunable aspects chain including block maintenance intervals maximum data sizes fees charged network etc operation proposed transaction proposed transaction contains operation review period specified current global parameters accepted parameters 93 p g e x0c xe2 x80 xa2 xe2 x80 xa2 asset fee chain parameters new parameters vesting balance create operation create vesting balance chain allows user create vesting balance normally vesting balances created automatically cashback worker operations operation allows vesting balances created manually manual creation",
    "metadata": {
      "chunk_id": "6332e6945d10579c2c846af4aa49ae63",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 179] blind output outputs blind transfer operation transfers blind blind ways transfer value maintaining privacy xe2 x80 xa2 account account kept secret xe2 x80 xa2 stealth transfers sender receiver kept secret account account transfers access memo key amounts access funds stealth transfers key control reading memo operation expensive normal transfer fee proportional size operation assets blind transfer type fee asset id fee payer temp account funded blinded values operation transfer account blinded balances account blinded balances stealth transfers assuming receiver key pair r r shared public key r sender assuming sender key pair s s generate time key pair o o s child nonce nonce inferred transaction calculate secret v o r blinding factor sha256 v memo encrypted aes v owner r child sha256 blinding factor sender gives receiver output id complete payment process send money cold wallet having pre register accounts outputs assigned ids inputs input ids available case return value id",
    "metadata": {
      "chunk_id": "3edf81df48ea3148764823c30e741a97",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 180] blinding factor sender gives receiver output id complete payment process send money cold wallet having pre register accounts outputs assigned ids inputs input ids available case return value id allocated output additional output ids allocated sequentially fewer outputs inputs input ids freed parameters xe2 x80 xa2 asset fee xe2 x80 xa2 vector blind input inputs xe2 x80 xa2 vector blind output outputs 96 p g e x0ctransfer blind operation converts blinded stealth balance public account balance parameters xe2 x80 xa2 asset fee xe2 x80 xa2 asset xe2 x80 xa2 account id type xe2 x80 xa2 blind factor type blinding factor xe2 x80 xa2 vector blind input inputs asset claim fees operation transfer accumulated fees issuer s balance parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type issuer xe2 x80 xa2 asset claim xe2 x80 xa2 extensions type extensions preconditions xe2 x80 xa2 claim asset id issuer issuer board update chain authority operation board members update chain authorities",
    "metadata": {
      "chunk_id": "3256b37b3692d902ae48a808d4301382",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 181] xe2 x80 xa2 asset claim xe2 x80 xa2 extensions type extensions preconditions xe2 x80 xa2 claim asset id issuer issuer board update chain authority operation board members update chain authorities operation allows committee members update chain authority global properties object blockchain kind match number assigned said authority operation proposed transaction proposed transaction contains operation review period specified current global parameters accepted parameters xe2 x80 xa2 asset fee xe2 x80 xa2 string kind xe2 x80 xa2 account id type account xe2 x80 xa2 account id type committee member account update queue parameters operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type issuer xe2 x80 xa2 optional bool enable dascoin queue xe2 x80 xa2 optional uint32 t reward interval time seconds xe2 x80 xa2 optional share type dascoin reward xe2 x80 xa2 extensions type extensions create license type operation create new type license signed current license administration",
    "metadata": {
      "chunk_id": "3d640adf8f04672c8599e167cb669f8f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 184] string comment xe2 x80 xa2 extensions type extensions 98 p g e x0casset deny issue request operation asset authenticator dual authentication issuing asset deny asset issue request parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type authenticator xe2 x80 xa2 issue asset request id type request xe2 x80 xa2 extensions type extensions wire operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account xe2 x80 xa2 asset asset wire xe2 x80 xa2 string memo xe2 x80 xa2 extensions type extensions wire complete operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wire handler xe2 x80 xa2 wire holder id type holder object id xe2 x80 xa2 extensions type extensions wire reject operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wire handler xe2 x80 xa2 wire holder id type holder object id xe2 x80 xa2 extensions type extensions transfer vault wallet operation transfers assets tethered vault parent wallet limits enforced parameters xe2",
    "metadata": {
      "chunk_id": "1855115b404f238c377b6f690547e594",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 185] xe2 x80 xa2 wire holder id type holder object id xe2 x80 xa2 extensions type extensions transfer vault wallet operation transfers assets tethered vault parent wallet limits enforced parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type vault xe2 x80 xa2 account id type wallet xe2 x80 xa2 asset asset transfer xe2 x80 xa2 share type reserved transfer xe2 x80 xa2 extensions type extensions 99 p g e x0ctransfer wallet vault operation transfers assets tethered vault parent wallet limits enforced parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wallet xe2 x80 xa2 account id type vault xe2 x80 xa2 asset asset transfer xe2 x80 xa2 share type reserved transfer xe2 x80 xa2 extensions type extensions submit reserve cycles queue operation request issue cycles account authorized cycle issuing authority request issue certain cycles independent authorized cycle authentication authority inspect approve request parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type issuer xe2",
    "metadata": {
      "chunk_id": "527cc5b06cd2621c851e70814d06c53f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 194] xa2 extensions type extensions purchase cycle asset operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wallet id xe2 x80 xa2 share type xe2 x80 xa2 frequency type frequency xe2 x80 xa2 share type expected xe2 x80 xa2 extensions type extensions transfer cycles licence wallet operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type vault id xe2 x80 xa2 license type id type license id xe2 x80 xa2 share type xe2 x80 xa2 account id type wallet id xe2 x80 xa2 extensions type extensions wire fee operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type account xe2 x80 xa2 asset asset wire xe2 x80 xa2 string currency choice xe2 x80 xa2 string address xe2 x80 xa2 string memo xe2 x80 xa2 extensions type extensions 105 p g e x0cwire fee complete operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wire handler xe2 x80 xa2 wire fee holder id type holder object id xe2 x80 xa2 extensions type extensions wire fee reject operation",
    "metadata": {
      "chunk_id": "fda948eccc8762b11333293621901faf",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  },
  {
    "text": "[Section 195] parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wire handler xe2 x80 xa2 wire fee holder id type holder object id xe2 x80 xa2 extensions type extensions wire fee reject operation parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type wire handler xe2 x80 xa2 wire fee holder id type holder object id xe2 x80 xa2 extensions type extensions set starting cycle asset operation sets global value starting cycles new accounts changes value global property starting cycle asset represents number cycles given new wallet custodian account parameters xe2 x80 xa2 asset fee xe2 x80 xa2 account id type issuer operation issuer root authority xe2 x80 xa2 uint32 t new dascoin default starting cycle asset value set xe2 x80 xa2 extensions type extensions 106 p g e x0c107 p g e x0c",
    "metadata": {
      "chunk_id": "aa7f6d210327be16c9d5c5175cb0e8cf",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "DasCoin.txt"
    }
  }
]