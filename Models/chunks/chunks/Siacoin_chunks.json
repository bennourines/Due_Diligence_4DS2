[
  {
    "text": "[Section 1] b sia simple decentralized storage david vorick nebulous inc david nebulouslabs com luke champine nebulous inc luke nebulouslabs com november 29 2014 abstract network consensus automatically enforce storage contracts importantly means clients need personally verify storage proofs simply upload file let network rest acknowledge storing data single untrusted host guarantees little way availability bandwidth general quality service instead recommend storing data redundantly multiple hosts particular use erasure codes enable high availability excessive redundancy sia initially implemented blockchainbased altcoin future support way peg bitcoin planned discussed xe2 x80 x9cenabling blockchain innovations pegged sidechains xe2 x80 x9d 5 sia protocol largely resembles bitcoin changes noted authors introduce sia platform decentralized storage sia enables formation storage contracts peers contracts agreements storage provider client defining data stored price require storage provider prove",
    "metadata": {
      "chunk_id": "6de8c001f02afcbbb818703f7d4e1bb8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 2] introduce sia platform decentralized storage sia enables formation storage contracts peers contracts agreements storage provider client defining data stored price require storage provider prove regular intervals storing client xe2 x80 x99s data contracts stored blockchain making publicly auditable respect sia viewed bitcoin derivative includes support contracts sia initially implemented altcoin later financially connected bitcoin way peg 1 introduction sia decentralized cloud storage platform intends compete existing storage solutions p2p enterprise level instead renting storage centralized provider peers sia rent storage sia stores storage contracts formed parties defining terms arrangement blockchain similar bitcoin 1 12 purpose forming contract storage provider known host agrees store client xe2 x80 x99s data periodically submit proof continued storage contract expires host compensated proof submit penalized missing proof proofs publicly verifiable publicly available blockchain 2",
    "metadata": {
      "chunk_id": "b1bfa0b5b83c56470cbf1fb16409e2bd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 3] client xe2 x80 x99s data periodically submit proof continued storage contract expires host compensated proof submit penalized missing proof proofs publicly verifiable publicly available blockchain 2 general structure sia xe2 x80 x99s primary departure bitcoin lies transactions bitcoin uses scripting system enable range transaction types pay public keyhash pay script hash sia opts instead use m xe2 x80 x93of xe2 x80 x93n multi signature scheme transactions eschewing scripting system entirely reduces complexity attack surface sia extends transactions enable creation enforcement storage contracts extensions accomplish contracts proofs contract updates contracts declare intention host store file certain size 1 x0chash define regularity host submit storage proofs established contracts modified later contract updates specifics transaction types defined sections 4 5 3 spend conditions include time lock set public keys number signatures required output spent time lock expired specified keys",
    "metadata": {
      "chunk_id": "19a2f0056d447fa83768c8ea930df735",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 4] later contract updates specifics transaction types defined sections 4 5 3 spend conditions include time lock set public keys number signatures required output spent time lock expired specified keys added signature spend conditions hashed merkle tree time lock number signatures required public keys leaves root hash tree address coins sent order spend coins spend conditions corresponding address hash provided use merkle tree allows parties selectively reveal information spend conditions example time lock revealed revealing number public keys number signatures required noted time lock number signatures low entropy making hashes vulnerable brute forcing resolved adding random nonce fields increasing entropy cost space efficiency transactions transaction contains following fields field version arbitrary data miner fee inputs outputs file contract storage proof signatures 3 1 description protocol version number metadata reward given miner incoming funds outgoing funds optional file",
    "metadata": {
      "chunk_id": "97f1eb27243feb09a1c955b839312046",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 5] version arbitrary data miner fee inputs outputs file contract storage proof signatures 3 1 description protocol version number metadata reward given miner incoming funds outgoing funds optional file contracts optional proof storage optional signatures input inputs outputs output comprises volume coins output 3 3 signatures associated identifier derived transaction output appeared id input transaction signed cryptographic signature paired input id output transaction t defined time lock set flags indicating parts transaction signed input id inh t xe2 x80 x9coutput xe2 x80 x9d dicates input signature applied h cryptographic hashing function time lock specifies signature xe2 x80 x9coutput xe2 x80 x9d string literal block reward valid subset fields transaction signed exception signature miner fees special output ids given impossible flag inh h block header xe2 x80 x9cblockreward xe2 x80 x9d dicate transaction signed signatures allows nuevery input come prior output anced transaction",
    "metadata": {
      "chunk_id": "4a361ef9072b350d480922b9e9194b89",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 6] miner fees special output ids given impossible flag inh h block header xe2 x80 x9cblockreward xe2 x80 x9d dicate transaction signed signatures allows nuevery input come prior output anced transaction schemes input simply output id actual data signed concateinputs outputs paired set nation time lock input id flags spend conditions inputs contain spend conditions flagged field signature transaction outputs contain merkle root valid transaction accepted hash 2 3 2 4 spend conditions file contracts spend conditions properties met file contract agreement storage coins xe2 x80 x9cunlocked xe2 x80 x9d spent provider client core file contract 2 x0cis file xe2 x80 x99s merkle root hash construct hash file split segments constant size hashed merkle tree root hash total size file verify storage proofs file contracts specify duration challenge frequency payout parameters including reward valid proof reward invalid missing proof maximum number proofs missed challenge frequency specifies storage",
    "metadata": {
      "chunk_id": "26608242e0f9e69286b9d7ebf2c64a29",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 7] file contracts specify duration challenge frequency payout parameters including reward valid proof reward invalid missing proof maximum number proofs missed challenge frequency specifies storage proof submitted creates discrete challenge windows host submit storage proofs proof window submitting valid proof challenge window triggers automatic payment xe2 x80 x9cvalid proof xe2 x80 x9d address presumably host end challenge window valid proof submitted coins instead sent xe2 x80 x9cmissed proof xe2 x80 x9d address likely unspendable address order disincentivize dos attacks section 7 1 contracts define maximum number proofs missed number exceeded contract invalid contract valid end contract duration successfully terminates remaining coins sent valid proof address conversely contract funds exhausted duration elapses maximum number missed proofs exceeded contract unsuccessfully terminates remaining coins sent missed proof address completing missing proof results new transaction output",
    "metadata": {
      "chunk_id": "46a7aa304ad73c76f142d756804fb3c0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 8] exhausted duration elapses maximum number missed proofs exceeded contract unsuccessfully terminates remaining coins sent missed proof address completing missing proof results new transaction output belonging recipient specified contract output id proof depends contract id defined formed outcome string literal xe2 x80 x9cvalidproof xe2 x80 x9d xe2 x80 x9cmissedproof xe2 x80 x9d corresponding validity proof output id contract termination defined h contract id outcome h contract id outcome wi h contract id h bi xe2 x88 x921 outcome potential values xe2 x80 x9csuccessfultermination xe2 x80 x9d xe2 x80 x9cunsucessfultermination xe2 x80 x9d corresponding termination status contract file contracts created list xe2 x80 x9cedit conditions xe2 x80 x9d analogous spend conditions transaction edit conditions fulfilled contract modified values modified including contract funds file hash output addresses modifications affect validity subsequent storage proofs contract edits specify future challenge",
    "metadata": {
      "chunk_id": "d03efbe54f4bc93f693c70f6fa824dab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 9] fulfilled contract modified values modified including contract funds file hash output addresses modifications affect validity subsequent storage proofs contract edits specify future challenge window effective theoretically peers create xe2 x80 x9cmicro edit channels xe2 x80 x9d facilitate frequent edits discussion micropayment channels section 7 3 5 proof storage storage proof transactions periodically submitted order fulfill file contracts storage proof targets specific file contract storage proof need inputs outputs contract id proof data required 5 1 algorithm hosts prove storage providing segment original file list hashes file xe2 x80 x99s merkle tree information sufficient prove h transaction xe2 x80 x9ccontract xe2 x80 x9d segment came original file proofs submitted blockchain index contract trans verify validity invalidity storage proof action output id proof de uses randomly selected segment random seed termined challenge window wi given wi window index e number bi xe2 x88",
    "metadata": {
      "chunk_id": "42e21b746f85c542b34587796f2b2759",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 10] contract trans verify validity invalidity storage proof action output id proof de uses randomly selected segment random seed termined challenge window wi given wi window index e number bi xe2 x88 x921 block immediately prior bewindows elapsed contract ginning wi 3 x0cif host consistently able demonstrate possession random segment likely storing file host storing 50% file unable complete approximately 50% proofs miners include proofs return transaction fee hosts consent file contracts free reject contract feel leaves vulnerable closed window attacks 6 5 2 arbitrary transaction data block withholding attacks transaction arbitrary data field type information nodes required store arbitrary data signed signature transaction nodes initially accept 64 kb arbitrary data block arbitrary data provides hosts clients decentralized way organize advertise available space files seeking host create decentralized file tracker arbitrary data implement types soft forks creating xe2 x80 x9canyone spend",
    "metadata": {
      "chunk_id": "6c0aef65875703ba2c7b17366a78383a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 11] hosts clients decentralized way organize advertise available space files seeking host create decentralized file tracker arbitrary data implement types soft forks creating xe2 x80 x9canyone spend xe2 x80 x9d output restrictions specified arbitrary data miners understand restrictions block transaction spends output satisfying necessary stipulations naive nodes stay synchronized needing able parse arbitrary data random number generator subject manipulation block withholding attacks attacker withholds blocks find produce favorable random number attacker chance manipulate random number particular challenge furthermore withholding block manipulate random number cost attacker block reward attacker able 50% blocks 50% challenges manipulated remaining 50% random attacker fail storage proofs specifically fail half withholding attack protect attacks clients specify high challenge frequency large penalties missing proofs precautions sufficient deter financially motivated attacker controls 50%",
    "metadata": {
      "chunk_id": "613364ea91401e5e99b82498c466cc2d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 12] fail half withholding attack protect attacks clients specify high challenge frequency large penalties missing proofs precautions sufficient deter financially motivated attacker controls 50% network xe2 x80 x99s hashing power regardless clients advised plan potential byzantine attacks financially motivated 7 storage ecosystem sia relies ecosystem facilitates decentralized storage storage providers use arbitrary data field announce network standardized template 5 3 closed window attacks clients able read clients use anhosts complete storage proof proof nouncements create database potential hosts transaction makes blockchain miners form contracts trust maliciously exclude storage proofs blocks depriving transaction fees forcing 7 1 host protections penalty hosts alternatively miners extort hosts requiring large fees include storage contract requires consent storage proofs knowing important provider client allowing provider rethe average transaction termed closed win ject unfavorable",
    "metadata": {
      "chunk_id": "0900fdb9a74e5db373d6adf5d2c26219",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "penalty"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 13] hosts requiring large fees include storage contract requires consent storage proofs knowing important provider client allowing provider rethe average transaction termed closed win ject unfavorable terms unwanted e g illegal files dow attack malicious miner artifi provider refuse sign contract cially xe2 x80 x9cclosed window xe2 x80 x9d entire file uploaded defense use large window size contract terms storage providers flexhosts reasonably assume percentage ibility advertise minimally 4 x0creliable offering low price agreeing minimal penalties losing files advertise highly reliable offering higher price agreeing harsher penalties losing files efficient market optimize storage strategies hosts vulnerable denial service attacks prevent submitting storage proofs transferring files responsibility host protect attacks 7 2 host client xe2 x80 x9cdownload fee xe2 x80 x9d xe2 x80 x9cupload incentive xe2 x80 x9d scenario clients offer reward sent file hosts compete provide best quality service",
    "metadata": {
      "chunk_id": "96e7db928e0b40adf5ad0d2b6e435695",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "illegal"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 14] host protect attacks 7 2 host client xe2 x80 x9cdownload fee xe2 x80 x9d xe2 x80 x9cupload incentive xe2 x80 x9d scenario clients offer reward sent file hosts compete provide best quality service clients request file time incentivizes hosts maximize uptime order collect rewards possible clients incentivize greater throughput lower latency proportionally larger rewards clients perform random xe2 x80 x9ccheckups xe2 x80 x9d reward hosts simply online wish download reiterate uptime incentives sia protocol entirely dependent client behavior payment downloads expected offered preexisting micropayment channels 11 micropayment channels allow clients consecutive small payments minimal latency blockchain bloat hosts transfer small segment file wait receive micropayment proceeding use consecutive payments allows party minimize risk cheated micropayments small fast payments seconds having major effect throughput client protections clients use erasure codes regenerating codes 4 safeguard hosts",
    "metadata": {
      "chunk_id": "e523fc639101845c0618e5ed07d7743e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 15] payments allows party minimize risk cheated micropayments small fast payments seconds having major effect throughput client protections clients use erasure codes regenerating codes 4 safeguard hosts going offline codes typically operate splitting file n pieces file recovered subset m unique pieces values n m vary based specific erasure code redundancy factor piece encrypted stored hosts allows client attain high file availability average network reliability low extreme example 10 100 pieces needed recover file client actually relying 10 reliable hosts average reliability availability improved rehosting file pieces hosts gone offline metrics benefit strategy client reduce latency downloading closest 10 hosts increase download speed downloading 10 fastest hosts downloads run parallel maximize available bandwidth 7 3 7 4 basic reputation system clients need reliable method picking quality hosts analyzing history insufficient history spoofed host repeatedly form contracts agreeing store",
    "metadata": {
      "chunk_id": "718d1a8495d4a561a9f84bf2881c57da",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 16] available bandwidth 7 3 7 4 basic reputation system clients need reliable method picking quality hosts analyzing history insufficient history spoofed host repeatedly form contracts agreeing store large xe2 x80 x9cfake xe2 x80 x9d files file containing zeros trivial perform storage proofs data actually storing mitigate sybil attack clients require hosts announce arbitrary data section include large volume time locked coins 10 coins time locked 14 days future host said created lock valued 140 coin days favoring hosts created high value locks clients mitigate risk sybil attacks valuable locks trivial create client choose equation picking hosts use large number factors uptime incentives storage proofs contain mechanism enforce constant uptime provisions require hosts transfer files clients request expect hosts holding clients xe2 x80 x99 files hostage demanding exorbitant fees download attack mitigated use erasure codes described section 7 2 strategy gives clients freedom ignore",
    "metadata": {
      "chunk_id": "b74c6daf0a8121d105f6bd8fd6eeb3eb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 17] request expect hosts holding clients xe2 x80 x99 files hostage demanding exorbitant fees download attack mitigated use erasure codes described section 7 2 strategy gives clients freedom ignore uncooperative hosts work cooperative result power shifts 5 x0ccluding price lock value volume storage offered penalties hosts willing pay losing files complex systems use human review metrics implemented band centralized setting minted number decrease 1 coin block minimum 30 000 coins block reached following target 10 minutes blocks annual growth supply 1 2 3 4 5 8 20 year growth 90% 39% 21% 11 5% 4 4% 3 2% 2 3% 8 siafunds inefficiencies sia incentive scheme primary goal sia provide blockchain enforces storage contracts mining reward indirectly linked total value contracts created siacoin especially initially likely high volatility hosts adversely affected value currency shifts mid contract result expect hosts increasing price long term contracts hedge volatility additionally hosts advertise",
    "metadata": {
      "chunk_id": "684486c15cc057902aa6cc7bb3d59f05",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 18] initially likely high volatility hosts adversely affected value currency shifts mid contract result expect hosts increasing price long term contracts hedge volatility additionally hosts advertise prices stable currency like usd convert siacoin immediately finalizing contract eventually use way pegs crypto assets hosts additional means insulate volatility sia product nebulous incorporated nebulous profit company sia intended primary source income company currency premining stable source income requires creating new currency tethering company xe2 x80 x99s revenue currency xe2 x80 x99s increasing value company needs spend money trade away portions source income additionally premining means entity control large volume currency potentially large disruptive control market instead nebulous intends generate revenue sia manner proportional value added sia determined value contracts set clients hosts accomplished imposing fee contracts contract created 3 9% contract fund removed distributed",
    "metadata": {
      "chunk_id": "dc859abc7fc6ba439655ab56d5a8985a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 19] generate revenue sia manner proportional value added sia determined value contracts set clients hosts accomplished imposing fee contracts contract created 3 9% contract fund removed distributed holders siafunds nebulous inc initially hold approx 88% siafunds early crowd fund backers sia hold rest siafunds sent addresses way siacoins sent addresses fund contracts miner fees siafunds transferred new address additional unspent output created containing siacoins earned siafunds previous transfer siacoins sent address siafunds 10 conclusion sia variant bitcoin protocol enables decentralized file storage cryptographic contracts contracts enforce storage agreements clients hosts agreeing store file host regularly submit storage proofs network host automatically compensated storing file regardless behavior client importantly contracts require hosts transfer files client requested instead band ecosystem created reward hosts uploading clients hosts find way coordinate mechanism arbitrary data",
    "metadata": {
      "chunk_id": "d260de82d10b745594b1a5cdd3b35f97",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 20] behavior client importantly contracts require hosts transfer files client requested instead band ecosystem created reward hosts uploading clients hosts find way coordinate mechanism arbitrary data field blockchain vari9 economics sia ous precautions enumerated mitithe primary currency sia siacoin gate sybil attacks unreliability hosts supply siacoins increase permanently siafunds mechanism generating fresh supply given miners block revenue nebulous inc company responsible subisdy block 300 000 coins release maintenance sia sia6 x0cfunds instead premining nebulous directly correlates revenue actual use network largely unaffected market games malicious entities play network currency miners derive block subsidy siafunds similar benefits long term hope add support way pegs currencies enable consumers insulate instability single currency believe sia provide fertile platform decentralized cloud storage trustless environments 7 x0creferences 1 satoshi nakamoto bitcoin peer peer electronic",
    "metadata": {
      "chunk_id": "b872965ee09b375b8ce8039bfb95d6d1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 21] consumers insulate instability single currency believe sia provide fertile platform decentralized cloud storage trustless environments 7 x0creferences 1 satoshi nakamoto bitcoin peer peer electronic cash system 2 r c merkle protocols public key cryptosystems proc 1980 symposium security privacy ieee computer society pages 122 133 april 1980 3 hovav shacham brent waters compact proofs retrievability proc asiacrypt 2008 vol 5350 dec 2008 pp 90 107 4 k v rashmi nihar b shah p vijay kumar optimal exact regenerating codes distributed storage msr mbr points product matrix construction 5 adam matt corallo luke dashjr mark friedenbach gregory maxwell andrew miller andrew peolstra jorge timon pieter wuille enabling blockchain innovations pegged sidechains 6 andrew poelstra treatise altcoins 7 gavin andresen o 1 block propagation https gist github com gavinandresen e20c3b5a1d4b97f79ac2 8 gregory maxwell deterministic wallets https bitcointalk org index php topic 19137 0 9 etotheipi ultimate",
    "metadata": {
      "chunk_id": "443c1d4875ef0855b599665fbd0497b3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  },
  {
    "text": "[Section 22] andresen o 1 block propagation https gist github com gavinandresen e20c3b5a1d4b97f79ac2 8 gregory maxwell deterministic wallets https bitcointalk org index php topic 19137 0 9 etotheipi ultimate blockchain compression w trust free lite nodes https bitcointalk org index php topic 88208 0 10 gregory maxwell proof storage distributed resource consumption costly https bitcointalk org index php topic 310323 0 11 mike hearn rapidly adjusted micro payments pre determined party https en bitcoin wiki contracts example 7 rapidly adjusted 28micro 29payments predetermined party 12 bitcoin developer guide https bitcoin org en developer guide 8 x0c",
    "metadata": {
      "chunk_id": "aed27ded9319d6cc4b7dabc85bd8e670",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Siacoin.txt"
    }
  }
]