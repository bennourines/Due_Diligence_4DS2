[
  {
    "text": "[Section 1] b blockstack technical whitepaper v 2 0 x0cparts whitepaper published earlier following peer reviewed conferences magazine xe2 x80 xa2 m ali j nelson r shea m j freedman xe2 x80 x9cblockstack global naming storage system secured blockchains xe2 x80 x9d 2016 usenix annual technical conference denver co june 2016 xe2 x80 xa2 j nelson m ali r shea m j freedman xe2 x80 x9cextending existing blockchains virtualchain xe2 x80 x9d workshop distributed cryptocurrencies consensus ledgers chicago il july 2016 xe2 x80 xa2 m ali j nelson r shea m j freedman xe2 x80 x9cbootstrapping trust distributed systems blockchains xe2 x80 x9d usenix login issue vol 41 3 pages 52 58 fall 2016 version 2 0 whitepaper describes major changes whitepaper 1 0 released 2017 earlier whitepaper referenced xe2 x80 xa2 m ali r shea j nelson m j freedman xe2 x80 x9cblockstack new internet decentralized applications xe2 x80 x9d whitepaper version 1 1 oct 2017 systems concepts described whitepaper discussed following",
    "metadata": {
      "chunk_id": "c9d69c4c24cbe2eab57040ef3d97c705",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 2] m ali r shea j nelson m j freedman xe2 x80 x9cblockstack new internet decentralized applications xe2 x80 x9d whitepaper version 1 1 oct 2017 systems concepts described whitepaper discussed following doctoral dissertations respective authors whitepaper xe2 x80 xa2 m ali trust trust design new internet phd dissertation princeton university june 2017 xe2 x80 xa2 j nelson wide area software defined storage phd dissertation princeton university june 2018 x0cdisclaimer blockstack tokens xe2 x80 x9cstacks tokens xe2 x80 x9d xe2 x80 x9cstacks xe2 x80 x9d crypto asset currently developed blockstack token llc delaware limited liability company website found www stackstoken com whitepaper constitute offer sale stacks tokens mechanism purchasing stacks offer sale stacks tokens related instrument occur based definitive offering documents stacks tokens communication deemed xe2 x80 x9ctesting waters xe2 x80 x9d material regulation securities act 1933 obligation complete offering regulation choose",
    "metadata": {
      "chunk_id": "73cb0edc0163a67bda2be99a358af625",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 3] based definitive offering documents stacks tokens communication deemed xe2 x80 x9ctesting waters xe2 x80 x9d material regulation securities act 1933 obligation complete offering regulation choose offering people indicate interest investing offering regulation able sales securities exchange commission sec xe2 x80 x9cqualified xe2 x80 x9d offering statement filed sec information offering statement complete information providing differ important ways read documents filed sec investing money consideration solicited sent response accepted offer buy securities accepted purchase price received offering statement filed company sec qualified sec offer withdrawn revoked obligation commitment kind time notice acceptance given date qualification indication interest involves obligation commitment kind person interested investing offering stacks tokens review disclosures publicly filed offering statement relating offering copy available www sec gov blockstack registered licensed supervised broker",
    "metadata": {
      "chunk_id": "3c90005be92f5047382ca11782c91ea9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 4] person interested investing offering stacks tokens review disclosures publicly filed offering statement relating offering copy available www sec gov blockstack registered licensed supervised broker dealer investment adviser securities exchange commission sec financial industry regulatory authority finra financial regulatory authority licensed provide financial advice services x0cthe blockstack decentralized computing network muneeb ali jude nelson aaron blankstein ryan shea michael j freedman xe2 x88 x97 https blockstack org whitepaper version 2 0 30 2019 abstract paper present blockstack decentralized computing network blockstack provides stack alternative traditional cloud computing building secure private applications compared traditional internet applications key differentiator decentralized applications enabled blockstack business logic data processing runs client instead centralized servers hosted application providers ways transition decentralized computing similar transition",
    "metadata": {
      "chunk_id": "41b35c8f928d40b8a063163570f49e76",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "regulatory"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 5] applications enabled blockstack business logic data processing runs client instead centralized servers hosted application providers ways transition decentralized computing similar transition mainframes desktop computing 1980s blockstack follows end end design principle core network simple possible pushing complexity edges e user devices user controlled storage foundation network stacks blockchain designed scale decentralized applications b incentivize developers build high quality applications network stacks blockchain uses novel tunable proofs election system securely bootstrap new blockchain new smart contracting language clarity enables powerful chain expressibility optimizing security predictability smart contracts admitting static analysis transactions key component architecture highly scalable performant decentralized storage system called gaia enables user controlled private data lockers users connect private data lockers blockstack client software applications write user data",
    "metadata": {
      "chunk_id": "4f2e1c725bb851eee50a6ed9bc7235da",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 10] applications blockstack modular developers easily customize integrate alternative technologies paper major revision earlier 2017 whitepaper incorporates evolution design informed lessons production deployments feedback application developers parts 2016 peer reviewed publications 8 9 10 outdated encourage readers refer paper latest blockstack design paper introduces design new stacks blockchain designed scale decentralized applications provide incentives developers building high quality applications section 2 present new smart contracting language clarity optimizes security predictability section 3 outline design gaia decentralized storage system section 4 authentication protocol section 5 developer tools section 6 highlight ways application developers currently blockstack section 7 1 1 decentralized computing overview decentralized systems particular type distributed system single entity control underlying infrastructure nodes economic incentives participate network recent interest",
    "metadata": {
      "chunk_id": "d04cf225a86e2b608e566f3ca835e9e2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 11] decentralized computing overview decentralized systems particular type distributed system single entity control underlying infrastructure nodes economic incentives participate network recent interest decentralized networks started release bitcoin whitepaper 11 blockchains cryptocurrencies play central role contemporary decentralized systems recommend readers 12 background blockchains cryptocurrencies different types decentralized systems production today primary goal bitcoin currently largest blockchain network track resolve ownership bitcoin digital currency goal ethereum 13 general purpose construct xe2 x80 x9cworld computer xe2 x80 x9d enable smart contracts decentralized applications filecoin 14 attempt construct network decentralized file hosting storage contrast blockstack attempts realize fullstack decentralized computing focusing enabling secure private applications blockchain layer handles minimal state logic 1 2 design goals design blockstack optimizes following properties 1",
    "metadata": {
      "chunk_id": "d78ea36c61e8ef7a10d9430f7095c76d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 13] approaches xe2 x80 x9cheavy xe2 x80 x9d blockchains xe2 x80 x9cworld computer xe2 x80 x9d design philosophy 13 15 16 17 minimal logic state blockchain layer achieve scalability blockstack minimizes application logic data xe2 x80 x9clight xe2 x80 x9d blockchain layer blockchain operations application logic storage inherently slower xe2 x80 x9coff chain xe2 x80 x9d approaches need synchronize validate state wide range networks devices imposes significant limits throughput operations limiting factor underlying bandwidth global connectivity memory storage available typical network nodes e physical limitations vs protocol limits localized state changes vs global state changes blockstack network uses stack approach ensure applications built blockstack scalable interactions applications result local state changes vs global state changes possible storage system gaia section 4 authentication protocol section 5 fundamental components network xe2 x80 x94 enable applications interact user xe2 x80",
    "metadata": {
      "chunk_id": "4939d0c64eea141bdd3da5391f3e2cb1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 14] state changes vs global state changes possible storage system gaia section 4 authentication protocol section 5 fundamental components network xe2 x80 x94 enable applications interact user xe2 x80 x99s private data locker authenticate user issuing blockchain transaction stacks blockchain coordinate global state transitions consistent way registering globally unique username decentralized fashion reliable cloud like storage vs peer storage applications built blockstack store data user private data lockers don xe2 x80 x99t need store user data access credentials server approach puts users control data reduces complexity developers developers longer need run servers databases pay cloud infrastructure bills behalf users avoid reliability performance issues inherent peer topeer storage 18 repurpose existing cloud storage providers decentralized wide area file system xe2 x80 x94 blockchain layer stores pointers user xe2 x80 x99s data lockers stack sdks developers blockstack takes xe2 x80",
    "metadata": {
      "chunk_id": "b27e59312b0749278da549cc4fcf90e5",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 15] existing cloud storage providers decentralized wide area file system xe2 x80 x94 blockchain layer stores pointers user xe2 x80 x99s data lockers stack sdks developers blockstack takes xe2 x80 x9cfull stack xe2 x80 x9d approach provides default options layers required develop decentralized applications developer sdks abstract away complexity blockchain technologies work application developers build applications ease interfaces sdks section 6 layers developer stack modular technologies needed addition differences contemporary decentralized computing approaches smart contract language makes unique design decisions optimize security predictability smart contracts section 3 details 4 x0c1 3 new model applications blockstack provides developers new model constructing applications ensuring applications decentralized users control default 1 opaque databases client server model databases core application server needs store query large amounts user data decentralized computing developers don",
    "metadata": {
      "chunk_id": "af64dc5b27dcae5c5097d474897f1c1a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 16] decentralized users control default 1 opaque databases client server model databases core application server needs store query large amounts user data decentralized computing developers don xe2 x80 x99t need worry maintaining securing databases host data place developers focus app logic users download apps plugin private data lockers databases functionally equivalent xe2 x80 x9csearch indexers xe2 x80 x9d old internet xe2 x80 x94 services index public data create indexes underlying decentralized data 2 servers client server model apps scale adding servers computations users execute server decentralized computing apps run client new user brings computation storage capacity network relying app developers developers need supply minimal infrastructure hosting application code user brings storage computing resources need use app 3 smart contracts client server model global state changes coordinated central server functions sole authority truth network decentralized computing state changes",
    "metadata": {
      "chunk_id": "027ff22eb6011426327a26bc067c7371",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 17] computing resources need use app 3 smart contracts client server model global state changes coordinated central server functions sole authority truth network decentralized computing state changes occur smart contracts executing open blockchain 4 decentralized authentication traditional internet users authenticate trusted authentication process application maintains user database application authenticates user password second factor application relies party identity service like google facebook use oauth 19 protocol obtain assertion identity service course approaches remove control process users decentralized computing authentication performed user xe2 x80 x99s client cryptographically signing statement proving control particular username anchored blockchain application independently verify proofs 5 native tokens traditional internet applications payment activities usually performed party services like credit cards digital tokens native asset decentralized computing platforms like",
    "metadata": {
      "chunk_id": "f8756da4d06877d0aab2a427bccdac78",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 18] proofs 5 native tokens traditional internet applications payment activities usually performed party services like credit cards digital tokens native asset decentralized computing platforms like blockstack ethereum users direct ownership tokens use directly register digital assets smart contracts pay executing smart contracts use native tokens programmed smart contracts build subscription services automate app functionality programmable tokens traditionally available developers traditional internet apps 5 x0c1 4 layers decentralized computing blockstack decentralized computing network logically exists xe2 x80 x9capplication layer xe2 x80 x9d traditional internet design blockstack network composed multiple systems provide necessary components implementing decentralized applications 1 stacks blockchain foundation blockstack network stacks blockchain enables users register control digital assets like universal usernames register execute smart contracts digital assets like universal",
    "metadata": {
      "chunk_id": "929e041b796c0ade349491898bcfc5e7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 19] stacks blockchain foundation blockstack network stacks blockchain enables users register control digital assets like universal usernames register execute smart contracts digital assets like universal usernames turn allow users control data storage xe2 x80 x94users link access credentials private data lockers universal usernames 2 gaia gaia storage system user controlled storage system enables applications interact private data lockers users host encrypted data lockers cloud provider local disk remote storage importantly user controls choice underlying provider data gaia encrypted signed client user xe2 x80 x99s cryptographic keys data lockers users discovered looking information stacks blockchain 3 blockstack authentication blockstack authentication protocol protocol decentralized authentication applications protocol enables users authenticate identities provide information gaia location store user xe2 x80 x99s application data 4 blockstack libraries sdks software stack developer",
    "metadata": {
      "chunk_id": "b5e1fa068634770f973926b1275f634d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 20] applications protocol enables users authenticate identities provide information gaia location store user xe2 x80 x99s application data 4 blockstack libraries sdks software stack developer libraries sdks application developers users interact components blockstack network example blockstack client software allows users register manage identities blockstack xe2 x80 x99s developer libraries easy developers build blockstack applications create traditional web applications 2 stacks blockchain blockstack network xe2 x80 x99s foundational layer stacks blockchain stacks blockchain provides global consensus coordination layer network implements native token blockstack network called stacks token stacks tokens consumed xe2 x80 x9cfuel xe2 x80 x9d users register digital assets like universal usernames software licenses pointers storage lockers etc pay miners registering executing smart contracts section present high level design stacks blockchain details designs implemented evolving recommend",
    "metadata": {
      "chunk_id": "4ce1859fca0caa0861e32da639526deb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 21] software licenses pointers storage lockers etc pay miners registering executing smart contracts section present high level design stacks blockchain details designs implemented evolving recommend reading stacks improvement proposals sips components1 plan update 1 available https github com blockstack blockstack core tree develop sip 6 x0cthis paper sips accepted stacks improvement process stacks blockchain incorporates following design decisions 1 tunable proofs mechanism leader election 2 proof burn mining algorithm reuse hashpower existing blockchains 3 novel peer network atlas uses random graph walks peer connectivity reduces data required achieve consensus 4 smart contracting language clarity non turing complete interpreted blockchain versions current stacks blockchain xe2 x80 x9cversion 1 xe2 x80 x9d initial implementation deploy basic functionality stacks blockchain v1 uses bitcoin network implement consensus algorithm support stacks token operations like transfer operations",
    "metadata": {
      "chunk_id": "938e432c95d1cc03b510de7b306ecbeb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 22] 1 xe2 x80 x9d initial implementation deploy basic functionality stacks blockchain v1 uses bitcoin network implement consensus algorithm support stacks token operations like transfer operations stacks blockchain v1 implements smart contracts use cases like blockstack naming system 8 details implementation functioning version 1 implementation available github 20 remainder section discusses design xe2 x80 x9cversion 2 xe2 x80 x9d stacks blockchain stacks blockchain v2 implements functionality new consensus algorithm smart contract language major upgrade version 1 2 1 leader election blockstack xe2 x80 x99s generation blockchain operated logically layer 1 l1 transaction 1 1 correspondence l1 bitcoin transaction reason ensure difficulty reorganizing blockstack xe2 x80 x99s blockchain hard reorganizing bitcoin xe2 x80 x99s blockchain xe2 x80 x93 lesson learned security problems smaller blockchain networks like namecoin 8 stacks blockchain uses tunable proofs mechanism leader election",
    "metadata": {
      "chunk_id": "60f3258d83d6a27a46071449f6133821",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 23] reorganizing bitcoin xe2 x80 x99s blockchain xe2 x80 x93 lesson learned security problems smaller blockchain networks like namecoin 8 stacks blockchain uses tunable proofs mechanism leader election process tunable proofs mechanism leader election system input multiple mechanisms adapt relative weight given input example tunable proofs combine native proof work algorithm added functionality reuse hash power established blockchain goal tunable proofs securely bootstrap new blockchain slowly transition native pow mechanism current tunable proofs mechanism parts native proof work b proof burn cryptocurrency initially proof burn mining weight proof burn miners burn cryptocurrency indicate interest participating mining process elected leader candidate burns underlying cryptocurrency e bitcoin commits initial set transactions leader xe2 x80 x99s block commitment serves leader xe2 x80 x99s fork selection block xe2 x80 x99s consensus hash include prior block header event multiple competing",
    "metadata": {
      "chunk_id": "8a3a0bfcb3fa14e27e785dc458c6a297",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 24] commits initial set transactions leader xe2 x80 x99s block commitment serves leader xe2 x80 x99s fork selection block xe2 x80 x99s consensus hash include prior block header event multiple competing forks 7 x0cleaders choose xe2 x80 x9cmine xe2 x80 x9d losing forks receive block rewards transaction fees recover burned cryptocurrency proof burn mechanism stacks blockchain allows high validation throughput number stacks transactions processed decoupled transaction processing rate underlying xe2 x80 x9cburn chain xe2 x80 x9d e bitcoin proof burn elections allows entire blocks stacks transactions confirm new block underlying burn chain low latency block inclusion enabling single leader election proof ofburn consensus algorithm allows current leader immediately include new transaction mempool stacks block block streaming model allows users learn block includes transaction seconds open leadership set proof burn election allows leader mechanism ensures stacks blockchain open blockchain",
    "metadata": {
      "chunk_id": "24d37c57993bc5662f6e54600559f6f7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 25] stacks block block streaming model allows users learn block includes transaction seconds open leadership set proof burn election allows leader mechanism ensures stacks blockchain open blockchain opposed closed blockchains rely fixed leadership sets delegated proof stake systems behave functionally closed sets performing single leader election consensus algorithm ensures leaders don xe2 x80 x99t need coordinate participation mining hardware work required participation leader involves burning cryptocurrency traditional proof work mining scheme mining hardware necessary participate leader acquire burn cryptocurrency participate mining afford minimal fair mining pools stacks blockchain natively supports fair mining pools participating network burn cryptocurrency support election given leader users commit xe2 x80 x9cuser support burns xe2 x80 x9d share equal proportion leader given stacks block xe2 x80 x99s rewards ability failover design ensures event burn chain unstable unsuitable mining",
    "metadata": {
      "chunk_id": "7ad930cdd23e93d1dcaccc3f1b6fafaf",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 26] commit xe2 x80 x9cuser support burns xe2 x80 x9d share equal proportion leader given stacks block xe2 x80 x99s rewards ability failover design ensures event burn chain unstable unsuitable mining stacks chain stacks chain use different burn chain details proof burn component available 21 xe2 x80 x99s possible proof burn component needed future native hash power stacks blockchain 8 x0c2 2 tunable proofs stacks blockchain includes native proof work pow component consensus algorithm addition proof burn combination enables sharing security responsibility chain proof burn election system described sip 001 combination native pow proof burn current implementation tunable proofs system allows responsible introduction native pow mining proof burn ensures chain stability proof work interest low tunable aspect opens path migration underlying burn chain deteriorates tunable proofs enable research proof work proof stake mechanisms slowly introduce years tunable fashion current native pow component",
    "metadata": {
      "chunk_id": "9419d71e84d05ca8298b993182fcd158",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 27] aspect opens path migration underlying burn chain deteriorates tunable proofs enable research proof work proof stake mechanisms slowly introduce years tunable fashion current native pow component leader election works allowing leader candidates include proof work nonce burn transaction optionally work required produce nonce e function number leading zeros resulting hash count candidate xe2 x80 x99s xe2 x80 x9cburn xe2 x80 x9d initially 5% cap native pow relative submitted burn native pow component undergoing substantial development design details fleshed section corresponding sip updated 2 3 atlas peer network atlas peer network content addressable peer network implements gossip protocol peer keeps track peers network peer attempts store replica data network capacity network rate limited stacks blockchain new entry data set associated transaction stacks blockchain atlas peer network works subsystem stacks blockchain xe2 x80 x99s designed unstructured peer network avoid issues nodes",
    "metadata": {
      "chunk_id": "02602355e928baf196a507b07ee71ada",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 28] stacks blockchain new entry data set associated transaction stacks blockchain atlas peer network works subsystem stacks blockchain xe2 x80 x99s designed unstructured peer network avoid issues nodes joining leaving network 18 22 nodes replica data index data available stacks blockchain new atlas nodes quickly sync data need store know advance data store peers properly generally available nodes peer peer networks atlas network functions xe2 x80 x9cextended storage xe2 x80 x9d subsystem stacks blockchain design approach rely little possible interacting directly stacks blockchain store little data possible applications blockstack blockstack naming system bns smart contract 8 essential mechanism storing immutable timestamped data bns associate usernames routing information discover user xe2 x80 x99s profile application data blockchains storing kind data directly blockchain chose instead store hashes blockchain space expensive implement separate peering network exchanging data corresponds",
    "metadata": {
      "chunk_id": "b953cd9ad89e35c7b2103e3fecdf4f55",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 29] x99s profile application data blockchains storing kind data directly blockchain chose instead store hashes blockchain space expensive implement separate peering network exchanging data corresponds hashes 9 x0c2 4 stacks token usage native stacks token implemented stacks blockchain enables foundational operations blockstack network 1 fuel register digital assets stacks token register different kinds digital assets like usernames domain names software licenses podcasts 2 fuel register execute smart contracts executing smart contracts requires fuel fund cost verifying correctness smart contract executing stacks tokens cover cost storing smart contract stacks blockchain 3 transaction fees stacks tokens pay transaction fees including transaction stacks blockchain 4 anchored app chains apps massively popular blockstack blockchain scalability ramp app initialize blockchain stacks blockchain xe2 x80 x9capp chain xe2 x80 x9d burns stacks mining progress list exhaustive xe2 x80 x94 blockstack",
    "metadata": {
      "chunk_id": "486d6c60c156f8e70c5a9a817aefe42a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 30] popular blockstack blockchain scalability ramp app initialize blockchain stacks blockchain xe2 x80 x9capp chain xe2 x80 x9d burns stacks mining progress list exhaustive xe2 x80 x94 blockstack network matures expect network participants discover invent uses stacks tokens xe2 x80 x99re currently actively researching xe2 x80 x9capp staking xe2 x80 x9d mechanism token holders potentially participate developer incentive program called xe2 x80 x9capp mining xe2 x80 x9d 23 3 clarity smart contracting language stacks blockchain supports launching execution smart contracts programmatic control digital assets new smart contracting language called clarity optimizes security predictability informed key design goals differentiate prior smart contracting systems 1 language readily permit fast accurate static analysis runtime space requirements support language non turing complete execution single transaction taken entire history transactions language turing complete 2 smart contracts interpreted vm",
    "metadata": {
      "chunk_id": "0516b8d325df9e70f35ed259b2dc40d2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 31] analysis runtime space requirements support language non turing complete execution single transaction taken entire history transactions language turing complete 2 smart contracts interpreted vm compiled code written developers deployed directly blockchain achieve properties created new lisp variant specially designed writing smart contracts detailed discussion design clarity sip 002 24 10 x0c3 0 1 language overview clarity similar lisp variants e g scheme following differences 1 recursion illegal lambda function 2 looping performed map filter fold 3 atomic types booleans integers fixed length buffers principals 4 additional support lists atomic types variable length lists clarity appear function inputs e support list operations like append join support named typed tuples 5 variables created let binding support mutating functions like set 6 defining constants functions allowed simplifying code define statements purely syntactic definition inlined contract rejected illegal definitions",
    "metadata": {
      "chunk_id": "93e9235c33e4ea5071fce2b29d617a62",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine",
          "illegal"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 24.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 32] let binding support mutating functions like set 6 defining constants functions allowed simplifying code define statements purely syntactic definition inlined contract rejected illegal definitions private functions defined way called functions defined given smart contract 7 functions specified define public statements public functions arguments functions specify types smart contracts power 1 public functions smart contracts smart contracts identified hash exist time calling smart contract published paired illegality recursion prevents function reentrancy common attack vector existing smart contracting platforms 2 control digital assets smart contracts order principals like public keys multi signature addresses smart contract data space data data space stored maps stores relate typed tuple typed tuple like typed key value store opposed table data structure map associate given key exactly value smart contract fetch data smart contracts maps smart contract directly update data maps chose",
    "metadata": {
      "chunk_id": "146a82a05d66ca8b40fb82dffa8f7a5c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine",
          "illegal"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 24.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 33] typed tuple like typed key value store opposed table data structure map associate given key exactly value smart contract fetch data smart contracts maps smart contract directly update data maps chose use data maps opposed data structures reasons 1 simplicity data maps allows simple implementation vm easier reasoning functions inspecting given function definition clear maps modified maps keys affected given invocation 11 x0c2 interface data maps ensures return types map operations fixed length requirement static analysis smart contracts xe2 x80 x99 runtime costs properties 3 0 2 turing incompleteness static analysis creating non turing complete language essential design consideration multitude benefits programming hostile environment blockchains 1 turing incompleteness enables static analysis determine cost executing given transaction allows network know priori exactly fee charge given transaction improves client behavior cost broadcasting transaction known client easily conveyed user",
    "metadata": {
      "chunk_id": "09c9b87902b1bae54e5ba8d5b01ecd01",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 34] determine cost executing given transaction allows network know priori exactly fee charge given transaction improves client behavior cost broadcasting transaction known client easily conveyed user 2 turing incompleteness allows static analysis quickly determine important properties contracts single transaction invoke improves user experience clients warn users possible effects given transaction 3 improved accurate static analysis allow programmers confidently analyze smart contracts possible faults mistakes smart contracts launch fundamentally believe mistake treat smart contract programming like forms programming properties blockchains particulars smart contracts important believe trading programming ease increased human machine comprehension smart contract behavior good trade existing practical uses smart contracts bear xe2 x80 x94 history turing complete smart contracts basically history smart contract bugs clarity static analyses run broadcasting smart contract provide information",
    "metadata": {
      "chunk_id": "e93bd3bdbf527e11c4f04eebcbe8d416",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "bug"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 35] uses smart contracts bear xe2 x80 x94 history turing complete smart contracts basically history smart contract bugs clarity static analyses run broadcasting smart contract provide information 1 cost broadcast given transaction function input size 2 sets transactions able modify particular table future work support advanced analysis features ability automatically check proofs smart contracting code 3 0 3 interpreted languages vs compiled second key design decision clarity opting interpreted language compiled e g compiling wasm design decision use compiler fundamental difference contemporary approaches main reason design decision ability reason implementation bugs 12 x0cimplementation bugs fact life best coding standards inescapable applies smart contract bugs blockchains applies code smart contract bugs complicated handle blockchain communities adhere xe2 x80 x9ccode law xe2 x80 x9d philosophy rules committed blockchain source ultimate truth developers writing smart contracts express",
    "metadata": {
      "chunk_id": "a8ad1803ae67b8145f32d32801130f52",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "bug"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 36] contract bugs complicated handle blockchain communities adhere xe2 x80 x9ccode law xe2 x80 x9d philosophy rules committed blockchain source ultimate truth developers writing smart contracts express intent source code compilation translates intent actual rules leads situation actual rules differ developer intent bugs compiler leads nasty situations people argue developer intent important rules important stacks blockchain avoid situation removing compilation step directly committing developer intent blockchain developer intent diverges rules let xe2 x80 x99s consider case bug implementation smart contracting language e vm smart contracting language uses interpreter bugfix relatively easy apply worlds contract code blockchain apply bugfix interpreter restart blockchain nodes boot genesis applying transactions smart contracting language compiled bug resides compiler vm remedy obvious likely contentious bug compiler cause generated code ultimately broadcast blockchain behave differently",
    "metadata": {
      "chunk_id": "24b5d76376a3441e8e516d8489fa9f72",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "bug"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 37] transactions smart contracting language compiled bug resides compiler vm remedy obvious likely contentious bug compiler cause generated code ultimately broadcast blockchain behave differently intended code developer xe2 x80 x9ccode law xe2 x80 x9d philosophy seen crypto communities situation complicated code written developer correct generated transactions blockchain wrong xe2 x80 x99s realistic collect developer xe2 x80 x99s source code recompile especially verify source code wasnt changed suspect practice situations code published blockchain ultimate source truth cases case developers reasoning verifying code source code believe high level interpreted language paramount importance ensuring correct smart contract execution 3 0 4 related work design clarity language informed wide range existing smart contracting languages work non turing complete languages pact 25 simplicity 26 informed design choices clarity xe2 x80 x94 notably clarity xe2 x80 x99s non turing completeness clarity",
    "metadata": {
      "chunk_id": "dbd1ff564522c316a7699a527887fdca",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "bug"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 38] existing smart contracting languages work non turing complete languages pact 25 simplicity 26 informed design choices clarity xe2 x80 x94 notably clarity xe2 x80 x99s non turing completeness clarity syntactically similar pact languages differ significantly interact stored data handle types making clarity readily analyzed static analyses 13 x0c4 gaia user controlled storage blockstack gives users control data gaia storage system usercontrolled storage system enables applications interact private data lockers users host data lockers cloud provider data storage options like private hosting importantly user controls provider use data gaia encrypted signed user controlled cryptographic keys logically gaia works wide area file system mounted store files gaia storage system users designate location gaia storage location stores data stacks blockchain atlas subsystem stores xe2 x80 x9cpointers xe2 x80 x9d gaia locations users log applications services blockstack authentication protocol sec 5",
    "metadata": {
      "chunk_id": "a855439986164cf88bdaebd49f3eb506",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 39] gaia storage location stores data stacks blockchain atlas subsystem stores xe2 x80 x9cpointers xe2 x80 x9d gaia locations users log applications services blockstack authentication protocol sec 5 pass location application information applications know communicate specified gaia storage locker application stores data storage specified user gaia xe2 x80 x99s design philosophy reuse existing cloud providers infrastructure way end users don xe2 x80 x99t need trust underlying cloud providers treat cloud storage providers like amazon s3 google cloud storage local disk xe2 x80 x9cdumb drives xe2 x80 x9d store encrypted signed data cloud providers visibility user xe2 x80 x99s data encrypted data blobs associated public keys data hashes discoverable stacks blockchain cloud providers tamper users xe2 x80 x99 data writing data gaia hub involves post ing appropriate location server hub validates posts checking write request carries signed authentication token token signed private key controls",
    "metadata": {
      "chunk_id": "9a38f8f22e59c574c4db08060b89cf21",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 40] xe2 x80 x99 data writing data gaia hub involves post ing appropriate location server hub validates posts checking write request carries signed authentication token token signed private key controls particular bucket written provision separate buckets application user use user derives different private keys applications private keys grants access specific buckets gaia server gaia user xe2 x80 x99s blockchain verified routing information contains url points signed json object signed owner key username signed json object contains urls point user xe2 x80 x99s gaia data locker application knows location user xe2 x80 x99s gaia data locker simply request file location standard http request look file created different user application perform sequential lookups entirely client imposes latency penalty initial lookups routing information cached locally browsers native applications subsequent lookups fast traditional data fetches internet figure 1 shows overview gaia looking data like werner id",
    "metadata": {
      "chunk_id": "d023de08c071edc922bd81bdc4f87d20",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "penalty"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 41] initial lookups routing information cached locally browsers native applications subsequent lookups fast traditional data fetches internet figure 1 shows overview gaia looking data like werner id works follows 1 lookup stacks blockchain hash pair 2 lookup hash blockstack xe2 x80 x99s atlas peer network obtain xe2 x80 x99s routing information file 14 x0cfigure 1 overview gaia steps looking data 3 user xe2 x80 x99s gaia url routing file look url connect storage backend 4 data designated gaia service decrypt needed reader access rights verify respective signature hash steps 1 2 performed single blockstack core v1 names endpoint iterative reads writes handled automatically developer libraries performance goal architecture comparable performance traditional internet applications built cloud providers introduce meaningful security fault tolerance benefits removing central points control failure xe2 x80 x94 paying small overhead read write performance worthwhile long overhead significant",
    "metadata": {
      "chunk_id": "ba27fe2be66354c84c49dc4695d7bb31",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 43] backends storage backends deal bulk data read writes atlas network involved user changing updating storage backends public key mappings b new users registered system registering new domains usernames routing file hashes announced stacks blockchain blockchain bottleneck scalability relative atlas subsystem written extremely infrequently user use chain registrars enables users register single blockchain transaction support hundreds thousands user registrations day comparable number new users day traditional cloud based platforms scaling gaia billions users practice likely uncover scalability issues obvious right addressing challenges area ongoing research future work 5 authentication user accounts essential internet applications blockstack provides users universal username works applications need passwords instead password based authentication users authenticate publickey cryptography locally running software client handles sign requests respective applications signs authentication",
    "metadata": {
      "chunk_id": "75e0f8fe5bf6fe01674a5f7fcaac557f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 44] need passwords instead password based authentication users authenticate publickey cryptography locally running software client handles sign requests respective applications signs authentication requests authentication protocol blockstack auth connects apps user xe2 x80 x99s gaia hub app specific private keys information applications store user data users verify data produced users authentic 5 1 single sign blockstack auth uses public key cryptography authentication user signs application app ability generate store signed data users read authenticate turn proves users signed user legitimate blockstack purpose sign provide application client information generate store authentication data means auth functionality run solely user xe2 x80 x99s computer form authenticator app names registered stacks blockchain application authenticator app date view 1 names exist 2 public keys gaia hubs obviates need server identity provider application client needs able contact stacks blockchain peer",
    "metadata": {
      "chunk_id": "33e6e3ec3609449d5eca0cbe21945159",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 45] stacks blockchain application authenticator app date view 1 names exist 2 public keys gaia hubs obviates need server identity provider application client needs able contact stacks blockchain peer authenticate user data user provides application network address 16 x0ctheir preferred stacks peer sign user signs blockstack application clicking xe2 x80 x9clogin xe2 x80 x9d button application blockstack js sdk redirects user blockstack authenticator app request sign user presented choice blockstack ids use sign list permissions application needs user selecting id authenticator directs user application passes application pieces information 1 user xe2 x80 x99s username hash public key 2 application specific private key encrypting signing user xe2 x80 x99s data key deterministically generated user xe2 x80 x99s master private key id sign application xe2 x80 x99s http origin 3 urls user xe2 x80 x99s gaia hub preferred stacks blockchain peer use looking users data user presents username",
    "metadata": {
      "chunk_id": "9e6e245cb4c866a78103bc005079f86f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 46] user xe2 x80 x99s master private key id sign application xe2 x80 x99s http origin 3 urls user xe2 x80 x99s gaia hub preferred stacks blockchain peer use looking users data user presents username instructs application data found stored app read write application specific data persistently access users xe2 x80 x99 application specific data xe2 x80 x94all needing provide storage identity solution act signing simply clear application xe2 x80 x99s local state causing web browser client forget application specific private key 6 blockstack libraries sdks blockstack pbc public benefit corp open source contributors develop core protocols developer libraries blockstack developer libraries easier developers build applications blockstack network blockstack clients allow users interact components blockstack network applications 6 1 developer libraries blockstack designed developing decentralized apps easy possible developers complexity interacting stacks blockchain decentralzied storage hidden app",
    "metadata": {
      "chunk_id": "663dca541cd22b2376406a57965be120",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 47] network applications 6 1 developer libraries blockstack designed developing decentralized apps easy possible developers complexity interacting stacks blockchain decentralzied storage hidden app developers focus app logic blockstack open source repositories contain developer libraries number different platforms javascript web sdk blockstack js mobile sdks ios android libraries provided terms mit license available https github com blockstack libraries provide necessary apis code implementing authentication protocol directly interacting gaia servers generating stacks 17 x0ctransactions libraries allows developers create decentralized applications respect user xe2 x80 x99s security privacy easily developing traditional applications radiks applications wish share data complex social graphs useful efficient build indexes data radiks system server client library building interacting index radiks libraries enable developers create cross user structured data collections app queried field",
    "metadata": {
      "chunk_id": "2dd89c7a6db1faa0453286659225d982",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 49] allows users browse available blockstack applications register usernames authenticate applications available installing locally desktops web deployed form 2 blockstack cli command line utility allows power users developers interact blockstack xe2 x80 x99s protocols addition providing authentication functionality allows users generate raw transactions engage advanced data management tasks gaia 6 3 documentation community resources blockstack open source community maintains tutorials api documentation system design documents available github https docs blockstack org blockstack users developers following official community resources available xe2 x80 xa2 github software development takes place github https github com blockstack xe2 x80 xa2 forum power users developers answer technical questions share ideas help blockstack forum available https forum blockstack org 18 x0c xe2 x80 xa2 slack blockstack community uses public slack group real time chat available https blockstack slack com 7",
    "metadata": {
      "chunk_id": "32710499ee1c6e2feae534f2c99a94f7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 51] profile search indexer blockstack ecosystem contains number social applications 33 34 35 36 typically use blockstack auth combination radiks server deployment enable users efficiently discover fetch users xe2 x80 x99 data case app uses dedicated relay channel route encrypted messages users 33 publishing storage applications blockstack 37 38 39 40 41 42 use gaia store user data share non blockstack users conventional http urls developer incentives stacks blockchain broadens concept mining app developers xe2 x80 x9cmine xe2 x80 x9d stacks tokens publishing high quality application network mechanism called app mining designed incentive mechanism high quality applications network app mining program currently operated blockstack pbc independent reviewers developers submit application reviewed month receive payout based app performs app ranking mechanism applications reviewed set independent reviewers criteria makes good application application xe2 x80 x99s aggregate score determines",
    "metadata": {
      "chunk_id": "707507da2e263c219b597ae1f70f951b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 52] month receive payout based app performs app ranking mechanism applications reviewed set independent reviewers criteria makes good application application xe2 x80 x99s aggregate score determines ranking rankings payouts published monthly details app mining program outside scope paper readers https app co mining details 8 conclusion blockstack decentralized computing network provides stack developers building decentralized applications date 100 decentralized applications built network blockstack removes need developers 19 x0crun servers databases apps write data user controlled private data lockers instead decentralized storage system gives comparable performance traditional cloud storage introduces small overhead encryption decryption authentication protocol removes need password based logins known secure cryptographic authentication users able use single account services applications removing need continuously create new accounts new services developer libraries development",
    "metadata": {
      "chunk_id": "ca99a37554f5db6b75f00ef29044b6d0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 53] based logins known secure cryptographic authentication users able use single account services applications removing need continuously create new accounts new services developer libraries development decentralized apps platform easy building traditional internet applications paper presented latest design blockstack earlier production implementation 2016 2017 core design blockstack evolved incorporates lessons learned production deployments feedback developers decentralized applications main changes earlier 2017 whitepaper include description stacks blockchain uses new tunable proofs mechanism security bootstrap new blockchain b description new smart contract language focuses security predictability smart contracts xe2 x80 x99ve released blockstack open source 43 acknowledgements years people contributed design implementation blockstack like thank larry salibra ken liao guy lepage patrick stanley john light early contributions ideas hank stoever shreyas thiagaraj matthew little work",
    "metadata": {
      "chunk_id": "dde9e4e1e79dfb51550986335598d173",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 56] ali j nelson r shea m freedman xe2 x80 x9cblockstack global naming storage system secured blockchains xe2 x80 x9d proc usenix annual technical conference atc xe2 x80 x9916 june 2016 9 j nelson m ali r shea m j freedman xe2 x80 x9cextending existing blockchains virtualchain xe2 x80 x9d workshop distributed cryptocurrencies consensus ledgers dccl xe2 x80 x9916 chicago il june 2016 10 m ali j nelson r shea m j freedman xe2 x80 x9cbootstrapping trust distributed systems blockchains xe2 x80 x9d usenix login vol 41 3 pp 52 xe2 x80 x9358 2016 11 satoshi nakamoto xe2 x80 x9cbitcoin peer peer electronic cash system xe2 x80 x9d tech report 2009 https bitcoin org bitcoin pdf 12 narayanan j bonneau e felten miller s goldfeder bitcoin cryptocurrency technologies comprehensive introduction princeton nj usa princeton university press 2016 13 v buterin xe2 x80 x9ca generation smart contract decentralized application platform xe2 x80 x9d tech rep 2017 https github com ethereum wiki wiki white paper 14",
    "metadata": {
      "chunk_id": "af4b9e418692d6bca09e2f4f4b698f07",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 57] usa princeton university press 2016 13 v buterin xe2 x80 x9ca generation smart contract decentralized application platform xe2 x80 x9d tech rep 2017 https github com ethereum wiki wiki white paper 14 xe2 x80 x9cfilecoin cryptocurrency operated file network xe2 x80 x9d tech report 2014 http filecoin io filecoin pdf 15 https eos io 16 t hanke m movahedi d william xe2 x80 x9cdfinity technology overview series consensus system rev 1 xe2 x80 x9d 2018 https dfinity org 17 xe2 x80 x9cethereum 2 0 specifications xe2 x80 x9d 2019 https github com ethereum eth2 0 specs 18 eng keong lua j crowcroft m pias r sharma s lim xe2 x80 x9ca survey comparison peerto peer overlay network schemes xe2 x80 x9d ieee communications surveys tutorials vol 7 pp 72 xe2 x80 x9393 second 2005 19 xe2 x80 x9coauth xe2 x80 x9d https oauth net 20 xe2 x80 x9cblockstack core stacks blockchain v1 xe2 x80 x9d blockstack core tree v20 0 8 1 2018 https github com blockstack 21 xe2 x80 x9csip 001 burn election xe2 x80 x9d 2019",
    "metadata": {
      "chunk_id": "2c2cb2f8b79f46c1c8dece2998bfd20b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 58] x9d https oauth net 20 xe2 x80 x9cblockstack core stacks blockchain v1 xe2 x80 x9d blockstack core tree v20 0 8 1 2018 https github com blockstack 21 xe2 x80 x9csip 001 burn election xe2 x80 x9d 2019 https github com blockstack blockstack core blob develop sip sip 001 burn election md 22 stoica r morris d karger m f kaashoek h balakrishnan xe2 x80 x9cchord scalable peer peer lookup service internet applications xe2 x80 x9d proceedings 2001 conference applications technologies architectures protocols computer communications sigcomm xe2 x80 x9901 pp 149 xe2 x80 x93160 2001 23 xe2 x80 x9capp mining xe2 x80 x9d https app co mining 24 xe2 x80 x9csip 002 smart contract language xe2 x80 x9d 2019 https github com blockstack blockstackcore blob develop sip sip 002 smart contract language md 25 s popejoy xe2 x80 x9cthe pact smart contract language xe2 x80 x9d june 2017 https kadena io docs kadenapactwhitepaper pdf 26 r o xe2 x80 x99connor xe2 x80 x9csimplicity new language blockchains xe2 x80",
    "metadata": {
      "chunk_id": "0f600c9a717bad23235b915fbecf3281",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  },
  {
    "text": "[Section 59] popejoy xe2 x80 x9cthe pact smart contract language xe2 x80 x9d june 2017 https kadena io docs kadenapactwhitepaper pdf 26 r o xe2 x80 x99connor xe2 x80 x9csimplicity new language blockchains xe2 x80 x9d december 2017 blockstream com simplicity pdf https 27 xe2 x80 x9cgoogle cloud storage sla xe2 x80 x9d retrieved https cloud google com storage sla 2017 28 xe2 x80 x9cradiks xe2 x80 x9d https github com blockstack radiks 29 j e hunter xe2 x80 x9cgraphite docs xe2 x80 x9d feb 2019 https app graphite docs com 30 d travino xe2 x80 x9cnoteriot xe2 x80 x9d feb 2019 https note riot ai 31 xe2 x80 x9cforms id xe2 x80 x9d feb 2019 https forms id 32 xe2 x80 x9cblockusign xe2 x80 x9d feb 2019 https blockusign io 33 p bhardwaj carreira xe2 x80 x9cstealthy xe2 x80 x9d feb 2019 https www stealthy im 34 sewrathan r adjei f madutsa xe2 x80 x9cafari xe2 x80 x9d feb 2019 https afari io 35 t alves xe2 x80 x9crecall xe2 x80 x9d feb 2019 https app recall photos 36 t alves xe2 x80 x9ctravelstack xe2 x80 x9d",
    "metadata": {
      "chunk_id": "b200cec046009eb7913aff6c5b2225e8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Blockstack.txt"
    }
  }
]