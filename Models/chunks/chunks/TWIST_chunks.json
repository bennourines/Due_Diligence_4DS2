[
  {
    "text": "[Section 1] b twist revolutionising blockchain accessibility twist developers april 18 2018 note twist work progress project development driven nature paper continually updated new versions appear https twist network comments suggestions contact contact twist network 1 introduction twist blockchain based decentralised platform ecosystem aims increase accessibility blockchain innovative services features targeted casual cryptocurrency users programmers interested utilising blockchain technology features twist id strive simplify payment process familiar friendly create send transactions twist data aims provide simple clear interface allow users programmers read write encrypted data blockchain twist api provide modern language agnostic programming interface utilised developers integrate applications twist blockchain features services planned developed project progresses ultimate goal twist achieve widespread adoption create thriving self sustaining ecosystem twist coins pay blockchain based chain",
    "metadata": {
      "chunk_id": "d8607e02a2ba218d0e213148ae20f1cf",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 2] blockchain features services planned developed project progresses ultimate goal twist achieve widespread adoption create thriving self sustaining ecosystem twist coins pay blockchain based chain features fees allocated rewards node owners providing services stabilising securing network 2 twist coin 2 1 specification twist coin proof stake pos crypto currency based strat coin stratis initial supply twist 200 000 000 coins premined predominantly distributed airdrop twist fixed target block time 30 seconds uniform block reward 20 twist mined block given 2 blocks mined minute 1440 minutes day 365 days year approximately 2 1440 365 20 21 024 000 new twist mined year represents annual inflation rate 10 5% 2 2 distribution 200 000 000 twist coins premined 20 000 000 10% reserved development fund 10 000 000 5% reserved bounty fund remaining 170 000 000 85% airdropped bitcointalk forum members eligible sign airdrop forum member accounts account existed 2 weeks post count 15 1938 accounts",
    "metadata": {
      "chunk_id": "5dc3c07643e341a5658e59ae57a5833b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 3] fund 10 000 000 5% reserved bounty fund remaining 170 000 000 85% airdropped bitcointalk forum members eligible sign airdrop forum member accounts account existed 2 weeks post count 15 1938 accounts signed airdrop account received share coins 170 000 000 1938 87719 coins participant 3 encoding auxiliary data transactions blockchain based twist services rely data written retrieved twist core blockchain protocol defined facilitate 3 1 protocol specification twist transaction contains non zero number output addresses twist output address identifier 33 34 alphanumeric characters beginning number 1 represents potential destination twist payment normally addresses displayed base58 format address essence 20 byte binary string 20 bytes arbitrary information stored single address use output addresses simple transparent ways encoding data blockchain simply convert data included valid base58 addresses use outputs transaction transaction broadcast network clients ability decode addresses retrieve",
    "metadata": {
      "chunk_id": "e85e135386c3944b6cbfdb813b86fb9f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 4] simple transparent ways encoding data blockchain simply convert data included valid base58 addresses use outputs transaction transaction broadcast network clients ability decode addresses retrieve raw data utf 8 encoding encoding base58 process documented online brevity steps outlined paper 3 2 advantages drawbacks encoding data output addresses advantage needed lot complex code extract payload simply iterate output addresses transaction pass base58 decode function means existing tools block explorers easily adapted process display auxiliary data extra addresses clutter transactions confuse casual users fortunately block explorers wallets easily programmed hide excess addresses maintain simplified user experience necessary 4 twist id twist id public identifier assigned valid twist address id 3 18 character string consisting alphanumeric dash underscore characters za z0 9 address id assigned time ids unique case insensitive purposes twist ids simplify familiarise payment process users",
    "metadata": {
      "chunk_id": "165c72254e497b923f4612e80ae20f5b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 5] id 3 18 character string consisting alphanumeric dash underscore characters za z0 9 address id assigned time ids unique case insensitive purposes twist ids simplify familiarise payment process users allowing send receive transactions recognisable recipient identifiers standard base58 cryptographic addresses 4 1 encryption keys user registers twist id address elliptic curve diffie hellman ecdh key pair generated private key encrypted registering address xe2 x80 x9fs private key registration information public key encrypted private key written blockchain single transaction publicly visible utilising asymmetric key cryptography facilitates utilities encrypted communication twist id users x0c4 1 1 key generation user wishes register twist id ecdh asymmetric key pair securely computed secp256k1 curve key components formatted hex strings obvious reasons private key component encrypted written publicly blockchain 4 1 2 key encryption private keys twist id need stored blockchain retrieved",
    "metadata": {
      "chunk_id": "bb22dce1c5aa6b32e386388b65626186",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 6] curve key components formatted hex strings obvious reasons private key component encrypted written publicly blockchain 4 1 2 key encryption private keys twist id need stored blockchain retrieved automatically owner id blockchain public ledger accessible tools read private key encrypted way owner associated id decrypt ownership twist id defined having possession private key address id registered encrypting id private key registering address private key owner id able decrypt 4 1 3 encryption procedure 32 byte encryption key derived password based key derivation function address private key password address salt sha512 digest algorithm 10000 iterations 16 byte initialisation vector derived approach 5000 iterations digest algorithm derivations deterministic nature xe2 x80 x93 result derived given password salt industry standard 256 bit symmetric encryption aes 256 cipher block chaining mode utilising key initialisation vector securely encrypt id private key finally encrypted key converted",
    "metadata": {
      "chunk_id": "2ed255ea96ff97b33be4fbd7eece533a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 7] password salt industry standard 256 bit symmetric encryption aes 256 cipher block chaining mode utilising key initialisation vector securely encrypt id private key finally encrypted key converted base64 string ready written blockchain deriving encryption key address private key directly encrypt data arcane advantage allowing id data encrypted decrypted knowledge encryption key compromised funds stored associated address secure derivation function way 4 2 registration procedure twist id registered broadcasting transaction twist blockchain following properties 1 inputs unsigned transaction outputs uxto spendable registering address xe2 x80 x93 ensures id registration transactions provable ownership registering address registering address xe2 x80 x9fs private key required sign transaction 2 registration fee 50 twist time writing divided sent series 17 data encoded addresses fee acts deflationary measure twist currency coins effect burned fee acts deter individuals registering selfish ids",
    "metadata": {
      "chunk_id": "c8c74841549deac8a7ad55212e2dca93",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 8] fee 50 twist time writing divided sent series 17 data encoded addresses fee acts deflationary measure twist currency coins effect burned fee acts deter individuals registering selfish ids restricting ids availability users 3 exactly 17 data encoded addresses determined order address fixed acts indicator let network know examine transaction possible id registration second address decoded base58 contains id registered following 4 addresses contain public ecdh key generated user registering remaining 11 addresses contain encrypted private edch key 4 3 detecting id registrations valid twist id registrations discovered network following algorithm 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 procedure detect id registrations block blocks tx block txs vout tx vouts vout address id reg address startindex tx vouts index vout confirm id registration tx vins tx vouts startindex break end end end end end procedure",
    "metadata": {
      "chunk_id": "ac13c067b05fa77ba9cbea4c9ae501fa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 9] block blocks tx block txs vout tx vouts vout address id reg address startindex tx vouts index vout confirm id registration tx vins tx vouts startindex break end end end end end procedure confirm id registration vins vouts startindex paid 0 id pubkey privkey registrants startindex vouts length paid vouts value startindex continue startindex 1 id base 58 decode vouts address startindex 5 pubkey base 58 decode vouts address privkey base 58 decode vouts address end vin vins vin addresses registrants add end end isvalid id isvalid pubkey isvalid privkey id xe2 x88 x89 idset pubkey xe2 x88 x89 pubkeyset privkey xe2 x88 x89 privkeyset registrants 1 registrants xe2 x8a x84 registrantset paid id reg fee idset add id pubkeyset add pubkey privkeyset add privkey registrantset add registrants end end figure 1 twist id registration discovery algorithm remarks figure 1 1 13 transaction block twist core blockchain scanned determine includes output twist id registration flag address x0ctransaction",
    "metadata": {
      "chunk_id": "f9d75221f14d0d20a63062e2908dfeb0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 10] figure 1 twist id registration discovery algorithm remarks figure 1 1 13 transaction block twist core blockchain scanned determine includes output twist id registration flag address x0ctransaction found inspected ascertain contains valid id registration 18 28 output transaction flag address onwards parsed attempt retrieve id public key encrypted private key registration value output cumulatively totalled confirm fee paid 29 33 input address transaction added set registrant addresses 34 registration valid parsed id public key encrypted private key data correct format isvalid functions check length fields expected range fields contain illegal characters 35 idset pubkeyset privkeyset global sets populated running algorithm chronological order starting block successful registration id pubkey privkey registration added respective set registration valid id pubkey privkey use member respective set 36 registrants set singleton set id registered single address ambiguity address registered",
    "metadata": {
      "chunk_id": "da617a0198981434e340b29d29ca16a9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "illegal"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 11] privkey registration added respective set registration valid id pubkey privkey use member respective set 36 registrants set singleton set id registered single address ambiguity address registered registrations id address require inputs transaction originate registering address ensures owner owns private key address necessary sign uxto 37 registrants set subset global registrantset address id registered 38 total value sent data encoded burn addresses greater equal id registration fee requires determined coins burned registration successful 39 42 registration successful add elements respective sets 4 4 twist id transactions owner twist id send transaction twist id owner recipient able id sender coins spent transaction originated sender id xe2 x80 x9fs registrant address transactions contain encrypted messages decipherable owners involved ids transactions syntactically identical regular twist transactions publicly broadcast core blockchain auxiliary data facilitate transactions encoded",
    "metadata": {
      "chunk_id": "4e04ddfab304f6fefc01b63ae53f425e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 12] encrypted messages decipherable owners involved ids transactions syntactically identical regular twist transactions publicly broadcast core blockchain auxiliary data facilitate transactions encoded protocol previously specified paper e data encoded base58 output addresses 4 4 1 transaction structure twist id transaction following output structure 1 recipient address address recipient xe2 x80 x9fs id registered value address coins sent sender recipient 2 optional change address returning excess coins sum input values xe2 x80 x93 sum output values transaction sender 3 flag address fixed predetermined address acts indicator twist network aware transaction twist id transaction inspect different flag addresses depending transaction contains message provides easy way client distinguish transaction contains message needing perform decryption 4 sender id address address contains base58 encoding sender xe2 x80 x9fs twist id necessary recipient know id sender 5 validation message addresses",
    "metadata": {
      "chunk_id": "065b2e02fc6bfd5e9ab1c236778c85f8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 13] contains message needing perform decryption 4 sender id address address contains base58 encoding sender xe2 x80 x9fs twist id necessary recipient know id sender 5 validation message addresses twist id transaction contains validation string security purposes transaction contain message validation string encrypted encoded series addresses transaction contains message validation string prepended message encrypted encoded addresses 4 4 2 fees twist id registrations fee required twist id transactions considered valid time writing fees 1 twist standard twist id transaction recipient sender id 20 twist transactions including message fees completely arbitrary provide deflationary mechanism coin small fee necessity data encoded output addresses non zero needs sent encoded address contained transaction 4 4 3 encryption procedure messages contained twist id transactions encrypted way decipherable owners sender recipient ids transaction facilitated utilising ecdh key exchange protocol described",
    "metadata": {
      "chunk_id": "fc633ab3d29586b585e662832553aa4d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 14] 4 4 3 encryption procedure messages contained twist id transactions encrypted way decipherable owners sender recipient ids transaction facilitated utilising ecdh key exchange protocol described earlier messages encrypted computing shared secret key sender xe2 x80 x9fs id private key recipient xe2 x80 x9fs id public key message encrypted symmetric aes 256 cbc encryption shared secret key encryption key decrypting message follows procedure shared secret computed recipient xe2 x80 x9fs id private key sender xe2 x80 x9fs id public key 4 5 twist id transaction spoofing twist id transaction sender id sent essentially plaintext encoded sender id address x0ctheoretically transaction spoofed appear sent id xe2 x80 x93 simply replace sender id address address containing encoded id 4 5 1 solution prevent transaction spoofing twist id transaction required contain encrypted validation string string simply arbitrary non base64 character e $ followed randomly generated base64 string 18 characters",
    "metadata": {
      "chunk_id": "a8f699548972d2719c63821b1f1d15ea",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 15] prevent transaction spoofing twist id transaction required contain encrypted validation string string simply arbitrary non base64 character e $ followed randomly generated base64 string 18 characters followed non base64 character transaction contains message validation string prepended raw message content encryption validation string simply encrypted procedure messages client receives transaction attempt decrypt validation string sender xe2 x80 x9fs id public key recipient xe2 x80 x9fs id private key decryption fails decrypted text contain validation string expected format validation string seen previous transaction consider transaction invalid ignored validation mechanism ensures sender transaction owner sender id knowledge sender xe2 x80 x9fs id private key required compute shared secret computed recipient xe2 x80 x9fs 4 6 proof burn present coins sent data encoded addresses considered satisfactorily burned infeasible computing power required generate corresponding keys addresses",
    "metadata": {
      "chunk_id": "758c57d03f9c5379a9bae495697a6fcd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 16] computed recipient xe2 x80 x9fs 4 6 proof burn present coins sent data encoded addresses considered satisfactorily burned infeasible computing power required generate corresponding keys addresses generated input data flag addresses predetermined addresses present twist id transactions concerns development team corresponding keys addresses spend coins sent assure community case addresses decoded base58 contain descriptors use e g xe2 x80 x9ctwist id reg xe2 x80 x9d possibly access computing power necessary cryptographically generate keys addresses community satisfied coins sent burnt ideally future coins provably burned possibly utilising op return script opcode 5 twist data internet undergoing fundamental shift away centralised services decentralised open ones popularity hype surrounding blockchain technology deserved success bitcoin ethereum blockchain networks proving utility value decentralised distributed ledgers people aware benefits decentralised systems single point failure",
    "metadata": {
      "chunk_id": "c0b84e99ff720b93b0f4ae3888c88fa4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 17] blockchain technology deserved success bitcoin ethereum blockchain networks proving utility value decentralised distributed ledgers people aware benefits decentralised systems single point failure twist data defines simple robust protocol writing small pieces information twist blockchain data safe secure maintained network hundreds computers world single points failure possibility data losses twist data isn xe2 x80 x9ft intended means store large files tool users easy way securing storing small pieces information e g passwords contact information etc completely decentralised distributed ledger central point failure 5 1 protocol twist id auxiliary data encoded twist addresses written blockchain form outputs transaction types data transactions defined private shareable private transactions data payload intended decrypted owner shareable transactions provide creator unique key shared allow decrypt access data 5 2 private data transactions 5 2 1 encryption protocol user given option",
    "metadata": {
      "chunk_id": "f6f0becc46e57763e0f1ebc6731039de",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 18] data payload intended decrypted owner shareable transactions provide creator unique key shared allow decrypt access data 5 2 private data transactions 5 2 1 encryption protocol user given option decide addresses like encrypt data 32byte encryption key derived password based key derivation function encryption address private key password encryption address salt sha512 digest algorithm 15000 iterations iteration numbers arbitrary chosen vary different twist services enhance security 16 byte initialisation vector derived approach industry standard 256 bit symmetric encryption aes 256 cipher block chaining mode utilising key initialisation vector securely encrypt data 5 2 2 transaction structure private data twist data private transaction following output structure 1 optional change address returning excess coins sum input values xe2 x80 x93 sum output values transaction sender 2 flag address fixed predetermined address acts indicator twist network aware transaction twist data private",
    "metadata": {
      "chunk_id": "209e11b90252b35a6a628039de594a75",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 19] returning excess coins sum input values xe2 x80 x93 sum output values transaction sender 2 flag address fixed predetermined address acts indicator twist network aware transaction twist data private transaction inspect different flag addresses depending transaction type private shareable allowing clients parse transaction correctly 3 encryption address private key hash 20 characters hash private key encrypt data allows clients check encryption address present user xe2 x80 x9fs wallet decrypt data 4 validation data addresses addresses contain encrypted data validation string protect transaction spoofing x0c5 3 shared data transactions 5 3 1 encryption key specification shared data transaction secret key needs created shareable allow access data key following properties xef x82 xb7 unique xe2 x80 x93 key decrypt data transaction created xef x82 xb7 secure xe2 x80 x93 feasible guess bruteforce attack key xef x82 xb7 independent xe2 x80 x93 knowledge key expose sensitive information owner",
    "metadata": {
      "chunk_id": "813902e849f350b9ff06224614d6ca56",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 20] x80 x93 key decrypt data transaction created xef x82 xb7 secure xe2 x80 x93 feasible guess bruteforce attack key xef x82 xb7 independent xe2 x80 x93 knowledge key expose sensitive information owner e g key sub section direct derivative owner xe2 x80 x9fs private key xef x82 xb7 retrievable xe2 x80 x93 data owner need remember encryption key data key shared data transaction easily recreatable retrievable owner data 5 3 2 encryption key generation create sharable data encryption key base64 string length 18 characters randomly generated fulfils criteria unique secure independent impractically lengthy worth considering intention shared key retrievable encrypted user xe2 x80 x9fs private key written blockchain transaction allowing automated retrieval future figure 2 chaining encryption keys twist data shared data transactions data new shared key generated encrypted bundled encrypted data twist data transaction shown block z figure 2 pushed network method data owners able retrieve keys",
    "metadata": {
      "chunk_id": "5bf6c2101d5e60945fa7cb85988a0867",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 21] twist data shared data transactions data new shared key generated encrypted bundled encrypted data twist data transaction shown block z figure 2 pushed network method data owners able retrieve keys shared data following chain shared data transactions starting initial transaction containing key technique enforce block limit shared data transactions given encryption address 5 3 4 transaction structure shareable data twist data shareable transaction following output structure 1 optional change address 2 flag address specific twist data shareable transactions 3 encryption address private key hash 4 key validation addresses addresses contain encrypted unique key following shareable data transaction encryption address use encrypt data key doubles validation string determine transaction spoofed duplicated 5 data addresses addresses contain encrypted data 5 4 twist data transaction spoofing similar twist id transactions manipulating encryption private key hash address twist data transaction",
    "metadata": {
      "chunk_id": "52381a15dce15a8b097f40967ebe210f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 22] duplicated 5 data addresses addresses contain encrypted data 5 4 twist data transaction spoofing similar twist id transactions manipulating encryption private key hash address twist data transaction transaction appear owned address present security concerns spam user client display transactions create ensure transaction legitimate validation strings included transaction shared data transactions validation string simply shared key private data transactions validation string prepended data encryption occurs 5 3 3 encryption protocol user designates addresses wish set owner data encryption address private key address deterministically derive key encrypt shared key 5 5 fees twist data transactions require fee considered valid network fees subject change time writing propose fee 20 twist required 500 characters data encryption address owner existing shared data transactions encrypted shared key bundled transaction containing special flag address address containing encryption address",
    "metadata": {
      "chunk_id": "0d6e0e383fa403dce3593174dee40668",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 23] required 500 characters data encryption address owner existing shared data transactions encrypted shared key bundled transaction containing special flag address address containing encryption address private key hash transaction shown block x figure 2 pushed network receiving confirmation shared key encrypt data shared key generated encrypted new encrypted shared key data encrypted previous shared key bundled transaction pushed network twist data transaction shown block y figure 2 6 twist api demand blockchain based services increases anticipated increasing number applications hobbyist industrial scale strive utilise blockchain technology twist api provide developers simple powerful interface access twist services write read information twist blockchain goal facilitate simple way developers utilise twist blockchain applications incentivising usage adoption twist currency platform encryption address owner existing shared data transactions shared key retrieved recent valid transaction",
    "metadata": {
      "chunk_id": "25afc4bbf58eead8743992f18bb92377",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 24] utilise twist blockchain applications incentivising usage adoption twist currency platform encryption address owner existing shared data transactions shared key retrieved recent valid transaction encrypt new 6 1 api functions api abstract underlying implementation twist services e g id data etc expose x0cactions developer needs means methods intended offered edition api xef x82 xb7 xef x82 xb7 xef x82 xb7 xef x82 xb7 xef x82 xb7 authenticate twist id e confirm user owns private key address id registered register twist id send twist id transaction write data twist blockchain read data twist blockchain scope functions provided api continue grow twist platform evolves features services developed 6 2 use cases exposing ability authenticate register twist ids developers integrate twist id applications example xe2 x80 x9elogin twist id xe2 x80 x9f functionality expect twist data functionality e writing reading data blockchain utilised 6 2 1 example use case 1 video game developer choose",
    "metadata": {
      "chunk_id": "ac9115af5ac3beb9175f49581901d6fc",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 25] example xe2 x80 x9elogin twist id xe2 x80 x9f functionality expect twist data functionality e writing reading data blockchain utilised 6 2 1 example use case 1 video game developer choose utilise twist blockchain record player xe2 x80 x9fs score game player authenticates twist id completing game wish submit score twist blockchain data written blockchain leader board constructed reading scores blockchain blockchain store information player scores preferable database data secured need backups zero network downtime data complete immutability storage fully decentralised central point failure 6 2 2 example use case 2 university assignment submission system wish utilise twist blockchain verify student submitted assignment time student uploads assignment files file passed cryptographic hashing function resulting hash written twist blockchain student xe2 x80 x9fs id provides decentralised permanent record file existed time transaction network confirmation taking advantage distributed",
    "metadata": {
      "chunk_id": "d48bfe19b1718ffc1ad79773ebe817fb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "downtime"
        ]
      },
      "risk_score": 9.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 26] function resulting hash written twist blockchain student xe2 x80 x9fs id provides decentralised permanent record file existed time transaction network confirmation taking advantage distributed irreversibility blockchain technology students feel safe knowledge decentralised distributed ledger provide irrefutable proof assignment existed submitted school xe2 x80 x9fs servers given time 6 3 specification api designed language agnostic allowing programmers working language requests receive responses standard protocols common formats e g http json initially api intended built interface run twist toolbox desktop application developers running toolbox consequently enable configure api receive requests external ip xe2 x80 x9fs allowing run api server serve applications 7 twist nodes services twist id rely writing reading data blockchain certain purposes blockchain based data access impractical blocksize limits block times hinder streamlined functionality peer peer messaging application",
    "metadata": {
      "chunk_id": "afeaf958960dc9bead404a10e6d02902",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 27] twist id rely writing reading data blockchain certain purposes blockchain based data access impractical blocksize limits block times hinder streamlined functionality peer peer messaging application example suited operating solely blockchain considerable delay sending message recipient receiving limits maximum size message sent single transaction twist nodes introduced facilitator provide support chain functionality peer topeer messaging data storage allowing twist platform comprehensive feature rich possible 7 1 requirements able run twist node provided possess minimum twist exact confirmed deposit node users wishing run node need consolidate deposit single address registration request blockchain node registered remain active long balance address drop deposit nodes free register registrant xe2 x80 x9fs coins locked available wish break node requiring minimum deposit ensures node owner significant stake twist ecosystem incentive network stable secure 7 2 functionality nodes facilitate",
    "metadata": {
      "chunk_id": "971a4856f6e9b53239963dde0c9e06ea",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 28] xe2 x80 x9fs coins locked available wish break node requiring minimum deposit ensures node owner significant stake twist ecosystem incentive network stable secure 7 2 functionality nodes facilitate network parallel twist core blockchain enable services twist chat operate acting intermediary servers communicating parties twist id users able send instant encrypted messages relying aes symmetric encryption elliptic curve cryptography need messages stored blockchain encrypted messages sent stored nodes delivered recipient online able receive blockchain based validation e g sending message sender writes hash message payload blockchain recipient uses validate integrity message receive potentially utilised assure communicating parties errors tampering involved transmission messages conjunction end end encrypted messaging nodes provide extensions twist data service envision network large data payloads files encrypted stored chain nodes consequently reducing load core blockchain maintaining",
    "metadata": {
      "chunk_id": "f9ff4c26f47ebbd6f98fb6cab045b277",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": [
          "locked"
        ]
      },
      "risk_score": 9.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 29] end end encrypted messaging nodes provide extensions twist data service envision network large data payloads files encrypted stored chain nodes consequently reducing load core blockchain maintaining distributed decentralised data storage network x0cnodes operate api servers exposing interface core blockchain application developers connect utilise result developing applications twist blockchain appealing accessible developers need spend time money setting api servers serve applications 7 3 incentives reward running twist node owners earn fees twist depending usage statistics e messages served disk space utilised etc activity statistics node uptime average connection speed nodes utilised heavily longer consistent uptimes earn greater distribution fees incentivising fast stable secure network currently envisioned fees collected twist services distributed weekly basis node owners large proportion coins presently burned services twist id instead collected pay node operators future",
    "metadata": {
      "chunk_id": "79b92396805101a57e49d13ca37c77a1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  },
  {
    "text": "[Section 30] network currently envisioned fees collected twist services distributed weekly basis node owners large proportion coins presently burned services twist id instead collected pay node operators future reduction staking reward possibly introduced reward potentially eliminated altogether limit inflation making coin scarcer helping twist ecosystem transition sustainable fee based model node owners strong incentive secure network provide services twist users 8 future developments twist project evolves documentation features services added document additional detail provided existing features development progresses x0c",
    "metadata": {
      "chunk_id": "6adcfebd8e2ea4c6e92b1945c223deee",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "TWIST.txt"
    }
  }
]