[
  {
    "text": "[Section 1] zerocoin anonymous distributed e cash bitcoin ian miers christina garman matthew green aviel d rubin johns hopkins university department computer science baltimore usa fimiers cgarman mgreen rubing cs jhu edu abstractbitcoin e cash system widespread adoption bitcoin offers potential new types financial interaction significant limitations privacy specifically bitcoin transaction log completely public users privacy protected use pseudonyms paper propose zerocoin cryptographic extension bitcoin augments protocol allow fully anonymous currency transactions system uses standard cryptographic assumptions introduce new trusted parties change security model bitcoin detail zerocoins cryptographic construction integration bitcoin examine performance terms computation impact bitcoin protocol introduction digital currencies long academic pedigree system academic literature seen widespread use bitcoin hand viable digital currency market capitalization valued $100 million 1 $2 $5 million usd",
    "metadata": {
      "chunk_id": "7d43ce8106caa64c8695920e17ad7c6a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 2] digital currencies long academic pedigree system academic literature seen widespread use bitcoin hand viable digital currency market capitalization valued $100 million 1 $2 $5 million usd transactions day 2 unlike proposed digital currencies bitcoin fully decentralized requires central bank authority instead security depends distributed architecture assumptions majority nodes honest substantive proof ofwork deter sybil attacks consequence bitcoin requires legal mechanisms detect punish double spending trusted parties chosen monitored policed decentralized design likely responsible bitcoins success comes price transactions public conducted cryptographically binding pseudonyms relatively academic works considered privacy implications bitcoins design 2 3 preliminary results encouraging example researchers able trace spending 25 000 bitcoins allegedly stolen 2011 3 4 tracking stolen coins harmless note similar techniques applied trace sensitive transactions violating users privacy reason",
    "metadata": {
      "chunk_id": "2e32e8ccd0e21b6a19d115331a0fe2a9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 3] researchers able trace spending 25 000 bitcoins allegedly stolen 2011 3 4 tracking stolen coins harmless note similar techniques applied trace sensitive transactions violating users privacy reason believe sophisticated results domains e g efforts deanonymize social network data network topology 5 soon applied bitcoin transaction graph bitcoin transactions public anonymous transactions necessary avoid tracking parties wish provide absolute anonymity typically associated e cash schemes transactions build mechanisms partially explicitly identify participants authorized parties e g law enforcement limit information authorized parties anonymize underlying public transactions bitcoin community generally acknowledges privacy weaknesses currency unfortunately available mitigations limited common recommendation employ laundry service exchanges different users bitcoins commercial operation today 6 7 services severe limitations operators steal funds track coins simply business taking users funds",
    "metadata": {
      "chunk_id": "9f7e6276eaa5d4739c4e3deb2b34397d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 4] employ laundry service exchanges different users bitcoins commercial operation today 6 7 services severe limitations operators steal funds track coins simply business taking users funds recognition risks services offer short laundering periods lead minimal transaction volumes limited anonymity contribution paper describe zerocoin distributed e cash system uses cryptographic techniques break link individual bitcoin transactions adding trusted parties define abstract functionality security requirements new primitive decentralized e cash scheme propose concrete instantiation prove secure standard cryptographic assumptions finally describe specific extensions required integrate protocol bitcoin system evaluate performance prototype implementation derived original opensource bitcoind client propose e cash techniques solving bitcoins privacy problems common problem e cash protocols rely fundamentally trusted currency issuer bank creates electronic coins blind signature scheme solution",
    "metadata": {
      "chunk_id": "3a40fb9099e18cf6bc66c0ab590dbc65",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 5] propose e cash techniques solving bitcoins privacy problems common problem e cash protocols rely fundamentally trusted currency issuer bank creates electronic coins blind signature scheme solution attempted unsuccessfully bitcoin 8 simply appoint party alternatively distribute responsibility quorum nodes threshold cryptography unfortunately solutions introduce points failure inconsistent bitcoin network model consists untrusted nodes routinely enter exit network problem choosing long term trusted parties especially legal regulatory grey area bitcoin operates like major impediment adoption zerocoin eliminates block nblock nblock 1block 2 block nblock 1block 2 block nbitcoinzerocoin mintzerocoin spend b figure 1 example block chains chain illustrates normal bitcoin transaction history transaction linked preceding transaction chain b illustrates zerocoin chain linkage mint spend dotted line determined block chain data need coin issuers allowing individual bitcoin clients generate coins",
    "metadata": {
      "chunk_id": "a1ebf4ad437f417a24ce7f80c0f39c3b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "regulatory"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 6] linked preceding transaction chain b illustrates zerocoin chain linkage mint spend dotted line determined block chain data need coin issuers allowing individual bitcoin clients generate coins provided sufficient classical bitcoins intuition construction understand intuition zerocoin consider following pencil paper protocol example imagine users share access physical bulletin board mint zerocoin fixed denomination $1 user alice generates random coin serial number s commits s secure digital commitment scheme resulting commitment coin denoted c opened random number r reveal serial number s alice pins c public bulletin board $1 physical currency users accept c provided correctly structured carries correct sum currency redeem coin c alice scans bulletin board obtain set valid commitments c1 cn far posted users system produces non interactive zero knowledge proof p following statements 1 knows c c1 cn 2 knows hidden value r commitment c opens s view alice disguise hide identity 1 posts",
    "metadata": {
      "chunk_id": "2bfde8a4c274dbb111e0ae553ba709a4",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 7] cn far posted users system produces non interactive zero knowledge proof p following statements 1 knows c c1 cn 2 knows hidden value r commitment c opens s view alice disguise hide identity 1 posts spend transaction containing s remaining users verify proof p check s previously appeared spend transaction conditions met users allow alice collect $1 location bulletin board reject transaction prevent collecting currency simple protocol achieves important aims alices minted coin linked retrieved funds order link coin c serial number s withdrawal know r directly know coin alice proved knowledge revealed proof original dollar bill recognizably tainted e g controversial transaction linked alices new dollar bill time commitment zero knowledge proof secure alice double spend coin serial number s detected network participants course protocol workable bulletin boards poor place store money critical information currency stolen serial numbers removed allow double spends importantly conduct",
    "metadata": {
      "chunk_id": "1f23e2c7cd0d9f3bbc46aba49b8cc4ad",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 8] s detected network participants course protocol workable bulletin boards poor place store money critical information currency stolen serial numbers removed allow double spends importantly conduct protocol network alice requires distributed digital backing currency 2 basic contribution work recognize bitcoin answers concerns providing backing currency bulletin board conditional currency redemption mechanism core bitcoin protocol decentralized calculation 2one easily imagine solution based existing payment networks 1of course real protocol alice emulate e g visa paypal introduce need trusted anonymity network tor 9 parties exchanges block chain acts trusted append bulletin board store information process financial transactions alice add commitments escrow funds placing block chain assured strict protocol conditions colleagues scruples determine committed funds accessed course integrated bitcoin block chain protocol practical challenge specifically difficult efficiently prove commitment",
    "metadata": {
      "chunk_id": "a28731e1098ae489477102607490e382",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 9] protocol conditions colleagues scruples determine committed funds accessed course integrated bitcoin block chain protocol practical challenge specifically difficult efficiently prove commitment c set c1 cn naive solution prove disjunction c c1 c c2 c cn unfortunately proofs size o n renders impractical small values n second contribution solve problem producing new construction proofs grow linearly n increases specifying expensive proof employ public way accumulator reduce size proof way accumulators 10 11 12 13 14 proposed benaloh de mare 10 allow parties combine elements constant sized data structure efficiently proving specific value contained set construction bitcoin network computes accumulator commitments c1 cn appropriate membership witnesses item set spender need prove knowledge witness practice reduce cost spenders proof o log n constant size application requires specific properties accumulator trusted parties accumulator associated witnesses publicly computable verifiable",
    "metadata": {
      "chunk_id": "0f5bc1a189690030ca0f290ad7291c51",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 10] witness practice reduce cost spenders proof o log n constant size application requires specific properties accumulator trusted parties accumulator associated witnesses publicly computable verifiable willing relax requirement include single trusted setup phase parameters generated accumulator bind computing party values set lastly accumulator support efficient non interactive witnessindistinguishable zero knowledge proof set membership fortunately accumulators exist concrete proposal section iv use construction based strong rsa accumulator camenisch lysyanskaya 12 turn based accumulator baric pfitzmann 11 benaloh de mare 10 outline work rest paper proceeds follows section ii provide brief technical overview bitcoin protocol section iii formally define notion decentralized e cash provide correctness security requirements system section iv concrete realization scheme based standard cryptographic hardness assumptions including discrete logarithm problem strong rsa finally sections v vi",
    "metadata": {
      "chunk_id": "9cfa6806fb89e056c7bcd2436e6fd6ca",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 11] correctness security requirements system section iv concrete realization scheme based standard cryptographic hardness assumptions including discrete logarithm problem strong rsa finally sections v vi vii describe integrate e cash construction bitcoin protocol discuss security anonymity provided detail experimental results showing solution practical ii overview bitcoin section provide short overview bitcoin protocol detailed explanation refer reader original specification nakamoto 15 summary barber et al 2 bitcoin network bitcoin peer peer network nodes distribute record transactions clients interact network heart bitcoin block chain serves append bulletin board maintained distributed fashion bitcoin peers block chain consists series blocks connected hash chain 3 bitcoin block memorializes set transactions collected bitcoin broadcast network bitcoin peers compete determine node generate canonical block competition requires node solve proof work based identifying specific sha 256",
    "metadata": {
      "chunk_id": "687c0a7d930acda55d53118df0443e64",
      "entities": {
        "crypto_project": [
          "bitcoin"
        ],
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 12] set transactions collected bitcoin broadcast network bitcoin peers compete determine node generate canonical block competition requires node solve proof work based identifying specific sha 256 preimages specifically block b sha256 sha256 b 0 jjf0 1g256 4 value selected periodic network vote ensure average block created 10 minutes peer generates valid solution process known mining broadcasts new block nodes system block valid e transactions validate valid proof work links block chain far new block accepted head block chain process repeats bitcoin provides separate incentives peers new blocks successfully mining new block requires non trivial computational investment entitles creator reward currently set 25 btc 5 second nodes blocks entitled collect transaction fees transaction include fee paid given transaction determined author miners exclude transactions insufficient fees prioritize high fee transactions bitcoin transactions bitcoin transaction consists set outputs inputs output",
    "metadata": {
      "chunk_id": "064f54cc9a3704e032658b97c6136609",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 13] fee paid given transaction determined author miners exclude transactions insufficient fees prioritize high fee transactions bitcoin transactions bitcoin transaction consists set outputs inputs output described tuple v denominated satoshi bitcoin 109 satoshi v specification authorized spend output specification denoted scriptpubkey given bitcoin script stack based nonturing complete language similar forth transaction inputs 3for efficiency reasons chain actually constructed hash tree use simpler description overview 4each block includes counter value incremented hash satisfies requirements 5the bitcoin specification holds reward reduced years eventually eliminated altogether input previous tx 030b5937d9f4aaa1a3133b index 0 scriptsig 0dcd253cdf8ea11cdc710e5e92af7647 output value 5000000000 scriptpubkey op dup op hash160 a45f2757f94fd2337ebf7ddd018c11a21fb6c283 op equalverify op checksig figure 2 example bitcoin transaction output script specifies redeeming party provide public key",
    "metadata": {
      "chunk_id": "cdb8e6f8d9349b42a993b427e396b640",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 14] scriptpubkey op dup op hash160 a45f2757f94fd2337ebf7ddd018c11a21fb6c283 op equalverify op checksig figure 2 example bitcoin transaction output script specifies redeeming party provide public key hashes given value transaction signed corresponding private key simply reference previous transaction output 6 second script scriptsig code data combined scriptpubkey evaluates true coinbase transactions start block pay creator include transaction input send d bitcoins bob alice embeds hash7 bobs ecdsa public key pkb d script instructions scriptpubkey output transaction referenced inputs total d bitcoins figure 2 excess input paid transaction fee node includes block alice typically adds second output paying surplus change transaction broadcasted network included block bitcoins belong bob bob consider coins subsequent blocks reference block 8 bob spend coins transaction referencing input including scriptsig signature claiming transaction skb public key pkb anonymity anonymity design goals",
    "metadata": {
      "chunk_id": "a94cbb0a740661054d37fcac43c79a4f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 15] consider coins subsequent blocks reference block 8 bob spend coins transaction referencing input including scriptsig signature claiming transaction skb public key pkb anonymity anonymity design goals bitcoin 3 15 17 bitcoin provides pseudonymity use bitcoin identities public keys hashes bitcoin user generate unlimited number bitcoin clients routinely generate new identities effort preserve users privacy regardless bitcoin design goals bitcoins user base willing considerable effort maintain anonymity including risking money paying transaction fees illustration existence laundries fee mix different users funds hopes shuffling makes difficult trace 2 6 7 systems require users trust laundry record mixing 6this reference consists transaction hash identifier index transactions output list 7a 34 character hash contains double sha 256 hash key checksum data 8individual recipients free disregard advice vulnerable double spending attacks described karame et al 16 b users money pot use systems",
    "metadata": {
      "chunk_id": "c21c1c10bece8e9e087f32da5ff8821c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 16] character hash contains double sha 256 hash key checksum data 8individual recipients free disregard advice vulnerable double spending attacks described karame et al 16 b users money pot use systems involves fair risk iii decentralized e cash approach anonymizing bitcoin network uses form cryptographic e cash construction require central coin issuer refer decentralized e cash scheme section define algorithms decentralized e cash scheme describe correctness security properties required system notation let represent adjustable security parameter let poly represent polynomial function let represent negligible function use c indicate set allowable coin values definition 3 1 decentralized e cash scheme decentralized e cash scheme consists tuple possibly randomized algorithms setup mint spend verify setup 1 params input security parameter output set global public parameters params description set c mint params c skc input parameters params output coin c 2c trapdoor skc spend params c skc r c",
    "metadata": {
      "chunk_id": "de8f1bc8b16e0b74f55e9bb7f91ef213",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 17] setup 1 params input security parameter output set global public parameters params description set c mint params c skc input parameters params output coin c 2c trapdoor skc spend params c skc r c s given params coin c trapdoor skc transaction string r 2f0 1g arbitrary set coins c output coin spend transaction consisting proof p serial number s c c c output verify params s r c f0 1g given params proof serial number s transaction information r set coins c output 1 c c s r valid output 0 note setup routine executed trusted party setup occurs produce corresponding secret values believe relaxation acceptable real world applications concrete instantiations use different assumptions coin generated randomized minting algorithm serial number s unique value released spending coin designed prevent user spending coin twice formalize correctness security properties decentralized e cash scheme spend algorithm include arbitrary string r intended store transaction specific information e g identity",
    "metadata": {
      "chunk_id": "27b5a0455393e3367ee180f226329ce2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 18] user spending coin twice formalize correctness security properties decentralized e cash scheme spend algorithm include arbitrary string r intended store transaction specific information e g identity transaction recipient correctness decentralized e cash scheme satisfy following correctness requirement let params setup 1 c skc mint params let c c valid set coins jcj poly assign s spend params c skc r c scheme correct c r random coins algorithms following equality holds probability 1 verify params s r c fcg 1 security security decentralized e cash system defined following games anonymity balance describe anonymity experiment ensures adversary link given coin spend transaction s coin associated attacker provides coins generating spend transaction definition 3 2 anonymity decentralized e cash scheme setup mint spend verify satisfies anonymity requirement probabilistic polynomialtime p p t adversary a1 a2 negligible advantage following experiment anonymity params setup 1 2f0 1g ci skci",
    "metadata": {
      "chunk_id": "5ca7eada4ae17f8d65900682b93266f3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 19] scheme setup mint spend verify satisfies anonymity requirement probabilistic polynomialtime p p t adversary a1 a2 negligible advantage following experiment anonymity params setup 1 2f0 1g ci skci mint params c r z a1 params c0 c1 b f0 1g s spend params cb skcb r c fc0 c1g output b0 a2 z s define advantage game jpr b b0 1 2j balance property requires consideration intuitively wish ensure attacker spend coins mints access coins spend transactions produced honest parties note strengthen definition capture property attacker alter valid coins e g modifying transaction information string r definition reminiscent forgery definition commonly blind signatures provide attacker collection valid coins oracle ospend use spend 9 ultimately produce m coins m 1 valid spend transactions transaction duplicates serial number modifies transaction produced honest oracle definition 3 3 balance decentralized e cash scheme setup mint spend verify satisfies balance property 8n poly p p t adversary negligible",
    "metadata": {
      "chunk_id": "69cb136f631933b6fcc9126508be3166",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 20] serial number modifies transaction produced honest oracle definition 3 3 balance decentralized e cash scheme setup mint spend verify satisfies balance property 8n poly p p t adversary negligible advantage following experiment balance n params setup 1 1 n ci skci mint params 00 output c1 c s1 sm sm 1 m aospend params c1 cn 9we provide functionality oracle capture possibility attacker specify arbitrary input value c oracle ospend operates follows jth query ospend cj cj rj oracle outputs cj 2 fc1 cn g returns j sj spend params cj skcj rj cj records sj rj set t wins e produces spends minted coins 8s fs1 sm sm 1 s 0 s0 r0 c0 verify params 0 s0 r0 c0 1 00 c0 fc1 cn c1 c g m s0 r0 2t s0 appears tuple fs1 sm sm 1g define advantage probability wins game iv decentralized e cash strong rsa section describe concrete instantiation decentralized e cash scheme define necessary cryptographic ingredients cryptographic building blocks zero knowledge proofs signatures knowledge protocols use zero",
    "metadata": {
      "chunk_id": "238a51a7f5fd2d118984560ab35f4d04",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 21] describe concrete instantiation decentralized e cash scheme define necessary cryptographic ingredients cryptographic building blocks zero knowledge proofs signatures knowledge protocols use zero knowledge proofs instantiated technique schnorr 18 extensions e g 19 20 21 22 convert non interactive proofs applying fiat shamir heuristic 23 case refer resulting non interactive proofs signatures knowledge defined 24 referring proofs use notation camenisch stadler 25 instance nizkpokf x y x h g c gy denotes non interactive zero knowledge proof knowledge elements x y satisfy xy h g c g values enclosed s assumed known verifier similarly extension x zksok m f x y h g c gy indicates signature knowledge message m accumulators construction uses accumulator based strong rsa assumption accumulator use proposed benaloh de mare 10 later improved baric pfitzmann 11 camenisch lysyanskaya 12 describe accumulator following algorithms accumsetup params input security parameter sample primes p q polynomial",
    "metadata": {
      "chunk_id": "707949fce9f9c75b14a8318f71926d16",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 22] benaloh de mare 10 later improved baric pfitzmann 11 camenisch lysyanskaya 12 describe accumulator following algorithms accumsetup params input security parameter sample primes p q polynomial dependence security parameter compute n pq sample seed value u qrn u 6 1 output n u params accumulate params c input params n u set prime numbers c fc1 ci c b g 10 compute accumulator c1c2 cn u mod n 10see appendix precise description genwitness params v c w input params n u set prime numbers c described value v c witness w accumulation values c v e w accumulate params c nfvg accverify params v f0 1g input params n u element v witness compute a0 v mod n output 1 a0 v prime v b defined previously simplicity description uses calculation camenisch lysyanskaya 12 observe accumulator incrementally updated e given existing accumulator possible add element x produce new accumulator value 1 computing 1 ax mod n extensive use n optimization practical implementation camenisch lysyanskaya 12 accumulator",
    "metadata": {
      "chunk_id": "f9469ac4c75f0be5b2122fcda23f9de0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 23] e given existing accumulator possible add element x produce new accumulator value 1 computing 1 ax mod n extensive use n optimization practical implementation camenisch lysyanskaya 12 accumulator satisfies strong collision resistance property strong rsa assumption hard informally ensures p p t adversary produce pair v v 2 c accverify satisfied additionally describe efficient zero knowledge proof knowledge committed value accumulator convert non interactive proof fiat shamir transform refer resulting proof following notation nizkpokf v accverify n u v 1g b construction describe concrete decentralized e cash scheme scheme secure assuming hardness strong rsa discrete logarithm assumptions existence zero knowledge proof system describe algorithms setup 1 params input security parameter run accumsetup 1 obtain values n u generate primes p q p 2wq 1 w 1 select random generators g h g hgi hhi g subgroup z output params q n u p q g h mint params c skc select s r z q s hr compute c g mod p fc",
    "metadata": {
      "chunk_id": "76a1c99d40e42af1e95b023d47be39a2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 25] destroyed immediately parameters generated alternatively implementers use technique sander generating called rsa ufos accumulator parameters trapdoor 26 c security analysis consider security construction theorem 4 1 zero knowledge signature knowledge computationally zero knowledge random oracle model setup mint spend verify satisfies anonymity property provide proof sketch theorem 4 1 appendix intuitively security construction stems fact coin commitment c perfectly hiding commitment signature proof p computationally zeroknowledge facts ensure adversary negligible advantage guessing coin spent theorem 4 2 signature proof p sound random oracle model strong rsa problem hard discrete logarithm problem hard g setup mint spend verify satisfies balance property proof theorem 4 1 included appendix briefly proof relies binding properties coin commitment soundness unforgeability zksok collision resistance accumulator adversary wins balance game non negligible advantage find collision commitment",
    "metadata": {
      "chunk_id": "708865894165f44501639be98d96afc3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 26] briefly proof relies binding properties coin commitment soundness unforgeability zksok collision resistance accumulator adversary wins balance game non negligible advantage find collision commitment scheme allowing solve discrete logarithm problem find collision accumulator leads solution strong rsa v integrating bitcoin construction previous section gives overview approach describe techniques integrate bitcoin section address specific challenges come combine decentralized e cash scheme bitcoin protocol general overview approach straightforward mint zerocoin c denomination d alice runs mint params c skc stores skc securely 13 embeds c output bitcoin transaction spends d fees classical bitcoins mint transaction accepted block chain c included 13in implementation bitcoins single fixed value support multiple values running distinct zerocoin instantiations simultaneously sharing set public parameters global accumulator currency accessed zerocoin spend e essentially placed escrow spend c",
    "metadata": {
      "chunk_id": "a6a8f7ad41793598eef2eec562d0d69b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 27] support multiple values running distinct zerocoin instantiations simultaneously sharing set public parameters global accumulator currency accessed zerocoin spend e essentially placed escrow spend c bob alice constructs partial transaction ptx references unclaimed mint transaction input includes bobs public key output traverses valid mint transactions block chain assembles set minted coins c runs spend params c skc hash ptx c s finally completes transaction embedding s scriptsig input ptx output transaction zerocoin mint transaction feature useful transfer value multiple zerocoin instances e different denomination running block chain transaction appears network nodes check verify params s hash ptx c 1 check s appear previous transaction condition hold referenced mint transaction claimed input different transaction network accepts spend valid allows alice redeem d bitcoins computing accumulator naive implementation construction section iv requires verifier compute accumulator verify",
    "metadata": {
      "chunk_id": "808461e9da15d784e61b7f1caecda1d2",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 28] input different transaction network accepts spend valid allows alice redeem d bitcoins computing accumulator naive implementation construction section iv requires verifier compute accumulator verify practice cost substantially reduced recall accumulator construction computed incrementally nodes add new coins accumulation arrive exploit require node mining new block add zerocoins block previous blocks accumulator store resulting new accumulator value coinbase transaction start new block 14 accumulator checkpoint peer nodes validate computation accepting new block blockchain provided verification occurs routinely blocks added chain clients choose trust accumulator older confirmed blocks compute scratch optimization alice need longer compute accumulator witness w c instead merely reference current blocks accumulator checkpoint compute witness starting checkpoint preceding mint instead starting t0 computing witness equivalent accumulating c nfcg new transaction types bitcoin transactions",
    "metadata": {
      "chunk_id": "49db45e9f24ad729d098c6f4b5babf66",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "exploit"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 29] blocks accumulator checkpoint compute witness starting checkpoint preceding mint instead starting t0 computing witness equivalent accumulating c nfcg new transaction types bitcoin transactions use flexible scripting language determine validity transaction unfortunately bitcoin script design turingcomplete large segments limited 14the coinbase transaction format allows inclusion arbitrary data requires fundamental changes bitcoin protocol script functionality disabled bitcoin production network security concerns existing script language sophisticated calculations verifying zero knowledge proofs fortunately purposes bitcoin designers chose reserve script operations future expansion extend bitcoin adding new instruction zerocoin mint minting zerocoin constructs transaction output scriptpubkey contains instruction coin c nodes receive transaction validate c formed coin spend zerocoin alice constructs new transaction claims input zerocoin mint transaction scriptsig field containing s",
    "metadata": {
      "chunk_id": "e4ccfc8f9c30c5145ca9240f5f48a40a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 30] contains instruction coin c nodes receive transaction validate c formed coin spend zerocoin alice constructs new transaction claims input zerocoin mint transaction scriptsig field containing s reference block containing accumulator verifier extracts accumulator referenced block validates spend described earlier finally note transactions signed prevent attacker simply changing transaction payed normal bitcoin transactions include ecdsa signature key specified scriptpubkey referenced input spend transaction arbitrary zerocoin ecdsa public key instead use zksok p sign transaction hash normally signed ecdsa 15 statekeeping effects validating zerocoin changes bitcoins semantics currently bitcoins persistent state defined solely terms transactions blocks transactions furthermore access state explicit reference hash zerocoin hand strong anonymity requirement deals existentials coin set far minted coins serial number set spent serial numbers enable type qualifiers introduce effects bitcoin",
    "metadata": {
      "chunk_id": "052f1be48ae07798c1daa5eaffce1377",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 31] explicit reference hash zerocoin hand strong anonymity requirement deals existentials coin set far minted coins serial number set spent serial numbers enable type qualifiers introduce effects bitcoin transaction handling processing mint transaction causes coin accumulated effect processing spend transaction causes coin serial number added list spent serial numbers held client coin serial numbers little choice list client incur small overhead storing list larger engineering overhead handling possible ways transaction enter client accumulator state maintained accumulator checkpoints client verifies received block proof optimizations reasonable parameter sizes proofs produced spend exceed bitcoins 10kb transaction size limits simply increase limit drawbacks 1 drastically increases storage requirements bitcoin current transactions 15in practice modification simply requires include transaction digest hash computation challenge fiat shamir proofs appendix details 1 2 kb 2 increase memory",
    "metadata": {
      "chunk_id": "e7c7f0bd245b5c0fab3775b227f3fcd9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 32] requirements bitcoin current transactions 15in practice modification simply requires include transaction digest hash computation challenge fiat shamir proofs appendix details 1 2 kb 2 increase memory pressure clients store transactions memory 16 prototype implementation store proofs separate known location simple server implementation use distributed hash table non block chain backed storage bitcoin recommend storing proofs block chain alternatives increase storage required block chain 17 suggestions optimizing proof verification complexity proofs lead longer verification times expected standard bitcoin transaction magnified fact bitcoin transaction verified included block node block accepted block chain cost accounted charging transaction fees obviously ideal costs low possible approach distribute cost verification entire network node verify entire proof zksok use utilizes cut choose techniques essentially consists n repeated iterations proof reducing probability forgery roughly 2 n",
    "metadata": {
      "chunk_id": "f1169498e8df5bd499da212bdfeff3ec",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 33] distribute cost verification entire network node verify entire proof zksok use utilizes cut choose techniques essentially consists n repeated iterations proof reducing probability forgery roughly 2 n simply nodes randomly select iterations proofs verify distributing process network achieve approximately security duplication effort optimization involves time space tradeoff existing proof verified computing series minimum 1024 bit values t1 tn hashing result naive implementation require send t1 tn fully computed greatly increasing size proof client compute needs verify hash avoid issue replacing standard hash merkel tree leaves hashed ti values root challenge hash proof send 160 bit 256 bit intermediate nodes instead 1024 bit ti values allowing verifier compute subset ti values validate proof challenge drastically increasing proof size b limited anonymity forward security concern bitcoin community loss wallets poor endpoint security traditional bitcoin results theft coins 4 zerocoin",
    "metadata": {
      "chunk_id": "717cfa35a5972d842964c01ceabda94b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 34] proof challenge drastically increasing proof size b limited anonymity forward security concern bitcoin community loss wallets poor endpoint security traditional bitcoin results theft coins 4 zerocoin setting allow attacker deanonymize zerocoin transactions stored skc 16the reference bitcoind client stores transactions stl vectors require contiguous segments memory storing zerocoin proofs transaction cause memory issues far faster expected 17furthermore solution allows intriguing possibility proofs allowed vanish sufficiently verified network entombed block chain clear interacts bitcoin theory practice obvious solution securely delete skc immediately coin spent unfortunately provides protection skc stolen earlier point solution generate spend transaction immediately shortly coin minted possibly earlier checkpoint calculating c greatly reduces users anonymity decreasing number coins c leaking information coin minted attacker compromises wallet link zerocoins mint transactions c code",
    "metadata": {
      "chunk_id": "59b8860235b5bc382deb0f13ea327500",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 35] possibly earlier checkpoint calculating c greatly reduces users anonymity decreasing number coins c leaking information coin minted attacker compromises wallet link zerocoins mint transactions c code changes implementation chose modify bitcoind original open source bitcoin c client required modifications added instructions bitcoin script minting spending zerocoins added transaction types code handling new instructions maintaining list spent serial numbers accumulator charm cryptographic framework 27 implement cryptographic constructions python boosts python utilities code bitcoind introduces performance overhead allowed rapidly prototype leave room implementing future constructions d incremental deployment described zerocoin requires changes bitcoin protocol happen globally transactions containing new instructions validated updated servers fail validation older nodes potentially causing network split block produced validates nodes time bitcoin faced problem precedent flag day type",
    "metadata": {
      "chunk_id": "a9c60ae86ac6025297fd94ad10c46caa",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 36] containing new instructions validated updated servers fail validation older nodes potentially causing network split block produced validates nodes time bitcoin faced problem precedent flag day type upgrade strategy 28 clear willing bitcoin community repeat consider possibility incremental deployment way accomplish embed protocol comments standard bitcoin scripts non zerocoin aware nodes data effectively inert use bitcoins n k signature support specify comment embedded zerocoins valid signed subset zerocoin processing nodes zerocoin aware nodes parse comments charge transaction fees validation according proofs embedded comments providing incentive nodes provide services changes validation mechanism zerocoin anonymity property holds balance property n 1 zerocoin nodes malicious care taken electing nodes prevent sybil attack thankfully require node produce blocks bitcoin block chain decent deterrent furthermore malfeasance nodes readily detectable signed invalid zerocoin transaction",
    "metadata": {
      "chunk_id": "11c83282c60903ef6836ff25130bac9f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 37] electing nodes prevent sybil attack thankfully require node produce blocks bitcoin block chain decent deterrent furthermore malfeasance nodes readily detectable signed invalid zerocoin transaction parties audit nodes potentially hold funds escrow deter fraud vi real world security parameter choice anonymity zerocoin definition 3 2 states given zerocoin mints spend better guess minted coin spent differently attacker learns scheme observing mints spends ideal scheme ideal scheme imposes limitations example consider case n coins minted n coins subsequently spent coin minted point size anonymity set spend k 1 k 11 clear observers previous coins stress anonymity systems privacy compromised attacker mints large fraction active coins lower bound anonymity provided number coins minted honest parties coins mint spend upper bound total set minted coins note zerocoin reveals number minted spent coins users system provides potential source information attackers contrast previous e cash schemes",
    "metadata": {
      "chunk_id": "3160c12b7a55300daa3ba33486a7645b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 38] coins mint spend upper bound total set minted coins note zerocoin reveals number minted spent coins users system provides potential source information attackers contrast previous e cash schemes reveal information primarily merchants bank believe advantage loss bank generally considered adversarial party e cash security models public model zerocoin actually removes information asymmetry allowing users determine conditions pose problem lastly zerocoin hide denominations transaction practice problem avoided simply fixing small set coin denominations exchanging coins denominations simply zerocoin anonymize bitcoins b parameters generally cryptographers specify security terms single adjustable security parameter notation previous sections reality distinct security choices zerocoin affect systems anonymity resilience counterfeiting 1 size schnorr group coin commitments 2 size rsa modulus accumulator 3 zkp security zero knowledge proofs commitments pedersen commitments information",
    "metadata": {
      "chunk_id": "eaa2ad216d6dda00434133eb0f384a77",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 39] systems anonymity resilience counterfeiting 1 size schnorr group coin commitments 2 size rsa modulus accumulator 3 zkp security zero knowledge proofs commitments pedersen commitments information theoretically hiding schnorr group order large fit committed values size group affect long term anonymity zerocoin security commitment scheme affect counterfeiting attacker break binding property commitment scheme mint zerocoin opens different serial numbers resulting double spend result schnorr group large attack feasibly mounted lifetime coin hand size signature knowledge p coin spends increases linearly size schnorr group solution minimize group size announcing fresh parameters commitment scheme periodically forcing old zerocoins expire exchanged new zerocoins minted fresh parameters 18 coins spent network time t spent current parameters previous coins converted fresh ones decrease anonymity system require users convert old zerocoins fresh ones old parameters expire prototype implementation",
    "metadata": {
      "chunk_id": "73c1551df9d2ad40755ba25795857969",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 41] anonymize spends history zero knowledge proof security zkp parameter affects anonymity security zero knowledge proof greatly affects size spend proof thankfully proof independent applies proof spend dishonest party expend roughly 2 zkp effort forge single coin link single coin mint spend probability roughly 1 zkp pick zkp 80 bits 2 vii performance validate results conducted experiments modified bitcoind implementation described section v ran experiments different 18note conversion need involve spend coins user simply reveal trapdoor old coin new zerocoin unlinkable properly spent 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8102420483072time sec modulus size bits performance zerocoin algorithmsmintspendverify 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 50000102420483072proof size bytes modulus size bits zerocoin spend proof size 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 50000102420483072proof size bytes modulus size bits zerocoin spend proof size times single zerocoin",
    "metadata": {
      "chunk_id": "127b67ae91d086c507a2d4ea96dc466e",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 42] modulus size bits zerocoin spend proof size 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 50000102420483072proof size bytes modulus size bits zerocoin spend proof size times single zerocoin operation measured seconds b zerocoin proof sizes measured bytes function rsa operations include time required compute accumulator modulus size 0 100 200 300 400 500 600 700 800 900 0 10000 20000 30000 40000 50000time sec number elements accumulatedaccumulation timen 1024n 2048n 3072 0 200 400 600 800 1000 1200 1400 0 20 40 60 80 100transactions minutepercentage zerocoinszerocoin block verification performancen 1024n 2048n 3072 c time required accumulate x elements note cost amortized d transaction verifications minute function percentage computing global accumulator zerocoin transactions network half mints half spends note plot reciprocal transaction time graph appears logarithmic zerocoin scales linearly figure 3 zerocoin performance function parameter size parameter sizes corresponds",
    "metadata": {
      "chunk_id": "52cbd7d413d9b37278ffb9f699571b82",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 43] half mints half spends note plot reciprocal transaction time graph appears logarithmic zerocoin scales linearly figure 3 zerocoin performance function parameter size parameter sizes corresponds length rsa modulus n 1024 bits 2048 bits 3072 bits 19 conducted types experiments 1 microbenchmarks measure performance cryptographic constructions 2 tests modified bitcoin client measuring time verify zerocoin carrying blocks gives reasonable estimate cost minting single zerocoin spending verifying resulting transaction gives estimate zerocoins impact existing bitcoin network computational cost born node verifies zerocoin transactions experiments conducted intel xeon e3 1270 v2 3 50ghz quad core processor hyperthreading 16gb ram running 64 bit ubuntu server 11 04 linux kernel 2 6 38 19these sizes viewed roughly corresponding discrete 2112 logarithm factorization security level 280 2128 respectively note choice n determines size parameter p select jq roughly twice estimated security level",
    "metadata": {
      "chunk_id": "735185f83977eca5ff9b81abd6790b75",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 44] viewed roughly corresponding discrete 2112 logarithm factorization security level 280 2128 respectively note choice n determines size parameter p select jq roughly twice estimated security level microbenchmarks evaluate performance mint spend verify algorithms isolation conducted series microbenchmarks charm python implementation goal experiments provide direct estimate performance cryptographic primitives experimental setup challenge conducting microbenchmarks accumulation coins c witness spend global accumulator spend verify problematic reasons know large c practice second implementation accumulations incremental address issues chose break microbenchmarks separate experiments experiment simply computes accumulator number possible sizes c ranging 1 50 000 elements second experiment measures runtime spend verify routines precomputed accumulator witness conducted experiments single thread processor parameter sizes experiments performed 500 times results given represent average times",
    "metadata": {
      "chunk_id": "b8e7b30d8ce0e1fcb9d9f56fc0510e51",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 45] runtime spend verify routines precomputed accumulator witness conducted experiments single thread processor parameter sizes experiments performed 500 times results given represent average times figure 3a shows measured times computing coin operations figure 3b shows resulting proof sizes security parameter figure 3c shows resulting times computing accumulator stress accumulation system incremental typically 200 500 transactions block takes worst seconds cost computing global accumulator amortized time accumulate 50 000 coins time generating witness old zerocoin b block verification zerocoin affects network transaction processing determines practicality scalability like transactions zerocoin spends verified miner sure including invalid transactions block network sure including invalid block block chain cases entails checking verify 1 zerocoin transaction computing accumulator checkpoint need know impact reasons bitcoin protocol specifies new block created average 10 minutes 20",
    "metadata": {
      "chunk_id": "eac3d75544303de83c15ba3fee56de7f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 46] block block chain cases entails checking verify 1 zerocoin transaction computing accumulator checkpoint need know impact reasons bitcoin protocol specifies new block created average 10 minutes 20 verification takes longer 10 minutes blocks reasonable number zerocoins network function 21 second cost generating blocks verifying transactions offset transaction fees coin mining cost verifying blocks prior appending block chain offset mining nodes view cost mining new block leaves verifying block chain uncompensated computational cost experimental setup measure effect zerocoin block verification time measure long takes modified bitcoind client verify externally loaded test blocks containing 200 400 800 transactions 0 10 25 75 100 percent transactions zerocoin transactions half mints half spends repeat experiment security parameters test data consists blocks contains z zerocoin mints exist spends occur second block actual test vector contains random order z zerocoin spends coins previous",
    "metadata": {
      "chunk_id": "871a58b36e70765d8811a0390b3d1672",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 47] repeat experiment security parameters test data consists blocks contains z zerocoin mints exist spends occur second block actual test vector contains random order z zerocoin spends coins previous block z zerocoin mints s standard bitcoin sendtoaddress transactions measure long processblock bitcoind client takes verify second block containing mix zerocoin classical bitcoin 20this rate maintained periodic network vote adjusts difficulty bitcoin proof work 21for blocks unreasonable numbers zerocoin transaction simply extend bitcoinds existing anti dos mechanisms reject block blacklist origin transactions accuracy repeat measurements 100 times average results results presented figure 3d c discussion results zerocoin scales current bitcoin transaction volumes require significant computational effort verification fundamentally threaten operation network block containing 800 zerocoin transactions roughly double average size bitcoin block currently verification takes minutes unreasonable",
    "metadata": {
      "chunk_id": "225a3da6157f5b4a8c3655f9cbe984cf",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 48] effort verification fundamentally threaten operation network block containing 800 zerocoin transactions roughly double average size bitcoin block currently verification takes minutes unreasonable assumption bitcoin transactions supplanted zerocoin transactions 22 fact scale bitcoins current average 200 400 transactions block 29 zerocoin transactions majority transactions network graph suggests assume verification scales linearly support 50% transaction mix 350 transactions minute 3 500 transactions block 10% mixture 800 transactions minute 8 000 block remaining question point start running risk coin serial number collisions causing erroneous double spends smallest serial numbers 160 bits collision probability small 256 bit serial numbers 3072 bit accumulator collision probability worst equal odds collision normal bitcoin transaction uses sha 256 hashes stress caveats data prototype system exploit parallelism verifying multiple zerocoin transactions validating individual proof serial",
    "metadata": {
      "chunk_id": "44d01009f8843f040da7d00b012ac5ca",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "exploit"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 49] odds collision normal bitcoin transaction uses sha 256 hashes stress caveats data prototype system exploit parallelism verifying multiple zerocoin transactions validating individual proof serial dependency tasks fast duplicate serial number check offers opportunity substantial improvement second data accurate estimate financial cost zerocoin network overestimate mining nodes extra effort verifying proposed blocks practice transactions received block received validated node attempts construct contribution block chain b execution time poor metric context bitcoin miners concerned actual monetary operating cost c mining typically performed gpus lesser extent fpgas asics far efficient computing hash collisions cpu cost measured likely insignificant finally experiment neglects load node processing incoming transactions solving proof work contend nodes probably use gpus mining issue remains unknown 22in practice believe zerocoin anonymize bitcoins spent actual transactions resulting far",
    "metadata": {
      "chunk_id": "a304480be76981419bd38a2fe7fb073c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "exploit"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 50] incoming transactions solving proof work contend nodes probably use gpus mining issue remains unknown 22in practice believe zerocoin anonymize bitcoins spent actual transactions resulting far lower transaction volumes unlikely disproportionately affect zerocoin performance viii previous work e cash bitcoin electronic cash long research topic cryptographers cryptographic e cash systems focus user privacy typically assume existence semitrusted coin issuer bank e cash schemes largely break online schemes users contact bank registry offline schemes spending occur network connection chaum introduced online cryptographic e cash system 30 based rsa signatures later extending work offline setting 31 de anonymizing users double spent subsequent works improved techniques maintaining requirement trusted bank example making coins divisible 32 33 reducing wallet size 34 exception rule comes sander ta shma 35 presciently developed alternative model reminiscent proposal central bank replaced hash",
    "metadata": {
      "chunk_id": "35a51ee51740bbe91d335f65422bd8a1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 51] bank example making coins divisible 32 33 reducing wallet size 34 exception rule comes sander ta shma 35 presciently developed alternative model reminiscent proposal central bank replaced hash chain signatures accumulators unfortunately accumulator practical central party required real world system existed compute chain bitcoins primary goal hand anonymity roots non academic proposal wei dai distributed currency based solving computational problems 36 dais original proposal create currency transactions broadcast clients second variant limited currency generation transaction broadcast set servers effectively approach bitcoin takes marked distinction e cash systems need select trusted parties general assumption majority bitcoin nodes honest join node bitcoin network entire transaction graph overview bitcoin shortcomings presented barber et al 2 b anonymity numerous works shown pseudonymized graphs identified passive analysis narayanan shmatikov 5 showed real world social networks",
    "metadata": {
      "chunk_id": "a40750bddc77cf9cdb61429693a8f9de",
      "entities": {
        "crypto_project": [
          "bitcoin"
        ],
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 52] graph overview bitcoin shortcomings presented barber et al 2 b anonymity numerous works shown pseudonymized graphs identified passive analysis narayanan shmatikov 5 showed real world social networks passively de anonymized similarly backstrom et al 37 constructed targeted attacks anonymized social networks test relationships vertices previously narayanan shmatikov de anonymized users netflix prize data set correlating data imdb 38 bitcoin came existence 2009 beginning receive scrutiny privacy researchers deanonymization techniques applied effectively bitcoin relatively small 2011 size reid harrigan 3 ron shamir examined general structure bitcoin network graph 1 nearly 3 fold expansion finally privately aware early stage efforts examine bitcoin anonymity ix conclusion future work zerocoin distributed e cash scheme provides strong user anonymity coin security assumption distributed online append transaction store use bitcoin provide store backing currency scheme providing general",
    "metadata": {
      "chunk_id": "f5d5b0b97427f847ad1cd96ce223c47d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 53] distributed e cash scheme provides strong user anonymity coin security assumption distributed online append transaction store use bitcoin provide store backing currency scheme providing general definitions proposed concrete realization based rsa accumulators non interactive zero knowledge signatures knowledge finally integrated construction bitcoin measured performance work leaves open problems scheme workable need double discrete logarithm proof leads large proof sizes verification times prefer scheme smaller proofs greater speed particularly important comes reducing cost party verification zerocoin transactions promising constructions cryptographic literature e g bilinear accumulators mercurial commitments 13 39 able find analogue scheme alternative components possible research lead solutions ideally improvement produce drop replacement existing implementation second zerocoin currently derives anonymity security counterfeiting strong cryptographic assumptions cost substantially",
    "metadata": {
      "chunk_id": "798c4366b2ddb4791c414b61bef28dec",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 54] solutions ideally improvement produce drop replacement existing implementation second zerocoin currently derives anonymity security counterfeiting strong cryptographic assumptions cost substantially increased computational complexity size discussed section vi b anonymity relatively cheap cost principally driven anti counterfeiting requirement manifesting size coins proofs bitcoin counterfeiting coin computationally prohibitive merely computationally costly requiring user obtain control 51% network provides possible alternative standard cryptographic assumptions strong assumption computing discrete logs infeasible construct scheme weak assumption financial incentive break construction cost computing discrete log exceeds value resulting counterfeit coins example require spends prove fresh random bases commitments corresponding mint transaction e g selecting bases commitment hash coin serial number proving serial number fresh appears attacker forge single zerocoin discrete log",
    "metadata": {
      "chunk_id": "f36016f7bf29a5f219f07606c76c3a1c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 55] fresh random bases commitments corresponding mint transaction e g selecting bases commitment hash coin serial number proving serial number fresh appears attacker forge single zerocoin discrete log computation provided cost computing discrete log greater value zerocoin forging coin profitable small allows coins open question relatively little work comparing asymptotic difficulty solving multiple distinct discrete logs fixed group 23 clear theory translates practice leave questions security proposed construction issues future work finally believe research lead different tradeoffs security accountability anonymity common objection bitcoin facilitate money laundering circumventing legally binding financial reporting requirements propose additional protocol modifications e g use anonymous credentials 40 allow users maintain anonymity demonstrating compliance reporting requirements acknowledgements thank stephen checkoway george danezis anonymous reviewers helpful comments research paper",
    "metadata": {
      "chunk_id": "82925f1e2610ba07600990386b159789",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 56] 40 allow users maintain anonymity demonstrating compliance reporting requirements acknowledgements thank stephen checkoway george danezis anonymous reviewers helpful comments research paper supported office naval research contract n00014 111 0470 darpa air force research laboratory afrl contract fa8750 11 2 0211 references 1 d ron shamir quantitative analysis bitcoin transaction graph cryptology eprint archive report 2012 584 2012 http eprint iacr org 2 s barber x boyen e shi e uzun bitter better bitcoin better currency financial cryptography 2012 vol 7397 lncs 2012 pp 399414 3 f reid m harrigan analysis anonymity bitcoin system privacy security risk trust passat 2011 ieee internatiojn conference social computing socialcom ieee 2011 pp 13181326 4 t b lee risky currency alleged $500 000 bitcoin heist raises questions available http arstechnica com june 2011 5 narayanan v shmatikov de anonymizing social networks security privacy 2009 30th ieee symposium ieee 2009 pp 173187 6 bitcoin fog",
    "metadata": {
      "chunk_id": "bd7ee4f8d5cc55d8e3bc7df38ca2d211",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 57] heist raises questions available http arstechnica com june 2011 5 narayanan v shmatikov de anonymizing social networks security privacy 2009 30th ieee symposium ieee 2009 pp 173187 6 bitcoin fog company http www bitcoinfog com 7 bitcoin laundry http www bitcoinlaundry com 8 blind bitcoin information https en bitcoin wiki blind bitcoin transfers 9 online available https www torproject org 10 j benaloh m de mare way accumulators decentralized alternative digital signatures eurocrypt 93 vol 765 lncs 1994 pp 274285 11 n baric b pfitzmann collision free accumulators fail stop signature schemes trees eurocrypt 97 vol 1233 lncs 1997 pp 480494 23we note ssh internet key exchange protocol ipv6 use fixed diffie hellman parameters 12 j camenisch lysyanskaya dynamic accumulators application efficient revocation anonymous credentials crypto 02 2002 pp 6176 13 l nguyen accumulators bilinear pairings applications topics cryptology ct rsa 2005 2005 vol 3376 lncs pp 275292 14 j camenisch m kohlweiss c",
    "metadata": {
      "chunk_id": "6796616c92790795fa6ca8167ceb3f39",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 58] revocation anonymous credentials crypto 02 2002 pp 6176 13 l nguyen accumulators bilinear pairings applications topics cryptology ct rsa 2005 2005 vol 3376 lncs pp 275292 14 j camenisch m kohlweiss c soriente accumulator based bilinear maps efficient revocation anonymous credentials pkc 09 vol 5443 lncs 2009 pp 481 500 15 s nakamoto bitcoin peer peer electronic cash system 2009 2012 online available http www bitcoin org bitcoin pdf 16 g o karame e androulaki s capkun bitcoins price double spending attacks fast payments bitcoin cryptology eprint archive report 2012 248 2012 http eprint iacr org 17 european central bank virtual currency schemes available http www ecb europa eu pub pdf virtualcurrencyschemes201210en pdf october 2012 18 c p schnorr efficient signature generation smart cards journal cryptology vol 4 3 pp 239252 1991 19 r cramer damgard b schoenmakers proofs partial knowledge simplified design witness hiding protocols crypto 94 vol 839 lncs 1994 pp 174187 20 j camenisch m",
    "metadata": {
      "chunk_id": "bd008b224a002bbe9c5a8bfdc3e9f9d0",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 59] journal cryptology vol 4 3 pp 239252 1991 19 r cramer damgard b schoenmakers proofs partial knowledge simplified design witness hiding protocols crypto 94 vol 839 lncs 1994 pp 174187 20 j camenisch m michels proving zero knowledge number n product safe primes eurocrypt 99 vol 1592 lncs 1999 pp 107122 21 j l camenisch group signature schemes payment systems based discrete logarithm problem ph d dissertation eth zurich 1998 22 s brands rapid demonstration linear relations connected boolean operators eurocrypt 97 vol 1233 lncs 1997 pp 318333 23 fiat shamir prove practical solutions identification signature problems crypto 86 vol 263 lncs 1986 pp 186194 24 m chase lysyanskaya signatures knowledge crypto06 vol 4117 lncs 2006 pp 7896 25 j camenisch m stadler efficient group signature schemes large groups crypto 97 vol 1296 lncs 1997 pp 410424 26 t sander efficient accumulators trapdoor extended abstract information communication security vol 1726 lncs 1999 pp 252262 27 j akinyele c garman",
    "metadata": {
      "chunk_id": "dbc8f7129bd77a710c519eac03afb203",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 60] groups crypto 97 vol 1296 lncs 1997 pp 410424 26 t sander efficient accumulators trapdoor extended abstract information communication security vol 1726 lncs 1999 pp 252262 27 j akinyele c garman miers m w pagano m rushanan m green d rubin charm framework rapidly prototyping cryptosystems appear journal cryptographic engineering 2013 online available http dx doi org 10 1007 s13389 013 0057 3 28 online available https en bitcoin wiki bip 0016 29 online available http blockchain info charts ntransactions block 30 d chaum blind signatures untraceable payments crypto 82 plenum press 1982 pp 199203 31 d chaum fiat m naor untraceable electronic cash crypto 88 1990 vol 403 lncs pp 319327 32 t okamoto k ohta universal electronic cash crypto 91 1992 vol 576 lncs pp 324337 33 t okamoto efficient divisible electronic cash scheme crypt 95 1995 vol 963 lncs pp 438451 34 j camenisch s hohenberger lysyanskaya compact e cash eurocrypt 05 2005 vol 3494 lncs pp 566566 35 t sander ta shma auditable",
    "metadata": {
      "chunk_id": "65949b3c8004cc372e74703123c36f39",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 61] divisible electronic cash scheme crypt 95 1995 vol 963 lncs pp 438451 34 j camenisch s hohenberger lysyanskaya compact e cash eurocrypt 05 2005 vol 3494 lncs pp 566566 35 t sander ta shma auditable anonymous electronic cash extended abstract crypto 99 vol 1666 lncs 1999 pp 555572 36 w dai b money proposal online available http www weidai com bmoney txt 37 l backstrom c dwork j kleinberg wherefore art thou r3579x anonymized social networks hidden patterns structural steganography proceedings 16th international conference world wide web ser www 07 new york ny usa acm 2007 pp 181190 38 narayanan v shmatikov robust de anonymization large sparse datasets ieee symposium security privacy ieee 2008 pp 111125 39 m chase healy lysyanskaya t malkin l reyzin mercurial commitments applications zero knowledge sets eurocrypt 05 vol 3494 2005 pp 422439 40 j camenisch lysyanskaya efficient system non transferable anonymous credentials optional anonymity revocation eurocrypt 01 vol 2045 lcns 2001 pp",
    "metadata": {
      "chunk_id": "7460c50c7b503db5696aef5e73312beb",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 62] knowledge sets eurocrypt 05 vol 3494 2005 pp 422439 40 j camenisch lysyanskaya efficient system non transferable anonymous credentials optional anonymity revocation eurocrypt 01 vol 2045 lcns 2001 pp 93118 41 dynamic accumulators application efficient revocation anonymous credentials crypto 02 2002 extended abstract online available http cs brown edu anna papers camlys02 pdf 42 d pointcheval j stern provably secure blind signature schemes asiacrypt 96 vol 1163 lncs 1996 pp 252265 appendix security proofs proof sketch theorem 4 1 proof sketch consider following simulation simulation generates params setup 1 primes c0 c1 uniformly sampled set prime 24 numbers range b a1 takes values input outputs set c transaction string r 24where b chosen arbitrary polynomial dependence security parameter long 2 b a2 41 description 41 x3 2 x3 3 strategy wishes simulation runs a2 simulated25 zero knowledge signature knowledge p random coin serial number s sampled z note q p computationally zero",
    "metadata": {
      "chunk_id": "5ebf03072eae1d5c08f73267e0b71c1b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 63] long 2 b a2 41 description 41 x3 2 x3 3 strategy wishes simulation runs a2 simulated25 zero knowledge signature knowledge p random coin serial number s sampled z note q p computationally zero knowledge negligible probability values provided distributed real protocol independent bit b implication pr b b0 1 2 advantage negligible 2 b proof theorem 4 2 proof let adversary wins balance game non negligible advantage construct algorithm b takes input p q g h g hgi hhi subgroup z order q outputs x zq p gx h mod p b works follows input p q g h generate accumulator parameters n u setup routine set params n u p q g h 1 k compute ci skci mint params skci si ri run params c1 ck answer queries ospend appropriate trapdoor information let s1 r1 sl rl set values recorded oracle conclusion game outputs set m 00 coins c1 c corresponding set m 1 valid m tuples 0 si 0 ri 0 ci 0 j 1 m 1 apply zksok extractor jth zero knowledge proof j 0 extract values cj rj perform following steps 1 extractor fails abort",
    "metadata": {
      "chunk_id": "4985fee58cce81c406594703158673c3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 67] instance 2 lemma 2 discrete logarithm assumption pr eventforge 3 proof sketch leave proof version paper similar earlier schemes e g 25 let a0 adversary induces eventforge non negligible probability 0 simulation input discrete logarithm instance run a0 main simulation use trapdoor information answer a0s oracle queries instead select random serial numbers simulate zksok responses a0 programming random oracle a0 outputs forgery repeated serial number different string r0 previous proof rewind a0 extract pair sj 0 r solve discrete logarithm j main simulation 2 appendix b zero knowledge proof construction signature knowledge p zksok r f c w r accverify n u c w 1 c g s hr composed proofs 1 committed value c accumulated 2 c commitment s proof detailed 41 x3 3 appendix double discrete log signature knowledge related previous work 21 x5 3 3 new proof security found version paper constructed follows bz given y1 g x hw let l k security parameters h f0 1g f0 1gk cryptographic hash func tion",
    "metadata": {
      "chunk_id": "8ed579596ee76a8600fa0104dd0489c9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  },
  {
    "text": "[Section 68] knowledge related previous work 21 x5 3 3 new proof security found version paper constructed follows bz given y1 g x hw let l k security parameters h f0 1g f0 1gk cryptographic hash func tion generate 2l random numbers r1 rl hvi v1 vl compute 1 l ti g xbri signature knowledge message m 00 0 c s1 s2 sl s1 s2 s l c h mky1kakbkgkhkxkt1k ktl 0 c 0 si ri s vi 0 si ri z s vi wbri z verify signature sufficient compute 0 c h mky1kakbkgkhkxkt 1k kt l c 0 t g xbsi hsi 0 bsi 0 t yhsi 1 check c c0 simulating extracting proofs appendix assume existence efficient simulator extractor signature knowledge constructed wellunderstood results random oracle model e g 25 42 provide details version work",
    "metadata": {
      "chunk_id": "12dd708f060d9d9ba72d617cd2f5cf5b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "Zcoin.txt"
    }
  }
]