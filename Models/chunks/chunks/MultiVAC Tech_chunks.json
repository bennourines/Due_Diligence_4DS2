[
  {
    "text": "[Section 1] b multivac high throughput flexible public blockchain based trusted sharding computation core mtv ac multivac foundation june 2018 version 0 1 abstract multivac generation high performance public blockchain industrial scale decentralized applications trusted sharding technology allows unlimited sustainable scalability provides novel approach solving blockchain scalability problem currently preventing mainsteam blockchains reaching industrial capability multivac propose sharding model based verifiable random functions vrf applies model transactions computation storage confirm transactions network classic utxo model miners dynamically selected probability model multivac allows high levels safety reliability needed industrial applications requiring processing small number nodes producing significant speed improvements fast scalable blockchain model multivac industry provide computational model smart contracts allows developers flexibly decide tradeoff consistency availability partition",
    "metadata": {
      "chunk_id": "71f203067e261f035b23d5bf514f4a68",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 2] speed improvements fast scalable blockchain model multivac industry provide computational model smart contracts allows developers flexibly decide tradeoff consistency availability partition tolerance parameters stiffly fixed designs public blockchains achieve providing general purpose virtual machine mvm equipped specially designed blockchain instruction set bisc powerful method validate correctness smart contract executions poie suite breakthroughs multivac extremely fast totally scalable robustly allows development extremely complicated business logic application layer ideal blockchain serve foundational layer public diversified blockchain ecosystem keywords blockchain shard reliability probability model flexibility 1 problems traditional blockchain blockchains scalable achieve economic use society statement necessarily entails compromises known blockchain protocols suffer called impossible triangle impossible single blockchain desiderata security decentralization scalability",
    "metadata": {
      "chunk_id": "7d6392ae0e46535ee4c94bb35cc5999c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 3] use society statement necessarily entails compromises known blockchain protocols suffer called impossible triangle impossible single blockchain desiderata security decentralization scalability largest public blockchains today compromise features example bitcoin 1 ethereum 11 secure decentralized completely unscalable computational power entire network stuck level single miner hand sharding models zilliqa 16 dfinity 19 abandon security guarantees scalability models like eos 13 abandon decentralization attempt solve performance bottleneck supernodes state channel technologies plasma 28 approach taking transactions chain attempting solve scaling issue massive amounts research development invested scaling blockchain leading recent throughput levels thousand transactions second e g eos 13 seele 18 reach 1000 3000 tps experiments tps transactions second despite low hardware processing capacity single miner major bottleneck networks speed improve scale node number significant incentive",
    "metadata": {
      "chunk_id": "814bcf7a90f3c5300bab0c30421531be",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 4] seele 18 reach 1000 3000 tps experiments tps transactions second despite low hardware processing capacity single miner major bottleneck networks speed improve scale node number significant incentive pushing enlarge resulting network growth underwhelming rates 12 00 noon utc time 13 2018 10 424 nodes year old bitcoin blockchain 7 14 383 ethereum 8 multivac believes viability blockchain businesses today depend blockchains provide general purpose computation network transactions network wide contract processing scalable expandable adaptable way propose trusted sharding model solves scalability problem allowing unlimited accumulation transaction power nodes worldwide e scalability limit construct exploit relationship network division labor consensus reliability model effective multivac performs sharding independently transaction processing smart contract execution creating incredibly supportive flexible base layer blockchain platform dapps multivac realize generalpurpose computational",
    "metadata": {
      "chunk_id": "cb9d2526f681c9809a486507e78c99e8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "exploit"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 5] sharding independently transaction processing smart contract execution creating incredibly supportive flexible base layer blockchain platform dapps multivac realize generalpurpose computational business logic flexibly decide according security needs nodes wish run code multivac solves fundamental problems 1 create shards network nodes transaction smart contract processing trustworthy manner allowing network scale 2 process transactions update records trusted shards use case transaction processing 3 verify correct honest execution smart contract code network nodes use case smart contract processing summarize presentation system paper multivac creates shards novel probability model based verifiable random functions vrf solving problem safely efficiently randomly shard network use byzantine consensus family reach internal consensus shard achieving construction trustworthy shard based consensus ready blockchain smart contract deployment designing optimized virtual machine mvm capable",
    "metadata": {
      "chunk_id": "7875f5cc3897323bc4690ca490e39dad",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 6] consensus family reach internal consensus shard achieving construction trustworthy shard based consensus ready blockchain smart contract deployment designing optimized virtual machine mvm capable general purpose computation equipped special blockchain instruction set bisc verifies correctness contract execution proof instruction execution poie creates trusted flexible execution environment allows execution complicated general purpose business logic 2 verifiable random functions consensus algorithm mechanism selecting bookkeeping nodes process overall consideration paid efficiency equitability selection 1 x0ceach honest node ideally given equal opportunity participate bookkeeping process achieved bitcoin ethereum proof work pow guarantees node selection process sufficiently random network regulations broken collusion 51% network s total compute power pow elegant solution embodies equitability inherent paradigm decentralization massively inefficient approach node selection dpos",
    "metadata": {
      "chunk_id": "d2fbb98e18de4524cc7565c299cd8257",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 7] network regulations broken collusion 51% network s total compute power pow elegant solution embodies equitability inherent paradigm decentralization massively inefficient approach node selection dpos algorithm represented graphene improves throughput pow system abandons randomness giving ability common nodes participate consensus sacrificing decentralized equitability efficiency consensus algorithms e pbft 2 $ complexity raft 21 equitable difficult realize public blockchains large scale high communication costs multivac believes bitcoin ethereum desirable degree equitability allowing ordinary nodes verification process property bedrock blockchain s future development ethereum designed custom hash function called ethash network equitable combat asic mining returning bookkeeping power specialized miners ordinary users pow system remains extremely wasteful choose better node selection process based verifiable random functions vrf ideal node selection algorithm integrates equitability",
    "metadata": {
      "chunk_id": "7aaba1dca416fd610e5a1bfc93a2d876",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 8] miners ordinary users pow system remains extremely wasteful choose better node selection process based verifiable random functions vrf ideal node selection algorithm integrates equitability randomness efficiency decentralization basic value proposition blockchains future blockchains depends substantial efficiency improvements current systems optimal method resolving contradiction usage verifiable random functions vrf framework algorand 4 dfinity s bls 5 cardano s ouroboros praos algorithm 6 verifiable random functions satisfy time requirements equitability efficiency intro vrfs vrfs pseudorandom functions functions user produce proof allowing parties verify function calculated correctly needing disclose random function case satisfactory vrf following desirable characteristics 1 verify random number generator provided rigorous level randomness 2 impossible predict control 3 non interactive algorithm implemented lower cost higher efficiency definition properties formally vrf consists",
    "metadata": {
      "chunk_id": "846de23ae12fd87fb93f13406a3162f7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 9] number generator provided rigorous level randomness 2 impossible predict control 3 non interactive algorithm implemented lower cost higher efficiency definition properties formally vrf consists polynomial time functions vrf verify able verify encrypted output value come vrf evaluate calculation given proof public key value d vrf generate vrf verify probabilistic functions vrf evaluate deterministic given polynomial time functions j k l integers j n xe2 x86 x92 n xe2 x88 xaa xe2 x88 x97 k n xe2 x86 x92 n l n xe2 x86 x92 n vrf generate evaluate verify verifiable pseudorandom function input length j c output length k c security level l c following conditions satisfied 1 prob vrf verify d e f true 1 xe2 x88 x92 2st left greater sign coin tosses vrf verify 2 vrf generate 1 xe2 x86 x92 ba vrf generate generates pair public key ba secret key according security parameter c vrf evaluate ba d xe2 x86 x92 e ba d f ba d vrf evaluate produces encrypted output value e proof f according private key",
    "metadata": {
      "chunk_id": "6ce72365db79056b469d1a2c6d9076c8",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 11] xa4 0 5 require prediction algorithm ik able accurately predict margin safety actual state x generated e vrf generate evaluate verify functions perform following operations probabilistic correctness probability following conditions 1 xe2 x88 x92 2st domain range correctness d xe2 x88 x88 0 1 w e ba d xe2 x88 x88 0 1 x b complete provability d xe2 x88 x88 0 1 w e f vrf evaluate ba d bck xc3 x87ikopq jrwstwuv wx xe2 x88 x97 1 e fm x7f xc3 xa4 xe2 x89 xa4 0 5 l c s vrf defines complete random number generator select bookkeepers generate validation challenges need modification vrf work framework addition properties probabilistic correctness unique provability residual pseudorandomness require random numbers blockchain system unpredictable random function predicted miner s identity exposed finished verifying transactions allowing subject attacks result failure bookkeeping exists concept called verifiable unpredictable 2 x0cfunctions vuf definition vrf satisfies properties 1 2 modifies",
    "metadata": {
      "chunk_id": "ec69e2913f7dd1b64be1ac775822150f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 12] finished verifying transactions allowing subject attacks result failure bookkeeping exists concept called verifiable unpredictable 2 x0cfunctions vuf definition vrf satisfies properties 1 2 modifies property 3 property 4 4 unpredictability algorithm t xe2 x88 x97 xe2 x89 xa0 d prob xc3 xa7 xc3 xa9 xc3 xa8 xc3 xaa xc3 xab xc3 xad xc3 xac xc3 xae xc3 xad xc3 xaf xc3 xb1 wx xe2 x88 x97 1 e ba d xc3 x84 xe2 x89 xa4 l xce xbb s case use vrf vuf satisfies condition 4 1 3 method adapting vrf unpredictable found 3 scope paper 3 sharding vrf probabilities apply vrfs node selection sharding process assuming n nodes network attempt select shards xc3 xb2 nodes random number z generated multivac main chain encrypted node according node s vrf private key producing 256 bit random number zd node picked shard following condition holds zd xc3 xb2 xe2 x89 xa4 2$ xc3 xb4 xc3 xb6 n probability node selected inshard node xc3 xb5 xc3 xb2 n node selection completely probabilistic highly likely number nodes",
    "metadata": {
      "chunk_id": "ee813ac4a7eee08b70bd85b65c2c8875",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 14] somewhat xc3 xb9 xc3 xb5 xc3 xb9 xc3 x9c n xe2 x8b x85 n xe2 x88 x92 1 xe2 x8b x85 xe2 x8b x85 xe2 x8b x85 n xe2 x88 x92 xc3 xba 1 xc3 xb2 xc3 xb2 xe2 x88 x99 xe2 x88 x99 xc2 xa21 xe2 x88 x92 xc2 xa3 n xc3 xb9 xc3 xba n n xe2 x8b x85 n xe2 x88 x92 1 xe2 x8b x85 xe2 x8b x85 xe2 x8b x85 n xe2 x88 x92 xc3 xba 1 xe2 x89 x88 1 n xc3 xb9 xc3 x9c xe2 x80 xa0s xc3 xb9 xc3 x9fa xc3 xb2 xe2 x80 xa0 xe2 x86 x92 xc2 xae xc2 xa21 xe2 x88 x92 xc2 xa3 xe2 x80 xa0 n large xc3 xb5m xc3 xb9 xc3 x9c xe2 x89 x88 blockchain shard real world aside definition shard formulation gives way look blockchains 1 blockchains networked consensus systems subsets wider network connected things internet considered shards entire internet 2 reliability blockchain s internal consensus mainly related internal node count related size proportion wider internet blockchain including bitcoin ethereum reliability value directly positively related participant node number e number nodes network 10424 bitcoin 7 14383 ethereum 8",
    "metadata": {
      "chunk_id": "7a1a6f0b8d0643ad1e7070a60766674c",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 15] size proportion wider internet blockchain including bitcoin ethereum reliability value directly positively related participant node number e number nodes network 10424 bitcoin 7 14383 ethereum 8 consider networked entities including people objects machines nodes massive real world network blockchain connecting subset compared node counts particular blockchain size wider internet true value n clearly infinitely larger preliminary model applies directly wider internet permits particular blockchain shard real world internet derive reliability blockchain primarily related node number conditions consensus define consensus algorithm s margin safety xc2 xa9 follows reliable consensus xc3 xb2 nodes required proportion honest nodes xc2 xa9 list reference values xc2 xa9 pbft systems sufficiently large node number xc2 xa9 0 667 algorand s ba xe2 x8b x86 algorithm 4 proposed value consensus interim step xc2 xa9 0 685 final step stronger xc2 xa9 0 74 discuss conditions consensus quantify degree",
    "metadata": {
      "chunk_id": "b84e44859f2f260f8b9d2da89c7b5ac6",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 17] x80 xa0 xe2 x86 x92 xc2 xae xc2 xa21 xe2 x88 x92 xc2 xa3 g s xc3 x9c xe2 x80 xa0 xc3 xb2 xc3 xb9 s xc3 x9c g xc3 xba number malicious nodes reach consensus inequality assumes immediately synchronized network network faces fluctuations ddos attacks honest nodes fail produce signals time considering let xe2 x89 xa4 proportion non responsive honest nodes interpreted degree network severed xe2 x89 xa4 0 implying strongly synchronized network xe2 x89 xa4 1 implying complete network paralysis refine second constraint prevent nonresponsive nodes malicious nodes causing block formation fail xe2 x88 x9ec lebja e 2 1 xe2 x88 x92 xc3 x98 xe2 x89 xa4 xc3 x98 xc3 xba xc2 xa9 xc3 xb2 value independent n network sufficiently large node count shard structure 3 x0c b c fig 1 relationship network bifurcation probability 1 xe2 x88 x92 xe2 x89 xa5 xc3 xb2 number nodes shard horizontal variable number shard nodes xc3 xb2 vertical variable logarithm bifurcation probability xc3 x86 0 9 xe2 x89 xa4 0 2",
    "metadata": {
      "chunk_id": "8bffd6d60c30d6019e599bb76832fba9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 18] probability 1 xe2 x88 x92 xe2 x89 xa5 xc3 xb2 number nodes shard horizontal variable number shard nodes xc3 xb2 vertical variable logarithm bifurcation probability xc3 x86 0 9 xe2 x89 xa4 0 2 effect forking probabilities different algorithms different shard sizes shown b xe2 x89 xa4 0 2 effect proportion malicious nodes network bft algorithm shown c xe2 x89 xa4 0 2 effect proportion malicious nodes network ba algorithm shown words trusted consensus shall simultaneously satisfy xc3 x98 xc3 xba xe2 x89 xa5 xc2 xa9 xc3 xb2 xc2 xb5 1 xe2 x88 x92 xc3 x98 xe2 x89 xa4 xc3 x98 xc3 xba xc2 xa9 xc3 xb2 note xc3 xba nodes shard probability having xc3 x98 xc3 xba honest nodes 1 xe2 x88 x92 xc3 x98 xc3 xba malicious nodes define xe2 x88 x82 xc3 xb9 directly calculated probability xc3 xb5m xc3 xb9 xc3 x9c xe2 x88 x82 xc3 xb9 xc3 xb5m xe2 x88 x82 xc3 xb9 xe2 x88 x91 xc3 x9c xe2 x88 x99 xc3 xb5m s xe2 x88 x82 xc3 xb9 s xe2 x88 x91 xc3 x9c xc3 x86 xc3 xb2 xe2 x88 x82 xc3 xb9 s xe2 x88 x91 xc3 x9c 1",
    "metadata": {
      "chunk_id": "d9641cd0bffa8eac9dd00671ef7218e9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 21] estimate xc3 xb2 xe2 x89 xa5 binary search shown fig 1 node number increases continuously log network bifurcation probability xc3 x9fc xe2 x88 x86 xce xa9 1 xe2 x88 x92 xe2 x89 xa5 xc3 xb2 linear showing reliability improves exponentially xc3 xb2 example use case suppose honest node proportion entire network xc3 x86 0 9 adopt pbft asynchronous bft consensus xef xbc x88 xc2 xa9 0 667 xef xbc x89within shard assume proportion nodes failing respond xe2 x89 xa4 0 2 find xe2 x89 xa5 200 0 9998 xe2 x89 xa5 300 0 999995 reference totally synchronized bitcoin network xc3 x86 0 9 bitcoin reliability value 1 0 99976 confirmation blocks slightly lower xe2 x89 xa5 200 parameters suppose honest node proportion xc3 x86 0 9 adopt ba xe2 x8b x86 consensus powerful xc2 xa9 0 74 shard maintaining network severity parameter xe2 x89 xa4 0 2 obtain xe2 x89 xa5 500 0 99994 ba xe2 x8b x86 operate xc2 xa9 0 685 gives xe2 x89 xa5 300 0 99998 xe2 x89 xa5 500 0 99999994 comparison pbft asynchronous bft",
    "metadata": {
      "chunk_id": "b331e03f5dba43a1d980499c4c67102b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 22] severity parameter xe2 x89 xa4 0 2 obtain xe2 x89 xa5 500 0 99994 ba xe2 x8b x86 operate xc2 xa9 0 685 gives xe2 x89 xa5 300 0 99998 xe2 x89 xa5 500 0 99999994 comparison pbft asynchronous bft algorithm reaches higher reliability fewer nodes cost higher communication cost xc3 xb2 $ required consensus 4 transactions consensuses reliability model pick xc3 xb2 vrf generate shards random nodes decompose entire blockchain network shards transaction designated specific shard execution sharding implementations challenging design appropriate mechanism sync shards decisions realize inter shard coordination sharding solution needs comprehensively consider questions ledger generated shard transactions consensus reached shard adequately secure handle transactions straddle multiple shards existing sharding technologies including elastico 15 zilliqa 16 utilize unified shared ledger able handle transactions sharded network incur heavy cost synchronize shards network failing optimally solve sharding",
    "metadata": {
      "chunk_id": "533b27f287467c3f1dc5a8230d66a06b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 24] shard guarantee write operation performed data shard cross shard data interactions system read preventing complicated crossshard logic inhibits technologies effectiveness method simple easy implement highly effective 4 x0canalysis include case smart contracts complicated case transactions considering series computational tasks xce x93 xc5 x93 0 1 2 3 xe2 x80 xa6 corresponding runtime cost task xce x93d required reliability level task xc2 xbbd size shard task executed xc3 xb2d total communication cost xe2 x80 xa6d xe2 x88 x99 xe2 x88 x86d sharding plan entire network shall optimize minimize e xe2 x88 x9e xe2 x88 x99 xe2 x80 xa6 xc3 xb2 xe2 x88 x99 xe2 x88 x86 xc3 xbb xc3 xbc xe2 x80 x94 xc3 xb2d xe2 x88 x99 xce x93d xe2 x80 xa6d xc3 xb2d xe2 x88 x99 xe2 x88 x86d xce x93d xe2 x88 x9e subject xe2 x89 xa5 xc3 xb2 xe2 x89 xa5 xc2 xbb xe2 x89 xa5 xc3 xb2d xe2 x89 xa5 xc2 xbbd xe2 x88 x9e xe2 x88 x99 xc3 xb2 xe2 x88 x91 xc3 xb2d xe2 x89 xa4 n global polynomial time solution optimization",
    "metadata": {
      "chunk_id": "d12aa16b416808a080a19f63f56e3f00",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 25] xe2 x89 xa5 xc3 xb2 xe2 x89 xa5 xc2 xbb xe2 x89 xa5 xc3 xb2d xe2 x89 xa5 xc2 xbbd xe2 x88 x9e xe2 x88 x99 xc3 xb2 xe2 x88 x91 xc3 xb2d xe2 x89 xa4 n global polynomial time solution optimization problem derive qualitative conclusion intuition task larger computational volume xce x93 xc5 x93 select consensus algorithm higher communication cost uses fewer nodes shard arrive stronger consensus e asynchronous bft computation task smaller computation volume xce x93 xc5 x93 choose shard consensus mechanism lower communication cost ba xe2 x8b x86 summary multivac uses vrf construct probability model splits user transactions miner nodes shards uses utxo byzantine consensus family reach shard consensus completes construction trusted sharding model basic principles security decentralization trusted sharding model large scalability implications public blockchains allows blockchain throughput increase limit number nodes ordinary public chain transactions consensus strength single multivac shard",
    "metadata": {
      "chunk_id": "f2de8c53c7b9b687d535f9d49d11960b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 26] sharding model large scalability implications public blockchains allows blockchain throughput increase limit number nodes ordinary public chain transactions consensus strength single multivac shard adequate achieve high level reliability dapps smart contracts wasteful require line code run hundreds thousands different nodes method use fewer optionally limited number nodes achieve trustworthy smart contract executions decentralized trustless network basis vrf sharding mechanism achieve creating mvm virtual machine equipped custom bisc instruction set poie consensus fig 2 utxo model multivac transactions distributed different shards execution according payers addresses inputs utxo transactions confirmed shards cross shard data interactions system read operations potential problem shard utxo method attackers attempting tamper transactions perform double payment need attack specific shards opposed network increases chances successful attack common method prevent dynamic shard adjustment",
    "metadata": {
      "chunk_id": "0534cf2ef2a7e50683739c6c343a3777",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 27] method attackers attempting tamper transactions perform double payment need attack specific shards opposed network increases chances successful attack common method prevent dynamic shard adjustment users miners shard randomly miners users different shards continuous fashion implementation choose dynamically adjust miners shard makes attacks shard difficult attacking network multivac additionally makes attacks harder selecting node consensus algorithms unlikely produce network forks pbft asynchronous bft ba xe2 x8b x86 erroneous blocks affected malicious nodes left cryptographic trace light pow algorithm bitcoin applicable shard consensus weak computational power single shard compared entire network makes easier attacker occupy majority computational power shard create fork consensus transactions supposing reliability requirement shard xc2 xbb shard size xc3 xb2 satisfy xe2 x89 xa5 xc3 xb2 xe2 x89 xa5 xc2 xbb 5 vms instruction sets virtual machines provide excellent sandbox environment",
    "metadata": {
      "chunk_id": "9d4357794adbd2a139e59a494e9a94d1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 28] supposing reliability requirement shard xc2 xbb shard size xc3 xb2 satisfy xe2 x89 xa5 xc3 xb2 xe2 x89 xa5 xc2 xbb 5 vms instruction sets virtual machines provide excellent sandbox environment executing smart contracts public chains capable general computation unlimited scalability design virtual machine s instruction set vital importance mainstream virtual machines instruction sets unoptimized complicated business logic smart contracts create specialized blockchain dedicated instruction set bisc blockchain instruction set computer basis create generalpurpose virtual machine multivac virtual machine mvm satisfying reliability condition wish cost reach consensus entire network low possible suppose epoch total transaction volume e total number shards xe2 x88 x9e suppose communication time complexity reach consensus shard function xe2 x80 xa6 xc3 xb2 xc3 xb2 cost single communication xe2 x88 x86 e xe2 x88 x9e terms average number nodes shard wish sharding plan entire network satisfy e",
    "metadata": {
      "chunk_id": "ed187b78e1807a1a2610ac5c9eaba61d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 29] complexity reach consensus shard function xe2 x80 xa6 xc3 xb2 xc3 xb2 cost single communication xe2 x88 x86 e xe2 x88 x9e terms average number nodes shard wish sharding plan entire network satisfy e minimize xe2 x88 x9e xe2 x88 x99 xe2 x80 xa6 xc3 xb2 xe2 x88 x99 xe2 x88 x86 xc3 xbb xc3 xbc xe2 x88 x9e subject xe2 x89 xa5 xc3 xb2 xe2 x89 xa5 xc2 xbb 5 1 design goals virtual machines need stay virtual long term blockchain virtual machine implemented directly specialized hardware cpu blockchain transactions faster immensely powerful xe2 x89 xa5 xc3 xb2 monotonic optimization deterministic solution consensus smart contracts extend 5 x0chappen blockchain instruction set virtual machine mature efficient able support complicated toplayer contract logic complicated robust base layer architecture based long term vision design mvm bisc instruction set following features 1 2 3 instruction computer g instructions standard risc v set contains basic instruction kinds extension packs mafd support",
    "metadata": {
      "chunk_id": "d8682d60a8a78fa2f7d3649fffa5adab",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 30] based long term vision design mvm bisc instruction set following features 1 2 3 instruction computer g instructions standard risc v set contains basic instruction kinds extension packs mafd support general purpose computation blockchain vms today limited handling complicated general purpose computation future smart contracts dapps require vms turing complete instruction sets support complicated logic support compilation multiple high level languages multivac open source ecosystem designed highly friendly developers providing robust compilation environment high level languages support smooth migration existing programs platform effective use hardware allowing implementation instruction set hardware computer present day blockchain systems cause low level hardware suffer large loss potential performance compiling interpreting vm bytecode mvm redesigns upgrades mature cpu instruction set holding potential day directly installed hardware computer makes possible computers naturally multivac",
    "metadata": {
      "chunk_id": "4af6452eeab94886b81bfa049755f403",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 31] performance compiling interpreting vm bytecode mvm redesigns upgrades mature cpu instruction set holding potential day directly installed hardware computer makes possible computers naturally multivac nodes computers desktop mobile purposes allow seamless switch personal computer miner table 1 bisc instruction pack instruction instruction extension description pack basic access instructions computation controlling operation integers m multiplication instructions division operations integers trans processor atom instructions manipulation instructions synchronous reading writing etc f single precision instructions floating number operation instructions d instructions l instructions b instructions double precision floating number operation instructions decimal integer operation instructions bit manipulation instructions h instructions x instructions signature hash instructions encryption decryption instructions bisc instructions rv32g rv64g brv256i brv256m brv256a brv256l brv256b brv256h",
    "metadata": {
      "chunk_id": "27d36192147ee4d2bbc7c68ada871b25",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 32] manipulation instructions h instructions x instructions signature hash instructions encryption decryption instructions bisc instructions rv32g rv64g brv256i brv256m brv256a brv256l brv256b brv256h brv256x bisc instruction set framework currently supports c compilation based llvm gdb debugger glibc standard library llvm low level virtual machine compiler framework purpose construct compiletime link time run time executor programming language llvm compilation framework risc v end eventually support high level languages java overall architecture shown fig 3 5 2 bisc instruction set mvm uses flexible custom instruction set bisc bisc based outstanding reduced instruction set risc v 22 mature instruction architecture excellent open source compilation environment bisc customizes risc v blockchain adding 256 bit instruction processing plus signature hashing instructions public blockchains development bisc line global open source principles bisc supports complete tidy set instruction sequences",
    "metadata": {
      "chunk_id": "ff0ecc2027f12c807ec89690250b9b36",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [
          "bug"
        ],
        "financial": [],
        "operational": []
      },
      "risk_score": 11.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 33] adding 256 bit instruction processing plus signature hashing instructions public blockchains development bisc line global open source principles bisc supports complete tidy set instruction sequences shown table 1 multiple sets instructions named follows instructions labeled prefix rv standard extensions defined risc v labeled brv newly defined bisc numbers following rv brv refer instruction bitwidth suffix signifies instruction s functions suffix g joint label covers risc v s base pack standard extensions mafd instructions especially rv32g rv64g strong support risc v community additional risc v extensions suffix l b instructions newly defined bisc suffix h x fig 3 llvm compilation framework based bisc 5 3 mvm virtual machine mvm virtual machine blockchain vm designed support flexible computational models capable providing efficient verifiable execution environment smart contracts sourced high level turing complete programming languages mvm provides applications static code",
    "metadata": {
      "chunk_id": "c5a81928ad1cf14889b5acdae1c74d73",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 34] computational models capable providing efficient verifiable execution environment smart contracts sourced high level turing complete programming languages mvm provides applications static code optimization storage allocation run time inspection execution time verification prevent infinite loop attacks mvm adopts gas charges similar ethereum bisc instruction executed executed instruction smart contract incurs charge smart contracts executed computationally efficient way possible requiring code optimization mvm include developers targeted suggestion optimization engine test environment provide breakdowns executed instructions gas costs provide compilation environment suggestions code optimization completing execution limited time smart 6 x0ccontracts flexible computational system verified honest work poie consensus algorithm directly embedded mvm platform achieves performing computation gas charging verification concurrently executed instruction note gas charges levied smart contract",
    "metadata": {
      "chunk_id": "76ed8843139d5a1e9cf814da50ec5fb9",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 35] honest work poie consensus algorithm directly embedded mvm platform achieves performing computation gas charging verification concurrently executed instruction note gas charges levied smart contract execution steps computational steps required verification logic gas charging instruction sequence sufficient gas completed verified node issue computational results consensus mechanism receive gas reward facilitate processing mvm provides bisc compatible memory model isolates computer xe2 x80 x99s physical memory providing flexible run time support built stack heap space stack space provides sufficient depth support types complicated data structures provide batch io stack operations heap space capable freely allocated supports random addressing provides monitoring mechanism recover resources sum guaranteeing memory allocation general purpose computation mvm operate network nodes allowing nodes providing computational services schedule tasks adding priority queues order gas price execute",
    "metadata": {
      "chunk_id": "b01726f74a56a15e3baebbeb69d24c59",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 36] sum guaranteeing memory allocation general purpose computation mvm operate network nodes allowing nodes providing computational services schedule tasks adding priority queues order gas price execute order priority 6 malicious nodes incur high real world physical cost order defraud defrauded able receive reward able overturn computation s verified correctness perspective costs malicious nodes great incentive honestly execute computational tasks physical cost poie follows treat program executed base layer instruction sequence modern computers cost executing sequence far cost storing sequence memory physical constraint use ensure reliability reality processing speed modern computers equal cpu cache far greater read write speed memory cpu cache reach processing speed cpu high end cpus e intel core i7 series cache 8 12mb consists 1 4 1 3 computational costs terms number transistors technologies world designed similar insights physical foundations poie similarity ethereum s mining mechanism",
    "metadata": {
      "chunk_id": "6ea8be94f454e9283c3ee904ce798f06",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [
          "fraud"
        ],
        "operational": []
      },
      "risk_score": 10.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 37] core i7 series cache 8 12mb consists 1 4 1 3 computational costs terms number transistors technologies world designed similar insights physical foundations poie similarity ethereum s mining mechanism ethash ethash resist asic mining avoid bitcoin level miningpool centralization requiring miners perform hashing randomly frequently read large amounts data memory memory read requirement creates bottleneck specialized asic miners preventing mining highly specialized centralized activity similarly ethash poie uses physical discrepancy computation storage modern computers penalize malicious behavior poie consensus existing sharding technologies proposed ethereum 20 zilliqa 16 elastico 15 require large number nodes shard usually hundreds low thousands dapps composed smart contracts public blockchain requiring dapp code run hundreds thousands nodes clearly expensive system untrusted nodes blockchain way execute computation task tiny number nodes soundness execution process obtained result",
    "metadata": {
      "chunk_id": "71ed9c29ecae3a7b67782240fb48b4e1",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 38] requiring dapp code run hundreds thousands nodes clearly expensive system untrusted nodes blockchain way execute computation task tiny number nodes soundness execution process obtained result verifiable network 6 2 poie algorithm poie instruction set based consensus embedded virtual machine design philosophy consider program execution string execution instructions poie verify instruction sequence honestly executed network untrustworthy nodes distribute appropriate economic rewards honest execution 6 1 theoretical realistic basics poie 6 2 1 preliminaries define anti collision hash function safety parameter c xc3 xb7 xe2 x84 x8ejl xe2 x84 x8e 0 1 xe2 x88 x97 xe2 x86 x92 0 1 xe2 x80 x99 proposed researchers tel aviv university mit zk snarks 14 verify execution program divulging program s data solving program s zeroknowledge proofs zk snarks create concise non interactive zero knowledge proofs flattening program transaction smart contract base expressions functioning like logic gates",
    "metadata": {
      "chunk_id": "318762d75b70943cf87d09e69b3d0639",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 39] data solving program s zeroknowledge proofs zk snarks create concise non interactive zero knowledge proofs flattening program transaction smart contract base expressions functioning like logic gates circuit encoding program code circuit providing proof statement verifier zk snarks verify non interactively computation task actually executed design shard based internal consensus algorithm based zk snarks benefit number nodes shard small reach high degree consensus easily verifiable shard nodes important quality effective consensus system nodes participate program execution verify executed correctly zk snarks suffer extremely high time complexity program xe2 x84 x99 time bound time complexity execute zk snark verification xe2 x84 x99 xe2 x88 x99 9 10 14 practically applicable public blockchain systems multivac introduces brand new consensus algorithm called poie proof instruction execution proof base layer instruction sequences zk snarks purely mathematical algorithms verification poie",
    "metadata": {
      "chunk_id": "6210741686613179d066fbac6df84e6b",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 41] xc3 xbfs xc3 x96 xc5 xb8 xe2 x81 x84 xef xac x81 xc2 xa4 xe2 x80 xb9 xe2 x80 xba xe2 x88 xaa xe2 x97 x8a b 2 xc3 xbfs xc3 x96 xc5 xb8 xe2 x81 x84 xef xac x81 1 xe2 x86 x92 classic application merkle trees blockchain uses packaging transactions bitcoin proof replication filecoin poie requires computationally complete hidden verification function scalable computational integrity privacy scip 9 10 14 scip triad scip setup prove verify process zero knowledge verification hides execution proof poie prevent party copying 7 x0cthe instruction set sequence expound individual functions poie generate ba b xc3 x8a xc3 x8a xe2 x84 x99 xe2 x86 x92 root xc3 x9a xc3 x9b root xc3 x9a xc3 x99 f xc3 x8a xc3 x8a 6 2 2 homomorphic hiding program decomposed instruction set sequence xce x93 poie allows instruction executor prover xef xbc x8c xe2 x80 x9e generate proof f xce x93 linear xce x93 time enables verifier verifier xe2 x80 xb0 verify xc3 x9fc xe2 x88 x86 xce x93 time instruction set sequence",
    "metadata": {
      "chunk_id": "3953aebea4c291bc14824cd06ad892b5",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 42] executor prover xef xbc x8c xe2 x80 x9e generate proof f xce x93 linear xce x93 time enables verifier verifier xe2 x80 xb0 verify xc3 x9fc xe2 x88 x86 xce x93 time instruction set sequence correctly executed simplify presentation combine output xc3 x82 instruction set sequence xce x93 xce x93 considers instruction set sequence result node owns public secret key pair ba addition pair public secret keys xc3 x8a xc3 x8a b xc3 x8a xc3 x8a hide information conduct homomorphic hiding hh instruction set sequence executor triad expanded xe2 x84 x99 program code executed poie generate creates merkle tree root node instruction sequence xce x93 hidden instruction sequence xce x9b generated xe2 x84 x99 s execution operations executed simultaneously cpu recording xce x93 xce x9b pseudo code poie generate poie generate inputs key pair ba hide key b xc3 x8a xc3 x8a program xe2 x84 x99 outputs root merkle tree root xc3 x9a xc3 x9b root merkle tree root xc3 x9a xc3 x99 prove f xc3 x8a xc3 x8a",
    "metadata": {
      "chunk_id": "f95298e320a987f058be2b57523a35b3",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 44] hidden version xce x9b instruction set xce x93 proof f xc3 x8a xc3 x8a provided executor xe2 x80 x9e generate proof xce x9b xce x93 xce x9b xce x93 need doubly generated section 6 2 3 pseudo code hh generate hh generate inputs key pair ba hide key b xc3 x8a xc3 x8a instruction list xce x93 outputs encrypted instruction list xce x9b prove f xc3 x8a xc3 x8a procedure compute xce x9b xe2 x86 x90 xc3 x88 xe2 x88 x9eb xc3 x8d xc3 xb5e xce x93 ba set d xe2 x83 x97 xe2 x86 x90 xce x9b set xc3 x8f xc3 x8c xc3 x8c xe2 x83 x97 xe2 x86 x90 ba xce x93 compute f xc3 x8a xc3 x8a xe2 x86 x90 scip prove b xc3 x8a xc3 x8a d xe2 x83 x97 xc3 x8f xc3 x8c xc3 x8c xe2 x83 x97 output xce x9b f xc3 x8a xc3 x8a poie prove defines interactive process requiring twophase commit protocol meaning execution xe2 x84 x99 performed generates new xe2 x97 x8a xce x9b constructing proof challenge xc3 x93 given verifier point challenges queried xc3 x99 xcb x99 poie prove ba b xc3 x8a xc3 x8a xe2 x84 x99 xce xb5 xe2 x86",
    "metadata": {
      "chunk_id": "02d666e8be71f55d6b5ce79bf28d55a7",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 50] f xc3 x94 xe2 x80 x99w xef xa3 xbf xc2 xa3 output % xe2 x88 xa7 %$ xe2 x88 xa7 % weight parameters task submitter prefer set 0 ignoring needs system order maximize self interest final decision making power xc3 xb2 xe2 x8a x9b remains multivac public blockchain user able request reliability level economic considerations final selection shard size xc3 xb2 consensus algorithm xe2 x8a x9b decided multivac program 7 storage transmission computation noted computers compute store transmit data robust public blockchain system able achieve desiderata security scalability decentralization computation storage transmission turn requires welldesigned incentive mechanisms encourage nodes contribute resources multivac scalable public blockchain designs dimensions blockchain robustness computation storage transmission allows interactive verification process executed instruction set sequence cost executing instructions lower storing memory attacker incur high cost chose store copy xce x93 construct",
    "metadata": {
      "chunk_id": "078271804fc1cdf35c2a0c562e523479",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 51] transmission allows interactive verification process executed instruction set sequence cost executing instructions lower storing memory attacker incur high cost chose store copy xce x93 construct xce x9b makes cost effective launch attack goes saying cost storing constructing xe2 x97 x8a xce x93 xe2 x97 x8a xce x9b memory extremely high 7 1 computation discussed computation sections multivac system provide flexible sharding solution blockchain computation poie verify correctness computation poie provides actual sequence executed instructions xce x93 instruction sequence homomorphic hide xce x9b based execution status inferred xce x9b easily design reward system similar gas incentive ethereum reward function 6 3 flexible sharding computation requirements consistency availability partition tolerance difficult equally satisfy design distributed system different contracts dapps different levels requirements properties public blockchains fixed compromise multivac unique public blockchains",
    "metadata": {
      "chunk_id": "d01686351213060e9174dde8d982a714",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 52] tolerance difficult equally satisfy design distributed system different contracts dapps different levels requirements properties public blockchains fixed compromise multivac unique public blockchains flexible computation model provides infrastructure guaranteeing dapp designers space decide tradeoff decentralization scalability security given vrf sharding process poie task verification process multivac allows users submitted tasks select required reliability level based actual business demand based select shard size corresponding consensus mechanism computation task xce x93 multivac allows task submitter choose run task inside shard certain size order reach reliability requirement xc2 xbb define communication complexity reach consensus shard terms shard size xc3 xb2 function xe2 x80 xa6 xc3 xb2 define cost single communication function proof xe2 x88 x86 xce x93 note xe2 x88 x86 xce x93 data volume poie algorithm needs interact complexity xc3 x9fc xe2 x88 x86 xce x93 xe2 x80 xa6 xe2",
    "metadata": {
      "chunk_id": "4a5063cf2efb1a6ffd0428e961def949",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 53] xc3 xb2 define cost single communication function proof xe2 x88 x86 xce x93 note xe2 x88 x86 xce x93 data volume poie algorithm needs interact complexity xc3 x9fc xe2 x88 x86 xce x93 xe2 x80 xa6 xe2 x88 x97 fixed consensus type chosen e asynchronous bft ba xe2 x8b x86 given consensus algorithm xe2 x8a x9b denote consensus specific communication complexity xe2 x80 xa6 xe2 x8a x9b xe2 x88 x97 denote reward miners able receive g xe2 x8a x9b node count involved distributing reward xe2 x84 x8e xe2 x8a x9b xc3 xb2 submitter computation task aims achieve desired reliability level minimum possible cost multivac s public blockchain aims minimum possible zg xc3 x8fjb0d xce x9bd poie verify xc2 xb5 xce x9bd poie verify xe2 x86 x92 true xe2 x88 x85 poie verify xe2 x86 x92 false 7 2 storage multivac equipped high performance transaction processing improves number nodes network average realized public blockchain 1 000 tps average transaction size 0 4kb blockchain ledger annual file size 10tb",
    "metadata": {
      "chunk_id": "0fc6ca0f3d579adc00e46c8e5722f10d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [
          "fine"
        ],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 12.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 54] equipped high performance transaction processing improves number nodes network average realized public blockchain 1 000 tps average transaction size 0 4kb blockchain ledger annual file size 10tb clearly normal pcs unable store large ledgers require usage supernodes shard storage distributed storage projects storj 25 xef xbc x8cmaidsafe 27 siacoin 26 filecoin 24 filecoin 24 takes ipfs 23 base mechanism complete decentralized distributed storage system addressable versioned peer peer file system wellknown blockchains including eos adopt ipfs slightly different ipfs based hash addressing multivac uses storage search mechanism based merkle roots merkel roots benefits enable search retrieve data additional capability allowing search retrieve small chunk data obtaining 9 x0cverification data s existence authenticity multivac supports file storage retrieval based hash merkle roots addition multivac includes vrf sharded storage mechanism distributed decentralized storage system similar",
    "metadata": {
      "chunk_id": "06b80be2e1cea8563ecb5bdee9e8823d",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 55] s existence authenticity multivac supports file storage retrieval based hash merkle roots addition multivac includes vrf sharded storage mechanism distributed decentralized storage system similar bitcoin light nodes multivac nodes store block header information maintaining transaction input output distributed storage important note multivac data storage mechanism internal base layer service system storage mechanism unable edit data rules data generation modification deletion verification consensus delegated platform s higher level functions thing base layer store retrieve data higher levels multivac provide reward nodes performing storage computational services 7 2 transmission finally blockchain network consider data transmission issues systems utilizing sharded storage ledger reduce storage costs exchange increased transmission costs issue relieved somewhat ipfs proven usage distributed storage brings distributed transmission capability reduce bandwidth pressures centralized nodes",
    "metadata": {
      "chunk_id": "53f96f838092c49e67226897807f1943",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 56] costs exchange increased transmission costs issue relieved somewhat ipfs proven usage distributed storage brings distributed transmission capability reduce bandwidth pressures centralized nodes suppose blockchain node processes e transactions forming block entire network stores ledger disc io time cost e network syncing cost e use shard storage disc io time cost network syncing cost e additional network communication cost verification e transaction process likely takes place fragmented network instead synchronized network time cost syncing actually practice somewhat higher local disc io principle sharding ledger s storage increase time complexity transmission discovering appropriate incentive mechanisms data transmission remains open question academia industry fully effective solutions presented date mechanisms ipfs filecoin storage nodes receive rewards mechanisms porep post storage nodes refuse transmit data nodes require reasons bandwidth cost addition data transmission frequent",
    "metadata": {
      "chunk_id": "211a5c2037a143692108a629592eb2ba",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 57] presented date mechanisms ipfs filecoin storage nodes receive rewards mechanisms porep post storage nodes refuse transmit data nodes require reasons bandwidth cost addition data transmission frequent impossible generate corresponding reward transaction data request reward transaction result data transmission costs leading infinite recursion designed incentive mechanism data transmission consideration issues bandwidth latency transition volume request frequency variables cause data transmission reward question remain unsolved problem near term mechanism urgent objective data transmission decoupled operations storage computation incentive mechanisms summary multivac comprehensively considers dimensions computation storage transmission modern blockchains design incentive mechanism computation storage scalable public blockchain designs dimensions 8 conclusions multivac designs high performance public blockchain nodes randomly sharded based vrf reliability guaranteed probability model",
    "metadata": {
      "chunk_id": "5ac8fdea2c8ada707dd20f3a03dcd04a",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 58] storage scalable public blockchain designs dimensions 8 conclusions multivac designs high performance public blockchain nodes randomly sharded based vrf reliability guaranteed probability model unlike public blockchains available today flexible platform provides users smart contracts ability self select balance security decentralization scalability unlike bitcoin ethereum processing capacity multivac network continuously increased number nodes increases total computational power network expands making blockchain infinitely scalable capable myriad business industrial applications terms business support distributed computation platform provides revolutionary breakthrough blockchain industry novel bisc instruction set mvm virtual machine poie consensus allows platform able supply increasable level resources distributed applications final sidenote multivac derived supercomputer isaac asimov xe2 x80 x99s question multivac evolved present day transistor based computers entity existing",
    "metadata": {
      "chunk_id": "c5ef1a2f244f28bfba99620ce324e872",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 59] level resources distributed applications final sidenote multivac derived supercomputer isaac asimov xe2 x80 x99s question multivac evolved present day transistor based computers entity existing hyperspace gravity time having merged human souls universe days universe multivac finally discovers answer question net entropy universe massively decreased makes pronouncement let light references 1 satoshi nakamoto bitcoin peer peer electronic cash system october 31 2008 2 m castro b liskov practical byzantine fault tolerance symposium operating systems design implementation 1999 20 4 173 186 3 s micali m o rabin s p vadhan verifiable random functions proceedings 40th annual ieee symposium foundations computer science focs new york ny oct 1999 4 yossi gilad rotem hemo silvio micali georgios vlachos nickolai zeldovich algorand scaling byzantine agreements cryptocurrencies mit csail arxiv 1607 01341 5 d boneh b lynn h shacham short signatures weil pairing proceedings 7th international",
    "metadata": {
      "chunk_id": "bd81bdb7efaae37659fa76fb4d41e956",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 60] vlachos nickolai zeldovich algorand scaling byzantine agreements cryptocurrencies mit csail arxiv 1607 01341 5 d boneh b lynn h shacham short signatures weil pairing proceedings 7th international conference theory application cryptology information security advances cryptology asiacrypt xe2 x80 x9901 pages 514 xe2 x80 x93532 london uk 2001 springer verlag 6 b david p gazi kiayias russell ouroboros praos adaptively secure semisynchronous proof stake blockchain international conference theory applications cryptographic techniques 2018 6698 7 global bitcoin nodes distribution website https bitnodes earn com 8 ether nodes network number website https www ethernodes org network 1 9 rosario gennaro craig gentry bryan parno mariana raykova quadratic span programs succinct nizks pcps annual international conference theory applications cryptographic techniques pages 626 xe2 x80 x93645 springer 2013 10 nir bitansky alessandro chiesa yuval ishai 10 x0c 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
    "metadata": {
      "chunk_id": "70a60a919f9c3759ea5d292c699f16dd",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 61] conference theory applications cryptographic techniques pages 626 xe2 x80 x93645 springer 2013 10 nir bitansky alessandro chiesa yuval ishai 10 x0c 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 succinct non interactive arguments linear interactive proofs springer 2013 vitalik buterin generation smart contract decentralized application platform 2013 dr gavin wood ethereum secure decentrailised generalised trasactioin ledger block eos io technical white paper march 2018 eli ben sasson alessandro chiesa daniel genkin eran tromer madars virza snarks c verifying program executions succinctly zero knowledge advances cryptology xe2 x80 x93crypto 2013 pages 90 xe2 x80 x93108 springer 2013 l luu v narayanan c zheng k baweja s gilbert secure sharding protocol open blockchains acm sigsac conference computer communications security 2016 17 30 zilliqa team zilliqa technical whitepaper 2017 eleftherios kokoris kogias philipp jovanovic linus gasser nicolas gailly ewa syta bryan ford",
    "metadata": {
      "chunk_id": "c28d5661dbb789142bcdc0414bab3a0f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  },
  {
    "text": "[Section 62] conference computer communications security 2016 17 30 zilliqa team zilliqa technical whitepaper 2017 eleftherios kokoris kogias philipp jovanovic linus gasser nicolas gailly ewa syta bryan ford omniledger secure scale decentralized ledger sharding 2017 seele team seele tech whitepaper innovate new era value internet 2018 timo hanke mahnush movahedi dominic williams dfinity technology overview series consensus system jan 2018 vitalik buterin ethereum 2 0 mauve paper 2016 diego ongaro john ousterhout search understandable consensus algorithm 2014 usenix annual technical conference june 2014 305 219 andrew waterman krste asanovie risc v instruction set manual 7 2017 juan benet ipfs content addressed versioned p2p file system 2014 filecoin team filecoin cryptocurrency operated file storage network july 2014 shawn wilkinson tome boshevski josh brandoff james prestwich gordon hall patrick gerbes philip hutchins chris pollard storj peer peer cloud storage network dec 2016 david vorick luke",
    "metadata": {
      "chunk_id": "3061f4b4f9c012c5390e7addee90b02f",
      "entities": {
        "email": [],
        "crypto_address": []
      },
      "risk_features": {
        "regulatory": [],
        "technical": [],
        "financial": [],
        "operational": []
      },
      "risk_score": 0.0,
      "source": "MultiVAC Tech.txt"
    }
  }
]