b matchpool philip saunders yonatan ben shimon january 14 2017 abstract matchpool decentralized matchmaking protocol uses group dynamics help participants possible find love generic platform kind paid membership community clearly define sides interaction market paper presents elements platform ethereum smart contracts handle trust sensitive ownership reward structures core game logic makes work finally lay year roadmap launching scaling network including detailed specification guppy token gup play integral role development contents 1 introduction 2 2 strategies 2 3 participants 3 1 joiners 3 2 hosts 2 3 3 4 pools 4 1 overview 4 2 matchlock 4 3 finding pools 4 4 fee options 4 5 notebooks 4 6 dapplets 4 4 4 5 5 5 5 5 ownership logic 5 1 arrows 5 2 divs 5 3 business models 6 6 6 7 6 privacy 7 7 trust policy 7 1 centralization vs decentralization 7 2 contracts 8 8 8 8 guppies 8 1 purpose having token 8 2 token specification 8 3 price steps 9 9 9 10 9 roadmap 10 10 appendix 10 1 x0c1 introduction dating apps market today suffer core flaws firstly tendency rely dehumanizing profiling strategies exclusion effective forms matching secondly eager subscription money apps allow huge demographic imbalances occur detriment user experience study globalwebindex estimated 62% location based dating apps tinder men tinder concerned abundance men scarcity women mixed lack real life social cues creates environment fun ultimately successful users matchpool solves game theoretic problems allowing users create pools area custom demographic specifications pools visualized cross slack channels meetup groups federated invite groups owned run devoted matchmakers paper describe process matchmakers rewarded network xe2 x80 x99s internal token matching new entrants successfully quality reputation particular pools measured joiner xe2 x80 x99s particular goals met makes matchpool unique matchlock feature keeps 50 50 ratio x y certain number x users enters pool matchlock stop x entering number y xe2 x80 x99s arrive dating context apply gender parameterized use case arbitrary market polarity required restriction x y matchlock opposites entrepreneurial networking use case x y identical completely unset lgbt dating pools gender configuration sides pool founder configure matchlock according kind community wish create 2 strategies social networks strategies connecting users profiling pooling internet typical profiling strategy social networking like xe2 x80 x9cclassified xe2 x80 x9d local paper effective advertising products vacancies sides clear want good current example approach works job marketplace com users advertise looking users compete meet demand xe2 x80 x99s twitter extreme twitter users profile sure activity emerges spontaneously human interaction example social network geared primarily pooling pooling strategies applied dating real world include things like bars nightclubs dancing deliberate forms matchmaking like speed dating activities underlying element ritual distraction people need important element recognized practiced human history missing atomized online approaches matchpool implements combination joiners profiles sorting pools participate pool chats play dapplets events organized matchmaker group dates pool members basic philosophy pools creating right environment letting nature course pools direct interest creating matches possible assume singles motivated inside pool little unnecessary mediation creating intentional high trust community subtle pressure behave better engage spamming low quality mass messaging tendency blockchain development systems design lean heavily boilerplate notions xe2 x80 x9creputation xe2 x80 x9d xe2 x80 x9cincentives xe2 x80 x9d ignoring fact reputation complex emergent property people xe2 x80 x99s subjective impressions market decisions groups allow kind unmeasured unmeasurable xe2 x80 x9creputation xe2 x80 x9d emerge members need contrived score karma count quantified reputation relates quality pool individual participants 3 participants kinds participants matchpool joiners hosts 2 x0c3 1 joiners joiners self explanatory category want join pool intention meeting matches particular interest joiners following rough user journey 1 user supplies number factors details age gender interests personality type sexual orientation seeking relationship type education level income ethnicity religion fitness etc data confidential encrypted purpose matching people pools 2 user creates wallet option buy guppies exchange crypto purchase directly fiat credit card purpose paying entry fee pools 3 user pools exist geographical proximity location depending values provided pools qualified 4 user enters pool choice pays requisite entry fee applicable business model pool policies place 5 new entrants higher reward rate matchmakers pair initial period dateseekers likely matched people 6 users date published xe2 x80 x9cnotebook xe2 x80 x9d public log activities process logging event involves agreement person appears 7 users events message dateseekers play dapplets dates relationship point journey complete option remain member pool act matchmaker dateseekers earning divs leave joiners billed pool monthly membership billing matchpool denominated network xe2 x80 x99s token guppies gup joiners act helpers pool host example matchmaker admin greeter 3 2 hosts host founder pool sets place specifications member helper hand member pool acts matchmaker members helpers propose matches joiners believe good partners depending kind proposed match date relationship marriage helper different number arrows table 1 shows sample breakdown reward system exact number found trial error process xe2 x80 x9cmatches xe2 x80 x9d 4 steps 3 x0caction date meeting relationship engagement value 1 arrow 1 arrow 20 arrows 150 arrows table 1 action value list configured host 1 start pitch involving users event category bob alice date 2 bob alice notified accept reject 3 accept event added public notebook log activity 4 proposer earns 1 arrow trust model interaction assumes things bob alice paying membership pool b identities verified incentive accept match fraudulently event posted public notebooks similar facebook relationship status update matchpool app functionality scheduling arranging events stories event happened use section subsections organize document simply use section subsection buttons toolbar create xe2 x80 x99ll handle formatting numbering automatically arrows entitle matchmaker certain share divs pool divs entitle owner certain share monthly subscription revenue matchmakers collected certain number arrows ability start new pools 4 pools love composed single soul inhabiting bodies aristotle 4 1 overview pool basic unit matchpool features slack like public chat interface ability send private messages features including wallet pools established matchmakers ways way reserve escrow certain number matchpool tokens xe2 x80 x9cguppies xe2 x80 x9d held pool duration open second method simply users achieved certain number arrows matching people pools successful matchmaking vital component public reputation pools network important new pools started people successful track record 4 2 matchlock matchlock allows host configure demographic details sides interactionx y starting pool host able configure matchlock required factors interaction including gender age range education level ethnicity religion geographical proximity broad detailed generic certain number type x enters pool unavailable users type x number type y enters issues matchlock people compelled change details order matchlock develop number mechanisms platform allow peer authentication dispute factors including social media verification population limit set 144 default approximately dunbar xe2 x80 x99s number number personal relationships human mind handle host configure parameter larger smaller limit desired 4 x0ctable 2 example host configure matchlock field having set valid factors users registered protocol list factors matched group choice long matchlock activated demographic imbalance y male 21 35 college 0 10km 20 gup x female 21 35 college 0 20km 10 gup table 2 list example demographic configurations matchlock 4 3 finding pools matchpool implement end interface allow users search pools different areas matched different interests respect somewhat similar meetup com users search factors fits boarding process shown list pools area fits particular demographics interests 4 4 fee options matchlock configuration defines entry fee protocol xe2 x80 x99s internal currency different groups ongoing monthly subscription fee example dating pool important great deal variation demand coming males females case sense price expensive cheaper free lock prevent demographic imbalances occurring user reason unable enter locked pool xe2 x80 x9cregister interest xe2 x80 x9d joining based interest indicators host able demand level adjust price accordingly 4 5 notebooks notebook kind log matchpool users log updates events dates relationship status update xe2 x80 x9cstories xe2 x80 x9d user goes date option share story went added public notebook 4 6 dapplets dapplets add ons created developers want add matchpool protocol practice dapplets work similar slack plugins enhance experience number ways example dapplet implements xe2 x80 x9ctinder xe2 x80 x9d functionality users swipe users good example works sites like meetme com suite mini games like lunch money blind date etc helped users meet know dapplet developers rewarded similarly matchmakers apps creates match kind dapplet developer earns arrows translate divs way individual group pitch match x y game example blind date game creates real match dapplet developer earn number arrows rewarded process manual social match pool develop dapplet marketplace pools continuously incorporate new functionality 5 x0c5 ownership logic 5 1 arrows joiners pay certain fee continual membership pools payable monthly payment host host operate matchmaker pool members act helpers mentioned earlier matchmaker achieves successful pitch defined people mutually update matchpool notebooks reflect event awarded xe2 x80 x9carrows xe2 x80 x9d host owner founder pool automatically share automatic share allocated cupids breakdown look like figure 1 process pitching 5 2 divs epoch pool makes certain revenue based member subscriptions divs decide owns revenue pool makes 2000 gup given epoch user holds 50% divs pool receive 1000 gup end epoch point funds held escrow smart contract moved figure 2 perms vars denominated categories divs permanent divs variable divs variable divs calculated following formula totalrevenue xe2 x88 x97 tempdivs earnedarrows xe2 x88 x97 100 totalarrows h follows steps 6 x0c1 total revenue intake guppies find allocated variable divs 2 find users divs calculating number arrows accumulated percentage total arrows created epoch 3 multiply find user permanent divs pre determined owner owners pool choose grant divs share left permanent divs given helpers match users platform described earlier paper breakdown permanent temporary divs considered seperately figure 3 perms vars considered separately 5 3 business models basically business models available hosts xe2 x80 xa2 entry fee xe2 x80 xa2 subscription xe2 x80 xa2 packages xe2 x80 xa2 pay delivery pools want alternate business models example implement escrow contract pays half initially half delivery facilitate business models implementing form dapplets monthly subscription facility membership dapplet single membership escrow option matchpool launches provide basic suite dapplets hosts configure opening api allow developers contribute custom models 6 privacy factors define user xe2 x80 x99s demographics private default revealed users platform users explicit consent years struggle interests internet users interests governments topic strong cryptography matchpool incorporated territory best allow complete privacy users design platform way avoid holding centralized databases important avoiding hacking users data potential pitfalls people use network socially undesirable purposes prostitution selling drugs end day matchpool control exactly people use provide software implement tools people able distinguish good pools bad feature pools equipped 7 x0cpublic profile people review share stories experience pools socially undesirable purposes quickly apparent ultimately community stake success create join environments reflects values 7 trust policy 7 1 centralization vs decentralization major themes crypto community importance concept decentralization origin theme satoshi nakamoto xe2 x80 x99s conception bitcoin trustless currency doesn xe2 x80 x99t rely particular authority guarantee truth record context apps decentralization unlimited good trust policy matchpool breaks categories xe2 x80 xa2 decentralized xe2 x80 xa2 federated xe2 x80 xa2 centralized trust sensitive aspects cryptocurrency arrows decentralized xe2 x80 x99t meddled true core protocol apps platforms rely continual development stay competitive continual development requires developers permissioned access update software constantly end centralized control matchpool organization breakdown centralized end federated div distrdibution pool admission pool banning arrow rewards decentralized cryptocurrency arrows div payments table 3 matchpool xe2 x80 x99s trust policy 7 2 contracts core matchpool protocol deals xe2 x80 x9crules xe2 x80 x9d game decentralized ethereum virtual machine evm ethereum programmable blockchain run small units code called smart contracts blockchains buzzword xe2 x80 x99s good idea explain xe2 x80 x99re useful importantly xe2 x80 x99re useful xe2 x80 x9cblockchain xe2 x80 x9d general peer peer network member node holds copy shared record database xe2 x80 x99t defrauded case bitcoin shared record behaves simple ledger addresses balances bitcoin currency blockchains highly useful trust sensitive use cases having particular institution controlling lead conflicts interest risk exploiting trust counter users proof work blockchains new entries added record solving mathematical puzzles providing cryptographic proof node solved puzzle happens node allowed add certain number transactions xe2 x80 x9cblock xe2 x80 x9d appended blockchain making record block higher ethereum adds core functionality ledger based blockchains adding xe2 x80 x9cturing complete xe2 x80 x9d scripting language called solidity compile directly evm opcodes turing completene0ss buzzword basically means language imaginable problem theoretically expressed solved noted ethereum limit complexity imposed network charges expressed gas 8 x0c8 guppies 8 1 purpose having token simply denominate interactions platform terms ether known cryptocurrency instead creating appcoin scratch fair point tokens somewhat confusing navigate main reasons adopting appcoin strategy 1 way raise money able develop platform implemented crowdsales carefully defined rights targets accountability structures increasingly best way crypto projects find capital build community stake success 2 way reward new users joining platform 3 provide simple universal measure value pool 4 facilitate opening pools paying subscriptions beginning crowdsale investment matchpool idea commitment fruition gup embedded platform level means denominating fees divs secondly essential aspects community based app able encourage people join significant portion token reserved purpose rewarding limited number new users platform beginning number capped 250 000 users similar approach paypal took early days existence new customers awarded $20 pool fee set 10 gup month award new users 20 gup example user member pool months buy guppies continue member matchpool use ether medium exchange possible 8 2 token specification matchpool xe2 x80 x99s platform token guppy gup initially distributed form pre sale participants acquire 1 gup discounted rate pledging defined sum ether eth token sale smart contract contract define withdrawal policy duration crowdsale rules multisignature spending milestones users coming currencies possible use party conversion services like shapeshift kraken acquire ether purpose buying gup total duration crowdfund 28 days hour crowdsale power hour period 1 ether buy 110 gup hour ratio 90 1 days days change 85 1 weeks 80 1 close crowdsale capped $4 2 million usd terms ether soon reached smart contract stop accepting funds end week period token transfers locked months total supply 100 000 000 gup smallest available denomination 1000 mill guppy following table shows overall specification breakdown token description total supply minimum denomination sold crowdsale new user incentive team share advisory board early stage investors 9 100 000 000 gup 1000 mill 60% 20% 5% 5% 5% x0c8 3 price steps total 60 million tokens sold crowdsale total exist beginning 80 million time hour 3 days 2 weeks exchange rate 110 gup 1 eth 90 gup 1 eth 85 gup 1 eth investors able withdraw investment defined steps example investor bought 110 gup 1 eth power hour try withdraw week 2 ether equivalent 80 gup ensure incentives aligned properly set list milestones smart contract external advisor multiple advisors voting rights releasing funds core contract case core team unable sell tokens number milestones reached certain timeframe passed example 1 year avoid sudden xe2 x80 x9cdumps xe2 x80 x9d potentially upset price means incentives aligned long term commitment building matchpool viable platform 9 roadmap roadmap launch matchpool date december 2016 january 2017 feburary 2017 march 2017 august 2017 end year target plan platform hone vision start working mvp prepare crowdsale launch crowdsale experimental pool paris release production platform worldwide distribute referral tokens 250k users table 4 roadmap development platform 10 appendix title guppy official matchpool token author philip saunders philip pax directory dev ropsten address 0xec1af65243527f0d5683bfb3e30b0c05a96a3273 abi ipfs https ipfs io ipfs qmngcsa4dydqmejpzxyzjcbtj3dmpkdtvx8okydyakkq54 pragma solidity 0 4 6 contract guppy string public guppy string public ticker gup uint256 public denom uint256 public totalsupply uint256 public availablesupply 10 x0cuint256 public icosupply uint256 public referralsupply uint public mill2wei uint256 public epoch uint256 address public core deploy tokens allow members vote member deploy particular function mapping address uint256 public balances mapping address mapping address uint256 cheques mapping bytes4 mapping address uint256 functions modifier system bool found uint 0 core length core msg sender found true found throw modifier interval epoch throw modifier limited bytes4 deploy functions deploy msg sender core length 1 throw event transfer address address uint value event mint address owner uint event chequewrite address address uint256 value dev constructor function guppy uint256 totalsupply uint256 bonussupply uint256 coresupply uint256 icosupply uint256 denom uint256 epoch address core 1000 mill multiple guppies denominated denom denom epoch epoch 11 x0c 10500000 total supply totalsupply denominate totalsupply availablesupply availablesupply denominate coresupply icosupply supply available ico icosupply denominate icosupply supply available user referrals referralsupply denominate bonussupply core push core 1 ether 10 guppies mill2wei 1 mill 10 14 wei mill2wei 100000000000000 wei core supply given member core group transfer according share balances core 0 denominate coresupply function denominate uint256 guppies constant returns uint256 return guppies denom function milltoguppies uint256 mill constant returns uint256 return mill denom function transfer address uint256 value returns bool balances msg sender value value 0 balances msg sender value balances value transfer msg sender value return true return false function createcheque address recipient uint256 value returns bool balances msg sender value value 0 cheques msg sender recipient value chequewrite msg sender recipient value return true return false function getchequevalue address origin address recipient constant returns uint256 return cheques origin recipient 12 x0cfunction claimcheque address origin uint256 value returns bool cheques origin msg sender value value 0 balances origin value 0 cheques origin msg sender value balances origin value balances msg sender value return true return false function withdraw uint256 interval returns bool balances msg sender mill2wei return false msg sender send return true function mint payable uint mint msg value mill2wei mint icosupply throw balances msg sender mint icosupply mint availablesupply mint mint msg sender mint function referral uint guppies address user system guppies referralsupply throw referralsupply denominate guppies balances user denominate guppies availablesupply denominate guppies admin methods function increasesupply bytes4 sig uint limited sig system interval totalsupply denominate function newicosupply bytes4 sig uint limited sig system interval totalsupply availablesupply throw icosupply 13 x0c function newepoch bytes4 sig uint span system limited sig epoch span function addcore bytes4 sig address core limited sig system core push core function removecore bytes4 sig address core limited sig system uint 0 core length core core delete core break function changesupplyprice bytes4 sig uint price limited sig system interval mill2wei price function corewithdraw bytes4 sig uint address limited sig system interval returns bool balance return send return false function corecall bytes4 sig bytes args limited sig system returns bool sig args functions sig msg sender 0 return true return false function coredelegate bytes4 sig address core system returns bool functions sig msg sender 0 functions sig msg sender 0 functions sig msg sender 1 return true return false 14 x0c function corepropose string funcsignature system bytes4 sig bytes4 sha3 funcsignature uint 0 core length functions sig core 1 function msg sender send msg value 15 x0c