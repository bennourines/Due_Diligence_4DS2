protocol whitepaper v2.0 wow aave.com december 2020 abstract document describes de nitions theory aave protocol v2, including improves v1, new features di erent aspects implementation. contents 1 introduction 1 2 architectural speci cations 2 3 features speci cations 3 3.1 atokens . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 3.2 debt tokenization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 3.3 variable debt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 3.4 stable debt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 3.5 flash loans v2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 3.6 collateral trading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 3.7 repay collateral . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 3.8 credit delegation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 4 gas optimisation improvements 8 4.1 implementation pow function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 4.2 removing safemath wadraymath percentagemath . . . . . . . . . . . . . . . . . . . . . . . 8 4.3 mapping users loans deposits bitmask . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 4.4 reserve con guration bitmask . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 5 formal de nitions 10 1 introduction aave protocol marks shift decentralised p2p lending strategy direct loan relationship lenders borrowers, like ethlend pool-based strategy. loans need individually matched, instead rely pooled funds, amounts borrowed collateral. enables instant loans characteristics based state pool. following paper describes key functionalities di erentiate aave protocol v2 v1. main driver development aave v2 improve sub-optimal solutions implemented v1, precisely inability upgrade atokens gas ine ciency architecture simpli cation favoring automated testing fuzzers formal veri cation tools code simpli cation solutions currently implemented v1 designed developed ethereum network notably di erent. exponential growth defi grown number transactions twofold, pressure increased gas costs istanbul release. moreover, aave v2 o ers following new features 1. debt tokenisation. borrowers debt represented tokens instead internal accounting contract, enabling code simpli cation regards borrowing aspect protocol - calculations implicit minting burning logic debt tokens. simultaneous borrows variable multiple stable rates. v1, borrowers loans variable stable previous borrows automatically switched latest loan rate. v2, users hold multiple loans combining variable multiple stable rate positions. multiple stable rate positions handled weighted average rates stable rate loans taken. native credit delegation - concept delegation, users delegate addresses opening credit line. interesting tools developed top, example borrow cold wallet - users collateral cold wallets, simply delegating credit hot wallet borrow. position managed hot wallet, borrow, repay add collateral funds kept safety cold wallet. credit delegation facilities - users undercollateralised loans long receive delegation users provide collateral. automated yield farming - credit delegation makes possible build tools automatically open credit lines farm yields multiple protocols. 2. flash loans v2. flash loans disruptive functionality aave v1, allow creation variety tools nance, collateral swap, arbitrage liquidate. flash loans powerful mechanism defi. initial v1 flash loan, signi cant limitation aave. aave v2 implements solution enable flash loans usage combination functionalities protocol, powering new possibilities collateral trading. change exposure multiple collaterals another, need closing debt positions. repay loan collateral. use collateral deposit protocol repay debt position. margin trading. creation margin positions trading later on. debt swap. change debt exposure asset another. margin deposits 1 2 architectural speci cations diagram bellow describes high level architecture aave v2 figure 1 aave v2 protocol architecture major architectural di erences distinguish v2 figure 1 compartimented structure v1 figure 2 1. funds previously stored lendingpoolcore contract stored speci c atoken. gives protocol better segregation assets, favors implementation yield farming aware atokens. 2. lendingpoolcore lendingpooldataprovider removed replaced libraries. reduced gas footprint actions 15 20% optimising code complexity verbosity. 3. actions happen lendingpool replacing previously required redeem single atoken. 4. debt tokens track users debt. 2 figure 2 aave v1 protocol architecture 3 features speci cations 3.1 atokens v2 atokens bring following updates support eip-2612 interest rate redirection base atoken implementation - reintroduced future following de nitions v1 hold true v2 lrasset t , current liquidity rate. function overall borrow rate utilisation rate lrt rtut lit, cumulated liquidity index. interest cumulated reserve time interval t , updated borrow, deposit, repay, redeem, swap, liquidation event occurs. lit lrt tyear 1 lit 1 li0 1 1027 1 ray nit, reserve normalised income. ongoing interest cumulated reserve nit lrt tyear 1 lit 1 3 v1, nit stored user x index ni x action, user x, cumulated atoken balance calculated follows cbt x p b x ni x t pb x principal balance user x v2, user index factually disappears storage variable, stored principal balance ratio called scaled balance, scb. balance user calculated leading increase decrease action resulting mint burn atokens deposits. user deposits m protocol, scaled balance updates follows scbt x scbt 1 x m nit withdrawals. user withdraws m protocol, scaled balance updates follows scbt x scbt 1 x m nit point time, atoken balance user written abt x scbt x nit 3.2 debt tokenization total supply debt token including debt accrued second de ned follows dst p users scbt scbt borrowed user total debt asset time t de ned dasset t sdt v dt sd stable debt token supply v d variable de nition replaces total stable variable borrows v1, described section 1.2 v1 whitepaper. 3.3 variable debt v1 whitepaper introduces following de nition hold true v2 v iasset t , cumulated variable borrow index. interest cumulated variable borrows v b time t, variable rate v r, updated borrow, deposit, repay, redeem, swap, liquidation event occurs. v 1 v rt tyear t v 1 v x , user cumulated variable borrow index variable borrow index speci c user, stored user opens variable borrow position. v x v x pb x , user principal borrow balance balance stored user opens borrow position. case multiple borrows, compounded interest cumulated time new principal borrow balance. v2 debt tokens follow increasing logic atokens v1. variable debt token follow scaled balance approach. concept normalised variable cumulated debt introduced v nt 1 v rt tyear t v 1 scv bt x scaled balance user x time t, m transaction amount, v nt normalised variable debt borrows. user x borrows m protocol scaled balance updates 4 scv bt x scv bt 1 x m v nt repays liquidations. user x repays gets liquidated m scaled balance updates scv bt x scv bt 1 x m v nt point time, total variable debt balance user written v d x scv b x dt variable debt token balance replaces user variable borrow balance v1, described section 1.2 v1 whitepaper. 3.4 stable debt stable rate debt, following v1 de nition holds true sr asset t , overall stable rate stable borrow sbnew issued rate srt srt sdtsrt 1 sbnewsrt sdt sbnew user x repays stable borrow sbi x stable rate sri x srt 0, sdt sb x 0 sdtsrt 1 sb x sr x sdt sbx , sdt sbx 0 srt stored stable rate token speci c currency. stable debt token sd x balance user x de ned follows sd x sb x 1 srt tyear t v1, sr x , stable rate user x, equal stable rate loan taken, previous loans rebalancing new loans. v2, stable rate sr x calculated asset reserve stable loans sr x p sri x sdi x sdi x 3.5 flash loans v2 owchart figure 3 describes v1 flash loans. check funds transferred performed steps 1. transferring funds executor u, protocol takes snapshot balance flash-loaned asset 2. end flash loan, check enforces balance contract includes flash borrowed plus flash loan premium. incorrect, transaction reverted. limits use flash loans aave, allowing actions especially deposits, repayments liquidations expose protocol risk reentrancy. actions mutexed reentrancy guard mechanism. v2 o ers novel protection reentrancy, allowing use flash loans aave transactions. solution initial implementation chosen speci c eth codepath unfortunately eth support pull payment strategy. new version 2, eth-speci c code removed, resulting following changes 5 figure 3 aave v1 flash loan 1. flash loan initiates transfer funds flash loan executor u, 2. end, funds pulled executor u equal borrowed funds plus fee. pulling funds succeed, flash loan fails example, lack approval funds lack funds cover debt. technically removes need snapshot balances after, removing need reentrancy check. additionally, flash loans support multiple modes flash loan caller decide loan open, subject appropriate liquidity cover collateral requirements. 3.6 collateral trading aave protocol v2 o ers way swapping assets deposited, collateral not. achieved leveraging v2 flash loans following way flashloan function called user, passing parameters address receiver contract, implementing iflashloanreceiver interface, untrusted contract veri- ed user advance list underlying assets swap from, list amounts assets extra parameter containing asset swap max slippage chosen user, encoded. 6 receiver contract use funds received swap destination asset, depositing behalf user withdrawing user s deposits flashed-currencies order repay flash loan. example user 100 link 20 uni deposited protocol, debt 100 usdc. wants swap deposited link uni aave, needing pay debt transaction. ii user calls flashloan function passing parameters address receiver contract contains logic operation, addresses link uni 100 200 amounts and, encoded, address asset swap aave 2% maximum slippage trades. iii receiver contract swap indicated amounts link uni aave, decentralised exchange. iii receiver contract deposit resultant aave behalf user aave protocol. iv receiver contract transfer equivalent flashed alink auni user, redeem link uni approve pool pull funds end flash loan repay. 3.7 repay collateral built flash loans v2, feature allows user multiple assets deposited collateral protocol, use repay partially totally debt s positions. swap liquidity and, general features based flash loans, repayment collateral uses flashloan function receiver contract, implementing iflashloanreceiver interface. receiver passed list collateral assets ash use swap repay, list amounts assets, and, encoded, list asset repay debt, list debt amounts repay, list borrow modes stable variable debt asset. s important note that, case, receiver contract expect receive exact needs repaid, di erently swap liquidity, expected exact collateral swap. ow feature user 100 aave deposited protocol, debt 200 usdc variable rate. doesn t moment usdc funds available repay loan, wants swap aave collateral usdc use repayment. ii user calls flashloan function passing parameters address receiver contract contains logic operation, address aave, 7 collateral swap estimated aave needed cover 200 usdc debt , 200 debt repay variable borrow mode used. iii receiver contract swap 7 aave usdc decentralised exchange. iv receiver contract use resultant usdc swap repay behalf user usdc debt protocol. iv debt repaid, receiver transfer aaave needed return ashed aave user, redeem aave, approve pool pull funds end flash loan transaction. v end leftovers 7 aave result swap, funds deposited protocol behalf user sent directly wallet. 3.8 credit delegation debt tokenisation, v2 supports credit delegation borrow function supports credit lines di erent addresses, need collateral, long caller address granted allowance. functionality implemented function approvedelegation debt token. users able draw allowance speci c debt mode stable variable . borrow function 7 onbehalfof parameter caller specify address draw credit. implementation credit delegation required trade-o s delegator delegate credit multiple entities delegatee draw credit single delegator once. aggregate delegators debt single borrow delegator simultaneously delegate stable variable credit entity, delegatee draw variable stable credit single borrow 4 gas optimisation improvements 4.1 implementation pow function initial release, calculation compounded interest relied exponential formula implemented babylonian method, resulting time consuming expensive execution. v2 release, optimises execution costs approximating exponential formula binomial expansion, works small base. implementation following binomial expansion 1 x 1 x 1 2 1 x2 1 6 1 2 x3 1 24 1 2 3 x4 ... function calculatecompoundedinterest, mathutils.sol line 46 implements rst expan- sions gives good approximation compounded interest 5 year loan duration. results slight underpayment o set gas optimisation bene ts. s important note behaves little di erently variable stable borrowing variable borrows, interests accrued action borrower stable borrows, interests accrued speci c borrower performs action, increasing impact approximation. still, di erence reasonable given savings cost transaction. 4.2 removing safemath wadraymath percentagemath v1 wadraymathlibrary internally uses safemath guarantee integrity operations. depth analysis, safemath incurred intensive high costs critical areas protocol, 30 gas fee call. supported refactoring wadraymath remove safemath, saves 10-15k gas operations. 4.3 mapping users loans deposits bitmask initial v1 release, protocol loops active assets identify user deposits loans. result high gas consumption reduced scalability - cost withdraw- ing borrowing repaying liquidating assets increase assets listed protocol. improvement ideas considered 1. user, list assets collateral borrowed, updated user de- posits withdraws borrows repays. calculating total system collateral, looping supported assets, function calculateuseraccountdata target speci c user s assets. solution doesn t present limitations, gas intensive - considering costs removing items list, checking atoken balance, stable variable debt, user depositing, borrowing both... 8 figure 4 users collaterals borrows bitmask structure 2. create bitmask structure gure 4. bitmask 256 bit size, divided pairs bits, asset. rst bit pair indicates asset collateral user, second asset borrowed user. implementation imposes constraints 128 assets supported, add more, uint256 needs used. calculation account data, protocol need query listed assets. presents following advantages compared list based solution additional assets cost 5k gas, instead 20k gas writing list extremely cheap veri cation user s asset borrowing 0xaaaaa...! 0 depositing configuration 0 immediate access assets deposited borrowed - fetching atokens debt tokens balances calculateuseraccountdata , con guration cached beginning perform calculations, greatly saves sloads. solutions implemented tested, second solution preferred 128 asset limitation provides space growth, light aave s multimarkets. 4.4 reserve con guration bitmask bitmask introduced store reserve con guration, de ned figure 5. similar packing achieved uint32 booleans, bitmask bene ts gas e ciency, updating multiple con gurations once. figure 5 reserve bitmask structure 9 5 formal de nitions variable description t, current times- tamp current number seconds de ned block.timestamp. tl, updated timestamp timestamp update reserve data. tl updated time borrow, deposit, redeem, repay, swap liquidation event occurs. t, delta time t t tl tyear, seconds number seconds year. tyear 31536000 tyear, yearly pe- riod tyear t tyear lasset t , total liquidity asset total liquidity available assets reserve. decimals value depend decimals currency. sdasset t , total stable debt token total liquidity borrowed stable rate represented debt tokens. v dasset t , total vari- able debt tokens total liquidity borrowed variable rate represented debt tokens. dasset t , total debt total liquidity borrowed. dasset t v dasset t sdasset t u asset t , utilisation rate utilisation deposited funds. u asset t 0, lasset t 0 dasset t lasset t , lasset t 0 u asset optimal, target utili- sation rate utilisation rate targeted asset reserve, interest rates rise sharply. rasset base , base bor- row rate constant basset t 0. v r variable rate sr stable.expressed ray. rasset slope1, interest rate slope uoptimal constant representing scaling interest rate versus utilisation, u uoptimal. v r variable rate sr stable. expressed ray. rasset slope2, interest rate slope uoptimal constant representing scaling interest rate versus utilisation, u uoptimal. v r variable rate sr stable. expressed ray. rasset t , borrow rate rasset t rasset base u asset t u asset optimal rasset slope1, u asset t u asset optimal rasset base rasset slope1 u asset t uoptimal 1 uoptimal rasset slope2, u asset t uoptimal 10 variable description v rasset t , variable rate rate variable borrows based formula above. ray. srasset t , stable rate rate stable borrows based formula above. ray. srt x , overall sta- ble rate user x overall stable rate user loans sr x p sri x sdi x sdi x sr asset t , overall sta- ble rate stable borrow sbnew issued rate srt srt sdtsrt 1 sbnewsrt sdt sbnew user x repays sb x stable rate sr x srt 0, sd sb x 0 sdsrt 1 sb x sr x sdt sb x , sd sb x 0 check methods decreasetotalborrowsstableandupdateaveragerate increasetotalborrowsstableandupdateaveragerate . expressed ray. sdasset t x , stable debt balance asset user x sdt x sbt x 1 srt tyear r asset t , overall bor- row rate overall borrow rate asset reserve, calculated weighted average variable v dt stable borrows sdt borrows. rt 0, dt 0 v dtv rt sdtsrt dt , dt 0 lrt, current liquid- ity rate function overall borrow rate r utilisation rate u. lrt rtut lit, cumulated liq- uidity index interest cumulated reserve time interval t , updated borrow, deposit, repay, redeem, swap, liquidation event occurs. lit lrt tyear 1 lit 1 li0 1 1027 1 ray nit, reserve nor- malised income ongoing interest cumulated reserve. nit ltr tyear 1 lit 1 v it, cumulated vari- able borrow index interest cumulated variable borrows v b, rate v r, updated borrow, deposit, repay, redeem, swap, liquidation event occurs. v 1 v rt tyear txv 1 v i0 1 1027 1 ray v x , user cumu- lated variable bor- row index variable borrow index speci c user, stored user opens variable borrow position. v x v x v nt x , user nor- malised variable debt v nt x 1 v rt tyear t x v 1 x 11 variable description pb x , user princi- pal borrow balance balance stored user opens borrow position. case multiple borrows, compounded interest cumulated time new principal borrow balance. scb x , scaled bal- ance user x deposit scbt x scbt 1 x m nit withdrawal scb x t scbt 1 x m nit ab x , user atoken balance ab x scb x t 1nit scv b x , variable scaled balance user x deposit scv bt x scv bt 1 x m v nt x withdrawal scv bt x scv bt 1 x m v nt x v dt x , variable debt balance user x v dt x scv bt x dt hf, health factor hf 1, loan considered undercollater- alised liquidated hf collateralinet hasset lt asset cbx t otalf eeset h 12