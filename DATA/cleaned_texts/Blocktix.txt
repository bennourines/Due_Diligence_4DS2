b blocktix decentralized event hosting ticket distribution network florian mathieu ryno mathee september 20 2017 abstract blocktix trustless decentralized platform ticket sales event promotion system operates smart contracts ethereum blockchain enabling users verify validity tickets given event ending counterfeit tickets 1 introduction core purpose blocktix provide decentralized event hosting ticket distribution network companies individuals buy sell tickets unforgeable cryptographic signatures stored blockchain approach simplified process buying selling tickets removed infrastructure centralized servers parties enjoy lowest fees downtime decentralized nature possesses tokens create events sell tickets online worrying additional complexities typically encountered blocktix provides user friendly interface execution smart contracts bringing advanced capabilities masses intuitive application approach reduces complexity interaction smart contracts provides additional layer security minimizing possibility fraud malicious party interference application standardization contracts 2 background according meeting professionals international xe2 x80 x9dthe american meetings events industry directly indirectly supports 6 3 million jobs generates $1 trillion year direct indirect induced spending xe2 x80 x9d 1 2 market events systems current systems event hosting specifically distribution tickets costly cumbersome procedure simplify process event promoters use companies ticketmaster distribution services add surcharge 15% ticket value promoters advertise event variety mediums fill venue advertising costs event regularly exceed 30% total event budget ticket fraud 3 counterfeiting losses $1 billion 4 year caused need trusted party intermediaries peer peer transfer aftermarket intermediaries charge additional 20% 25% transferred value 3 3 1 concept blockchain blockchain heart application tasked secure wide range features payments tickets event registry blocktix built ethereum 5 xe2 x80 x99s 1 x0cfigure 1 mock event page ability purchase tickets vouchers 2 x0cblockchains provides efficient practical toolset smart contracts default payment gateway application meaning tickets purchased eth cryptocurrency certainly possible add payment gateways credit cards bank transfers party integrations application constructed way certainly possible add payment processors outside scope whitepaper 3 2 3 2 1 token token creation blocktix rewards participants crowdfunding tokens tix return ethereum sourced blocktix tix coupled set usd rate 4 tiers available 0 12$ 0 16$ 0 20$ 0 24$ tix tier total 10 000 000 tix available token details total 62 500 000 tix created crowdsale 64% 40 000 000 tix sold publicly remainder accredited blocktix b v 24% early investors founders 10% promotions promoters 2% funding needs minimum funding blocktix 2 500 000$ maximum cap 7 500 000$ desired capital sourced tokens issued available buyers end crowdsale target met ethereum bitcoin previously raised return respective owners minus transaction fees 3 2 2 token reward model ticket fees owns blocktix tokens token holder granted benefits non token holders participating event verification process token holder receive reward work initial reward tix event advertising able purchase advertising rights event funds distributed partly xe2 x80 x99blocktix sales b v xe2 x80 x99 partly users system view advertisements event feed starts xe2 x80 x9dpromoted events xe2 x80 x9d event promoted advertisement random chance appear promoted spots let t x1 t x2 t xm sequence m transactions sent advertising contract event e calculate total advertising contract given event e received summation se m transactions given event e se t x1 t x2 xc2 xb7 xc2 xb7 xc2 xb7 t xm percentage wise views given event e equal roughly ce ce se xe2 x88 x97 100 s1 s2 xc2 xb7 xc2 xb7 xc2 xb7 sn time event feed updates new number generated pseudorandom number generator prng ranging 0 sum sum s1 s2 xc2 xb7 xc2 xb7 xc2 xb7 sn 3 x0cfigure 2 user starts application load events proximity 3 3 event feed system keeps track ongoing events displays event feed variables distance event user starting date category tags advertising fees determine hierarchy list location based events happening near user shown likely attended distance event user increases location factor influential categories start matter category based events tagged multiple categories creator user xe2 x80 x99like xe2 x80 x99 categories likely event feed optionally track behavior user offline build list categories visible user input advertising advertised events page event feed guarantee advertised events place near user share relevance categories liked user mandatory tix creator event pay mandatory 1000 tix event feed measure prevent spammers overtaking event feed bogus events mandatory subject change worth noting technically possible event creator pay mandatory allowing event feed form charity 3 4 user interface user interface created html javascript currently created designs basic pages clear idea look main key ingredients beauty intuitiveness look application immediately clear works event page preview design event page figure page 2 4 x0cfigure 3 ethereum contracts store hashed references files stored ipfs 3 5 ipfs ipfs public peer peer distributed file system upload files free cost turn computer available network topology given file pinned computer past years accumulated broad support programming languages javascript makes ideal candidate build infrastructure reason need adopt ipfs blockchains ethereum included support sharded databases rendering unsuitable storage larger data integration enable event administrators customize event pages images videos losing decentralized topology 4 contracts blocktix smart contract programming language solidity 6 currently flagship language ethereum popular language smart contracts 4 1 blocktixregistration registration contract tasked store latest addresses blocktix blocktixevent contracts acts update mechanism changed blocktix administrators voting token holders voting long term goal expected added near end development process system sustain blocktix updates development complete token holders tasked responsibility updates blocktix contracts regulate system approving declining proposed changes contracts wide range variables subject change token holders apply new event contract 4 2 blocktix blocktix contract houses array event addresses stores global variables enforced events tickets include limited ticket fees required tix enlist 5 x0cfigure 4 blocktix structure updated token holders update blocktixregistration contract essentially acts update contract event feed elements related advertisement 4 3 4 3 1 blocktixevent event creation blocktixevent contract houses related specific event brought existence blocktix contract creating event creator address given administrator privileges address granted permission change settings location description photos etc possible add extra administrators event able create event event feed event backed minimum 1000 tix required value listing voted token holders months non token holders ask token holders event willing token holder allow use event feed security chain contracts creating new event system ensures sanity contracts loaded essentially disallowing attackers launching malicious contracts inserting blocktix system event creators blocktix contracts retrieved blocktixregistration turn create blocktixevent contract removing possibility tampering 4 3 2 ticket creation contract entry point related tickets particular event event creator possibility adding multiple xe2 x80 x9dticket types xe2 x80 x9d event contract differentiate better offer multiple types tickets example offer early bird entry tickets 1 day pass tickets event multiple days tickettype maintains array valid tickets addresses allowing autonomous sale tickets blocktixevent contract allowing event administrators manually insert tickets opens gap parties wish integrate blocktix network 6 x0cfigure 5 flowchart user creating event high level overview event contract stores array ticketcategory objects turn stores array tickettype objects ticketcategory object merely optimize category system tickettype objects store information including array ticket addresses previously sold tickets specific tickettype 4 3 3 ticketcategory tickets limited entry tickets utilized vouchers food drinks xe2 x80 x99s blocktix provides categories allow clean separation tickets consumables xe2 x80 xa2 category examples tickets food drinks xe2 x80 xa2 types array tickettypes examples entry ticket hamburger beer 4 3 4 tickettype overview properties tickettype offer customizable event creator xe2 x80 xa2 ticket type xe2 x80 xa2 description description ticket type xe2 x80 xa2 quota maximum tickets type xe2 x80 xa2 price price ticket sale xe2 x80 xa2 startvendingtime start date time ticket type sales xe2 x80 xa2 endvendingtime end date time ticket type sales xe2 x80 xa2 startentrytime start date time ticket type entry xe2 x80 xa2 endentrytime end date time ticket type entry xe2 x80 xa2 owners tickets sold xe2 x80 xa2 paid mapping paid prices addresses xe2 x80 xa2 refundable ticket refundable 7 x0c4 3 5 ticket trade tickets freely traded directly users risk counterfeit sending ticket friend easy need friend xe2 x80 x99s ethereum address selling tickets eth arranged way transfer ticket payment happen means ticket transferred money transferred way removes risk getting scammed party upholding end 4 3 6 ticket auction event creator auction tickets maximize revenue case scarce ticket supply allow market mechanism find equilibrium ticketbids blocktixevent array ticketbid objects tracks bids users following properties xe2 x80 xa2 owner address bidder xe2 x80 xa2 buy boolean bid buy xe2 x80 xa2 price bid price xe2 x80 xa2 ticketid id ticket type buy variable place extended allow sell bids essentially extends structure enable ticket auctions official event creator free ticket market people trade peer peer bid placed array updated xe2 x80 x99s bid array time interval starts set event creator expiration automatically sells ticket highest bid array highest bid removed remain untouched new interval starts loop continues array 4 3 7 ticket verification ticket verification easy verifying digital signature making sure public key listed valid ticket specified event need event organizers hire purchase specialized equipment verify validity tickets smartphone camera internet connection scan ticket qr code entrance event subsequently execute smart contract deactivates ticket contract executed ethereum network prevent qr code gain entrance 5 possible attack vectors fake events tickets cryptographically secure risk wrong event happen users tricked believing buying tickets real event realizing malicious seller created fake duplicate event ways minimize attack occurring rely user awareness indicators placed event page obvious spot fake events tickets sold big events likely sold decent tickets precaution include events happening location fake event picks location visible real event visitors additionally event website host hidden confirmation identifier proving event browsing control mentioned website 8 x0cevents verified blocktix token holders requiring approve events event reporting features allow users notice fake events report kicking new vote verification invalid events removed system easiest reliable fastest method getting rid party scanners created compare red flag events similar references 1 kristi casey sanders true value u s meetings events industry 2011 url http planyourmeetings com true value u s meetings events industry 2 pwc economic significance meetings u s economy 2012 3 internet fraud n d wikipedia free encyclopedia 2008 url https en wikipedia org wiki internet fraud internet ticket fraud 4 richard e cascarino corporate fraud internal control 2013 5 vitalik buterin ethereum generation smart contract decentralized application platform 2013 url https github com ethereum wiki wiki white paper 6 christian reitwiessner gavin wood solidity 2015 url http solidity readthedocs org 9 x0c