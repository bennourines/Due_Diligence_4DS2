b whitepaper bismuth crypto currency written bismuth core dev team version 1 2 date august 13 2019 1 x0ccontents abstract 3 introduction 3 bismuth features 10 use cases 10 coin supply reward model 12 cryptography 13 multiple address schemes 14 mining algorithm 15 chain security 19 tail removal block validation 20 operation data field 21 private contracts 23 hypernodes sidechain 24 hyperblock compression 28 penalty system 29 mirror blocks 29 testnet 29 regnet 29 education research 30 future prospectives 31 summary 31 disclaimer 32 2 x0cabstract document contains whitepaper bismuth crypto currency whitepaper begins presentation bismuth philosophy description pillars stands followed presentation core features plugins use cases coin supply reward model cryptography mining algorithm tail removal block validation operation data fields private contracts hypernodes sidechain testnet regnet education research introduction crypto currency bismuth xe2 x80 x99s initial goal build chain simple possible brand new fresh python codebase started personal project developer learn technology soon evolved feature packed crypto currency platform multiple developers technical support persons pool operators exchanges social media xef xac x82uencers involved bismuth pillars bismuth stands pillars differentiate crypto currencies 3 x0c1 real world principle chains live idealist world perfect code xef xac x81xes users experts able understand complex algorithms bug free implementation compile source error tool solutions designed spirit bound fail ignore real world real users use case tool interfaces real world users oracles network perfect bismuth account need design super complex algorithm ensures consensus reach immutability secures fail free complexity code xef xac x82ect real world use case example need 12 supersonic reactors run car usual engine gives guarantee everyday use example bismuth use transaction hashes block hash veri xef xac x81es transactions contained following code block hash hashlib sha224 str transaction list converted db block hash prev encode utf 8 hexdigest bismuth spirit simple easy understand effective considered good goal achieve mass adoption cryptocurrencies need away seen developers experts cryptography way making simple understand engineering work respect way bismuth moves trying design perfect abstract system xef xac x81nd matching use cases starting real world use cases instead searching simplest possible way achieve suf xef xac x81cient guarantees 2 need store real world principle data needs stored chain users need use tricks like btc eth things stored chain let xe2 x80 x99s try hide ease user xe2 x80 x99s job bismuth supports default abstract xef xac x81elds operation data users leverage build protocol complex keeping good level performance storing chain chain kind hammer problem hammer problem nail crypto currencies focused scalability issues want store chain bismuth xe2 x80 x99s philosophy store needs stored main chain following real world principle chain storage strongly discouraged 4 x0cscalability application design issue ensuring store needs avoid start scalability long term issues store documents proof store hash store proofs instead data use checkpoints signatures xef xac x81ngerprints bismuth aims provide practical framework store aside chain bene xef xac x81ting chain safety hypernodes like chains hyperlane 3 clear line trust crypto currencies de xef xac x81ne xe2 x80 x9dtrustless xe2 x80 x9d ignoring real world principle stored chain necessarily xe2 x80 x9dtrue xe2 x80 x9d supposed immutable stored requires hidden trust code bootstrapped data underlying algorithm majority peers service providers chain contracts magical perfect bugs virtual machine vm change rely oracles trust know trust bismuth try hide fact trust try clear use private bis contract like zircodice dragginator instance trust operator history transactions verify operator supposed bismuth execution model abstract protocols direction know trust choose trust case protocol freely choose implementation trust certi xef xac x81er suits magical immutable contract stored chain possible bugs proxies backdoors way xef xac x81xing goes wrong words xe2 x80 x9dclear line trust xe2 x80 x9d means trust know trust bismuth presented trustless implicitly trust layers people bismuth value proposal bismuth value proposition summarized follows xe2 x80 xa2 lightweight node lightweight require powerful cpu lot ram xe2 x80 xa2 perfect xef xac x81t developers scholars academics xe2 x80 xa2 codebase quick handle develop xe2 x80 xa2 allows fast prototyping use cases 5 x0c xe2 x80 xa2 easy tweak experiment xe2 x80 xa2 multiple access layers clients api languages available bismuth developers development bismuth tries xe2 x80 xa2 simple copy complex feature chains strip simplify core understandable xe2 x80 xa2 innovative bismuth protocol belongs core team allows great xef xac x82exibility new features tested added quickly xe2 x80 xa2 extremely extensible tweakable bismuth tailored developers xe2 x80 xa2 use python means largely accessible growing base developers xe2 x80 xa2 python currently language choice universities students academics data machine learning scientists xe2 x80 xa2 python need time consuming compilation steps tweak test xe2 x80 xa2 bismuth allows interaction levels infrastructure direct db access pure sql api clients languages xe2 x80 xa2 bismuth node comes hooks xef xac x81lters allowing easy write plugins pure python code new language learn xe2 x80 xa2 bismuth wallet comes pluggable crystals dapps seemlessly integrated wallet xe2 x80 xa2 bismuth abstract transaction model protocols allow virtually application run bismuth example feedback dev core team python xe2 x80 x99s simplicity hours poc apps main hassle trying bring talent blockchain research needed time going afternoon workshops eth solidity got complex hack bis repository place start learn basis started bismuth core concepts developers github link 6 x0cbismuth execution model current bismuth model different ethereum simply transpose smart contracts solidity bismuth need public xe2 x80 x9dsmart xe2 x80 x9d contracts moment vm node executes code seen limitation fact strength exploits taken place eth smart contracts successful bismuth like architecture xe2 x80 x9dsmart xe2 x80 x9d contracts vs xe2 x80 x9dsmart xe2 x80 x9d protocols nutshell eth like smart contracts written speci xef xac x81c language stored chain run node bismuth like smart protocols implemented bismuth chain run concerned dapps ethereum xe2 x80 xa2 learn new language solidity xe2 x80 xa2 speci xef xac x81c pitfalls xef xac x82ow visibility access rights xe2 x80 xa2 flawed contract code xef xac x81nity coins user xe2 x80 xa2 hacks horror stories ethereum smart contracts history xe2 x80 xa2 smart contracts xe2 x80 x9down xe2 x80 x9d funds xe2 x80 xa2 smart contracts live chain forever stopped upgraded author provided kill switch xe2 x80 xa2 kill switch owner funds contract xe2 x80 xa2 contract invocation processed single eth node vm virtual machine consumes gas xe2 x80 xa2 contracts directly access outside resources eth model strengths use cases simply replicate bis bis uses 7 x0cbismuth xe2 x80 xa2 new language learn write contracts protocols language python native language xe2 x80 xa2 pitfalls usual code xe2 x80 xa2 contracts overspend xe2 x80 xa2 vm xe2 x80 x9don chain xe2 x80 x9d code public contracts xe2 x80 xa2 users run private contracts xe2 x80 xa2 owners control including xef xac x81x upgrade contract xe2 x80 xa2 contract inner working published fully auditable veri xef xac x81able xe2 x80 xa2 contract invocation run clients interest speci xef xac x81c contract xe2 x80 xa2 private contracts including accessing outside data need chain oracles 8 x0cbismuth tokens things widely like tokens handled generic vm user code use case wanted integrated bismuth core bismuth dev team weight bitcoin eth forward fast xe2 x80 x99s case tokens xe2 x80 xa2 native tokens xe2 x80 xa2 optimized resource savy tokens indexed db tokens xe2 x80 xa2 overloaded extra features xe2 x80 xa2 code tested public potential bugs identi xef xac x81ed xef xac x81xed globally match eth terminology current bismuth tokens partially erc20 compliant allow delegation spend tokens approve feature packed tokens types added soon bismuth tokens use operation data xef xac x81elds creation transfer main operations token issue token transfer information bismuth tokens link bismuth xe2 x80 x9dsmart xe2 x80 x9d protocols having immutable chain code power funds destroyed locked plus run single node bismuth favors concept xe2 x80 x9dsmart xe2 x80 x9d protocols quotes contract protocol blockchain world xe2 x80 x9dsmart xe2 x80 x9d code smart dumb developer wrote protocol based bismuth transactions considered abstract data agreement parties data means event occurs xe2 x80 xa2 clients involved protocol need read data run code node xe2 x80 xa2 code chain updated xef xac x81xed clobber chain consume node resources xe2 x80 xa2 xe2 x80 x9dcontract xe2 x80 x9d agreeing parties logic ideally public xe2 x80 xa2 run logic chain data verify acted 9 x0c xe2 x80 xa2 protocols evolve overloaded serve basis evolved protocols xe2 x80 xa2 protocols use protocols instance protocol de xef xac x81ne valid implementations chain hash list existing bismuth protocols github link bismuth features section contains presentation description core features bismuth crypto currency python plugins developers plan build dapps bismuth node encouraged use bismuth feature called xe2 x80 x9dplugin xe2 x80 x9d plugins reside directory xcb x9c bismuth plugins bismuth plugin system lightweight allows action xef xac x81lter hooks critical events easy feature addition example plugin wanting implement xe2 x80 x9dblock xe2 x80 x9d action hook declare simple function plugins 900 test init py def action block block print block information bismuth plugins link activate new plugin bismuth node node py restarted use cases 1 lab use case easy student set private network virtual machines changing default mainnet port number 5658 local network addresses example 10 0 x x 192 168 x x whitelisting bismuth con xef xac x81guration xef xac x81le con xef xac x81g txt possible isolate lab network outside world network student researcher developer test new features dapps need hardfork regular main testnet 2 child chain use cases child chain use cases deal scalability xef xac x82exibility chain speci xef xac x81c properties block time entry barrier needed limited existing mainnet proof work pow chain hypernode like 10 x0cpos chain run pow chain uses technology developer unique chain app unique chain settings de xef xac x81ne unique transactions types currency non currency data 3 event sourcing event sourcing object data model stores events leading current state objects current state proof concept poc event sourcing sample dapps bismuth available link event sourcing work combination private child chain example network customers providers partners agreeing operating shared database tracking goods shipments invoicing etc child chain operated actor running node hypernode like private registration event sourcing poc means actors share distributed replicated database change data event immutable timestamp source event plus rights fully auditable 4 file fingerprinting legacy wallet contains feature xef xac x81ngerprinting xef xac x81les following code def fingerprint root filename filedialog askopenfilename multiple true initialdir title select files fingerprinting dict file root filename open file rb fp data hashlib blake2b fp read hexdigest dict os path split file 1 data openfield insert insert dict hash xef xac x81le s inserted xe2 x80 x9ddata xe2 x80 x9d xef xac x81eld sent recipient use received message validate authenticity xef xac x81les list implemented use cases games time writing xe2 x80 xa2 anon py private contract anonymizer service xe2 x80 xa2 dragginator collectible game based bismuth blockchain xe2 x80 xa2 pokapoka poker game site bismuth tokens xe2 x80 xa2 zircodice dice game private contract xe2 x80 xa2 autogame probabilistic multiplayer game implemented private contract 11 x0ccoin supply reward model plot shows coin supply rewards bismuth blockchain block height 8 000 000 year 2032 assuming 1440 blocks day total coin supply 63 9 million bis 43 0 million miners rewards 16 6 million bis rewards hypernodes 4 3 million bis developer rewards 10% miner rewards change distribution require future hard fork time writing planned bismuth blockchain started 1 2017 xef xac x82ation rates following 10 years shown table 12 x0cyear xef xac x82ation 1 xe2 x88 x9e 2 93 2% 38 9% 3 4 25 5% 5 18 4% 6 13 9% 7 10 8% 8 8 4% 9 6 6% 10 5 0% seen table xef xac x82ation high initially rapidly drops 5 0% year 10 reason relatively high initial xef xac x82ation fact bismuth pre ico total coin supply started zero genesis block block height 0 naturally xef xac x82ation initially large distribution model motivations coin supply rewards model ensure fair distribution model bismuth early phase time attract miners secure chain hash rates project matures holding bismuth long term encouraged rapidly falling xef xac x82ation rates miners continue rewarded collecting transaction fees comparison bismuth xe2 x80 x99s coin supply reward model blockchain projects https hypernodes bismuth live p 218 cryptography today xe2 x80 x99s crypto currencies use elliptic curve cryptography ecc ecdsa signature algorithm ecc keys signature short potentially secure bits previous cryptographic keys signature algorithms relatively new family possible completely new class xef xac x82aw found effectively rendering ecc based chains insecure bismuth paradoxically innovates older known asymmetric cryptographic algorithm rsa studied publication 1977 relies core properties large prime numbers widely secure ssh ssl certi xef xac x81cates web decades key lengths xe2 x80 xa2 rsa key length 1024 bits suf xef xac x81cient medium security purposes web site logins xe2 x80 xa2 high security applications data needs remain con xef xac x81dential years 2048 bit key recommended safe 2030 13 x0c xe2 x80 xa2 data con xef xac x81dential decades rsa recommends key size larger 2048 bits xe2 x80 xa2 3072 bits recommended usage post 2031 bismuth relies 4096 bits rsa keys risk private key private key known wallet owner currently stored pem base64 format example begin rsa private key miibgjacbgoqhkig9w0bdaedma4eckzesfwlqoidagid6ascawbu7izm8n4v 2puro mdt y8ceywxic0ce57nrbmvatsvbwtg9b xyd8yc6qk7lrhc9njgp end rsa private key public key public key stored transmitted pem format example begin public key miicijanbgkqhkig9w0baqefaaocag8amiiccgkcageanzge34otdlzlpfmsvkno fomg9pm4rg6u8v1fz ewzbtu8ujyvperbldsasgby3c8uzuppzm vytq5khyjj6y klygwgdqc mrskwcwwgqtxecaweaaq end public key address address matching key sha224 hash public key pem hex format example 3e08b5538a4509d9daa99e01ca5912cda3e98a7f79ca01248c2bde16 signatures bismuth uses pkcs1 v1 5 signature algorithm public key signature sent transaction validated reception multiple address schemes order expand bismuth xe2 x80 x99s capabilities footprint bismuth foundation planned support alternative cryptographic primitives roadmap reality july 2019 bismuth nodes support new ecdsa cryptographic primitive new addresses scheme retaining rsa coinbase operations keeping compatibility schemes ecdsa existing crypto platforms allowed ef xef xac x81 14 x0ccient swift operations rapid signing times smaller signatures integrating bismuth core developers took care follow possible current bip standard guarantee optimum compatibility enables bis integrate seamlessly existing architecture built bitcoin ecosystem introduce new address format beginning xe2 x80 x9cbis1 xe2 x80 x9d pre xef xac x81x allowing consistent nicer looking bismuth addresses ecdsa bismuth paper wallet compatible seed word compatible integration existing hardware wallet solutions xe2 x80 x9ctrezor xe2 x80 x9d xe2 x80 x9cledger xe2 x80 x9d simpli xef xac x81ed ef xef xac x81cient mobile wallet applications bismuth reality xe2 x80 x99s user bismuth foundation wants users choice scheme use older rsa newer ecdsa algorithms respective strengths weaknesses preference users application developers prefer use coexist bismuth protocol compatible additional facet modularity appeal bismuth platform offer level choice offers high level security point future backdoor found ecdsa bismuth unaffected uses rsa coinbase operations users immediately fallback activity complicated chain swap process said existing crypto platforms ecdsa operations future proof introduction multi scheme addresses help advancing bismuth aspects expanding footprint presence hardware devices boosting capabilities regards address generation formats step forward scheme modernization establishing new standard multi scheme addresses point options extended rsa ecdsa code handling signatures addresses modular extendable undocumented ed25519 cryptographic primitive supported current nodes instance schemes added later address possible threats quantum computing pose existing ones mining algorithm mainnet bismuth crypto currency project launched 1st 2017 mining algorithm based sha224 brie xef xac x82y described http dx doi org 10 4173 mic 2017 4 1 beginning cpu miners 6 months xef xac x81rst gpu miners appeared shortly xef xac x81rst gpu mining pools bismuth listed cryptopia exchange october 2017 led large increase new accounts network january 2018 number bismuth accounts quadrupled 15 x0ccompared exchange listing bismuth relatively simple mining algorithm requiring little memory gpus network vulnerable 51% attack large fpga asic mining operation core development team aware threat decided work issues instead general network stability improvements addition new functions features introduction hypernodes chain example august september 2018 increasingly evident fpga miner developed mining operation approaching 51% portion overall mining power network xef xac x81gure shows hashrate distribution different pools time presence large fpga miner identi xef xac x81ed independent channels bismuth network monitoring pages pools miners reporting anomalies regular exchange dumps internal core team research fpga capabilities work fpga developers fpga operation alternating mining account pool 4 xef xac x81gure hypernodes successfully launched core dev team act swiftly evolution mining algorithm moved priority list placed roadmap published months earlier modi 16 x0c xef xac x81ed mining algorithm developed tested private testnet record time september 2018 took 3 weeks xef xac x81rst conceptual ideas launch new mining algorithm rapid pace development exchanges pools given 1 week xe2 x80 x99s notice time update nodes fpga mining ef xef xac x81cient fact legacy bismuth mining algorithm required processing power memory careful research tests core developers eggdrasyl came slight change current mining algorithm xe2 x80 xa2 memory hard xe2 x80 xa2 block penalize speci xef xac x81c fpga miner lot xe2 x80 xa2 fast verify nodes xe2 x80 xa2 needs minimal change current gpu miners implemented quickly pools xe2 x80 x9cbismuth heavy 3 xe2 x80 x9d mining algorithm born fork october 8 2018 block height 854 660 new novel heavy3 mining algorithm introduced bismuth mainnet previously bismuth mining algorithm computationally expensive required little memory order new mining algorithm resistant fpgas asics requirement hold 1gb random binary xef xac x81le memory introduced illustrated yellow boxes chart 17 x0cbismuth heavy3 idea xe2 x80 x9cheavy3 xe2 x80 x9d algorithm designed eggdrasyl simple effective requires read random offset xef xac x81xed lookup table tested nonce concept applied mining algorithm additional layer protect similar attack matching algorithm uses hashcash bismuth irrelevant xef xac x81nal hash state tested vector 32 bits words hash result considered random vector contain reverse process xe2 x80 x93 hash core property xe2 x80 x93 lookup table contains random data nonce extra step applying xor transform hash output given random vector lookup table index begin determined hash random non predictable location result xe2 x80 x93 xor xe2 x80 x99d hash state xe2 x80 x93 considered input vector dif xef xac x81culty matching function xe2 x80 xa2 transformation affect probability xef xac x81nding good candidate xe2 x80 xa2 change hashing algorithm xe2 x80 xa2 change dif xef xac x81culty matching algorithm xe2 x80 xa2 requires reading 8 words random index tried nonce xe2 x80 xa2 miner copy lookup table memory time generic tweak applied instantly crypto mid long term considerations core team favor fpgas xe2 x80 x93 xe2 x80 x93 dedicated asics hardware bismuth xe2 x80 xa2 way pow coin protect network pure gpu coins mercy nicehash similarly rented hash attack xe2 x80 xa2 hash watt fpgas asics way better gpus better ef xef xac x81ciency hash secure network resources needed true mining equipment largely available single operation thousands custom proprietary hardware step introducing mining channels fair chance reach pro xef xac x81tability contribute network 18 x0csafety cpus gpus fpgas asics allow faster algorithm changes similar situation arise average block time sec controller output difficulty chain security bismuth blockchain uses feedback control strategy calculate dif xef xac x81culty adjustment mining process doi 10 4173 mic 2017 4 1 mic journal details combination feedback controller bismuth uses longest chain rule determine consensus approach compare alternative approach deciding consensus based total hashwork ie selecting chain hashwork answer question simulink model shown figure 7 mic paper consider following scenario 1 dif xef xac x81culty level stable diff 102 24 hour average blocktime stable 60 seconds 2 block number 10 000 large pool 25% total hashpower decides break xe2 x80 x99s chain try longer chain rest network competing chains 1 chain breaking 25% original hashpower 2 main network case reduced 75% original hashpower block number 10 000 104 102 100 98 96 0 0 5 1 block number 1 5 100 50 0 2 10 150 4 0 5 1 block number 1 5 2 10 4 xef xac x81gure shows feedback controller dif xef xac x81culty adjustment react 25% hashpower chain dif xef xac x81culty drops 102 98 average blocktime increases 130 seconds comes settles 60 seconds total accumulated time generate 20 000 blocks example 14 87 days 19 x0caverage block time sec controller output difficulty 102 5 102 101 5 101 0 0 5 1 block number 1 5 2 104 75 70 65 60 55 0 0 5 1 block number 1 5 2 104 xef xac x81gure shows feedback controller dif xef xac x81culty adjustment react chain 75% hashpower dif xef xac x81culty drops 102 101 average blocktime increases 71 seconds comes settles 60 seconds total accumulated time generate 20 000 blocks example 14 02 days reason 75% chain generates blocks faster 25% chain overshoot blocktime 71 seconds vs 130 seconds smaller chain largest hashpower 75% hashpower chain produces 20 000 blocks example faster chain 25% hashpower 75% chain longest consensus rule currently implemented bismuth select chain hashwork winner seen simulation chain largest remaining hashpower produce longest chain case network fork words bismuth xe2 x80 x99s implementation feedback control algorithm dif xef xac x81culty adjustment combined longest chain rule achieves result selecting consensus based largest total hashwork method blockchain implementations bismuth xe2 x80 x99s unique implementation dif xef xac x81culty adjustment longest chain rule considered secure consensus implementations based total hashwork tail removal block validation probability density function pdf describing distribution blocktimes crypto currencies bitcoin example long tail meaning small nonzero probability long time generate new block computational power miners constant increasing long blocktimes problem reasons 1 long processing times transactions undesirable processing times factors larger desired average blocktime seen negative 2 blockchain feedback control algorithm typically distinguish long tail blocktime situation computational power miners dropped long tail blocktime normally cause fast 20 x0cresponding controller lower dif xef xac x81culty behavior cause unwanted oscillations instability process bismuth solution removing long tail blocks implemented results shown xef xac x81gures xef xac x81gure left shows pdf tail removal code activated solid red curve tail removal activated blue bars xef xac x81gure right shows zoomed blocktimes larger 180 seconds seen xef xac x81gures probability long tail blocktimes larger 180 seconds signi xef xac x81cantly reduced bismuth ensuring timely execution transactions information actual implementation journal article j ku xc4 x8dera g hovland xe2 x80 x9ctail removal block validation implementation analysis xe2 x80 x9d http dx doi org 10 4173 mic 2018 3 1 operation data field bismuth xef xac x81elds dapp developers operation data xef xac x81elds xef xac x81elds marked red rectangles light wallet xef xac x81gure 21 x0cthe xef xac x81elds available tornado wallet xef xac x81gure operation data xef xac x81elds programmatically example examples link code example repository bismuthclient bismuthclient import bismuthclient 22 x0cif main client bismuthclient wallet file wallet der client address client new wallet client load wallet print f address client address txid client send recipient client address 0 tries send 0 self print f txid txid example code sends 0 bis send bis account replace client address account address string example recipient xe2 x80 x9d9ba0f8ca03439a8b4222b256a5f56f4f563f6d83755f525992fa5daf xe2 x80 x9d utilize operation data xef xac x81eld following example command txid client send recipient 9ba0f8ca03439a8b4222b256a5f56f4f563f6d83755f525992fa5daf operation dragg transfer data draggon adn use operation data xef xac x81eld major difference cryptocurrencies real world principle bismuth project acknowledges need store data chain hard user instead bismuth uses meta data serve higher level operations pure bismuth spirit abstract data easy read write node handles having know operation data xef xac x81eld means process participating apps interpret act operation data xef xac x81eld allow separation node base layer transport authenticity immutability abstract data dapp use data interprets acts higher level operations private contracts described section bismuth xef xac x81elds leveraged extra protocols xe2 x80 x9ddata xe2 x80 x9d xe2 x80 x9doperation xe2 x80 x9d xef xac x81elds xef xac x81elds utilized different ways create private contracts 1 private private data ie encrypted messages 2 private non public contract code 3 private private untraceable recipient abstract transactions encrypted messages abstract transactions bis strengths allow abstract transactions transactions 23 x0cwith 0 bis involved data understandable dapps participate protocol xe2 x80 x9doperation xe2 x80 x9d xef xac x81eld kind xe2 x80 x9dcommand xe2 x80 x9d operator convention use strings formated xe2 x80 x9dclass operation xe2 x80 x9d allow easy classi xef xac x81cation like kind namespace open xef xac x81eld holds associated short data developers de xef xac x81ne operations sure protocol use namespaces link date list existing protocols bis transaction fees xef xac x81xed depend open xef xac x81eld length byte fee 0 01 len open xef xac x81eld 100000 chain storage encouraged restricted future developers limit payload minimum use chains dapp dapp channels store real data hypernodes sidechain different masternode coins released useful hints makes bismuth hypernodes innovative bismuth hypernodes tech lab bismuth abilities proof bismuth grows team gathers experience weaknesses nodes visible possible test change design running blockchain people organizations easy use hypernodes lab xef xac x81eld test new technologies libraries algorithms bismuth hypernodes include new technology layers later core code hypernodes demonstrate ease integration leverage bismuth abstract transactions hypernodes good example openness abstraction layer bismuth provides network value goal bismuth hypernodes provide added value network basic masternodes implementations merely staking check xe2 x80 x9dping xe2 x80 x9d answer bismuth hypernodes operate entire different layer use chain currency metrics key performance indicators kpis instead chains loosely coupled operate independent manner different rules hypernodes operate proof stake pos chain mining competition hypernodes observe store kpis pos chain hypernodes pow chain add extra attack vectors eligible hypernodes derived immutable info stored pow chain quality index bad behavior pos pow nodes recorded immutable pos chain later action independence chains ensures 24 x0ca way harder manipulate network requires forge chains different ways b bad actors cheating attempts recorded independent immutable way cheat unnoticed bismuth xef xac x81rst crypto currency come integrated independent kpis dedicated chain monitors network ensures actors fair play bismuth hybrid pow pos protocol bismuth pow pos hybrid layers approach uses strength pow pos tries avoid pitfalls hybrid approaches integral main consensus pos layer acts impartial observer pow chain metrics act core cause issues xe2 x80 x93 bad actors pos watches pow actors pow decides pos actor like ourobouros chain having control terms security big improvement chains attacked time coherent manner gain advantage mechanisms chain different epic task future use chains loosely coupled layer approach hypernodes advantages future uses potential ones xe2 x80 xa2 incentive contrary forging blocks blocking forging theirs turn xe2 x80 xa2 single pos chain hypernodes metrics number pos chains added bismuth network overloading main pow chain chains lot xef xac x82exibility xe2 x80 xa2 chains loosely coupled protocol currencies currency pow add bismuth like hypernode layer bene xef xac x81t security hybrid approach xef xac x82exible child chains bismuth continues explore new territories practical xef xac x81eld tested code goal hypernodes code framework easy run chains chain rules block time fees fees storage secured main bis chain peeks technology simple proof concept bismuth code grew featured node 25 x0cand client code base new technology left order compatibility current network hypernodes constrained use modern approach start async io async await use co routines big strength modern python allows write ef xef xac x81cient easy read async code need spawn hundreds threads processes handle locks hard debug race conditions need xef xac x81ght concurrent access single database xef xac x81le infamous global interpreter lock gil limitations hypernodes async extent core hypernode tornado server client callbacks async calls big plus performance node barely uses resource load safety point view protobuf google protobuf serialization protocol fast ef xef xac x81cient available bindings language chosen low level exchange format instead verbose text encoding structures hypernodes use protobuf pros xe2 x80 xa2 fast low overhead xe2 x80 xa2 small size packets xe2 x80 xa2 validity controls xe2 x80 xa2 cross os language compatible cryptographic primitives hash hypernodes use modern blake2 cryptographic primitives fast safe variable output length keys signature hypernodes addresses use classic ecdsa cryptographic curves chain coupling layers interact pos hypernodes use pow nodes hypernode runs classic bismuth pow node read access pow ledger node status like peers consensus block height read access hypernode observer data hypernode able 26 x0ca safe immutable shared list valid hypernodes round start hypernodes need common list theirs decide round jurors list extracted pow chain checkpoint past con xef xac x81rmations stable composed valid registrations hypernodes owners start list manipulated pos layer b collect metrics pow peers time peer connects pow node leaks info version block height ip ping time consensus state connectivity status speci xef xac x81c actions like rollbacks failed connection attempt worth recording metrics hypernode collect write pos chain aggregated round hypernodes metrics evaluate state pow participants compile lists xc2 xabgood xc2 xbb xc2 xabbad xc2 xbb peers instance pow nodes use pos hypernode way pow layer use data provided hypernodes xe2 x80 xa2 dynamic list bad good peers xe2 x80 xa2 reliable info current net height allow nodes avoid bad rep peers swarms fake nodes cloud fake nodes targeting miner nodes old nodes stuck bad block maintained old version instead integral pow process add complexity attack vectors pos chain gives access impartial extra data qualify pow pos actors metrics kpis metrics available act role hypernodes precisely collect team analyze decide metrics evolve time active metrics corresponding trigger bismuth developers believe hand crafted start evolve governance parameters hypernodes nodes owner likely able vote triggers levels order mitigate observed bad behavior precise metrics detailed xe2 x80 x93 evolving document hypernodes payouts usual masternodes mechanism forging masternode gets reward block forges means incentive cheat blocks deny blocks hope higher reward bismuth hypernodes attempt play reward directly related blocks forge 27 x0cyou cheat record pos ledger forever bismuth scheme hypernode owner paid regular basis randomness involved xef xac x81nished round leads payout active hypernode hypernode payouts handled means xef xac x81rst steps handled private contract tuned team makes sure safe process like xe2 x80 xa2 given reward period xef xac x81xed governance parameter xe2 x80 xa2 xc2 xabactive xc2 xbb hypernodes period share reward active means hypernode list valid hypernodes collected sent metrics interacted peers forged blocks juror xe2 x80 xa2 rewards proportional collateral hypernode twice collateral twice reward xe2 x80 xa2 private contract computes reward pays xe2 x80 xa2 details xe2 x80 x93 computation inputs public stored pos chain verify xe2 x80 xa2 algorithm public governance kpis levels likely trigger bans actions actors natural ask governance process launch given experimental nature project possible team manually handle analysis process order good overview meaningful kpis usage later xef xac x81lters autonomous parameters voted hypernodes owners hyperblock compression bismuth uses dual database system redundancy speed standard ledger database hyperblocks compressed version data contain 15000 blocks sums outstanding balances greater zero preceding transactions scenarios hyperblock balances compared ledger data discrepancy detection hyperblock database loaded memory node startup limiting hard drive access minimize system load increase database reaction speed availability penalty system 28 x0cevery node bismuth consensus system tracks behaviour connected clients penalties applied nodes enforce chain switching single block rollback half penalty removed honest delivering agnostically longest chain block nodes far future local consensus banned automatically set rules requires attacker half computing power requires connected nodes system attack time setup majority nodes attack progressively harder attacked block mirror blocks mirror block technology enables easy implementation hardcoded contracts like hypernode rewards xef xac x82ine staking development rewards mirror block storage chain outside traditional blocks denominated minus symbol interfere synchronization process mirror blocks shared nodes instead created contract execution optionally dependent blockchain data approach makes integral standard transaction database streamlining operations like account balance evaluation testnet bismuth testnet consists network nodes different ip addresses like bismuth mainnet fewer nodes setup testnet node following parameters de xef xac x81ned xef xac x81le con xef xac x81g txt port 2829 version testnet version allow testnet testnet true dif xef xac x81culty level mining algorithm testnet low purpose developers easily set local pool miner generate bis coins testnet optipoolware recommended regnet setup regnet node following parameters de xef xac x81ned xef xac x81le con xef xac x81g txt version regnet version allow regnet test testnet regnet running following command python3 commands py statusget 29 x0cthe output regnet like number arguments 2 arguments argument list commands py statusget regtest mode protocolversion regnet address 6a8b4990784617730af465a0dfcbb87284bca8b2189e02798d0a5a5f walletversion 4 2 9 testnet false blocks 1 timeoffset 0 connections 0 connections list difficulty 24 0 threads 3 uptime 131 consensus null consensus percent 0 server timestamp 1549123577 02 regnet true regnet need set miner xe2 x80 x9dgenerate xe2 x80 x9d command instamines n blocks current wallet address miner example xe2 x80 x9dgenerate xe2 x80 x9d 10 blocks bis test send regnet xe2 x80 x9dgenerate xe2 x80 x9d 1 block mempool transactions instamined regnet useful starts block height 1 require sync blockchain networked peers features new dapp tested early stage regnet distributed networked features need tested developer need switch regnet testnet education research bismuth ideal platform education research examples research bismuth mainnet testnet following journal articles xe2 x80 xa2 j ku xc4 x8dera g hovland xe2 x80 x9dtail removal block validation implementation analysis xe2 x80 x9d http dx doi org 10 4173 mic 2018 3 1 xe2 x80 xa2 g hovland j ku xc4 x8dera nonlinear feedback control stability analysis proof work blockchain xe2 x80 x9d http dx doi org 10 4173 mic 2017 4 1 regnet particularly useful educational setting student run local regnet computer need participate distributed network basic concepts blockchain technology taught bismuth regnet researchers students develop novel functions features bismuth encouraged contact bismuth core development team discord https discord gg 4tb3pyj new functions features potentially bismuth node code period additional testing core team 30 x0cfuture prospectives goal bismuth project core node documented streamlined ef xef xac x81cient possible encourage future extensions applications building bismuth use plugin system separate repositories bismuth developers focus supporting xe2 x80 x9dcrypto standard compliance xe2 x80 x9d xe2 x80 x9decosystem xe2 x80 x9d allow easier interaction existing tools protocols platforms removing xe2 x80 x9dfriction xe2 x80 x9d new address formats ecdsa bitcoin like json rpc server docker images bismuth services fall category example packaged easy use xe2 x80 x9dbismuthclient xe2 x80 x9d python module proven valuable team party devs building attracting new devs bismuth feature rich crypto currency whitepaper focused parts implemented tested working features developed future documented included updated versions whitepaper core team development roadmap available github link summary whitepaper provides outline philosophy pillars features bismuth crypto currency pillars bismuth 1 real world principle meaning core developer team takes pragmatic approach introducing new features functions 2 xe2 x80 x9dneed store xe2 x80 x9d meaning store chain needs stored chain following real world principle chain storage strongly discouraged 3 clear line trust meaning trust know trust bismuth presented trustless implicitly trust layers people core features bismuth presented discussed detail links references provided readers seeking detailed information bismuth crypto currency implementation 31 x0cdisclaimer information whitepaper informational purposes contain investment xef xac x81nancial advice research making investment decisions information document constitutes relied suggestion offer solicitation engage refrain engaging purchase sale investment related activity respect crypto currency cryptocurrency investments volatile high risk nature invest afford lose document revision history xe2 x80 xa2 august 13 2019 v1 2 multiple address schemes tokens formatting updated future prospectives xe2 x80 xa2 24 2019 v1 1 added sections mirror blocks chain security updated coin supply rewards xe2 x80 xa2 april 3 2019 v1 0 whitepaper released 32 x0c