spacemint cryptocurrency based proofs space sunoo park1 albert kwon1 georg fuchsbauer2 peter ga zi3 jo el alwen4 krzysztof pietrzak4 1mit 2inria ens cnrs psl 3iohk 4ist austria abstract bitcoin successful cryptocurrency deployed distinctive feature decentralized underlying protocol nakamoto consensus achieves proof work drawback causes consumption vast amounts energy maintain ledger bitcoin mining dynamics distributed time addressing issues propose spacemint cryptocurrency based proofs space instead proofs work miners spacemint dedicate disk space computation argue spacemint s design solves alleviates bitcoin s issues notably large energy consumption spacemint rewards smaller miners fairly according contribution network incentivizing distributed participation paper adapts proof space enable use cryptocurrency studies attacks arise bitcoin like blockchain uses proof space proposes new blockchain format transaction types address attacks prototype shows initializing 1 tb mining takes day o setup cost miners spend average fraction second block mined finally provide game theoretic analysis mod early version proposal called spacecoin changed spacemint con icts eling spacemint extensive game canonical game theoretic notion games place time stylized game satis fies strong equilibrium notion arguing spacemint s stability consensus 1 introduction e cash proposed chaum 8 1983 mainstream interest deployment advent bitcoin 28 2009 market cap 300 trillion dollars december 2017 bitcoin given unprecedented demonstration time ripe digital currencies ip bitcoin s dramatic expansion provoked questions currency s longterm sustainability bitcoin miners produce proofs work pow add blocks blockchain public ledger transactions block added reward newly minted coins concern proofs work deplete large amounts natural resources estimates december 2017 bitcoin network consumed 30 terawatt hours year exceeds denmark s energy consumption mining currently specialized asics use bitcoin mining related concern emergence mining oligarchy controlled handful powerful entities 1 original ideas basing bitcoin mining computing power participate network dedicating spare cpu cycles incurring little cost repurposing idle time existing personal computers modern bitcoin mining dynamics starkly di erent 37 network s mining clout overwhelmingly concentrated large scale mining farms special purpose hardware bitcoin mining collaboration electricity producers result mining s spare cpu cycles today result net loss electricity costs phenomenon undermines stability security intended original decentralized design light issues increasing interest cryptocurrencies based alternatives proofs work explored alternative proofs stake postake miner s probability successfully creating block increases currency holds computation performs concept incarnations ad hoc implementations existing cryptocurrencies 22 36 designs rigorous security proofs models 23 21 9 10 innovative proposals early constructions variously su ered attacks arise inexpensive nature mining hand recent proposals fairly complex usually running kind byzantine agreement protocol su ciently large subset stakeholders diverge substantially simplicity original nakamoto design schemes typically fail case low participation e stakeholders online paper propose spacemint cryptocurrency uses proofs space pospace 14 34 4 address aforementioned issues occur bitcoin alternatives pospace based currencies blocks spacemint miners invest disk space instead computing power dedicating disk space yields proportionally higher expectation successfully mining block spacemint advantages compared pow based blockchain like bitcoin summarized ecological dedicated space mining initialized cost mining marginal disk accesses minimal computation economical unused disk space readily available personal computers today marginal cost dedicating spacemint mining small previous point 1 expect space dedicated mining reward smaller cost buying disk space mining contrast pow based blockchains rational miners stop mining reward cover energy cost egalitarian bitcoin mining entirely application specific integrated circuits asic large mining farms point small scale participation e g based general purpose hardware impossible believe spacemint susceptible specialized hardware bitcoin discussed x6 cause centralization mining power bitcoin mining pools paper address problem directly elegant simple idea 26 discourage mining pools pow based blockchains having mining process require secret key redeem block reward straightforwardly adapted spacemint 2 1 1 challenges contributions order replace pow pospace achieve consensus blockchain following problems addressed interactivity pospace originally defined 14 interactive protocol true original definition pow 13 interaction simple e message public coin protocol pospace 1by marginal cost mean cost disk space sit unused 2in pow achieved e g applying hash function nonce directly signature pos 14 spacemint achieved augment ing label stored signature 2 quires interaction challenging adapt pospace blockchain setting determine winner pow based blockchain like bitcoin probability miner find eligible block increases hashing power bitcoin protocol prescribes eligible block announced miners append block blockchain continue mining new longest chain generating pospace hand deliberately computationally cheap need way determine di erent proofs wins probability miner winning proportional space dedicates want miner learn likely winner interaction stake problems replacing pow proofs computationally easy generate postake pospace series problems arise known stake problems 16 3 computation intensive nature bitcoin mining key property informally ensures miners incentivized concentrate mining e orts single chain leads consensus mining computationally cheap miners intuitively 1 multiple chains simultaneously protocol specifies 2 try creating di erent blocks single proof space stake altering block contents slightly e g di erent transaction sets choosing favorable announce behavior known block grinding issues undesirable 1 slow consensus 2 potentially allocate greater reward cheating miners 3 potentially enable double spending attacks adversary controlling 50% space 3although pospace based currencies share sues postake based currencies robust particular pospace share tricky participation problem postake challenge grinding issue arises content past blocks uence blocks added blockchain future possible miner generate long sequence blocks earlier blocks proofs low quality generated biased way grinding possible proofs miner create high quality proofs later sequence problem arises overall sequence higher quality expected miner s disk space size disproportionately high quality later blocks challenge grinding considered stake problem state separately unlike stake problems encountered contexts tackle interactivity problem spacemint uses fiat shamir paradigm standard technique replace public coin challenge hash previous message adapt pow bitcoin additionally leverage blockchain record messages pospace protocol concretely use special type transaction record commitment space prover needs send verifier initialization phase pospace determine winner define quality func tion assigns quality value pospace proof function computed miner locally designed probability miner having highest quality proof network proportional space dedicates stake problems challenging solve tackle introduce new ideas leverage existing approaches disincentivize miners extending multiple chains ensure behavior detected penalize prevent block grinding spacemint ensures pospace unique e miner generate exactly valid proof given challenge challenge uniquely determined proofs previous block basically running chains parallel proof chain contains proofs signature chain contains transactions 3 finally address challenge grinding spacemint prescribes past blocks uence quality short sequences future blocks exponentially driving probability miner generate sequence blocks disproportionately high quality exploiting relationship past future blocks idea making challenge block deterministic function unique credential resource won previous block combination having quality function miners locally decide likely winners subsequent blockchain proposals like algorand 23 chia network 3 implement evaluate modified pospace demonstrate e ectiveness scheme space larger 1 tb 1 miners need second check likely win generate candidate block 2 block generation takes 30 seconds 3 verifying validity block takes fraction second numbers grow logarithmically larger space finally provide game theoretic analysis spacemint modeled extensive game formally specify stylized model spacemint mining adhering protocol sequential equilibrium rational miners game e deviating protocol pay o analysis works simplified model serves rule certain classes attacks e profitable deviations based simplistic set possible actions capture possible attack vectors real miners 4 knowledge analysis cryptocurrency mining extensive game corresponding game theoretic equilibrium concepts model simplistic hope framework rigorously ruling certain classes attacks serve useful base build nuanced game theoretic models rule larger classes attacks similar cryptocurrencies 4for example selfish mining 17 block withholding captured simplified model spacemint fact susceptible block withholding attacks similar extent bitcoin 1 2 related work discussed proofs stake brie y mention related proposals detailed discussion found version 31 proof storage retrievability 18 7 6 19 12 proof systems verifier sends file prover later requests proof prover stored file proving storage random file dedicated space verifier send entire file contrast pospace requires verifier computation communication polylogarithmic prover s storage size proof secure erasure pose time com putable functions 33 15 20 5 proof systems prover convinces verifier access space additionally require proof implies space erased 33 20 function computed forward direction 15 protocols phase pospace e e ciently prove space usage time permacoin 25 cryptocurrency proposal uses proofs retrievability novel variant pow solutions bitcoin s pow puzzles carry intrinsic value permacoin makes proof work mining serve useful purpose miners incentivized store useful data network serves data archive permacoin fundamentally pow based scheme contrast spacemint dedicated storage store useful completely avoid pow associated perpetual computation burstcoin 1 cryptocurrency aware disk space primary mining resource burstcoin s design allows time memory trade o s e miner little extra computation rate honest miner small fraction e g 10% space burstcoin requires constant albeit small fraction 0 024% dedicated disk space read time block mined spacemint requires logarithmic fraction finally verification burstcoin problematic min 4 ers hash 8 million blocks verify miner s claim details attacks found appendix b version 31 chia network 3 recent proposal blockchain based pospace combination proofs sequential work nutshell better quality pospace faster block finalized proof sequential work proof tuple create block proofs sequential work pospace chia similar bitcoin spacemint respects example requires synchronization clocks bitcoin time stamped blocks occasional calculation mining di culty retaining e ciency pure pospace based currency pospace developed chia 4 based ideas completely different pospace 14 use worse asymptotic security guarantees unlike 14 non interactive initialization phase extremely short e cient proofs outline cryptocurrency proofs space xx2 3 modify pospace 14 blockchain setting present spacemint cryptocurrency based purely proofs space addressing othing stake problems describing attacks arise nothingat stake problems challenge grinding describe design uses novel approaches overcome x4 solutions extend blockchain designs based easy togenerate proofs evaluation proof space evaluate modified pospace terms time initialize space generate verify blocks block size x6 game theory spacemint model spacemint extensive game adhering protocol sequential nash equilibrium x7 2 proof space spacemint pospace 14 phase protocol prover p verifier v initialization phase p stores data s size n v stores short commitment s execution phase v sends challenge c p returns short answer reading small fraction s pospace 14 34 specified family hard pebble directed acyclic graphs increasing size prover picks graph g v e family depending space wants dedicate p stores label li node 2 v computed li hash lp1 lpt 1 p1 pt parents node hash hash function sampled v 14 graph families suggested successful cheating prover use jv j log jv j space initialization execution phase use jv j log jv j space execution graph family enforces jv j space phases e honest prover constant jv j time execution formally 14 specifies pospace tuple algorithms finit chal ans vrfyg specify twophase protocol verifier v prover p init initialize space chal generates challenge ans computes response challenge vrfy verifies response initialization phase consists running algorithm 1 p commits space followed algorithm 2 p proves commitment computed correct execution phase given algorithm 3 v simply opens committed labels prove stored algorithms partially non interactive blockchain application actual pospace challenges algorithm 2 3 algorithm 1 sampled v sent p 5the nonce ensures space di erent proofs 14 single verifier setting p generate nonce 5 algorithm 1 space commit common input hard pebble graph g n nodes function hash f0 1g f0 1gl 1 p generates unique nonce computes stores s init n sends nonce5 commitment v s contains labels nodes g computed eq 1 merkle tree commitment n labels total size s n 2 n l graph merkle tree algorithm 2 prove commit initial state v holds commitment nonce p stores s given challenges c c1 ckv 1 p computes openings b b1 b2 labels nodes fcigi2 kv par ents sends v ans ans s c returns merkle inclusion proof label lc w r t 2 v verifies openings vrfy vrfy c 1 correct opening c checks 1 kv label lci correctly computed eq 1 3 spacemint protocol 3 1 mining mining process consists phases initialization mining initialization miner joins spacemint network wants contribute n bits space mining e ort generates public secret key pair pk sk runs algorithm 1 p nonce set pk generate s init pk n miner stores s sk announces space commitment pk special transaction require miners commit pk prevent type grinding attack problem pospace use 14 property making minor changes turn pk space commitments use space algorithm 3 prove space initial state v holds commitment nonce p stores s given challenges c c1 ckp 1 p computes openings fai ans s ci gi2 kp sends v 2 v verifies openings executing vrfy ci ai transaction blockchain miner start mining mining similar bitcoin spacemint incentivizes mining adding new blocks block rewards freshly minted coins block transaction fees initialized miner attempts add block blockchain time period time period miner proceeds follows 1 retrieve hash value block best chain far challenge c discuss c derived x3 4 serves short seed derive long random strings $p $v 2 compute challenges c1 ckp chal n kp $p use algorithm 3 3 compute proof space fa1 akpg algorithm 3 4 compute quality quality pk c proof details quality function given x3 5 5 quality high realistic chance best answer period compute proof correct commitment b fb1 bkvg algorithm 2 create block send network attempt add chain block contains proofs b computed set transactions exact specification given x3 2 remark postponing algorithm 2 note unlike interactive pospace runs algorithms 1 2 initialization require miners execute algorithm 2 want add block e ciency reasons thing way proof b sig 6 nificantly larger recorded blockchain corresponding space actually block subtle advantage challenge algorithm 2 changes block cheating miner computed labels incorrectly know caught cheating time generates potentially winning proof b pass use allow tolerate larger soundness error algorithm 2 means choose smaller kv concretely s ok passes proof large probability p long requires p times space honest miner use 3 2 blockchain format blockchain spacemint sequence blocks fi0 fi1 serve public ledger transactions block fii consists parts called sub blocks contain index specifies position block blockchain structures sub blocks follows hash sub block contains current block index miner s signature 1 1 th hash sub block space proof containing miner s pk transaction sub block contains current block index list transactions x3 3 signature sub block contains current block index miner s signature ith transac tion sub block miner s signature 1 1 th signature sub block links blocks blockchain illustrated fig 1 refer hash sub blocks proof chain signature sub blocks transactions signature chain signature transaction sub blocks linked block fii hash signature transaction block 1 hash signature transaction pc sc figure 1 blockchain consists proof chain pc allow grinding signature chain sc binds transactions proof chain hash sub blocks linked signature transaction sub blocks design prevent kind consensus arbitrary signature chains containing di erent transactions consistent proof chain key observation honest miner adds ith block honest sense sign block secret key secret transactions corresponding proof chain block changed adversary controls secret keys miners added 1 blocks 3 3 transactions spacemint types transactions spacemint 1 payments 2 space commitments 3 penalties transaction signed user generating transaction sent miners added blockchain specify types transactions payments coins spacemint held transferred parties identified public keys payment transaction transfers coins m benefactors n beneficiaries form ctx payment txid n o ut txid unique arbitrary transaction identifier transactions blockchain identifier list input coins transaction specifically in1 inn list n benefactors comprised triple inj txidj kj sigj txidj identifier past transaction 7 kj index specifies beneficiary pkkj transaction txidj sigj signature txid txidj kj o ut verifies key pkkj proving ownership kjth beneficiary transaction txidj binding coin bene ficiaries o ut list beneficiaries receive specifically o ut out1 outm outi pki vi pki specifies beneficiary vi number coins pki paid transaction valid require 1 signatures verify correctly 2 benefactor referenced subsequent transaction blockchain prevent double spending 3 sum input values transaction sum amounts paid beneficiaries space commitments space commitment transaction ctx commit txid pk consists pk public key computed s init pk n ctx space commitment space size n penalties penalty transaction ctx penalty txid pk prf consists pk public key transaction creator prf proof penalty worthy behavior miner transactions serve penalize miners engage malicious behavior primary usage penalties spacemint disincentivize mining multiple chains e g proof contain blocks index signed miner penalty transactions discourage types detectable behavior blockchain based currencies 3 4 challenge comes bitcoin pow challenge block simply hash block 1 spacemint block 1 challenge slow consensus di erent chains miners di erent challenges di erent chains rational miner compute answers di erent chains easy good try add block corresponding chain chain best chain seen far miners behave rationally considerably slow consensus bad chains extended blocks quality similar current best chain longer lower quality chains die o instead derive challenge block hash block reasonably large probability multiple chains surviving blocks decreases exponentially increases contrast bitcoin hash block proof chain signature chain fig 1 serves prevent block grinding attacks grind proof chain fixed regardless set transactions block finally use challenge consecutive blocks prevent challenge grinding attacks explain x4 3 5 quality proofs chains quality proof block added chain time step decided qual ity measure pospace proof included proposed block set valid proofs 1 pk1 1 c1 a1 m pkm m cm require quality probability best quality 1 m corresponds ith miner s fraction total space network probability choice random oracle hash use hash answer require pr hash 8j 6 quality quality j p n m j 1 n j n space committed let dn distribution samples n values 0 1 random outputs largest dn max r1 rn ri 0 1 2 n 2 let dn denote sample dn sampling 8 randomness valid proofs define quality pk c dn hash 3 quality invalid proof set 0 remains e ciently sample distribution dn given n recall fx denotes cumulative distribution function cdf random variable x 0 1 inverse f 1 x exists f 1 x u u uniform 0 1 distributed x random variable x sampled according distribution dn cdf fx z pr x z zn probability n values ri considered 2 z want sample dn simply sample f 1 x u u uniform 0 1 u1 n 3 want sample dn randomness hash ai normalize hash outputs f0 1gl value 0 1 dn hash ai hash ai 2l 1 n quality chain order decide given proof chain branches better need define quality proof chain 0 denote qualitypc 0 hash sub block j contains proof pkj j cj aj quality block vj dnj hash aj quality v 2 0 1 define n v min n 2 n prw dn v w 1 2 space required obtain proof quality better v random challenge probability 1 2 quantity captures space required generate proof quality order prevent challenge grinding attacks desirable chain quality depend multi plicatively constituent block qualities described detail x4 useful weight contribution jth block chain length discount factor j motivations derive following quality function note sum logarithms product achieve multiplicativity qualitypc 0 pi j 1 log n vj j 4 4 stake problems solutions section discuss othing stake issues mentioned introduction describe detail outline spacemint defends recall di culty arises ease computing multiple candidate blocks pospace postake based currency miner compute proofs extending di erent chains computing di erent proofs chain little extra cost deviating protocol like rational miner lead higher expected rewards pow based blockchains su er selfish mining attacks 17 basing blockchain e ciently computable proofs like pospace postake aggravate problem behavior significantly slow consensus push scheme follow energy expenditure trends similar pow based schemes arise advantage gained extra computation issue double spending attacks possible miner create su ciently long chain private better quality honestly mined chain known blockchain proposals miner controlling half mining resources hashing power stake space considered problematic blockchain susceptible double spending adversaries significantly half network resources grinding blocks problem nakamotostyle blockchains challenge proof computed miners like pow bitcoin pospace spacemint derived previous blocks computationally easy generate proofs miner try di erent blocks example including di erent transactions finds advantageous allow generate good proofs future blocks issue selfish mining double spending attacks solution decouple proofs transactions shown fig 1 eliminates problem 9 block grinding challenges depend proof chain pospace unique prover generate valid proof challenge degree freedom miner uencing future challenges publish proof end chain withhold ii mining multiple chains problem bitcoin rational miners work extending longest known chain mining computationally easy rational known chains parallel hedge s bets chains eventually public ledger issue selfish mining double spending attacks solution address problem context selfish mining attacks discuss double spending later derive challenge block block parameter x3 4 note given challenge single proof e proof deterministic given challenge impose penalty penalty transactions x3 3 pair identical proofs published candidate blocks half block reward misbehaving block allocated creator penalty transaction half simply disappears 6 let consider cases depending mining chains forked blocks past case 1 chains forked ago case miner challenge chains spacemint uses penalties x3 3 disincentivize miners extending multiple chains case penalties rational miner good quality pospace proof announce blocks multiple chains maximize chances winning concretely suppose miner pk0 attempts concurrently chains recent blocks fij fi0j announcing fij 1 fi0j 1 quality mined space observes generate transaction penalty txid pk fpk0 fij 1 fi0j 1g 6this disincentivize penalizing oneself penalize pk0 transaction added chain extending fij 1 fi0j 1 meaning half reward block reward transaction fees miner announced fij 1 going pk accuser instead half reward destroyed e redeemed party destroy half reward penalty hurts cheating miner reasonably sure able accuse work mining rewards transferred miner time block added time miners claim penalty 7 case 2 chains forked ago case miner receives di erent challenges di erent chains leading proofs di erent quality chains case penalty scheme place rational miner advantage deviating instead trying extending highest quality chain generates proofs lesser chain challenges di er proofs proof lesser chain high quality rational miner publish hoping chain best chain survive address problem arguing extremely unlikely probability exponentially small case occurs weaker branch chain survive blocks despite strong incentive punishment scheme miners extend chain highest quality iii grinding challenges problem challenge grinding type attack double spending generating long chain private higher quality result s resources honestly arises fact adversary split space m smaller chunks discussed x3 5 quality block purposely designed splitting fixed space smaller chunks choosing 7the idea penalizing miners extending multiple chains goes slasher https blog ethereum org 2014 01 15 slasher punitive proof stake algorithm unlike previous penalty based proposals need miners deposit instead simply lose mining reward cheat 10 highest quality block ect expected quality block generated miner examine possible chains given length pick chain gives favorable challenges future blocks concretely consider setting challenge block determined block adversary generate sequence length 2 half blocks chosen provide favorable challenges later half sequence 8 note half sequence poorer quality expected quality honest mining given adversary s total space benefit gained second half sequence outweigh loss quality half adversary release high quality chain attempt overtake current best chain note attack adversary explores multiple chains parallel addressed penalizing scheme penalizing protect double spending attacks adversary actually published proofs slot double spending attack profitable loses mining rewards penalizing scheme solution mentioned x3 5 problem attack exacerbated metric determining quality chain sum linear function prevent attack 1 define quality chain product amounts space needed proofs sum 2 use block derive challenges future blocks e use hash fii nonce nonce 2 1 challenges time intuitively 1 makes harder adversary find good chain length 2 worse blocks weighted 2 helpful means challenge grinding adversary 8as blocks m distinct challenges search space huge size m consequently attack artificial pruning consid ering promising sub chains level probably miss best choose early blocks optimize chances sequences future challenges single future challenge making exponentially harder find good challenge yield high quality blocks way cherno bound average independent random variables deviates expectation grows large ability select multiple challenges giving sample average d variables useful find value deviates lot expectation detailed discussion attack defense given version 31 5 parametrization discuss justify suggested parameter choices spacemint detailed discussion parameters interplay impact attacks given xd space constraints determining challenges minimize probability forks surviving blocks necessary prevent mining multiple chains issue described x4 choose large hand smaller increases security features spacemint detailed xd suggest 50 makes highly unlikely fork survives steps probability fork surviving exponentially small value large introduce significant negative impacts aspects xd discussion frequency block generation challenge block available blocks corresponds time minutes block added terms computation takes 30 seconds generate block x6 set 50 generate blocks seconds given miner unlikely good blocks blocks want generate blocks fast propagate network miners need gener 11 ate signature chains previous block bitcoin blocks propagate 95% miners 40 seconds 11 believe time 1 minute reasonable frequency block generation spacemint quality discount factor discussed x3 5 use discount factor define block s contribution overall chain quality value determined pace total storage network increases instance assume storage stays roughly order magnitude month periods set large 0 99999 9 high helpful argue hardness generating long forks detailed analysis given xd confirmation time confirm transaction sure consensus transaction chain order prevent double spending bitcoin end confirms transactions 6 blocks added point users reasonably confident consensus analysis 35 assumes adversary 10% total hashing power gives upper bound 0 001 probability double spending assuming 10% adversary bitcoin analysis 0 99999 discussed spacemint 6 blocks upper bound 2 16 0 000015 probability block remain chain takes 6 minutes compared 1 hour bitcoin analysis applies proof chain avoid double spending sure transaction remains signature chain reason wait extra blocks reasonably sure blocks added honest miner sign list transactions block assuming stronger adversary controls 33% total space 0 99999 93 blocks block proof chain safe failure probability bounded 2 32 details xd 9in case contribution block decreases factor 1 e 0 37 1 1 100 000 blocks time 1 minute roughly 69 days 6 evaluation evaluate spacemint implemented prototype sha3 256 bit mode hash function prototype uses graphs 32 forces cheating prover store n log n bits order e ciently generate proofs given network infrastructure similar bitcoin mainly interested quantities time initialize space graph size proof time generate verify proof experiments conducted desktop equipped intel i5 4690k haswell cpu 8 gb memory o shelf hard disk drive 2 tb capacity 64 mb cache time initialize start mining spacemint clients initialize space described x3 1 concretely involves computing hashes nodes computing merkle tree hashes figure 2a initialization time spaces size 8 kb 1 3 tb expected time initialize grows linearly size space 1 3 tb takes approximately 41 hours generate commit space expensive procedure miner joins spacemint network initialized space fact space initialization non trivial time extremely fast space initialization space di erent commitments viable strategy size proof proof spacemint consists merkle inclusion proof set node labels pospace implemented number nodes open log n 1 kv log n algorithm 2 kp kv algorithm 3 statistical security parameter node graph parents opening node log n 32 bytes overall proof size upper bounded 3 log2 n 32 bytes opening fewer log n nodes shown secure unaware concrete attacks opening nodes believe size su ciently secure proof lie closer opening nodes fig 12 0 200 400 600 800 1000 1200 1400 file size gb 0 500 1000 1500 2000 2500 3000 time min graph setup generate merkle tree time initialize space 0 200 400 600 800 1000 1200 1400 file size gb 0 500 1000 1500 2000 2500 3000 size kb log n nodes 0 20 40 60 80 100 120 nodes b proof size varying space sizes 30 left right vertical axes rep resent proof size opening log n nodes respectively 0 200 400 600 800 1000 1200 1400 file size gb 0 5 10 15 20 25 time prove s prove 0 00 0 02 0 04 0 06 0 08 0 10 time verify s verify c time miner prove verify log n nodes opened 30 figure 2 results evaluation ure 2b demonstrates size proof open log n nodes vs nodes 30 time generate verify proof spacemint assuming miner storing space correctly miner needs open small kp number nodes merkle tree check quality solution x3 1 takes fraction second takes 1 ms read single hash disk rare case miner believes answer good quality generate proof takes 30 seconds space commitment miner open kp nodes time slot want value small possible practice kp 1 secure set small constant safe proofs substantially bigger bitcoin s require hash evaluation verify active currency expect size verification time proofs added block marginal compared size transactions added block time required verify transactions consistent figure 2c shows takes seconds generate proof verification takes fraction second energy estimates prototype evaluated cpu wastes lot energy cost conscious miner energy e cient device e g raspberry pi 2 e cient microcontroller consumes 10 w power miners open nodes time step quality answers usually bad upper bound power requirement suppose 100 000 miners 1 tb space 1% miners good answers generate answer 10w 100 000 0 01s 10w 1000 20s 210 000j block translates 210 kj min add block minute contrast bitcoin average uses 100 mw consumes 6 gj min orders magnitude larger note 1% figure conservative bound di erence larger practice impact storage medium modern bitcoin mining clusters applicationspeci fic integrated circuits asics compute hashes tiny fraction hardware energy cost general purpose processor believe spacemint mining susceptible advantages specialized hardware bitcoin regular hard disk drives suited serve spacemint mining equipment let consider existing categories storage devices hard disks expensive compared storage devices notably tapes devices like tapes adequate mining require frequent random accesses answer pospace challenges solid state drives allow fast random accesses expensive hard disks provide benefit rate lookups required mining low notably spacemint mining hinges random lookups minute 13 required frequency low speed nonissue cheap slow random access spacemint miners 7 game theory spacemint intuitively spacemint mining modeled following n player strategic game game play occurs series discrete time steps block added blockchain time step player miner choose strategy specified 1 blocks extend 2 extended blocks publish showing adhering protocol equilib rium game means rational miners incentivized deviate protocol playing game follows rational miners reach consensus single chain able advantage cheating strategy remark game theoretic analyses inherently start defining game models reality prove properties game model possible model capture aspects real world situation desirable model simple allow rigorous analysis incentives close reality let stress analysis intended basic framework model blockchain based cryptocurrencies standard game theoretic notion extended game claim comprise exhaustive modeling possible attack vectors particular stylized model capture important aspects notably block withholding selfish mining believe simple modeling framework cryptocurrency extended game value base build nuanced game theoretic models chosen include exposition 7 1 informal overview results standard game theoretic notion strategic game occurs multiple time steps shot extensive game extensive game takes place discrete time steps time step players action defined set possible moves point sequence moves players far called history games players necessarily know moves players history extensive game defines set possible actions player history sets game considered ended history called terminal history player utility function assigns realvalued utilities terminal history example simple player game like rock paper scissors player s utility function assign utility 1 histories won utility 1 histories lost modeling spacemint utility player e miner assigns history depends currency earned successfully adding blocks chain order model probabilistic aspects spacemint protocol e g unpredictable beacon consider extensive games chance moves standard game theoretic notion capture extensive games involve exogenous uncertainty essentially model beacon additional player called chance makes random moves equilibrium concepts widely known equilibrium concept strategic game nash equilibrium 29 intuitively nash equilibrium player s strategy best response strategies players nash equilibrium concept originally formulated shot games players simultaneously game known shortcomings setting extensive games informally nash equilibrium account possibility players adaptively changing strategy partway game particular exist nash equilibria 14 stable sense given ability adaptively switch strategies game rational player stick nash equilibrium strategy way end game extensive games alternative stronger notion sequential equilibrium standard equilibrium notion game theory stronger concept ensures players making best decision possible history game play remark informal analyses presented argue bitcoin mining constitutes nash equilibrium aware prior analyses model cryptocurrency extensive game consider sequential equilibria protocols inherently occur time strongly believe extensive games appropriate gametheoretic formalism analyzing stability cryptocurrencies accordingly sequential equilibrium right equilibrium concept cryptocurrencies 7 1 1 spacemint extensive game spacemint game player including chance makes action time step player s action consists choosing extend blockchain action chance determines value unpredictable beacon time step players necessarily know actions taken players information known player point comprises moves taken information blockchain based information player decides action time step aiming maximize utility e expected reward adding blocks chain extensive definitional preliminaries required state results formally informal theorem statement proof sketch rigorous theorems proofs given x7 2 theorem 7 1 sequential equilibrium spacemint game definition 7 2 x7 2 com putationally bounded players adhere mining protocol provided player holds 50% space proof sketch proof proceeds main steps showing following 1 adhering protocol nash equilibrium spacemint game 2 adhering protocol sequentially rational history game play prove item 1 consider information available arbitrary player given time step start turn player expected utility based information knows e g mined blocks added blockchain utility high miner s utility function simply expectation reward adding blocks chain utility maximizing miner choose action time step function blockchain e need separately account sequence moves past affect expected utility impacted blockchain given turn player choose action yields highest expectation future reward action consists mining set blocks locally announcing set blocks network based spacemint s penalty transactions fact given miner s block quality fixed time step able argue mining announcing exactly block optimal strategy strategy adheres protocol prove item 2 necessary exist system consistent beliefs players entire duration game player incentivized deviate protocol point game play belief system derived applying bayes rule nash equilibrium strategy consists adhering protocol concludes proof sketch proof x7 2 7 2 formally modeling spacemint mining extensive game standard game theoretic terminology preliminaries definitions extensive games nash equilibria sequential equilibria refer reader standard textbook 30 15 order analyze game theoretic properties spacemint mining define extensive game spacemint models actions miners associated payo s spacemint mining game let finit chal ans vrfyg proof space let b denote set blocks defined x3 2 2 n let b denote set blocks index 10 let b denote set blocks index e b s 0 0 b 0 let bgen genesis block note b0 fbgeng block b 2 b challenge c chal define exti b c block generated player mining block b pospace challenge c x3 2 exact block format 2 n challenge c define b c b b0 2 b 1 b b0 exti b c let b c s 02f0 g b 0 c remark simplify exposition explicitly model space player game defined standard way model assign player type ti representing player s space exposition keeps types implicit theorems require player 50% space committed active miners definition 7 2 spacemint game let finit chal ans vrfyg proof space number players n 2 n number time steps k 2 n consensus delay 2 n reward function n n define extensive game spacemint k hn h fc u follows set h histories defined inductively action set chance player ac h f0 1gm history h sequence h ai f g 2 n 10the index denotes block s position blockchain x3 2 refer block index section use avoid confusion player indices non terminal history h 2 n action set ai h player h ai h p bjhj bjhj 1 p bjhj bjhj 1 action ai 2 ai h pair sets ai t t set blocks player tries extending time step t set blocks player announces time step element t pair blocks b0 b 2 bjhj bjhj 1 b0 existing block player wishes extend b 2 b extended block probability measure f h uniform f0 1gm 2 n define partition ii equivalence relation equivalence relation defined inductively follows write h denote equivalence class h f g sequence equiv alent h t1 a1 tn ac f h0 t01 a0 1 t0 n a0 n a0 c 2 h h h0 ti t0 ai a0 ac a0 c 8i0 6 ai0 a0 i0g h h0 histories equal length pairs ti0 ai0 t0i0 a0 i0 actions player i0 histories equivalent identical components ti0 actions ti0 ai0 taken players u u1 un ui z r defined described history h let c h denote sequence actions taken chance player h let b chal denote challenge c proof space block b recall functions quality b qualitypc b defined x3 5 define new function quality b c quality b b chal c 0 let qualitypc b1 bl c1 cl equal 16 qualitypc b1 bl 8 2 l b chal c b 2 b 8 2 l 9i 2 n s t b 1 b 2 b c equal 0 history h let h set blocks announced player history h h b 9i 2 n a0 s t b 2 a0 player took action a0 h let blocks h winning block sequence h 2 h blocks h arg max b 2 h jhj qualitypc b c h let blocks h denote th block chain let win h player announced winning block blocks h index 11 recall history h a1 aj sequence j k action pro files j 2 j let ti j ai j action player aj let h indicator variable event player announces block index e fififi n b b 2 b b 2 s j2 j ai j ofififi 1 finally players utility functions defined follows terminal history h length k ui h x 2 k win h h blocks h j kronecker delta function player s utility sum rewards ceived announcing winning block index k definition 7 2 2 n histories h h0 information set 2 ii holds blocks h blocks h0 associate unique blockchain information set define blocks equal blocks h h 2 similarly c h c h0 h h0 2 information set define c equal c h h 2 block b 2 b challenge c chal define exti b c block generated player mining block b 11we assume winning block unique time step quality imposes total order blocks pospace challenge c x3 2 exact block format theorem 7 3 let finit chal ans vrfyg proof space number players n number time steps k 2 n reward function n n let 1 n pure strategy profile spacemint k defined follows 2 n information set 2 ii 6 f g fblocksj g fexti blocksj cj g 1 j 1 length histories infor mation set i12 player s action information set fblocksj g fexti blocksj cj g nash equilibrium spacemint k proof player 2 n definition ext information set 2 ii 6 f g quality v extended blockchain v qualitypc blocks exti b cj c block b announced time step j utility gained choosing block b block b0 extend ui ui 0i strategy 0i distributes probability actions form s t jsj 1 extending block extending multiple blocks precludes player winner receiving reward time step extending block preferable extending block ui ui 0i strategy 0i assigns non zero probability action form s t jsj 6 1 shown ui ui 0i strategies 0i player theorem follows 7 3 analyzing spacemint game section prove honest mining sequential nash equilibrium spacemint game 12all histories information set length 17 definition 7 2 2 n histories h h0 information set 2 ii holds blocks h blocks h0 associate unique blockchain information set define blocks equal blocks h h 2 similarly c h c h0 h h0 2 information set define c equal c h h 2 theorem 7 4 defines nash equilibrium spacemint game theorem 7 5 shows nash equilibrium sequential equilibrium theorem 7 4 let finit chal ans vrfyg proof space number players n number time steps k 2 n reward function n n let 1 n pure strategy profile spacemint k defined follows 2 n information set 2 ii 6 f g fblocks g fexti blocks c g 1 1 length histories informa tion set player s action informa tion set fblocks g fexti blocks c g let mpaxi2 n ti i2 n ti maximum fraction space possessed sin gle player 13 suppose 0 5 nash equilibrium spacemint k exp 1 2k e di 1 2 kx 1 j 0 2j 2 discount factor defined x3 5 di 1 defined xd proof fix player 2 n definition ext information set 2 ii 6 f g quality v extended blockchain v qualitypc blocks exti b c c block b announced block index utility gained 13recall ti space player defined remark definition 7 2 choosing block b block b0 extend e ui ui 0i strategy 0i distributes probability action sequences ti 1 ai 1 ti k ai k 8 2 k jai b j 1 ai s j2 k ai j given block index announcing block announcing multiple blocks precludes player winner receiving reward index announcing exactly block index preferable announcing number blocks strategies 00 0i 00 announces exactly block index probability 1 0i assigns non zero probability action sequences ti 1 ai 1 ti k ai k 8 2 k jai b j 6 1 ai s j2 k ai j holds ui ui 00 ui 0 restrict attention strategies announce exactly block index fix time step j 2 k let 0i strategy probability player announces block bj 2 bj time step j 1 suppose player announce block b 2 bj time step j assuming announces exactly block index know announces block bi j 2 bj time step j0 j players use strategies e announce exactly block index j time step j player extend player s block bi j let b0 bgen b01 b0 j 1 bi j unique length j blockchain induced bi j player extend block bi j gain utility time step j way player gain utility time steps j extends blocks way time step k bi j 1 exti bi j cj ii j bi k exti bi k 1 cj ii k 1 ii j denotes player s information set time step j self extended chain 18 higher quality chain produced e terminal history h qualitypc b0 bi j 1 bi k c ii k arg max b 2 h jhj qualitypc b c h 5 theorem d 2 probability 5 holds exp 1 2k e di 1 2 kx 1 j 0 2j 2 conclude ui ui 0i strategies 0i player theorem follows honestly following spacemint protocol sequential equilibrium spacemint game theorem 7 5 formal version theorem 7 1 x7 1 let finit chal ans vrfyg proof space number players n number time steps k 2 n reward function n n let assessment spacemint k defined theorem 7 4 n 2 n define n completely mixed strategy profile history h signs probability 1 jai h jn action ex cept assigns remaining probability derived bayes rule fol lowing way limn 1 n n 2 n n derived n bayes rule let mpaxi2 n ti i2 n ti maximum fraction space possessed sin gle player suppose 0 5 sequential nash equilibrium spacemint k exp 1 2k e di 1 2 kx 1 j 0 2j 2 discount factor x3 5 di 1 defined xd proof fix player 2 n let 2 ii information set player spacemint k let l length histories follows definition 7 2 expected utility player ui ji x j2 l winj h onej h blocksj h u0 u0 utility function player game spacemint k l win blocks invariant histories given information set summation term computed explicitly player order maximize expected utility player needs simply maximize u0 let jk l jk l denote assessment k l time steps game theorem 7 4 jk l nash equilibrium spacemint k l derived bayes rule follows ui ji ui 0i ji strategy 0i player applying argument conclude sequentially rational spacemint k construction limn 1 n limn 1 n consistent theorem follows acknowledgements like thank andrew miller bram cohen bringing challenge grinding attack attention thank srini devadas useful feedback draft versions paper ethan heilman interesting discussion costs modern bitcoin mining sunoo s research supported following grants nsf macs cns 1413920 darpa ibm w911nf 15 c 0236 simons investigator award agreement dated june 5th 2012 georg supported french anr eftrec project anr 16 ce39 0002 jo el krzysztof supported european research council erc consolidator grant 682815 tocnet references 1 burstcoin http burstcoin info 2 raspberry pi www raspberrypi org 19 3 chia network https chia network 2017 4 h abusalah j alwen b cohen d khilko k pietrzak l reyzin hellman s time memory trade o s applications proofs space asiacrypt 2 volume 10625 lncs pages 357 379 springer 2017 5 g ateniese bonacina faonio n galesi proofs space space essence m abdalla r d prisco editors scn 14 volume 8642 lncs pages 538 557 springer heidelberg sept 2014 6 g ateniese r c burns r curtmola j herring l kissner z n j peterson d song provable data possession untrusted stores p ning s d c di vimercati p f syverson editors acm ccs 07 pages 598 609 acm press oct 2007 7 k d bowers juels oprea proofs retrievability theory implementation ccsw pages 43 54 2009 8 d chaum blind signatures untraceable payments d chaum r l rivest t sherman editors crypto 82 pages 199 203 springer 1983 9 p daian r pass e shi snow white provably secure proofs stake cryptology eprint archive report 2016 919 2016 http eprint iacr org 2016 919 10 b david p ga zi kiayias russell ouroboros praos adaptively secure semisynchronous proof stake protocol cryptology eprint archive report 2017 573 2017 http eprint iacr org 2017 573 11 c decker r wattenhofer information propagation bitcoin network peer peer computing p2p 2013 ieee pages 1 10 sept 2013 12 r di pietro l mancini y w law s etalle p havinga lkhw directed di usionbased secure multicast scheme wireless sensor networks parallel processing workshops 2003 proceedings pages 397 406 2003 13 c dwork m naor pricing processing combatting junk mail e f brickell editor crypto 92 volume 740 lncs pages 139 147 springer heidelberg aug 1993 14 s dziembowski s faust v kolmogorov k pietrzak proofs space r gennaro m robshaw editors crypto 2015 volume 9216 lncs pages 585 605 springer 2015 15 s dziembowski t kazana d wichs time computable self erasing functions y ishai editor tcc 2011 volume 6597 lncs pages 125 143 springer heidelberg mar 2011 16 ethereum problems https github com ethereum wiki wiki problems 17 eyal e g sirer majority bitcoin mining vulnerable n christin r safavi naini editors fc 2014 volume 8437 lncs pages 436 454 springer heidelberg mar 2014 18 p golle s jarecki mironov cryptographic primitives enforcing communication storage complexity m blaze editor fc 2002 volume 2357 lncs pages 120 135 springer heidelberg mar 2003 19 juels b s kaliski jr pors proofs retrievability large files p ning s d c di vimercati p f syverson editors acm ccs 07 pages 584 597 acm press oct 2007 20 n p karvelas kiayias e cient proofs secure erasure m abdalla r d prisco editors security cryptography networks scn 2014 volume 8642 lncs pages 520 537 springer 2014 21 kiayias russell b david r oliynykov ouroboros provably secure proof stake blockchain protocol j katz h shacham editors crypto 2017 20 volume 10401 lncs pages 357 388 springer heidelberg aug 2017 22 s king s nadal ppcoin peer peer crypto currency proof stake 23 s micali algorand e cient democratic ledger corr abs 1607 01341 2016 24 miller december 2015 personal communication 25 miller juels e shi b parno j katz permacoin repurposing bitcoin work data preservation 2014 ieee symposium security privacy pages 475 490 ieee computer society press 2014 26 miller e kosba j katz e shi nonoutsourceable scratch o puzzles discourage bitcoin mining coalitions ray n li c kruegel editors acm ccs 15 pages 680 691 acm press oct 2015 27 t moran orlov proofs space time rational proofs storage cryptology eprint archive report 2016 035 2016 http eprint iacr org 2016 035 28 s nakamoto bitcoin peer peer electronic cash system 2009 http bitcoin org bitcoin pdf 29 j f nash equilibrium points n person games proceedings national academy sciences 36 1 48 49 1950 30 m j osborne rubinstein course game theory mit press 1994 31 s park kwon g fuchsbauer p ga zi j alwen k pietrzak spacemint cryptocurrency based proofs space cryptology eprint archive report 2015 528 2015 https eprint iacr org 2015 528 32 w j paul r e tarjan j r celoni space bounds game graphs mathematical sys tems theory 10 1 239 251 1976 1977 33 d perito g tsudik secure code update embedded devices proofs secure erasure d gritzalis b preneel m theoharidou editors esorics 2010 volume 6345 lncs pages 643 662 springer heidelberg sept 2010 34 l ren s devadas proof space stacked expanders m hirt d smith editors tcc 2016 b volume 9985 lncs pages 262 285 springer heidelberg oct nov 2016 35 m rosenfeld analysis hashrate based double spending corr abs 1402 2009 2014 36 nxt community nxt whitepaper https bravenewcoin com assets whitepapers nxtwhitepaper v122 rev4 pdf july 2014 37 s valfells j h egilsson minting money megawatts bitcoin profitably september 2015 http www researchgate net publication 278027487 minting money megawatts bitcoin profitably proof space parameters pospace constructed 14 following e ciency security properties thash denotes time required evaluate underlying hash function hash f0 1g f0 1gl inputs length 2l hash input length m l takes time m thash merkle damg ard given number n nodes underlying graph honest prover p dedicate n 2 n l bits storage n l labels values required e ciently open merkle tree commitment typical value l 256 n 512 n proposition 1 14 construction ex ists pospace random oracle model following properties 21 e ciency verifier runs time o l dur ing initialization send nonce store commitment o k log n log log n thash execution check o k log log n openings merkle tree com mitment parameter k discussed honest prover runs time o n log log n thash initialization o k log n log log n thash execution security let kv kp denote parameter k set commitment verification proof execution phase potentially cheat ing prover p passes commitment verifica tion phase probability 1 2 kv following holds p v accept proof execution phase probability 2 kp p stores n bits e honest prover runs time n log log n thash e time required initialization use pospace construction set kv statistical security parameter kp 1 constant proposition 2 14 second construction exists pospace random oracle model following properties e ciency verifier runs time o l dur ing initialization o k log n thash dur ing execution honest prover runs time o n thash initialization o k log n thash execution security let kv kp po tentially cheating prover passes commit ment verification phase probability 1 2 kv log n following holds p v accept proof execution phase probability 2 kp p stores nl log n n log n bits requires n log n space thash n log n time execution use pospace construction set kv log n statistical security parameter kp 1 constant b burstcoin details e ciency security issues burstcoin outlined x1 2 specification burstcoin mining process able find webpage http burstcoin info intro unfortunately informal description best guess exactly mining process burstcoin works based following figure http burstcoin info assets img flow png burstcoin uses shabal256 hash function denote h burstcoin miner initializes disk space follows picks nonce account identifier hash public key id computes 4097 values x0 x1 2 f0 1g256 x0 h id 6 xi 1 h xikxi 1k kx0 0 4095 miner stores s0 s4095 si xi x4096 block si called scoop 4096 scoops called plot miner supposed store plots di erent nonces dedicated space filled compute plot hash 4096 1 4096 2 8 million 256 bit blocks14 following assume simplicity plot s0 s4095 e ciency minutes new block gets added hash chain irrelevant discussion omit point miner compute designated public index 2 f0 4095g look value si si determines miner wins add block blockchain note requires accessing constant fraction entire dedicated disk space e block plot 0 024% time new block gets mined 14note equation 6 freshly computed block xi prepended previous input shabal256 iterated hash function appending instead prepending bring number hashes required compute plot linear instead quadratic length plot time allow dramatic time memory trade o s ones outlined 22 order verify miner won add block necessary recompute entire plot initial inputs id mentioned involves hashing 8 106 blocks comparison spacemint number bits read disk logarithmic size dedicated space verification requires logarithmic number hashes bitcoin verification requires single hash time memory trade o s observe burstcoin allows simple time memory tradeo instead storing entire plot s0 s4095 miner initially compute store value x4096 miner computes required scoop si given time step su ciently small 10 require hashing 50 blocks miner computes x0 xi sets si xi x4096 miner shot adding block 10 4095 0 25% time slots requires 1 4095 0 025% fraction space needed store entire plot strategy given fixed disk space possible 0 25 0 025 10 times faster honest mining algorithm price having compute modest number extra hashes generally type mining strategy possible t times faster price having hash t2 2 blocks block read disk given application specific integrated circuits asics compute order millions hashes second dollar invested15 time memory trade o s practical16 remark creators burstcoin discuss possibility mining currency pure proof work style come di erent conclusion technically mining process mined pow style mining intended yield thousands times hashrate hardware sit idle time contin 15https en bitcoin wiki mining hardware comparison 16however remark currently asics exist primarily sha256 hash function bitcoin unconventional shabal256 burstcoin uously hashing block found unnec essary waiting long cause nonce eventually valid http burstcoin info intro block grinding extending multiple chains main challenges overcome designing spacemint attacks based grinding mining multiple chains problem time memory trade o s solved proofs space paper 14 work builds lack documentation burstcoin mining process know extent burstcoin attacked grinding extending multiple chains understanding burstcoin mining process especially crucial avoid grinding index scoop given round malicious miner hijack chain forever e future blocks small fraction total dedicated space follows figure http burstcoin info assets img flow png indicates scoop index computed values prevgensig prevblkgenerator naming indicates prevgensig corresponds value newgensig previous block value computed deterministically ungrindable able find details functionality prevblkgenerator know grinded possible value serves bind transactions proofs given block grinded trying di erent sets transactions included block c challenge grinding attacks section describe challenge grinding attack communicated andrew miller 24 solution recall x3 5 quality blockchain spacemint defined qualitypc 0 xi j 1 log n vj j 7 23 vj quality proof j n vj space required proof quality vj discount factor ensures recent blocks weigh slightly purpose section factor important omit notice equivalent measure product block qualities qualitypc 0 qi j 1 n vj 8 natural question product sum turns possible attack case qualitypc takes sum e qualitypc 0 pi j 1 n vj 9 mitigated instead taking product basic intuition geometric mean robust outliers arithmetic mean describe attack sumbased quality function challenge grinding attack space commitment pk compute proof block use challenge computed hash block c hash pk important number time steps required reach consensus overwhelming probability miner e public key gets exactly chance mining block time step possible unfair advantage spending computational power try di erent challenges pick best challenge grinding attack adversary exactly producing long sequences blocks controls future challenges let challenge grinding adversary controls space size n splits space separate space commitments possible subject minimum size allowed space commitments let pk1 1 pkm m space pcommitments comprise space n m j 1 n j adversary honestly mined t consecutive blocks taking highest quality proof m space commitments time step expected quality resulting chain e qualitypc 0 t xt 1 e n vi t n according sum based quality function 9 recall construction expectation n vi n vi quality proof fact sum based quality function significantly better su ciently long chains partitions block indices f1 tg disjoint pairs simplicity suppose t 2 let pairs 1 1 2 pair space commitment pkj j computes challenge ci j hash pkj 0 j 0 j proof corresponding commitment pkj j time step point computed m possible challenges ci 1 ci m time step choose best c 2 fci 1 ci mg quality block position maximized informally like having challenge m times space pair expected quality s proof time step increased n m strategy actually decreases expected quality earlier time step compared honest strategy instead optimizing quality position optimizes position expected quality s proof time step n m approach generates chain half blocks quality n m half n m expected chain quality e qualitypc 0 0 0 t xt 1 e n vi t n m n m 2 tmn 2 summing space n initialized generated chain quality require total space mn 2 generated honest mining m 2 factor improved optimizing blocks separated positions k positions e g blocks generate t2 challenges pick best proof block 2 yielding factor m2 3 improvement generally mk k 1 k 2 n computational cost attack grows tk 24 qualitypc function product based equivalently based sum logarithms 7 attack outlined longer works reason expected quality blocks j j n t n t respectively product n2 obtained honest mining block expected quality n eliminated specific spacegrinding attack described remark possible minor advantage challenge grinding product based measure quality recall attack generated m challenges block m space commitments picked challenge gave best quality block instead adversary check challenge m candidates gives highest value product block qualities position j j strategy expected quality blocks n2 log m factor log m higher n2 honest mining smaller m 2 factor original attack explain counter attack let observe makes challenge grinding possible place variance quality proof space commitment pk expected quality proof n 1 quality higher n probability roughly 1 variance necessary need expected quality best proof found commitments pk1 1p pkm m sum m 1 n spaces decrease advantage challenge grinding honestly mining lowering variance quality proofs mentioned variance important feature simply remove cluster proofs advantage challenge grinding amortizes proofs way use challenge consecutive blocks concretely introduce new parameter specifies blocks generated challenge challenge block longer computed c hash pk c hash pk mod challenge grinding adversary try optimize proofs lower advantage able grind proof block individually suggest set 10 su cient prevent challenge grinding recommend larger generating long forks easier discuss xd d parameter setting inter play defined parameters control e ciency security spacemint parameters simply seen security parameters increasing parameter leads security e ciency delicate interplay changing parameter increases security property price decreasing discuss importance important parameters relevant attacks summarized view given table 1 parameters following number brackets indicates parameter value suggested instantiation time 1 specifies time minutes blocks 10 specifies blocks challenge 50 specifies challenge block computed hash block blocks past 0 99999 specifies weight blocks computing quality chain degrades older blocks 17 minspace 100 specifies gb minimal size space dedicate start mining 17with weight drops 50% 69314 blocks 48 days 69314 0 5 25 table 1 summary di erent parameters uence di erent security properties spacemint discussed appendix d arrow means increasing decreasing parameter increase security corresponding attack means increasing parameter major uence security attack arrows refer directly minspace time required initialize minimal allowed space scales linear minspace shown figure 2a decreasing time makes scheme secure setting low force miners dedicate computation setting minspace high scheme secure high minspace lower usability parties small space able participate parameters time minspace range unit n min n n 0 1 n gb suggested 1 50 10 0 99999 100 attacks challenge grinding extending multiple chains short forks space reuse long forks space reuse long forks space decrease challenge grinding discussed challenge grinding detail xc setting parameter su ciently high prevents attack discussed challenge grinding successful space commitments generate given fixed space increasing minspace makes attack harder extending multiple chains ensure miner rational announce blocks extending chain chain chain highest quality known miner ensuring miner announces block penalizing miners x4 fork assume high probability penalizing su cient ensure branch die blocks miners di erent challenges chains assuming miners rational slow consensus clearly increasing makes event likely exponential rate short forks space reuse security spacemint relies assumption possible reuse space mining compute challenges blocks advance reusing space twice initialize space time 1 50 10 2 30 minutes far 200 minutes required instantiate 100 gb space minimum suggest figure 2c p 13 promising approach harden spacemint space reuse use proofs space time suggested 27 initialisation space expensive consequence reusing space comes higher cost long forks space reuse situation different consider adversary tries create long range fork extend current chain specified eq 4 p 9 recent blocks contribute quality chain shortly sketch attacks works let cur denote index current block adversary extends current chain block cur low simply space available low new blocks low quality compared actual chain adversary extends 26 chain block cur low high high quality blocks e somewhat better blocks actual chain adversary space total space contributed miners instantiate space times generating blocks lot time adversary time low high minutes generate high blocks possible setting low high large high depends fast uence blocks degrades specified parameter concretely order 1 1 contribution blocks far past small fraction 1 e recent blocks time adversary initalizes space generate challenges blocks let tinit denote time minutes required reinitialization consider adversary generates chain sampling block allow generate blocks look mined twice space available adversary suf ficient adversary half space honest miners available adversary factor fi tinit time slower speed actual chain grows means set low high fi 1 1 tinit time finish fork time minspace 100 gb tinit 200 low 100 000 200 60 minutes rough analysis implies fork half year course long fork constitutes attack mechanisms handle long forks place type checkpoints believe long forks relying weak subjectivity18 su cient 18https blog ethereum org 2014 11 25 proof stake learned love weak subjectivity long forks space decrease attack assumes 1 1 degradation contribution chain quality blocks past problematic allows generate chain stating genesis block space large average space available miners entire lifetime currency lower currently space case rely weak subjectivity overtaking chain attack involves adversary extending blocks attempting overtake main chain case adversary rewarded blocks quality chain eventually exceeds chain mined rest network attack successful blocks mined adversary eventually highestquality chain successful overtake enable adversary double spending attack putting transaction transferring money main blockchain later overwriting transaction self mined blockchain overtakes main recall quality block x3 5 quality pk c dn hash dn hash defined dn hash hash 2l 1 n model hash function random oracle hash 2l distributed r0 2l random r0 f0 1gl distribution statistically close randomly sampling r 0 1 fr0 2lgr0 f0 1gl frgr 0 1 2 l denotes statistical distance henceforth analysis considers distribution denote d n d n r1 n r 0 1 let 0 m proof chain proof sub block j contains proof pkj j cj aj quality jth block vj d nj 27 table 2 bounding probability successful overtake chain p probability successful overtake adversary s proportion network disk space tabulated values fork length blocks 0 99999 0 99998 0 99997 n p 2 8 2 16 2 32 2 64 2 128 2 8 2 16 2 32 2 64 2 128 2 8 2 16 2 32 2 64 2 128 0 1 3 5 10 19 37 3 5 10 19 37 3 5 10 19 37 0 25 10 19 37 74 148 10 19 37 74 148 10 19 37 74 148 0 33 24 47 93 186 371 24 47 93 186 373 24 47 93 186 374 0 4 68 136 271 543 1092 68 136 272 546 1104 68 136 273 549 1116 0 45 277 554 1114 2254 4614 277 557 1127 2307 4852 278 561 1140 2365 5130 quality blockchain cf x3 5 given qualitypc 0 m mx j 1 log n vj m j 2 0 1 n defined n v minfn 2 n pr w d n v w 1 2g 10 lemma d 1 n v 1 log v proof definition d n increasing n means prw d n v w increases 10 implies n v n s t pr w d n v w 1 2 definition d n holds pr w d n v w pr r 0 1 v r1 n pr r 0 1 vn r setting probability 1 2 solving n gives n 1 log v claim follows suppose loss generality adversary begins long fork attack time 0 let nadv space adversary let nhonest rest network m 2 n let em denote event m blocks adversary s blockchain higher quality honest miners blockchain definition qualitypc pr em equals pr h mx j 1 log n vj log n vj m j 0 11 vj vj random variables representing quality jth block adversary network respectively probability taken vj vj claim d 1 substitute n rearranging find pr em pr h mx j 1 log log vj log log vj m j 0 12 j 2 m define new random variables di j di m j follows di j log log vj log log vj di m j di j m j di j di m j support 1 1 write pr em pr hpm j 1 di m j 0 13 theorem d 2 pr em exp 1 2m e di 1 2 mx 1 j 0 2j 2 proof applying hoe ding bound right hand 13 obtain pr em exp 1 2m mx j 1 e di m j 2 14 definition di j di m j e di m j m j e di j m j e di 1 second equality follows fact di j identically distributed j substituting expression eq 14 linearity expectation obtain inequality given theorem statement 28 values table 2 calculated mathematica solve m expression given theorem d 2 remark dynamics long fork attacks change slightly independent adversarial party case probabilities shown table 2 accurate long adversarial party owns space honest parties combined sum space owned ad versarial parties 50% total space 29