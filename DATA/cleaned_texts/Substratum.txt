b substratum network technical paper version 1 0 x0cmission substratum creating open source foundation decentralized web provide unrestricted access content sharing information users globe mission bring forth free fair internet future combining proven technological building blocks emergent technologies innovative holistic way help solve problems plague modern internet substratum network substratum network open source network allows allocate spare computing resources internet free fair place entire world worldwide collection nodes securely delivers content need vpn tor s single authority delivering monitoring content censorship geo restricted sites won t issue substratum network doesn t matter live content accessing world sees exact content concept substratum network originated closed system provide content private network leveraging computer resources decentralizing content enable hosts render sites hosts difficult time scale content private network inception network provide 1% world xe2 x80 x99s website content alternate solution find way provide content way travel peer peer secure allow access internet offer substratum node substratum node foundation substratum network average user runs earn sub dedicate computers resources network people run substratum node rewarded cryptocurrency time serve content purpose substratum node mask un mask cores packages clandestine routing substratum nodes work relay cores packages content network user requests site nodes use algorithms find expedient secure way information user multiple nodes work fulfill single request order maintain necessary level anonymity 2 x0cunderstanding components substratum node substratum network contain components features help provide functionality explaining step step process network communicates let xe2 x80 x99s understand component entire network cores packages core s package series instructions bundled way allows node network receive information decision handle request core s packages contain layers requests inform nodes perform actions create request pass request process request client device initializing request browser video game originator identity originating request node relay identifies nodes hop routes destination exit exit node true web request behalf originator send route stack server information server hosting requested information substratum dns purpose dns os agnostic tool substratum node user interface use examine manage dns settings user s machine routing tcp communications substratum network built utility run command line hopper purpose hopper interpret cores packages determining destination hopper receive incoming cores package unwrap information determine phase process possible phases node execute send request served proxy server request website behalf originating node request route 3 x0cproxy client purpose proxy client convert cores packages substratum network regular nonclandestine requests convert regular non clandestine responses cores packages substratum network proxy client distant node component nonclandestine communication greater internet behalf originating node exit node proxy client converts cores package regular request gets response wraps new cores package cores package goes substratum network continue route originating node proxy server purpose proxy server acts server device information proxy requests example website request running substratum node delivered proxy server far system concerned server represents server neighborhoods substratum node substratum network contains subsystem neighborhood neighborhood responsible keeping track nodes network remembering connected storing information currently example neighborhood keeps track nodes running bootstrap mode function provide gossip network routing data consuming node wants send cores package network neighborhood responsible analyzing network determining route cores package neighborhood data stored memory database creates level security allows node shut free knowledge originally contained bootstrap nodes node starts contain limited set instructions reach contact available bootstrap nodes bootstrap node provides collection available node addresses new node joining network allows new node kick start network bootstrap nodes perform functions typical node provide nodes information build neighborhoods route requests monetized life span bootstrap nodes come end future nodes join network nodes come online use social connection features help bootstrapping nodes user node address node add manually neighborhood information gathered social means open source projects shared socially web 4 x0cblockchain bridge job blockchain bridge communicate actual blockchain blockchain bridge connect directly blockchain leverages proxy client connection allows nodes subvert restrictions access blockchain information way node subverts website restrictions proxy server clandestine routing masking network grows available time outside forces want intercept prevent network utilized way intended create barrier prevent malicious intent packages wrapped mask mask basic encryption methods today masks provide extra layer security similar typical https traffic today development depth features network continues goal create clandestine routes cores package wrapped layer obscurity resemble different types traffic traffic patterns viewed time distinguishable masking packages random traffic patterns deters typical packet sniffing traffic analyzation methods seeing patterns blocking requests responses entire layer wrap cores packages components handed seen diagram mask cores route payload client request client response meta data raw traffic browser server 5 x0cgossip protocol certain times neighborhood trigger round gossip happens neighborhood send cores package nodes node direct tcp connection cores package contain node knows current state network including learned nodes sent gossip start decentralized node needs know locate node network gossip messages strengthens position time integral participant network node sends gossip periodically information node eventually percolate network information farthest reaches network eventually reach node proposed monetization configuration occur charge nodes right node sends data behalf s pay 6 x0cthe substratum network step step understanding component function let xe2 x80 x99s walk step step guide complete end end request substratum network guide demonstrate node relays information wire 1 substratum network starts computer running substratum node software 2 node belongs neighborhood 3 neighborhood composed multiple substratum nodes node aware immediate neighbors helps ensure anonymity nodes boosts security preventing level attacker potentially penetrate network 4 requests web site node creates request package immediate neighbors contents request package consist following encrypted route stack going destination b encrypted package node route stack c encrypted payload original web request 5 originator node creates predetermined route stack request endpoint neighborhood 6 client like web browser google chrome submits request website 7 substratum node creates encrypted package encrypted parts node route path route path predetermined originator node contains different request response paths 8 limits potential attack surface request path host path client different 9 encrypted package sent immediate neighbor substratum node knows ip addresses immediate neighbors works limit potential attack surface 10 neighbor receives package decrypts node matching fingerprint decrypt package 11 xe2 x80 x99s node decrypts package recipient node decrypts set instructions entire package b instructions hop tell node relay request node public key route stack c instructions additional node tell recipient relay request node minimum hops allows compartmentalized knowledge network 12 node aware ip addresses outside immediate neighbors ability attack network greatly reduced 13 final hop destination includes payload instructs exit node create web request response behalf originator request data provided client google chrome mobile browser 14 response return unique route boosts security anonymity network 15 return path behaves like request path includes encrypted response client originating node able decrypt response hand browser rendered 7 x0cconstraints order process work correctly safely profitably certain common sense constraints node shouldn t connection chief constraints node available public ip address long suppose node listed node s neighborhood route cores package time cores package arrives node node contacted way originating node s neighborhood expected case cores package fail route sent order making mistake node failed contact node note route data node b gossip information don t route data t contact nodes way brief period disconnection seriously affect potentially profitable routing work node given plans certain public ip changes survivable currently public ip address changes node traffic drop zero stay ll need kill node restart network device reliability device laptop suspended lose battery power ideal running effective node node occupies tiny footprint devices regard size cpu memory consumption living device suspends shuts unreliable power supply recommended node stay running connected long steadily possible future features include keeping track statistics fast node proven acting suspiciously warm delay hop minimum node network know ip addresses nodes directly connected know ip addresses node network security related implications effective originating node requires route hops long sure nodes route knows ip addresses route hops long intrinsically insecure exit node way route need know public key originating node encrypt response payload exit node know ip address originating node able associate request urls tls entire request response transactions http originating ip addresses neighborhood produce valid routes needs nodes produce minimum threehop route connections nodes t find exit node isn t directly connected 8 x0call means significant interval time marked periodic arrival departure gossip newly started neighborhood complete able generate routes allow owner originate traffic neighborhood ready route people s data soon immediate neighbors bootstrap nodes course order node route traffic built route node time node assimilate choose current version substratum node secure default route length minimum hops makes testing easier presenting conditions need test release production version substratum node default route length change hops mentioned best performance measures best computer run substratum node public ip changes isp granted static ip address failing best way run node non portable computer wired ethernet connection sending data wire keeps far secure broadcasting air failing best way wifi connected computer territory particular router doesn t leave suspended hibernated monetization substratum plans incentivize users running nodes rewarding cryptocurrency digital form monetization allows system remain decentralized value globe break system self govern distribute currency identify key features protocols necessary successful monetization counting problem solve understanding monetize network count multiple iterations network traffic analyzed data counted logged compromising security iterations resulted counting bytes transferred cores packages platform counts bytes steps contained cores packages network accounting monitor routing package providing exit services create higher rewards exit nodes 1 bytes 2 routing services 3 exit services 9 x0chow counted avoid concept central authority nodes provided mechanism storing considered accounts payable accounts receivable data node keeps track owes nodes requests keeps track owed transmitting routes requests nodes creates self governed policy provides mechanisms validating good bad actors importantly provides method adjust pricing node basis based factors node owner want adjustments discussed rewarded section b c create entry accounts receivable routing 150 bytes creates request adds 5 transactions b c d e f accounts payable log b c d create entry accounts payable routing 10 100 bytes f e 10 000 bytes d d create entry accounts receivable performing exit services 100 bytes f e d create entry accounts receivable returning 10 000 bytes f e create entry accounts receivable routing 10 100 bytes rewarded best way describe value model applied form logging transactions free market approach allowing nodes set price central system need monitor costs payout massive network goal allow nodes set prices services based number factors factors include regional availability uptime upload download speeds reliability truthfulness transactions possibly availability censorship oppressed regions way node owners price node consumers want identify thresholds spending example node network plans achieve create configurations allow consumers set spending limits transactions node users able change spending habits based quality nodes paying higher costs premium nodes budget friendly approach node use 10 x0cwhat future holds living document updated product continues evolve features important network function analysis research phase development work clearer tested features documented updated respective sections paper details look forward xe2 x80 xa2 validating monetization transactions consensus xe2 x80 xa2 handling bad actors monetization actors don xe2 x80 x99t pay b actors overcharge cook books c route failures xe2 x80 xa2 exit services banning 11 x0c