b internet services generation secure highly scalable ecosystem online services internet services foundation december 31 2017 abstract despite recent hype cryptocurrency market underlying blockchain technology early stage far mass adoption recognized issues current blockchain technologies scalability capability processing large volumes transactions swiftly heavy usage services like facebook amazon digital asset exchanges nearly impossible deploy blockchain paper propose internet services xe2 x80 x9cios xe2 x80 x9d innovative secure blockchain paradigm designed provide horizontal scalability high transaction throughput implementing novel sharding architecture consensus mechanism ios system able process 100 000 secure transactions second work makes following contributions introduces 1 efficient distributed sharding eds innovative sharding scheme makes shards sufficiently large strongly bias resistant combination client server randomness scavenging mechanism leader election cryptographic sortition 2 transepoch secure validators shards assignment epoch transitions maintaining transaction operability 3 atomix novel step inter shard atomic commit protocol guarantees transaction atomicity byzantine setting x0c4 proof believability pob groundbreaking byzantine consensus protocol believable approach guarantees safety liveness system largely maximizes transaction throughput size shard 5 micro state block msb novel mechanism minimize storage bootstrapping costs validators note ios work progress active research way new versions paper updated xe2 x80 x8bhttp iost io xe2 x80 x8b comments suggestions contact team iost io xe2 x80 x8b table contents xe2 x97 x8f background xe2 x97 x8f related work xe2 x97 x8b state machine replication xe2 x97 x8b bitcoin proof work xe2 x97 x8b proof stake xe2 x97 x8f blockchain architecture xe2 x97 x8f distributed randomness protocol xe2 x97 x8f efficient distributed sharding xe2 x97 x8b algorithm leader election protocol xe2 x97 x8b analysis xe2 x97 x8f operability epoch transitions xe2 x97 x8b node shard transition assignment algorithm transepoch xe2 x97 x8b analysis xe2 x97 x8f inter shard transactions xe2 x97 x8f consensus mechanism xe2 x97 x8b tokens motivations xe2 x97 x8b proof believability xe2 x97 x8f blockchain storage pruning xe2 x97 x8b algorithm msb generation protocol xe2 x97 x8b analysis xe2 x97 x8f references background excessive commission fees privacy violations frauds censorship common issues encountered daily interactions centralized online service providers x0cgiven recognized problems centralization wide range blockchain technologies attempting resolve issues developed launch bitcoin 15 2008 specialized projects like steemit 29 bitshares 30 syscoin 21 versatile projects like ethereum 28 eos 11 examples attempts specialized certain applications burdened low transaction throughput limitations flexibility transaction throughput impossible developers enterprises bring heavy services like facebook amazon blockchain mention complicated like digital asset exchanges heart scalability issue lies fundamental design existing blockchain technologies consensus protocols blockchain architectures existing blockchain technologies face major challenges way scaling node store entire ledger order participate b participating node network obligated handle transaction participating nodes essentially conducting work number transactions system process exceed single node growing size blockchain increases requirements costs storage space bandwidth computational resources node fully participate network increasing mining cost inevitably participation network privilege leading straight problem centralization ios designed fill void vision ios generation blockchain technology provides network infrastructure support service oriented ecosystem ios platform provides users completely decentralized way exchange online services digital goods enables developers deploy large scale dapps ability support massive number users series groundbreaking innovations efficient distributed sharding xe2 x80 x9ceds xe2 x80 x9d believable consensus approach able increase system xe2 x80 x99s throughput enormously guaranteeing security developed eds based sharding technique widely adopted distributed systems databases enable parallel transaction processing inspired classic xe2 x80 x9cdivide conquer xe2 x80 x9d principle computer science sharding technique partitions entire ios network certain numbers subspaces called shards consider shard miniature network runs consensus protocol parallel instead having entire network validating set transactions subsets transactions handled consensus groups simultaneously throughput system significantly enhanced size network number transactions grow rapidly order ensure x0cthe network divided homogeneously developed bias resistant distributed randomness protocol order introduce unbiased transparent randomness sharding process eds ios packed powerful arsenal technologies empowers deployment large scale dapps high performance flexibility allows developers build wide range products counterparts traditional monopolistic online service providers brand new business models considered impossible previously admittedly running services expensive size ios network relatively small increasing number nodes resources network cost running large scale dapps greatly reduced additionally benefits including avoiding cyber attacks high level data security immutable property development ios blockchain thoroughly examined currently available solutions order learn previous attempts related work state machine replication nutshell blockchain technologies state machine replication protocols state machine replication protocol satisfy important properties 1 safety xe2 x80 x8b e servers network record transactions 2 liveness xe2 x80 x8b e transactions clients submitted documented log quickly fundamentally different ways achieve state machine replication classical style consensus blockchain style consensus 18 classical style consensus generally applies paxos like algorithms permissioned setting priori knowledge consensus nodes known system example application servers software companies like amazon servers collectively use classical way replicate store information classical algorithm establishes fundamentals form consensus ordering data x0cbitcoin proof work satoshi nakamoto introduce bitcoin solution establish consensus permissionless setting e g node freely join leave network priori knowledge consensus nodes network underlying bitcoin blockchain improves scale distributed systems human involvement providing economic incentives servers dubbed miners bitcoin xe2 x80 x99s settings miners bitcoin network form consensus calculating partial hash collisions certain difficulty level chain greatest cumulative difficulty acknowledged nodes consensus result solution named proof work pow essence nodes network contribute computing power way earn incentives determine ordering transactions system benefit pow ability defend sybil attack permissionless setting 15 despite advancements scale security bitcoin major drawbacks 1 unlike modern cryptocurrencies takes hour confirm transaction according configuration 2 difficult develop applications bitcoin network 3 consensus mechanism wastes energy e costs million dollars day electricity importantly earlier works bitcoin style blockchain sufficiently large interval retain security 16 17 bitcoin good replacement current centralized system support day day applications large transaction volume proof stake concept proof stake discussed online blockchain forum 31 adopted cryptocurrencies like ppcoin 22 peercoins 23 nxt 5 idea pos essentially vote unit stake validator owning stake higher voting power validators economic incentive harm blockchain network attackers cost attack huge majority stakes early development proof stake consensus mechanism known vulnerable xe2 x80 x9cnothing stake xe2 x80 x9d attacks servers able vote multiple blocks time incentive converge damaging security blockchain later work solves problem slasher 3 enforces punishment violating nodes work described ad hoc application proof stake 1 xe2 x80 x933 26 12 10 pos fulfills liveness replicated state machine protocol faces challenges like centralization security problems instance validators possessing tokens likely generate new blocks x0cricher leading potential centralization problem furthermore previous work shows proof stake protocol provably secure robustly configured consensus protocol token exchanged frequently 19 potentially implies ceiling throughput proof stake order preserve security blockchain architecture infrastructure ioschain similar existing known blockchains like bitcoin ethereum nodes disseminate data gossip protocol system split data state shards node responsible shard system unspent transactions utxos stored memory nodes corresponding shards raises new challenges xe2 x97 x8f divide system shards xe2 x97 x8f reach consensus shard xe2 x97 x8f perform inter shard transactions order solve challenges fair secure manner perform random operations example assigning nodes shards electing leaders shard result design unforgeable unbiased uniformly random distributed random number generation protocol random number generation protocol challenges addressed rest paper present techniques methods address challenges xe2 x97 x8f section 4 present xe2 x80 x8bdistributed randomness protocol xe2 x80 x8b drp unforgeable unbiased ratio malicious nodes certain predefined threshold random numbers generated drp divide system shards assign nodes different shards elect leaders shard xe2 x97 x8f section 5 present xe2 x80 x8befficient distributed sharding xe2 x80 x8b eds novel scheme form shards subsets validators record state process transactions sufficiently large strongly bias resistant combination drp vrf based leader election cryptographic sortition xe2 x97 x8f section 6 present xe2 x80 x8btransepoch xe2 x80 x8b secure validators shards assignment protocol epoch transitions maintaining system operability x0c xe2 x97 x8f section 7 present xe2 x80 x8batomix xe2 x80 x8b novel step inter shard atomic commit protocol guarantees transaction atomicity byzantine setting xe2 x97 x8f section 8 present xe2 x80 x8bproof believability xe2 x80 x8b pob novel byzantine consensus protocol believable approach guarantees safety liveness system largely maximizing transaction throughput size shard xe2 x97 x8f section 9 present xe2 x80 x8bmicro state blocks xe2 x80 x8b msb novel mechanism minimize storage bootstrapping costs validators distributed randomness protocol traditional approach generate randomness like proof work based mechanism 13 trusted beacon 6 computational wastes centralization concerns desirable use cryptographic tools generate distributed random numbers saves resources provably secure multiple algorithms generate distributed random numbers purpose node shard assignment leader election ioschain present knowledge best fits requirement ioschain scenario ioschain distributed random number generator following requirements 1 resistant dishonest participants including clients servers certain ratio detailed system able progress ratio dishonest participants threshold bad happens making progress 2 final random number unforgeable unbiased uniformly random negligible probability 3 dishonest participant able try multiple times generate random number favors participant multiple dishonest participants collude 4 parties able verify output generated faithfully running protocol e verify satisfies requirements order achieve requirements propose use client server protocol called distributed randomness protocol drp 24 client communicates set servers generate unforgeable uniformly random value non interactive zero knowledge proof nizk publicly verifiable secret sharing pvss certain protocol run protocol finishes final random output revealed entity protocol able learn information x0cfinal output makes sure dishonest client able try multiple runs generate random number favors dishonest client protocol consists phases randomness generation randomness verification works follows initially client starts protocol run broadcasting servers message including randomly generated balanced grouping phase server generates random input value creates shares members group pvss receiving encrypted shares nizk 25 proofs servers timeout client chooses subset server inputs group allows client fix group xe2 x80 x99s secret output protocol second phase servers decrypt send shares client soon client receives sign input values global run collective signature cosi 25 client combines recovered group secrets reveal final random output efficient distributed sharding distributed randomness protocol drp presented difficult implement efficient distributed sharding protocol works malicious failure nodes performed validators collectively design backup protocols scenarios malicious failure nodes conquer problem propose solution uses algorand 9 omniledger 8 elect leader algorithm leader election protocol inputs 1 2 view counter validator 3 4 5 private key current epoch synchrony bound output validator 1 minimum value valid lottery run drp computes lottery function view node xe2 x80 x99s private key verifiable random x0c2 time bound validators gossip lotteries validator collects 3 minimum value lottery gossip process 3 time bound validators fix minimum value valid lottery seen far 4 validator corresponding minimum value valid lottery elected leader validators corresponding second minimum value valid lottery pool leaders 5 elected validator successfully runs drp broadcasts output validators correctness proof 6 use compute permutation divide result buckets size mapping nodes shards determined 7 time bound elected validator fails start drp validators mark current run failed exclude leader rest epoch case leader run drp backup leaders fail continuously lottery roll step 1 protocol rerun analysis leader election mechanism provides required properties described section 4 validator produce single valid lottery view epoch drp design provides scalability private key kept secret output vrf unpredictable given synchrony time bound lottery seen validators malicious nodes win lottery perform arbitrary behaviors choose cooperate run drp protocol decide fail epoch malicious abnormal cases happens malicious nodes excluded participating rest epoch operability epoch transitions shard configuration schemes static configuration different rolling schemes ioschain uses dynamical rolling scheme swaps validators batches epoch configuration ioschain idle period validators bootstrapped appropriately network begin processing transactions designs blockchain x0cissue sure system operational period consideration key factor issue transition batch size highly relevant safety system swap batch size grows risk increases number remaining honest validators sufficient reach consensus disadvantage growing swap batch size downloading bootstrapping information cause network stress increases given threat model malicious nodes maximum size swap batch nodes maintain operability transition idle phases use method selecting subset validators swapped replaced new members 8 24 based omniledger xe2 x80 x99s approach 8 enables remaining validators continue offering services newly joined nodes downloading history data bootstrapping present node shard transition assignment protocol transepoch follows node shard transition assignment algorithm transepoch inputs 1 2 3 total number nodes size shard swap batch size e number validators swapped given time given epoch outputs 1 set 2 shard xe2 x97 x8f generate seeds generated random output drp xe2 x97 x8f use permutation divide nodes buckets size way node swap batch mapping determined x0c xe2 x97 x8f current nodes newly joined nodes xe2 x97 x8f batch waits starts swap analysis algorithm presented ensured safety byzantine fault tolerance bft consensus shard transition reasons folds firstly sure size group shard size validators running consensus secondly safety adversary guaranteed epoch randomness generate permutation validators batches inter shard transactions mechanism supports inter shard transactions critical system transactions likely happen cross shards introduce byzantine shard atomic commit atomix protocol ensures atomicity cross shards protocol prevents double spending keeps consistency transactions design variant omniledger algorithm 8 present atomix utxo state model previous work proved atomix ensure smart contract supported inter shard transaction mechanism 27 utxo model supported nutshell cross shard transaction node shard node b shard b happens algorithm following 1 create tx shard let nodes validate transaction 2 tx approved nodes shard transaction logged xe2 x80 x99s blockchain time client gossip proof acceptance endorse transaction lock fund utxo send b xe2 x97 x8b tx rejected nodes fund gets returned 3 xe2 x80 x99s blockchain commits tx b xe2 x80 x99s blockchain nodes receiver xe2 x80 x99s shard validating tx xe2 x97 x8b tx rejected nodes b fund gets returned 4 tx gets approved nodes b xe2 x80 x99s blockchain fund released b x0c xe2 x97 x8b tx rejected nodes fund gets returned consensus mechanism tokens motivations ios system ios token like tokens blockchain systems serves medium exchange transactions commission fees importantly ios plays important role calculating user xe2 x80 x99s believability score ios tokens generated genesis block ios ecosystem ios tokens xe2 x97 x8f payment payments services goods provided merchants community members xe2 x97 x8f commission payment validators compensation running smart contracts processing messages transactions resources shared general ecosystem including limited storage space computing power etc commission fee incentivizes validators prevents malicious users damaging interests community excessive deployment smart contracts xe2 x97 x8f believability ios tokens calculate users believability scores explained following section addition member ios ecosystem user acquire ios tokens validating transactions contributing resources e g running smart contracts providing storage space etc mentioned previous sections major challenge faced traditional proof stake consensus mechanism tendency centralization order mitigate risk introduce servi measurement users contribution community way encourage members contribute continued development ioschain following attributes xe2 x97 x8f non tradable servi designed medium exchange servi traded exchanged way xe2 x97 x8f self destructive validating block system automatically clear servi balance owned validator way nodes high believability scores turns validating blocks ensure fair block generation process x0c xe2 x97 x8f self issuance servi generated deposited user accounts automatically certain contributions providing community services evaluating services provided entities making special contributions proof believability traditional blockchain systems inherent trade safety throughput depending shard size system large number small shards delivers better performance provides resiliency bad actors vice versa order break trade way keeps safety increases throughput propose innovative proof believability pob consensus protocol ioschain pob guarantees nodes negligible probability misbehave significantly increasing transaction throughput size shard proof believability consensus protocol uses intra shard believable approach protocol divides validators groups believable league normal league believable validators process transactions quickly phase normal validators sample verify transactions second phase provide finality ensure verifiability chance node elected believable league determined believability score calculated multiple factors e g token balance contributions community reviews etc higher believability score likely elected believable league believable validators follow procedures decide set committed transactions order process order believable validators form smaller groups validator group transactions randomly distributed believable validators consequently produce smaller blocks extremely low latency introduce security problem node performing verification result corrupted transactions committed misbehaved validators order solve security problem specify sampling probability pthat normal validators sample transactions detect inconsistencies validator detected misbehaviour lose tokens reputation system defrauded users compensated loss believable approach makes processing transactions extremely fast single believable validator verification unlikely misbehave ios system sharding policy file specifies sizes believable normal league respectively sampling probability p inception x0cepoch validators assigned shards distributed randomness generation protocol states bootstrapped corresponding shard xe2 x80 x99s micro state blocks msb depending believability score validators assigned believable group small normal group large shard phase transactions processed believable league produce optimistically validated blocks blocks serve input sampling validation normal league runs concurrently normal league combines inputs multiple optimistic processing groups maximize throughput system transactions validated successfully included finalized block added shard xe2 x80 x99s blockchain finally included msb normal league detects inconsistency corresponding validated transaction excluded blockchain validator signed invalid block detected held accountable designed punishment scheme powerfully harsh validator incentive misbehave circumstances validator detected misbehaving validator lose tokens reputation system previously validated transactions checked given minimal incentive fault quantifiable confidence security validation clients achieve real time processing speed assurance normal league runs byzantine consensus scheme based byzcoin 7 scales efficiently thousands consensus group members byzcoin uses collective signature cosi 25 scalable cryptographic primitive uses multi signatures 20 traditional consensus algorithms pbft 4 scale byzcoin distributes blocks multicast trees performance falls star topology fault tolerance ensures honest members shard agree specific common sequence actions despite malicious nodes shard guaranteeing safety liveness ensure robustness use fall scheme believable protocol shard doesn xe2 x80 x99t believable validators form league temporary downtime bootstrapping phase ecosystem league committees fall league transactions directly processed normal league following pbft consensus protocol blockchain storage pruning x0canother issue current blockchains facing rapid expanding size blockchain storage 8 puts new validators heavy workload bootstrapping blockchains follow pattern store historical data beginning crucial concern high throughput blockchain systems storage explode minimize storage bootstrapping costs validators use blockchain storage pruning approach summarize state shard xe2 x80 x99s blockchain use micro state blocks msb based state block 8 present msb generation protocol algorithm msb generation protocol inputs xe2 x97 x8f xe2 x97 x8f current epoch current shard output micro state block 1 epoch ends shard leader stores transactions merkle tree 14 2 shard leader hashes merkle tree xe2 x80 x99s root denoted puts 3 validators run consensus blocks pending regular 4 correctness verified shard leader stores approved header shard xe2 x80 x99s blockchain 5 end epoch regular blocks nodes drop body analysis transactions checked references past blockchains shard ioschain stores past msb headers blockchain state distributed multiple shards client prove existence past transaction providing check block mitigate issue moving storage responsibility past x0cblockchains client latest epoch xe2 x80 x99s blocks retained clients ask validators shard create existence proof transactions validated epoch e epoch validators essentially creating higher level chain msbs provides skips epoch xe2 x80 x99s msb msb chain keeps latest msb body previous msb headers important clients want verify past transaction need reference point remark msbs contain multi hop backpointers headers regular blocks order reduce size proofs msb bootstrapping new validators syncing crashed validators date efficient validators start valid msb replay blockchain instead replaying history block time crashed bitcoin deployed ioschain currently bandwidth bootstrapping costs orders magnitude critical new shards come ioschain random shard assignment mechanism validators changes shards periodically need updated frequently benefits lot blockchain storage pruning technique references 1 iddo bentov ariel gabizon alex mizrahi 2016 cryptocurrencies proof work lecture notes computer science 142 xe2 x80 x93157 2 iddo bentov charles lee alex mizrahi meni rosenfeld 2014 proof activity acm sigmetrics performance evaluation review 42 3 2014 34 xe2 x80 x9337 3 vitalik buterin 2014 slasher punitive proof stake algorithm retrieved january 9 2018 xe2 x80 x8bhttps blog ethereum org 2014 01 15 slasher punitive proof ofstake algorithm 4 miguel oom temudo de castro 2000 practical byzantine fault tolerance 5 nxt community nxt whitepaper retrieved january 9 2018 https bravenewcoin com assets whitepapers nxtwhitepaper v122 rev4 pdf 6 george danezis sarah meiklejohn 2016 centrally banked cryptocurrencies proceedings 2016 network distributed system security symposium doi xe2 x80 x8bhttps doi org 10 14722 ndss 2016 23187 x0c 7 e kokoris kogias p jovanovic n gailly khoffi l gasser b ford 2016 enhancing bitcoin security performance strong consistency collective signing 25th usenix conference security symposium 8 eleftherios kokoris kogias philipp jovanovic linus gasser xe2 x80 xa0 nicolas gailly ewa syta bryan ford 2017 omniledger secure scale decentralized ledger sharding 9 yossi gilad rotem hemo silvio micali georgios vlachos nickolai zeldovich 2017 algorand scaling byzantine agreements cryptocurrencies proceedings 26th symposium operating systems principles sosp xe2 x80 x9917 doi xe2 x80 x8bhttps doi org 10 1145 3132747 3132757 10 g maxwell 2015 stake consensus retrieved january 9 2018 xe2 x80 x8bhttps download wpsoftware net bitcoin pos pdf 11 ian grigg eos introduction eos io retrieved https eos io documents eos introduction pdf 12 j kwon 2014 tendermint consensus mining retrieved january 9 2018 xe2 x80 x8bhttp tendermint com docs tendermint pdf 13 loi luu viswesh narayanan chaodong zheng kunal baweja seth gilbert prateek saxena 2016 secure sharding protocol open blockchains proceedings 2016 acm sigsac conference computer communications security ccs xe2 x80 x9916 doi xe2 x80 x8bhttps doi org 10 1145 2976749 2978389 14 ralph c merkle certified digital signature lecture notes computer science 218 xe2 x80 x93238 15 satoshi nakamoto bitcoin peer peer electronic cash system bitcoin org retrieved xe2 x80 x8bhttps bitcoin org bitcoin pdf 16 rafael pass lior seeman abhi shelat 2017 analysis blockchain protocol asynchronous networks lecture notes computer science 643 xe2 x80 x93673 17 rafael pass elaine shi 2017 sleepy model consensus lecture notes computer science 380 xe2 x80 x93409 18 phil daian rafael pass elaine shi 2016 snow white provably secure proofs stake 2016 x0c 19 phil daian rafael pass snow white robustly reconfigurable consensus applications provably secure proofs stake 20 c p schnorr 1991 efficient signature generation smart cards j cryptology 4 3 1991 doi xe2 x80 x8bhttps doi org 10 1007 bf00196725 21 jagdeep sidhu 2017 syscoin peer peer electronic cash system blockchain based services e business 2017 26th international conference computer communication networks icccn doi xe2 x80 x8bhttps doi org 10 1109 icccn 2017 8038518 22 sunny king ppcoin peer peer crypto currency proof stake retrieved 2012 xe2 x80 x8bhttps peercoin net assets paper peercoin paper pdf 23 scott nadal sunny king 2012 peercoin retrieved january 9 2018 https peercoin net assets paper peercoin paper pdf 24 ewa syta philipp jovanovic eleftherios kokoris kogias nicolas gailly linus gasser ismail khoffi michael j fischer bryan ford 2017 scalable bias resistant distributed randomness 2017 ieee symposium security privacy sp doi xe2 x80 x8bhttps doi org 10 1109 sp 2017 45 25 ewa syta iulia tamas dylan visher david isaac wolinsky philipp jovanovic linus gasser nicolas gailly ismail khoffi bryan ford 2016 keeping authorities xe2 x80 x9chonest bust xe2 x80 x9d decentralized witness cosigning 2016 ieee symposium security privacy sp doi xe2 x80 x8bhttps doi org 10 1109 sp 2016 38 26 v buterin 2015 casper retrieved january 9 2018 https blog ethereum org 2015 08 01 xe2 x80 x8b introducing casper friendly ghost 27 g wood 2014 ethereum secure decentralised generalised transaction ledger ethereum project yellow paper 2014 28 gavin wood 2018 ethereum secure decentralised generalised transaction ledger ethereum github io yellowpaper retrieved xe2 x80 x8bhttps ethereum github io yellowpaper paper pdf 29 2017 steem incentivized blockchain based public content platform steem io retrieved xe2 x80 x8bhttps steem io steemwhitepaper pdf x0c 30 whitepapers bitshares org retrieved http docs bitshares org bitshares papers 31 proof stake instead proof work retrieved january 9 2018 https bitcointalk org index php topic 27787 0 x0c