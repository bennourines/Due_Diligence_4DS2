b draft version 0 07 gems protocol decentralized mechanical turk powered ethereum gems protocol contracting workers perform micro tasks workers stake tokens order prove validity tasks earn reusable computed trust score enhancing cost efficiency network democratizing access scalable micro task workers rory o xe2 x80 x99reilly kieran o xe2 x80 x99reilly rory gems org kieran gems org november 7 2017 x0ccontents 1 introduction 4 1 1 background 4 1 2 overview 5 2 gems network overview 6 2 1 gems staking mechanism 6 2 2 gems trust score 6 2 3 gems platform modules 7 2 4 gems payment system 7 3 gems platform 7 3 1 existing market landscape 7 3 2 problem 1 fees 8 3 3 problem 2 participation 11 3 4 problem 3 payments 11 3 5 problem 4 usability 12 4 gems modules 4 1 13 module ai 5 gems staking mechanism 13 15 5 1 staking method miners 15 5 2 staking method verifiers 15 5 3 staking method requesters 18 6 gems trust score 6 1 18 trust mechanism 2 18 x0c7 gems payment system 19 8 conclusion summary 20 8 1 looking forward 3 20 x0c1 1 1 introduction background micro tasks small tasks require human judgment completed independently internet larger unified project micro tasks aid organizations need humans complete tasks computers micro tasks wide range large scale distributions machine learning researchers gather structured labeled data training purposes 1 large companies facebook google twitter ebay linkedin refine production ready solutions provide model training 2 billions micro tasks completed year chinese government uses 2 million micro task workers aid censoring internet 3 amazon 2005 created amazon mechanical turk mturk online marketplace requesters crowdsource data collection paying workers perform micro tasks online demand micro task workers increased world bank report 2015 industry experts concluded largest crowdsourcing platforms amazon mechanical turk crowdflower venture backed company publically raised $58 million 4 focused enriching data ai quadruple revenue 2013 2016 5 unfortunately current centralized marketplaces wrought problems amazon charges requesters minimum 20% fee paid workers additional 5% requesting workers good track record 6 furthermore tasks 10 assignments charged additional 20% fee totaling upwards 40% total fees 7 half mturkers reportedly earning $5 hour 8 mturk described sweatshop online crowdsourced labor 9 use crowdflower basic plan requesters pay $3000 usd onboarding fee $1500 month continuation fee annual contract 10 include payment workers paid separately furthermore additional 15% fee payments given workers additionally manually verifying accuracy results workers difficult ensure quality results requesters currently rely redundancy oftentimes having 5 15 workers perform task form consensus 11 undoubtedly wasteful requesters pay 5 15x project workers lose potential increase payment non managed platforms supply interfaces needed accomplish specific tasks currently requesters build tools 12 pay large fees startups looking tackle enterprise market 13 wasting millions dollars micro task workers issues system entirety labor pool access current micro task marketplaces staggering 38% 24 world xe2 x80 x99s population bank account hurting ability work contribute current 4 x0csystems furthermore bank accounts problems payments lost checks etc come play 14 include fees cut central institutions away marketplace lastly signup approval process workers nebulous privacy invasive leaving wondering able contribute marketplace unofficial subreddit workers mturk riddled users asking approved offering condolences saying months 1 2 overview solution gems paper introduce gems decentralized open sourced human task crowdsourcing protocol built ethereum blockchain gems protocol tap power scalable micro task workers needing worry task verification trust payments gems designed disincentivize malicious actors reward fair players gems protocol comprised staking mechanism ensure task completion trust mechanism track worker integrity payment system reduce transaction fees gem token multi utility token fuels gems protocol gems uses token mechanism enforce behavior participants instead regulated single operator introduce application gems protocol aptly named gems platform gems platform connects want work henceforth known xe2 x80 x9crequesters xe2 x80 x9d human workers henceforth known xe2 x80 x9cminers xe2 x80 x9d gems protocol gems platform removes socioeconomic barriers exist centralized alternatives e g large fees market inefficiencies need bank accountants etc build gems platform creating xe2 x80 x9cmodules xe2 x80 x9d interfaces particular human tasks module gems team build focuses labeling data ai paper describe gems protocol gem token mechanism current problem existing platforms gems platform reasons initially focus ai tasks gems protocol gems platforms modules built collectively known gems network summary gems network addresses following 1 2 3 4 5 removing middleman taking large fee verifying accuracy results crowdsourced tasks supplying building reusable interfaces removing need existing banking infrastructure properly incentivizing disincentivizing miners requesters 5 x0c2 gems network overview gems network facilitates extension efficient operation micro task community allowing organizations reliably deploy micro task miners gems protocol validating task completions gems staking mechanism enabling miners reusable trust mechanism gems trust score enforces compliance network participants gems protocol enables creation platforms built gems protocol platforms created intrinsic fee imposed gems protocol broaden scope labor supply eliminate inefficiencies market place gems allows application utilize efficient online scalable workforces 2 1 gems staking mechanism gems staking mechanism provides disincentive malicious actors enhancing efficiency gems network gems staking mechanism currently created ethereum based smart contracts miners requesters verifiers stake tokens validity work validity xe2 x80 x99 work providing palpable disincentive tasks incorrectly 2 2 gems trust score gems trust score indicator reliable individual network individual xe2 x80 x99s history completing tasks accurately efficiently consistently gems trust score formed linked network participant xe2 x80 x99s ethereum wallet address easy create new address trust scores easily bootstrapped miners need long proven track record obtain high score miners high scores eligible verify work members network allowing increase overall accuracy system earning extra money 6 x0chigher hourly rate unreliable miners removed network keeping quality work high 2 3 gems platform modules application protocol gems platform marketplace matching miners requesters gems platform charges central fee utilizing gem token gems protocol eliminates existing economic inefficiencies modules reusable interfaces completing specific tasks interfaces built gems platform 2 4 gems payment system transactions ethereum network free require gas allow micro payments staking gas gems protocol uses system payment channels payment channels allow secure chain payments gas grouping payments blockchain later date gems payment system requesters verifiers miners increase cost efficiency network 3 3 1 gems platform existing market landscape existing micro task marketplaces include mturk currently dominant marketplace crowdflower mturk crowdflower cater academics researchers 15 tasks created mturk range clicking link going webpage annotating image completing survey crowdflower focused enriching ai data current micro task platforms work similar way workers sign requesters submit work workers work workers paid requesters instances central organizations provide tangible benefit process excluding simply building initial infrastructure centralized organizations like crowdflower mturk act rent seeking middleman interested parties leads numerous inefficiencies market limitations current platforms outlined gems solution gems solution increases pay workers decreases cost requesters enables participation unbanked introduces quality management solution facilitating broadening network 7 x0c3 2 problem 1 fees crowdflower mturk charge requesters submit tasks performed adding downward pressure workers potentially paid analyze conceptualize effect network fee requesters miners analyze competitive labor market equilibrium network fee compare competitive labor market network fee competitive labor market workers prefer higher wages employers prefer lower wages labor market balances competitive desires reaches equilibrium point wage workers employed example use simplified model elasticity supply demand curves figure 1 represents labor market equilibrium network fee labor market equilibrium supply labor s demand labor d0 equal shown figure 1 equilibrium workers paid w0 e0 workers employed coral shaded region represents employer xe2 x80 x99s surplus turquoise shaded region represents worker xe2 x80 x99s surplus combined shaded regions produces total welfare actors market figure 1 8 x0cfigure 2 demonstrates effect $1 fee hour wage imposed employers figure 1 shown employers willing pay total w0 hire e0 workers intuitively new $1 fee hour wage employers willing pay total w0 xe2 x88 x92 1 hire e0 workers network fee introduced targets employers demand labor shifts d0 d1 shown figure 2 network fee imposed moves market new equilibrium point wage falls w1 employment falls e1 wage worker w1 total cost hiring worker w1 1 figure 2 9 x0cfigure 3 shows repercussions introduced fees yellow shaded region represents total fee collected product employment e1 fee wedge introduced 1 gray shaded region represents deadweight loss market deadweight loss introduced economic inefficiency total economic surplus xe2 x80 x9clost xe2 x80 x9d market shown figure 3 employers workers lose surplus figure 3 network fee imposed employers fee affects workers labor market shifts burden workers denoted wage falling w0 w1 shown network fees lower workers xe2 x80 x99 employers xe2 x80 x99 surplus takes surplus away market form fees introduces economic inefficiencies form deadweight loss gem solution fees gems charge centralized fee transactions platform cost 10 x0cthe gems platform gas ethereum network shown workers employers likely share benefit return fair equilibrium noted figure 1 end result having fees platform efficient marketplace miners requesters removal rent seeking middlemen 3 3 problem 2 participation workers micro task economy currently need approved start work example approval process mturk demands identification 16 introduces delays approving workers human technical errors identification crowdflower forces jump multiple portals eventually asks link facebook account shares public information crowdflower facebook want share information crowdflower viable solution world bank reported workers academics india indicate increase stringency identity requirements worker registration major constraint registration new workers micro task platforms 17 gem solution gems platform users need verify identity complete tasks reason verifying identity rooted preventing malicious actors abusing network gems protocol specifically staking token mechanism outlined makes gems platform susceptible attacks future gems platform branches areas information miners geographical demographical etc helpful requesters allow miners voluntarily verify order access specific tasks furthermore elect allow members voluntarily verify certain information utilize emerging decentralized protocols e g bloom promote accurate speedy network contributive approach verify identity elect mint gems new miners allow hook ethereum faucet cover transaction costs order facilitate broadening gems network early 3 4 problem 3 payments payment processes existing centralized platforms conducive unbanked receive payments mturk workers need bank account transfers willing wait checks deposit bank willing paid form gift card necessarily useful current situation furthermore processes bank account aren xe2 x80 x99t perfect 2017 wired article titled xe2 x80 x9camazon xe2 x80 x99s turker crowd xe2 x80 x9d detailed workers xe2 x80 x99 checks sizable period time 11 x0cwere delivered correctly 14 crowdflower makes payments paypal paypal slightly better option gift cards mailed checks problems paypal takes 2 9% fee 0 30 transaction crowdflower workers earning 0 03 task 0 30 2 9% results sizeable pay reduction able crowdflower elite avoid paypal fee similar inefficiencies shortcomings centralized organization example funds sent timely manner 18 inherently restrictions payments accessibility mainly needing firm banking infrastructure limit workers network believe labor access good internet good banking system able work labor market believe tapping labor pool enabling willing work consequential socioeconomic effects gems gem solution paid blockchain gems advent blockchain technology necessary institutions introduce inefficiences like banks credit cards verification methods aforementioned thing past miners rewarded successfully accomplishing task gems reward system gems platform storing gems like erc20 token involve detailed information bank allowing unbanked like participate easily blockchain payments gems payment channels reduce necessary transaction fees transactions platform incredibly cost efficient blockchain technology gets disseminated increasing pace paid blockchain increasingly attractive furthermore otc protocols 0x begin gain momentum barrier transfer gems tokens decreases dramatically 3 5 problem 4 usability designing crowdsourced micro tasks difficult maintaining interface doesn xe2 x80 x99t necessitate high computer literacy said interface certainly improved widely known mturk xe2 x80 x99s ui ux dated microsoft study determined interface severely undeserving user base time 19 furthermore requesters wanting use mturk tasks typically build tool website ask worker visit iframed mturk xe2 x80 x99s interface crowdflower xe2 x80 x99s crowdflower markup language cml little save requesters time setting simple tasks difficult tasks left requesters build 12 x0cpoor user interfaces uis user experiences uxs vastly increase time takes perform given task result workers performing fewer tasks hour requesters paying time isn xe2 x80 x99t constructively furthermore frustrating unintuitive ui ux leads tasks performed incorrectly lastly having requesters build ui ux waste time resources numerous browser extensions attempt fill holes amazon xe2 x80 x99s capabilities 20 example turkopticon 30 000 downloads main functionality ability workers rated task requester gem solution open sourced ui ux modules 4 gems modules gems modules interfaces built gems platform modules tools miners use perform tasks gems team work hands early requesters build reusable ui ux open source modules gems platform furthermore gems team build open source reusable components modules allow ease use build module centralized institutions oftentimes believe closed sourced software open sourcing bits pieces necessarily important primary business decentralized platform ongoing network cut believe believe having open sourced reusable components gems environment help promote better network effects gems platform allowing miners money hour requesters jobs completed faster wasted time eliminated fronts 4 1 module ai gems team build modules revolve ai tasks xe2 x80 x99re starting ai tasks believe large need labeled data growing industry ai world data currency future need data specifically scalable annotation services comes wide adoption use machine learning specifically deep learning subsets artificial intelligence 13 x0cwhy data needed machine learning learning phases broken main categories supervised learning unsupervised learning fundamental difference supervised learning unsupervised learning supervised learning known input variables x corresponding output variables y supervised learning process algorithm analyzes input variables corresponding output variables attempting infer mapping function new examples y f x supervised learning presently widespread unsupervised learning supervised learning currently far complex training phase neural network fed thousands labeled inputs idealistically learning classify labeled datasets paramount supervised training process neural network focus annotating ai tasks ai fastest growing industries 21 companies google facebook amazon guided allure artificial intelligence machine learning improve products generate revenue investing ai netflix estimates improving search results suggestions ai saves $1billion year 22 companies xe2 x80 x99 investments ai shown willingness spend large sums money acquire ai teams companies mckinsey estimates tech giants spent $20b 30b ai 2016 23 potential ai specifically deep learning immense xe2 x80 x99s autonomous vehicles 14 x0calgorithmic trading amazon product suggestions ai starting play large role everyday lives continue years come 5 gems staking mechanism miners accomplish micro tasks validity work verified distinctions causes errors malicious actors looking game network receiving reward micro tasks correctly simply misunderstand task 5 1 staking method miners requesters require miners stake token fraction thereof given task defined variable ms staking smart contract staking ms miner asserts work completed accurately best possible results order properly disincentivize malicious actors severely penalize miners improve propose miners stake relatively small portion token prevent malicious miners causing financial harm requesters ms large pay new verifiers gas network 5 2 staking method verifiers instead having abundance miners duplicate tasks propose method xe2 x80 x9cverifiers xe2 x80 x9d look tasks verify validity work requesters specify require verifiers verifications needed work considered accurate verifiers opposed miners stake smaller portion token denoted variable vs verifiers highly qualified decision making process likely malicious actors verifiers xe2 x80 x99 stake ensures verifiers palpable incentive correct assertions verifiers xe2 x80 x99 stake governed smart contract verifiers lose stake verifiers requester overturn work verifiers returned stake work overturned verifiers similar miners receive incentivization form tokens allocated requesters let reward paid miners denoted mr let reward paid verifiers denoted vr let z number 1 10 denotes simple measured time verifying task 1 longest 10 shortest x12 vr min mr max 15 x12 mr 0 2 z x13 x13 x0cthe reward paid verifiers reward paid miners intuitively time verifiers spend work xe2 x89 xa4 time miners spent vr xe2 x89 xa4 mr simple tasks example simple image annotation task expect 2 things 1 verifier work miner verifier redo simple task case image annotation label cat cat way look image decide cat 2 mr equivalent $0 20 equivalent gems simple tasks pay $0 20 simple nature number adjusted market rates knowing let xe2 x80 x99s image annotation task miner tim earns $0 10 equivalent gems requester determines fair z 10 verifier work verify image annotation tim working mr 0 2 example $0 10 following equation verifier earn min 0 10 max 0 10 10 min 0 10 0 20 equals $0 10 equivalent gems case verifier miner work received reward noteworthy z case matter mr low requesters able pay verifiers work hard constraint verifiers paid miners verification miner work time intensive task benefit saving overall money requesters diminishing total miners needed correctly label task allowing requesters allocate money task example task like image segmentation miner removed background image verifier look results know correct completing job let xe2 x80 x99s job earns tim $0 75 equivalent gems task completion requester determines fair z 5 following equation verifier earn min 0 75 max 0 75 0 2 min 0 75 0 20 5 equals $0 20 equivalent gems case verifier work received proportionate reward 16 x0cif verifiers correctly verify miner xe2 x80 x99s accuracy e g 2 verifiers reach consensus miner xe2 x80 x99s staked claim ms returned original miner miner rewarded mr verifiers reach consensus work inaccurate miner opportunity redo work given timeframe lose original stake miner successfully completes completes task second try miner penalized vr total reward mr xe2 x88 x92 vr verifiers reach consensus miner xe2 x80 x99s accuracy new set verifiers asked verify task new verifiers paid lost stake verifier wrong previous assessment 17 x0c5 3 staking method requesters prevent requesters malicious actors requesters stake gems incentivization pool task having requesters essentially reward escrow ensures requesters act bad faith reporting successfully completed tasks incorrect process having miners verifiers reduces cost requesters provide new avenues miners money miners high trust scores ability earn money verifying tasks staking mechanism miners disincentive perform task poorly assume requesters hire miners particular dataset lowering total output cost allowing label data financial constraints 6 6 1 gems trust score trust mechanism participant trust score linked ethereum address trust mechanism integral permitting miners earn privilege verifier trust mechanism protect miners verifiers poorly designed fraudulent requesters furthermore trust mechanism helps network discern malicious actors simple mistakes malicious actors detected trust mechanism banned platform calculating gems trust score miners use confidence interval account proportion successful task completions number tasks completed calculate gems trust score calculate lower bound binomial proportion confidence interval calculated wilson score interval lower bound c1 defined algorithm p xcc x82 fraction positive task completions n total number task completions z xce xb1 2 1 xe2 x88 x92 xce xb1 2 quantile standard normal distribution c1 p xcc x82 2 z xce xb1 2 2n z xce xb1 2 1 q p xcc x82 1 xe2 x88 x92p xcc x82 n 2 z xce xb1 2 4n2 2 z xce xb1 2 n proportion positive tasks p xcc x82 increases confidence level increases number tasks n increases maximum value c increases obtaining initial confidence score c1 calculate c2 represents confidence interval tasks completed successfully try algorithm c1 18 x0cc2 p xcc x82 2 z xce xb1 2 2n z xce xb1 2 1 q p xcc x82 1 xe2 x88 x92p xcc x82 n 2 z xce xb1 2 4n2 2 z xce xb1 2 n calculate c2 p xcc x82 equal fraction tasks completed successfully try average c1 c2 final confidence score calculate c2 possible miners harm network failing try succeeding second try possible don xe2 x80 x99t financial harm succeed second attempt calculating fraction correct attempt miners lose trust failing attempt information requesters history crucial ensure miners verifiers lose funds abuse propose holistic report requester available miners verifiers accept micro task helpful stats report include aggregate number tokens requesters paid network total number times requester accepted verifier xe2 x80 x99s work total number times requester reverted verifier xe2 x80 x99s work additionally gems platform measure requesters promptness releasing funds fairness based estimated pay hour miners verifiers overall communication based ratings community 7 gems payment system gems payment system groups payments transactions possible allow cost efficient staking micro payments work approved gems network earnings stakes released payment channel miners verifiers additionally starting task miners verifiers send stake payment channels time miner verifier receive balance owed payment channel likewise requesters receive balance stakes owed payment channel 19 x0c8 conclusion summary presented paper gems provides economic efficiency network participants properly incentivizes miners accomplish tasks disincentivizes malicious actors opens access unbanked opens access labor supply micro task workers intrinsic network fees figure 4 details direct differences gems existing solutions figure 4 8 1 looking forward gems staking mechanism gems trust score initial components open sourced gems protocol phase 1 gems protocol constraints new mechanisms developed gems team contributors verifiers multiple options verify work reward miners example group academic contributors create solution miners rewarded based trust scores contribute high confidence level work completed correctly verifiers able decide mechanism apt verification use case looking forward continuing conduct research grow create new approaches solving trust verification problems look forward working facilitate evolution gems protocol 20 x0cacknowledgements thanks helped review white paper austin baird luis iva xcc x81n cuende sol kim joey krug jesse leimgruber lamar letts kamal obbad joe urgo devon zuegel references 1 http www nytimes com 2007 03 25 business yourmoney 25stream html 2 https www crowdflower com success stories 3 http www cnn com 2013 10 07 world asia china internet monitors index html 4 https www crunchbase com organization crowdflower 5 http documents worldbank org curated en 138371468000900555 pdf acs14228esw white cover p149016 box391478b public world bank global oo study wbrpt finals pdf 6 https requester mturk com pricing 7 https docs google com presentation d 1y lvecsoefcfkxkkrdftw1ghnkozidkzkxqfvjalh4 edit slide id ga3bec7adb 0 199 8 http www pewinternet org 2016 07 11 research crowdsourcing age case study 9 http www utne com science technology amazon mechanical turk zm0z13jfzlin 10 https www crowdflower com pricing xe2 x80 x94 crowdflower obfuscated pricing asking inquirers contact directly 11 http neerajkumar org writings mturk 12 https requester mturk com help faq 13 https www crowdflower com use cases 14 https www wired com story amazons turker crowd 21 x0c 15 http www pewinternet org 2016 07 11 requesters mix academics andbusinesses 16 http www enemy lines com 2017 01 amazon mechanicalturk html 17 http documents worldbank org curated en 138371468000900555 pdf acs14228esw white cover p149016 box391478b public world bank global oo study wbrpt finals pdf 18 https www paypal community com t5 job board payment issue crowdflowerelite td p 1254696 19 https www microsoft com en research wp content uploads 2010 12 dev2010 turk final pdf 20 https www reddit com r hitsworthturkingfor comments sdyuo turking scripts addons 21 https www mckinsey com business functions mckinsey analytics insights artificial intelligence deliver real value companies 22 http www businessinsider com netflix recommendation engine worth 1 billion peryear 2016 6 23 https www forbes com sites louiscolumbus 2017 07 09 mckinseys state machine learning ai 2017 430a863175b6 24 http documents worldbank org curated en 187761468179367706 pdf wps7255 pdf 22 x0c