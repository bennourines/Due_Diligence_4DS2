lf - multi-chain parallel computing blockchain framework v 1.2 25th november , 2017 abstract blockchain community witnessed rapid development past years. firstly emerged secured decentralized p2p transfer mechanism, satoshi s bitcoin proved concept decentralized crypto-currency. ethereum contributed community successful implementation versatile smart contracts . unleashed great potential blockchain numerous applications industries. result, alternative crypto assets built blockchains. dawn blockchain, boundary blockchain community business world broken. turning point phase blockchain lead integration blockchain physical business world, inevitably bring solid digital assets. order enter new paradigm blockchain, needs versatile operating system designed meet commercial needs. chain address main challenges 1. current blockchains scalable, performance single node mining machine determines performance system. 2. current blockchains segregate resources different smart contracts, leading interference smart contract executions. 3. current blockchains pre-defined consensus protocol adopt updates new technology. white paper introduces highly efficient blockchain architecture incorporated state-of-art design principles technologies bring commercial standard. envision creates linux eco-system blockchain. focus defining providing basic, essential time-consuming components system making significant improvements based existing chains market. system allows developers customize meet needs, particularly commercial requirements industries. contain main features 1. introduces concept main chain multi-layer chains handle commercial scenarios. chain designed use case, distributing different tasks multiple chains improve processing efficiency 2. enables lf communicate external blockchain systems messaging, e.g. bitcoin, ethereum 3. permits parallel processing non-competing transactions cloud-based service 4. defines basic components minimum viable block genesis smart contract collection chain reduce data complexity achieve high customization 5. permits stakeholders approve amendments protocol, including redefining consensus protocol permits chains join exit main chain dynamically based consensus protocol, introducing competition incentive improve chain 3 contents 1. current blockchain systems ............................................................................... 5 1.1. general blockchain vs. complex business scenarios .............................. 5 1.2. performance limitation sequential processing ..................................... 5 1.3. data complexity redundancy ............................................................ 6 1.4. dilemma protocol update ...................................................................... 6 1.5. inflation block ........................................................................................ 6 1.6. inefficient point-to-point communication support ..................................... 6 1.7. pending breakthrough cross-chain communication ........................... 6 2. key objectives lf ........................................................................................... 8 2.1. highly customizable os commercial use ........................................ 8 2.2. cross-chain interaction ............................................................................. 8 2.3. performance improvement ........................................................................ 8 2.4. protocol update ......................................................................................... 8 2.5. private chain module ................................................................................ 9 3. core approaches realize lf system .......................................................... 10 3.1. performance enhancements ................................................................... 10 3.2. resource segregation ............................................................................. 10 3.3. structure governance ........................................................................... 11 3.3.1. resemblance representative democracy .......................... 11 3.3.2. exercise power delegates ........................................ 11 4. lf system ........................................................................................................ 12 4.1. lf architecture ....................................................................................... 12 4.1.1. chain contract ........................................................ 12 4.1.2. chain dynamic indexing ................................................. 13 4.1.3. tree branch chain extension ....................................... 13 4.2. lf main chain ........................................................................................ 13 4.2.1. chain index system ....................................................... 13 4.2.2. lf token system ................................................................... 16 4.2.3. consensus protocol ................................................................ 16 4.2.4. dpos ...................................................................................... 16 4.2.5. confirmation transactions .................................................. 19 4.3. lf chain ......................................................................................... 19 4.4. economics lf .............................................................................. 20 4.5. system built-in lf chains .............................................................. 21 4 4.5.1. information registration authentication chain ........ 21 4.5.2. digital asset ownership chain ....................................... 22 4.5.3. asset initial distribution chain ........................................ 22 4.5.4. decentralized exchange chain ...................................... 22 4.6. lf cross-chain optimization ................................................................. 22 5. lf operating system ....................................................................................... 23 5.1. definition minimum viable blockchain system .................................... 23 5.2. lf kernel ................................................................................................ 23 5.2.1. built-in minimum viable blockchain system ........................... 23 5.2.2. unified account system .......................................................... 23 5.2.3. parallel transactions processing block .................... 23 5.2.4. transactions marked blocks .............................................. 25 5.2.5. smart contract collection ....................................................... 26 5.2.6. smart contract update ........................................................... 26 5.2.7. customizable consensus protocol ......................................... 26 5.2.8. customizable block header ................................................... 26 5.3. lf operating system customer interface .............................................. 27 5.3.1. smart contract execution ....................................................... 27 5.3.2. micro-service .......................................................................... 27 5.3.3. cloud base ............................................................................. 27 5.3.4. light node .............................................................................. 28 5.3.5. optional modules .................................................................... 28 5.3.5.1. data cleansing mechanism ................................................ 28 5.3.5.2. data tunnel ........................................................................ 28 5.3.5.3. rapid confirmation model .................................................. 29 5.3.5.4. token module ..................................................................... 29 5.3.5.5. customization ..................................................................... 29 6. lf eco-system development ........................................................................... 30 6.1. technology ............................................................................................... 30 6.2. business applications .............................................................................. 30 6.3. capital ...................................................................................................... 32 5 1. current blockchain systems present, blockchain technology application developing exponentially. industries experimenting migrate traditional network architecture blockchain-based network architecture. however, current blockchain systems capable efficient functioning versatile operating system supporting applications it. bitcoin pioneering blockchain design similar application. ethereum demonstrated characteristics operating system developers program applications smart contracts ethereum, chain provides programming language adaptor form solidity, etc. however, perspective modern operating system, ethereum drawbacks, lack decoupling system components, lack customization modules insufficient system interfaces, etc. approach lacks holistic design system commercially viable cross-industry application scenarios. greatly limits commercial application blockchain technology. 1.1. general blockchain vs. complex business scenarios current challenge impeding large scale commercial adoption blockchain technology inability meet requirements complex business scenarios. scenarios different characteristics terms process execution logic, requiring distinctive solutions. fits blockchain faces tough dilemma balance needs different business scenarios. example, ticket issuance high frequency high tps system desirable digital legal contract hand emphasizes high security reliability. general solutions meet requirements i. use blockchain solely database deal business logic. approach aims handle business scenario maintain compatibility. chains similar bitcoin use approach. record business-related data hash, transaction output op return , stored blockchain. ii. record complex smart contracts single blockchain. smart contracts serve pre-defined business models scenarios. ethereum represents type chains. fact smart contracts written single chain, blockchain complex, requires high maintenance cost lacks effective structure execute smart contracts. 1.2. performance limitation sequential processing blockchain widely used, especially handling large scale transactions, transaction processing capacity tremendous pressure sequential processing, resulting bottleneck network performance. current blockchain systems face multiple challenges improve capacity, expense transaction efficiency. example, bitcoin transaction fee getting expensive transaction volume increases large backlog waits confirmation 6 long time. ethereum faces increasing number congestions token sales. however, traditional architecture, modern techniques partitioning, sharding decentralized architecture, proven highly effective improve system performance. hand, concept parallel task processing adopted increase efficiency. block contains large transaction data complex smart contracts, sequential transaction hit efficiency limitation block formation verification. 1.3. data complexity redundancy described section 1.1, universal blockchain meet needs different business scenarios. drawback universal blockchain system over- complex smart contracts consensus protocol, lack tailored solution specific business scenarios redundant data. 1.4. dilemma protocol update despite increasing adoption blockchains, nascent stage. significant improvement innovation come future. updates essential evolve blockchains ever-changing environment stakeholder s interest. large variety stakeholders eco-system usually hard reach consensus effective governance mechanism, leading current protocol updates impasse disputes. vivid example bitcoin community found difficult reach agreement introduction new features recent years. 1.5. inflation block successful blockchain system is, higher maintenance cost. running current bitcoin node requires 130g space, 180g ethereum. situation improved future. users adopt blockchain conduct transaction activities, inflation block accelerate maintenance cost grow higher. actions taken alleviate vicious cycle. 1.6. inefficient point-to-point communication support existing blockchains mainly communicated based broadcast network. support p2p communication inefficient insecure. example certain data concerned group users, data communicated finite nodes, instead broadcasted nodes. 1.7. pending breakthrough cross-chain communication existing blockchain systems experimented cross-chain communication process related business logics. outcomes unsatisfactory. current cross-chain communication includes centralized mechanism htlc mechanism. centralized mechanism deviates idea blockchain, leading lack trust, single node failure, single node bottleneck applicable certain scenarios. htlc mechanism deal specific scenarios asset 7 exchange, impose strict requirements protocols consensus protocols communicating chains. implementation mechanism usually complex. result, imperative address critical issues, i.e. protocol compatibility data exchanging format compatibility. 8 2. key objectives lf 2.1. highly customizable os commercial use envision lf highly efficient customizable os linux system blockchain community. linux example, linux kernel linux versions constitute large successful linux family. linux kernel resolves fundamental, critical time-consuming parts, allowing developers customized systems based application scenario customer needs. makes linux popular server os, supporting kinds industries. idea incorporated lf design. firstly, define implement lf kernel includes fundamental functions blockchain system, minimum viable blockchain system. secondly, develop shell basic interactive interface core. users use complete blockchain os, rapidly develop customized os based core redefining core interfaces. 2.2. cross-chain interaction lf interact bitcoin, ethereum, blockchain systems. cross-chain interaction mainstream chains realized messaging. form endogenous multi-level cross-chain structure based cross-chain interaction, order share digital assets, users information. 2.3. performance improvement traditional architecture, distributed structure popular solution debottleneck capability limitation. blockchain system support distributed parallel processing, e.g. parallel processing multiple transactions non-competing data improve transaction efficiency. addition, chain complex effectively processed, split parallel chains offload traffic. initial design effective blockchain focus solving specific business scenarios, combining smart contracts single chain. order deliver optimal performance based business requirement, chain provide effective customized data structure, smart contract logic, consensus protocol specifically targeted objective. so, components data chain simpler easy manage. addition, lf define mechanism trigger snapshot system. defined cycle, takes snapshot current data trims detailed transaction data. new genesis block include subsequent transactions. idea adopted traditional database architecture alleviate system inflation. 2.4. protocol update genesis blockchain, voting update mechanism clearly defined. introduction consensus protocol include new features future, avoids impasse dispute protocol update. 9 2.5. private chain module considerable number businesses interested private chain leverage advantage blockchain technology. private chains usually exist isolation connection external eco-system businesses. provide model similar amazon cloud service ami , users rapidly create independent chain private chain module obtain ownership it. 10 3. core approaches realize lf system 3.1. performance enhancements core principle lf resolve practical technical problems solutions tested. instead optimizing concepts blockchain, attention paid provide mature configuration stable execution business applications. performance enhancement ideas explored nowdays blockchain sharding solutions implemented dividing single consensus numerous sub-consensus. basically, consensus split, leaving sub-consensus group easier attacked single one. people increase randomness complicate routing path, impairs specialization mining node. pow mining node decreased substantially mining pools replaced specialized ledger system. pools able ensure mining efficiency timely broadcasting, slowing speed block formation steady. leveraging experiences industry, mining pools abandoned strandard official node software aggregating computing power load balancing run smart contracts asynchronous parallel manner, nodes globally improve broadcasting efficiency. however, performance mining pools limited technical differences pool, fact nodes designed equally, limited procotol itself. upgrading single node lead improvement network. lf s logic nodes lf categorized according roles provide standard services clusters open-sourced work dpos reach consensus main chain. delegated mining nodes able protect chains largest extent share strong consensus main chain. method increases pressure delegates, however, improve efficiency chains added, delegated mining nodes capable running clusters. chains independent other, additional chain increase efficiency system. moreover, efficiency chain benefit parallel processing. 3.2. resource segregation protect smart contracts unnecessary mutual interference maintain stable running blockchain, lf abandons one-chain-fits-all solution design public blockchain able ensure proper running contract. lf envisions cloud-computing platform similar aws. business like disturbed businesses. example, trades future market interfered traffic generated black friday. however, seemingly impossible interference commonly seen domain blockchain. key obstacle preventing blockchain technology applied real cases lies initial design. 11 3.3. structure governance historical limitations, current blockchain governance structure defined created. problem prominent s major functional upgrading stagnation caused bugs. example, bitcoin, stuck scaling problems years finally forked differences dao incidence etheruem community foundation led birth etc. result, clarify method lf direction-setting users entering world lf acknowledge fact lf token holders greatest right future lf, token holders interests linked destiny lf, particular long-term locked-in tokens particular. 3.3.1. resemblance representative democracy key principles lf designating specialized nodes perform specialized tasks. lf, vital decisions carried mechanism resembles representative democracy. delegated nodes votes stakeholders participate lf governance. mining nodes extent constitute health lf system, nodes responsible ledger, hand bonus feedback values stakeholders entrusted smart contracts. 3.3.2. exercise power delegates foundation realize governance submitting source code delegating mining node s review vote. process goes follows foundation members provide open-source code submit new features. delegates choose specific features incorporate based needs. feature adopted delegates, gains approval system. 12 4. lf system 4.1. lf architecture introduce lf consisting main chain multiple chains attached main chain figure 4.1 . difference traditional single chain system lf branched eco-system main chain works backbone system connects multiple chains multiple layers . figure 4.1 overview lf structure lf connects bitcoin, ethereum, blockchain systems adaptor, order compatible existing popular eco-systems. lf chains include system built-in lf chains chains generated based lf operating system lf kernel. main chain interacts chains chain dynamic indexing. 4.1.1. chain contract compared traditional structure chain types contracts , lf imposes chain type contract . illustrated figure 4.2 b , chain dedicates type transaction resolves type business problems. makes structure data simpler tailored commercial requirements. adding new chains lf, lf empowered new functions, maintaining easy manage structure. chain types contracts b lf, chain type contract figure 4.2 blockchain complex data structure 13 4.1.2. chain dynamic indexing lf dynamic system, chains attached main chain. main chain contains index system boundaries recording chains attached . interact main chain form merkle tree verification external information input. such, chains interact directly, allowing chains added excluded lf system. 4.1.3. tree branch chain extension illustrated figure 4.3, lf defines main chain chain structure . theoretically speaking, chain connected sub chains underneath, acting main chain system. creates branches structure system allows lf extend horizontally vertically. idea similar partitioning sharding database architecture. allows shard perform specific functions shard large manage, broken multiple shards. lf, corresponds chains. figure 4.3 multi-layer chain structure 4.2. lf main chain lf main chain blockchain run lf os, acting backbone system. main chain consists chain index system, token system, dpos consensus protocol. 4.2.1. chain index system chain index system connects chains lf eco-system. lf indexes types chains external chains high importance, expand boundary lf, e.g. bitcoin, ethereum internal chains operating lf os, contributes economics lf system lf token chain indexing works following steps 14 nodes main chain read information chains form merkle tree header new block records merkle tree root. illustrated figure 4.4, want confirm transaction tx1 1000th block btc, need prove existence merkle tree 1000th block btc stored merkle tree root main chain, merkle proof tx1 1000th block btc messaging. approach works chains ethereum long merkle tree root formed. figure 4.4 chain indexing order improve verification efficiency, suggest expanding structure merkle tree, including block hashes merkle tree root transactions figure 4.5 states figure 4.6. figure 4.5 transaction indexing 15 figure 4.6 state indexing key issue discussed timing chain indexing main chain. main chain frequently indexes chain high probability fork, wastes efforts index orphaned blocks. suggest different indexing strategy chain based characteristics defined system. indexing strategy blockchain similar bitcoin minute block formed. proven statistically block confirmed orphan minute formation. lf, chain main chain adopt merge mining, real-time indexing conducted miners. figure 4.7 timing indexing 16 4.2.2. lf token system lf token incentivizes honest behavior system. lf chains accept lf token storage value means value transfer. transferred chains accepts lf token. chain applies indexed main chain, receives locked- tokens main chain. chain receives transaction fees, shares partially miners main chain. main chain finds indexing chain economically unfavorable benefit, main chain right terminate indexing, permitting competition chains providing services. 4.2.3. consensus protocol stable efficient block formation mechanism foundation lf system. operation maintenance lf complicated bitcoin ethereum. fact lf block formation requires main chain record information chains, lf designed provide cloud-based enterprise services complex structure. addition, miners need update information multiple chains parallel. main chain adopt dpos ensure high frequency predictability block formation, order improve user experience. 4.2.4. dpos lf delegates 2n 1 mining nodes. n starts 8, increase 1 year. nodes lf system enforce consensus rules lf. purpose delegated mining nodes enable transaction relay, transaction confirmation, packaging blocks data transfer. lf adopts multi-side chain architecture, mining nodes work miner chains. 2n 2 nodes randomized order calculation week. randomization process illustrated follows lf running timeline processing units round horizontal arrow fig. 4.8 fig. 4.9 . round, mining node produce block time, node extra transaction end round vertical arrow fig 4.9 . mining node main properties specific round 1 private key, ,which value inputed mining node kept privately mining node round . published public block generations round completed 2 public key, , hash value . node lf network look value time 3 signature, , value generated mining node round. round, calculated previous round completed. signature mining node round opened public times like . fig 2.1 details. 17 main processes dpos 1 pre-verification 2 order calculation round. pre-verification fig 4.8 node starts block generation round , verified status round . round , published public, queried time. verify status round , nodes check . figure 4.8 pre-verification. order calculation fig 4.9 fig 4.9, 4 mining nodes example explain order calculation strategy. round mining nodes block generation. round round 1 fig 4.9 , ordering block generations signature node totally arbitrary. second round round 2 fig 4.9 , block generations arbitrarily ordered. however, second round, signature calculated here, means node processing transaction round . round 3, ordering round generated ordering node signature previous round. round , traverse signature nodes round order. ordering node calculated cases conflict, i.e. results pointed places empty, point node available place. node conflict place, start find available place place. 18 node process extra transaction calculated signature node place previous round. figure 4.9 order calculation details rounds decided 1 signatures previous round 1 value round 3 node generate extra block. calculated previous round completed. moreover, needs signatures previous round value inputed node independently, way control ordering. extra block generation increase randomness. general, create random system rely extra inputs outside. base assumption node know nodes inputs specific round, node control ordering. node generate block round , input round. case, previous used. mining nodes voted reliable node, situation happen much. situation happened, mentioned strategy sufficient deal fair way. node certain t second process transactions. present network condition, t 4 reasonable consideration, meaning node 4 seconds process transactions submit result network. delegate fails submit 4 seconds considered abandoning block. delegate failed times consecutively, window period calculated w hours w 2n, n stands number failure node. systematic design, lf defines node generates blocks certain period. unlikely fork happen environment mining nodes working good connectivity. multiple orphan node groups occur network problems, system adopt longest chain fact 19 likely comes orphan node group largest number mining nodes. vicious node mines forked blockchain simultaneously attack network, node voted entire network. dpos mining nodes elected way resembles representative democracy. elected nodes decide hand bonus mining nodes stakeholders. mechanism discussed later chapter. 4.2.5. confirmation transactions compared present blockchain system, lf faster predictable confirmation. different pow, dpos package hashes repeatedly. time mining node package block stable controlled t 4 seconds . lf recommends fast confirmation accepted 5 blocks general transactions accepted 15 blocks substantial transactions. thus, general transaction confirmed 20 seconds, substantial one, 60 seconds. note, conservative recommendation. bitcoin recommends confirmation 6 blocks, users use blocks confirm. advanced users allowed observe collect data blockchain tailor confirmation time according average processing time mining nodes, network 4.3. lf chain chains indexed lf main chain considered chains. mentioned before, recommended chain designed handle specific type transaction figure 4.8 . new chain created lf os, recommended merge mining main chain establish consensus protocols. contribute lf eco-system, chains reserve certain lf token share partial transaction fees main chain. chain needs verify information chain, include block header information lf main chain. chains interact directly other. verification merkle tree root provided main chain. figure 4.8 messaging interaction chains 20 highly complicated obtain state information utxo systems bitcoin, example available balance address. across-chain communication addressed blockchain adaptor, creates compatible block header including merkle tree bitcoin. lf adopts adaptor intends establish fully compatible bitcoin chain lf os cooperate widely bitcoin interact assets. 4.4. economics lf virtuous economy lays foundation sustainable lf eco-system. pos dpos, stakeholder sell tokens exit eco- system short timeframe pos certain lock-up period . challenge pos dpos facing fact exchanges hold large tokens system, earning interest zero cost. pow, miners face complex consideration exiting. exit constrained external factors electricity cost, mining machine depreciation, land lease, human resources. lf use dpos main chain incentivize large stakeholders maintain stable system deploy pow chain mining creates lf token. lf system, consensus protocol chain customized achieve specific objectives. figure 4.9 fee mechanism indexing lf chains chain included lf eco-system, pay certain transaction fee main chain indexing. lf adopts dynamic transaction fee strategy reflect different contribution level chain lf eco-system. instance, lf charge transaction fee chain high contribution e.g. fee charged indexing bitcoin wide adoption associated assets. hand, chain little value eco-system consuming resources chains charge high transaction fee . 21 figure 4.10. sub-chain indexing eco-system chain votes determine indexing strategy sub- chains independent main chain. strategy includes limited business scope e.g. insurance chain include sub-chains insurance business fee scheme sub-chains. chain decide include sub-chain actively invite chain sub-chain, means enrich eco-system. lf eco-system, chain apply sub-chain chain multiple chains. 4.5. system built-in lf chains lf node topology consists interlinking p2p network nodes main chain, light nodes nodes chains. non-mining nodes usually light nodes. similarly, ledger nodes nodes. nodes chains distributed lf node topology based indexing relationship main chain. chains developed guidance foundation. believe necessary build system like this. lf aim build chain itself, provide developing template infrastructure chain, facilitate communications chains. example, s content-based network, users able buy contents token network. decentralized twitter join lf, lf help users share contents network, distribute network resources, swap twitter token tokens content-distribution network decentralized exchange. figure 4.11 illustration lf node topology 4.5.1. information registration authentication chain information registration authentication chain creates great value industries online offline. currently widely adopted o2o 22 businesses, e-commerce, car hailing delivery. huge opportunities unleashed businesses supply chain finance, logistics, credit scoring etc, large information assets migrated chain future. 4.5.2. digital asset ownership chain main function chain store digital assets wallet ownership information. 4.5.3. asset initial distribution chain main function chain facilitate asset initiation coin sales . distribution completed, assets moved digital asset ownership chain. advantage normal transactions interrupted large scale coin sales. 4.5.4. decentralized exchange chain decentralized transaction chain functions exchange. enables kyc, asset transfer, order placement withdrawal execution. 4.6. lf cross-chain optimization cross-chain transactions need optimized match block formation speed different chains. design mechanisms solve problem. first, hierarchical chain mechanism. categorize chains different levels accordance block formation speed chain, provide dedicated adapting chain adapter module carry level cross-chain transactions level chain. second, cross-level guarantee mechanism. cross-chain transactions different levels, main chain provides guarantee slower chain. optional mechanism required. mechanisms effective solution enhance lf cross-chain transaction speed. figure 4.12 illustration lf node topology 23 5. lf operating system 5.1. definition minimum viable blockchain system lf system creates highly specialized efficient chain structure handle kinds business scenarios. enables chain split address capacity issue demand increases. enhance commercial potential, essential lay fundamental block infrastructure system developers community. following chapters discuss minimum viable blockchain system lf operating system foundation achieve high customization efficiency. block block record state system. transition block current block defined transactions included current block. transaction transaction logic defined smart contract. smart contract essentially protocol. gives output input. account account distinguish boundaries data storage. consists public key private key systems. p2p network communication data transmission nodes underlying p2p network. consensus protocol consensus protocol defines rules authority update state blockchain. 5.2. lf kernel 5.2.1. built-in minimum viable blockchain system foundational components blockchain system operating lf kernel. linked relevant interfaces define customizable parts smart contract, consensus protocol, customizable area blockchain header. 5.2.2. unified account system bitcoin system introduces public private keys concept account. pay script hash gives transaction authority smart contract. ethereum defines externally owned account contract account. lf kernel defines types accounts smart contracts. 5.2.3. parallel transactions processing block lf analyzes static state transactions assesses impacted data range transaction. illustrated figure 5.1 multiple transactions read write conflicts processed parallel, affecting output transaction. process block formation, nodes assign transactions different groups based mutex transactions. transactions group processed sequence, groups processed simultaneously. 24 figure 5.1 parallel transactions processing block special transactions processed parallel fact impacted data range changes transactions processed. circumstance, nodes prioritize transactions processed parallel. sufficient transaction fee, special transactions non-parallel group processed sequence. nodes reject process transactions. noted that, evil node accepts transaction processed parallel time-consuming, probability nodes reject block increase. amdahl s law empirical rule computer architecture.it named computer scientist gene amdahl. gives theoretical speedup efficiency parallel processing. think program runs single processor. terms execution time, f proportion execution time benefiting improved resources originally occupied, 1-f proportion execution time fixed sequential processing. m numbers processors run parallel, theoretical speedup program calculated follows 1 1 major conclusions conducted 1 speedup hardly improves f minimum. 2 m rises maximum, speedup limited 1 1-f . amdahl s law fixed-size mode, means solve problems fixed size fixed proportion execution parallel. blockchain transactions correlated. perspective amdahl s law, data execution greatly speedup. however, present blockchain system execute sequence, nodes carry set computing. wastes resources hinders transaction speed. evm, instance, process transactions sequentially, requirement gas fees, resulting extreme low performance efficiency. 25 figure 5.2 solve blockchain problems, low-speed transaction option. lf aims build blockchain system high on-chain tps parallel processing. key solution separate transaction data computational dependency solve data hazard. refer architecture intel micro-processor, reservation station separates electrocircuit dependency technics register renaming deal large data hazard frequently occurring raw, waw, war execute alus parallel. lf parallel execution scheduler gpes adopts similar approach. regular internal test, lf separates computational dependency, data dependency blockchain memory pool. gpes set pretreatment, i.e, prediction computing time span, pre-indexing code segment able processed parallel, initiating pipeline, execute parallel processing multi dimensions. set indexing language solve complicated parallel logic problems. lf s pipeline important method increase speed. widely adopted, cpu, meta function map, aggregate first, contains processing. set turning incomplete language perfect processing data streams simple transaction streams . parallel processing functions context free immutable computing use cores nodes general, parallel processing comprehensive strategy. 5.2.4. transactions marked blocks valid transaction period broadcasting confirmation considered pending state. usually, transactions quickly packaged confirmed. however, cases transactions left unconfirmed relatively long period, instance, time bitcoin s network congestion majority miners unsatisfied gas fees. transaction confirmed able withdrawn relatively long period, considered state chaos . lf requires broadcast transaction labelled mark , hash header lastest block transaction happens. mining node process hash header recent 64 blocks. transaction confirmed 64 blocks generated, transactions deemed expired. word, transaction confirmed 5 minutes, token holders rebuild transaction. function marking transactions obsolete blockchain forking effectively. node successfully marks transaction hashes transaction 26 included latest 64 blocks. node receive large invalid marking hashes highest chain, able package transactions, likely working forked chain. nodes receive large transactions invalid marking, s high possibility blockchain forked. moment, nodes suspend trading avoid risks. 5.2.5. smart contract collection lf chain contract collection smart contracts defined genesis. collection genesis smart contract collection, honor satoshi. essence smart contract collection class defines main functions, consensus protocol chain update mechanism collection. 5.2.6. smart contract update functions lf defined smart contract collection. updating collection impact functions chain. update mechanism collection defined previous collection. example, define 80% votes new smart contract collection recent 100th block, confirmed consequent 2000 blocks, new collection replace original one. nodes update collection terminated work. 5.2.7. customizable consensus protocol specific business scenario, consensus protocol major impact participants decision. private chain high trust level, pbft popular consensus protocol. creates high performance small number pre-assigned miners. environment low trust, stability blockchain maintained consensus protocols pow, pos dpos. lf defines consensus protocols smart contract collection implement type consensus protocol based business scenario. use bitcoin peercoin example illustrate considerations choosing consensus protocol. pow bitcoin authenticates blockchain solely based information block header forms input. hand, pos peercoin requires data stake transaction block, authentication transaction block header. recommend future users pursue consensus protocol requires block header information, order achieve timely authentication. addition, specific scenarios, customized consensus protocol shall implemented. 5.2.8. customizable block header facilitate recommendation consensus protocol use block header information, introduce customizable block header. block header peercoin contain information verifies legitimacy block, stake block verify block legitimacy itself. lf kernel allows customizing block header structure creation chain. self-proof based block header verifying unspent transaction merkle tree hash txid n value , calculate stored root, obtain txid, n value merkle tree verification. 27 5.3. lf operating system customer interface figure 5.3 lf operating system interface 5.3.1. smart contract execution lf operating system defines smart contracts protocols. executed forms service realization. lf operating system prefers docker supports native programming languages java, c , go, javascript, lua. docker, lf provides internal rpc services grant access read variables user accounts smart contract realization. native programming language, lf provides respective sdks execution functions. 5.3.2. micro-service smart contracts defined micro-service lf. makes smart contracts independent specific programming language. consensus protocol essentially service defined smart contract. 5.3.3. cloud base micro-service approach, lf kernel extends parallel processing cloud, enables cloud-based contract execution. 28 lf kernel defined data structure standards, hot data stored ram. utilizing mature decentralized database service, effectively improve io performance system. 5.3.4. light node figure 5.4 illustration light node data structure customization internal merkle tree verification mechanism, node lf handles relevant information system. enables nodes lighter significantly increase compatibility light desktop mobile terminals. 5.3.5. optional modules 5.3.5.1. data cleansing mechanism figure 5.5 illustration data cleansing mechanism lf system adopts snapshot mechanism resets block formation, addition original data new genesis block. lf system rely historical data focus new data process. human history lost details, affect decision people present situation. similarly, data bulky record, lf system needs ability abandon historical data. 5.3.5.2. data tunnel data tunnel mechanism execute p2p transfer. data recorded block. data tunneling applicable encrypted p2p data transfer. example, purchases data b, b transfers data transfers asset b, data tunnel. design aims enable data transfer nodes directly. present blockchain system, strategy broadcast transactions nodes need process transaction. waste resources, limit volume processed transactions well. data tunnel realized plug-in protocol. require approval nodes. isn t case, things intractable. e.g, developers trouble ie support features chrome protocol, lf support applications, instance, data purchase contract farther . 29 5.3.5.3. rapid confirmation model lf permits rapid transaction confirmation recipient authorized sender. authorization valid certain type transaction certain period assigned addresses. example, wants initiate rapid confirmation model b asset transfer. needs initiate transaction certain asset reserved transaction, specify b counterparty. actual transaction process, send signed transaction b data tunnel. b instantly confirms transaction receives transaction. affected assets transferred b b signs transaction address. receive remaining assets. data tunnel terminated transaction. 5.3.5.4. token module token module defines logics algorithms value carrier token . specifically serves scenarios payment resource allocation, reward maintaining stability lf. public chains, token mechanism indispensable. incentivize healthy development network, settle contribution different roles. lf designs token module, chain recognized lf operation system allowed accept lf token. 5.3.5.5. customization lf enables developers rapidly customize system redefining parameters module, implement chains lf operation system lf follows principle chain serves specific business scenario , establishes highly abstract modular architecture. enterprise users entrepreneurs, accelerated process implement business ideas. sophisticated users, permits high customization chains, unleashes operation blockchain. 30 6. lf eco-system development new technology succeed commercial adoption sustainable eco-system. lf proposed technical blueprint commercial application instilled design. crucial establish lf eco-system, including internal external resources. pursue goal concurrently striving dimensions technology, business, capital 6.1. technology chapters laid key technical features lf. lf team years blockchain development experience, particularly involved commercial-focused enterprise projects. proposed lf technical solution intends resolve pressing obstacles commercial adoption blockchain, scalability, security, customization, interoperability. provides highly efficient infrastructure adopt new protocols support kinds commercial scenarios future. 6.2. business applications lf intended ultimately new internet infrastructure support generation digital businesses . team advisors advising numerous blockchain projects past industries early adaptors blockchain stars lf figure 6.1 illustration lf business applications 1 financial services blockchain drawn lot attention financial services industry significantly reduces intermediaries ensures secure transactions. highly likely multiple chains lf developed specifically financial services, cross-border payment, trade finance, supply chain financing, etc. parallel processing feature capable handling business transactions international scale inter-chain communication feature allows smooth coordination asset registration, account management, real- time transaction. 2 insurance 31 insurance highly attractive field disrupted blockchain. dedicated lf chain insurance integrate dapps insurance, transforming industry value chain, starting user identity, insurance contract execution, claim handling. 3 digital identity ips lf s multi-chain structure built-in chain digital identity. ensures performance chain chain busy, e.g. new token issued chain. lf, digital identity chains messaging . adaptor, lf capable retrieving information data established chains, bitcoin ethereum. 4 smart city governments interested lf allows securely conveniently run certain administrative tasks lf. government organization customize consensus protocol meet national security requirement. activities, utility recording, citizen identities, government agency information disclosure polling realized lf great transparency efficiency. countries experimenting field, including estonia, singapore, china, etc. 5 internet things lf supports light node cloud service, reduces computational requirement devices connected it, maintaining high performance. critical order manage billions devices enables micro-payment link internet things. lf laid strong foundation industries strive it, actively identify new business opportunities dapps lf eco- system. 1 interoperate existing dapps existing chains proven daaps existing chains, bitcoin ethereum. lf leverage interoperability feature connect dapps order allow asset exchange capture transaction data coming dapps 2 nurture new start-ups ideas development team advisors deeply involved new idea formation commercialization global blockchain community. new start-up ideas approached technical commercial advice. leverage strong connection nurture new start-up ideas include lf eco-system. vcs, confident identify bring promising projects launched lf. 3 transform established companies blockchain savvy established companies pose opportunity lf eco-system. possess large customer base proven value current business. lf transform powerful models strong incentives rewards customers, resolving certain pain points 32 industry described above. lf team discussion internet companies traditional corporates disruptive business model lf. foresee exciting announcements near future. addition, team intends collaborate global strategy consulting firms push boundary generation business models lf eco-system. 6.3. capital building eco-system requires undoubtedly large capital. leveraging fund raised token sale, team advisors established strong alliance leading crypto funds globally. team advisors advising numerous token sale projects internationally successfully raise fund develop solutions. international capital network reputation ensures strong financing capability support future pipeline long-term view. 33 references 1. satoshi nakamoto. bitcoin peer-to-peer electronic cash system. 2008. 2. vitalik buterin. ethereum white paper generation smart contract decentralized application platform. 2013. 3. melanie swan. blockchain blueprint new economy. o reilly media, inc. ,2015. 4. frederick p. brooks. design design essays computer scientist. addison-wesley , 2010. 5. andrew s. tanenbaum. modern operating systems pearson , 2007. 6. joseph poon thaddeus dryja, bitcoin lightning network scalable off- chain instant payments. 2016. 7. gavin wood. ethereum secure decentralized generalized transaction ledger. 2014. 8. hyperledger whitepaper. 2016. 9. muhammad saqib niaz gunter saake. merkle hash tree based techniques data integrity outsourced data. 2015. 10. robert mcmillan. inside story mt. gox, bitcoin s 460 dollar million disaster. 2014. 11. sunny king, scott nadal. ppcoin peer-to-peer crypto-currency proof-of- stake. 2012. 12. david schwartz, noah youngs, arthur britto. ripple protocol consensus algorithm. ripple labs inc white paper, 5, 2014. 34 13. leslie lamport. part-time parliament. acm transactions computer systems, 21 2 133 169, 1998. 14. leslie lamport, robert shostak, marshall pease. byzantine generals problem. acm transactions programming languages systems toplas , 4 3 382 401, 1982. 15. leslie lamport. time, clocks, ordering events distributed system. communications acm, 21 7 558 565, jul 1978. 16. paul tak shing liu. medical record system blockchain, big data tokenization. information communications security, pages 254 261. springer, 2016. 17. robert love. linux kernel development. addison-wesley , 2010. 18. shawn wilkinson tome boshevski, storj peer-to-peer cloud storage network. 2016. 19. contract. url https en.bitcoin.it wiki contract, 2014. 20. mandatory activation segwit deployment, uasf, bip 0148. url https github.com bitcoin bips blob master bip-0148.mediawiki, 2017. 21. smart property. url https en.bitcoin.it wiki smart property, 2016.