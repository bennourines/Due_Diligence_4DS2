b white paper details added decentralized financial system credits version 1 6 26 nov 2017 x0ccontents abstract 3 introduction 3 1 network ledger 4 definitions 4 network nodes 4 saved block 4 synchronization nodes 5 2 network consensus 5 consensus comparison 5 concept main network node 6 equipment network nodes 7 consensus building 7 building initiating ledger 7 transactions included register 8 3 transaction processing 8 transactions 8 consensus building 8 transaction processing 8 ledger entry structure 8 credits ledger structure 9 block size 9 search transaction participants 9 data transmission channel 9 action system 10 adding transaction validation 11 cost transactions 11 4 smart contracts 11 introduction 11 entities 11 smart contract method 12 virtual executable machine 12 value term 12 performing smart contract terms 12 data sources 13 5 implementation plan xe2 x80 x8b redits cryptocurrency c xe2 x80 x8btechnical plan project implementation 4 1 xe2 x80 x8b 1 xe2 x80 x8b 4 1 xe2 x80 x8b 5 x0cabstract credits platform decentralized financial system direct interaction participants peer peer p2p basis platform allows delivery financial services distributed ledger self executing smart contracts credits cryptocurrency system aims bring participants site providing platform creating financial services offer use services defined balanced technology design credits platform offers new technical solution new conceptual model networking participants interactions develop modern decentralized financial services introduction vision completely peer peer arrangement delivery financial services money transfers currency value exchanges crediting funding services directly participants conducted additional intermediaries according principle equal participation result gets cheaper faster better services world moving direct interaction people peer peer principles xe2 x80 x93 equal equal revolution happened clearly seen upheaval mass media 1990s newspapers magazines tv main providers information today opinion leaders bloggers found youtube channels social networks money invested crowdfunding ico information stored decentralized cloud systems financial industry probably industries lagged resisted introduction decentralization direct interaction participants despite fact technically easier create decentralized financial services create unmanned vehicles right technological environment required create system decentralized financial products services based distributed ledger 1 high execution speed seconds capability handle huge number transactions simultaneously hundreds thousands second low cost transaction micro payments non cash transactions 2 development system participants items necessary qualitative financial decentralized services combined identification users kyc credit history bureau settlement centers fiat money withdrawal cashing cryptocurrencies etc fundamental tasks currently hamper development peer peer financial products present solution tasks implemented help credits financial system credits single technology decentralized platform brings participants financial services safely quickly executing transactions principles distributed ledger self executing smart contracts principles federative voting system provide unlimited opportunities participants create unique interactions financial products platform opens huge new potential market blockchain projects services financial sectors previously accessed speed transaction cost limitations x0c1 network ledger definitions system set decentralized network nodes processing saving transactions executing confirming terms smart contracts processing requests party systems providing information data requested network node xe2 x80 x8bis computer complete network client installed connected common system verifying transactions writing ledger ledger xe2 x80 x8bis list transactions confirmed system stored network nodes transaction xe2 x80 x8bis system item denoting request perform smart contract method action network recording results blockchain system smart contract computer protocol facilitates verifies ensures compliance terms interaction usually user interface emulate logic contractual relationships key property smart contract decentralization independence central source smart contract method xe2 x80 x8bis program code responsible calculating result work smart contract terms recording ledger contracting party xe2 x80 x8bis final network participant system user network nodes use types nodes depending purpose build decentralized network based free access node connection 1 common node cn xe2 x80 x8b node participating transaction verification validity minimum trust factor candidate role trusted node node current processing cycle node role selection network node participating transaction verification maximum 2 trusted node tn xe2 x80 x8b trust factor 1 candidate role node current processing common node node trusted mathematically calculated number selection voting cycles nodes mathematical calculation depends number nodes network complexity 3 main node mn xe2 x80 x8b network node participating verification responsible adding transactions transaction ledger block node trusted node current processing mathematically calculated number voting cycles mathematical calculation depends number nodes network complexity system uses trust factor xe2 x80 x93 absolute fractional numerical value 0 1 expressed mathematical terms number trusted nodes 1 total number nodes network maximum number trusted nodes exceed 50% network nodes x0cthe saved block common ledger blocks cb synchronized state entire common ledger blocks system nodes ledger block contents mean unit information stored contains hash code previous block list data related ledger associated number previous block receipt block node takes place common ledger blocks according number saves network bandwidth synchronization block number checked block missing node downloaded saved result system time contains latest date copy ledger called ledger automatically created node responsible ledger formation reaching consensus block sent system nodes order maintain date uniformity ledger state system nodes node associated nodes network constantly exchanges new blocks transactions maintain relevant information blocks form set transaction candidates waiting added ledger time server generates assumed sets candidates servers proposed set transactions checking decision add ledger result possible store ledger data multiple times multiple servers xe2 x80 x93 system nodes information protected nodes system reliable independent synchronization nodes new node launched synchronized determination definition thorough trust verification improve information processing rate processes handled simultaneously independently incoming variables ledger store created xe2 x80 x93 space reserved ram simplified access required ledger available request sent trusted nodes receive transactions synchronized account input parameter object characterizing transaction search running synchronization threads started operation results numeric code xe2 x80 x93 position number trusted node ledger current thread error number value zero thread method ends connection error thread ends 2 network consensus consensus credits method group decision making aim develop final solutions acceptable network nodes consensus comparison principles decentralized credits ledger compare different types consensus xe2 x97 x8f ledger availability nodes write data ledger read time xe2 x97 x8f modifiability participating network nodes xe2 x97 x8f consistency system nodes nodes absolutely identical version ledger x0cwhich updated changes xe2 x97 x8f resistance separation node inoperable affect operation entire ledger compared parameter credits specific dpos bft algorithms pow algorithms pos tagging principle identifying node generated block calculation mathematical function confirmation storage ledger copy bft performing iterative calculation mathematical function varying complexity search maximum stack participants competing nodes attack 51% unlikely need complete ledger plus resources computational power calculate trusted nodes selected dynamically probable expensive terms resource use probable expensive need increase stack compensation work site adding ledger blockchain calculated automatically provided fix block depends mining commission operation provided fix block mining concept main network node network nodes decentralized priority network node needs defined process queue transactions stored different network nodes enter newly generated transaction block ledger credits platform uses combined protocol increase speed transaction processing provide complete security data storage processing transfer transactions protocol based calculation mathematical function ledger transactions applying proof work principles accurately determines storage latest date copy ledger software node proof capacity calculating checksum values entire contents xe2 x80 x93 hash code size files determined proof latest date copy hash code latest transaction recorded system main network node node searches value hash function calculates based stored ledger organize healthy competitive environment network nodes opportunity main node generate store new ledger calculating function obtaining result sent network nodes verification result contains timestamp calculation value based calculation function ledger files software nodes receive calculated value compare calculation time allocated search main network server verify confirm trust factor node confirm opportunity participate competition main x0cnetwork node receiving approval network nodes bft principals list nodes correctly calculated value function contains timestamps node received correct result approved fastest time main network node moment sha 2 algorithm concept calculate hash sum file hash functions sha 2 family built basis merkle damgard structure addition initial message divided blocks block divided 16 words algorithm passes message block cycle 64 80 iterations rounds iteration 2 words converted rest words define conversion function results block process summarized sum hash function value internal state initialized based results previous block processing impossible independently process blocks sum results equipment network nodes striving build platform fastest possible transaction processing characteristics propose material incentive maintain network nodes optimal condition high performance server equipment high internet bandwidth material compensation owner main network node receive remuneration credits currency number commissions transactions processed ledger rest xc2 xbd intended trusted nodes bft consensus percentage changed separated rate formation system federative voting network nodes years initial coin offering result encourage server owners server highest performance hardware maintain high quality high speed communication channel consensus building discussed main network node selected nodes main tasks main node obtaining transactions candidate status add ledger nodes processing building relevant ledger sending newly built ledger network nodes process transaction handling building relevant ledger actually search consensus solution result building relevant ledger consensus solution process divided following stages 1 search main network node 2 building trusted nodes 3 receiving list transactions building list candidates addition ledger 4 processing list candidates voting nodes trusted common nodes different weight factors trust factor 5 removal candidates unconfirmed transactions verified negative confirmation list 6 building list confirmed transactions added ledger 7 adding transactions ledger timestamp hash code block contained transaction x0c8 sending block transactions network nodes received added registries nodes building initiating ledger process described follows 1 end user network system generates transaction 2 conditions smart contract specified met user initiates action transaction calling required method platform software 3 follow fundamental principles blockchain kernel validators keeps track synchronization invariance latest ledger version 4 time building consensus transactions received cycle collected block 5 number assigned block consisting timestamp node identifier converted hash code block placed consensus module 6 compilation white list candidates hash transaction hash block written ledger certify source based 7 hash kind signature block created block transactions 8 consensus building federative search algorithm transactions added block passed validator s kernel written ledger transactions included register transactions included list ready transactions marked rejected information immediately displayed sender initiator transaction transactions included ledger remain set candidates stored network nodes new transactions received server time consensus arrive search process begins anew continuous cyclic operation network allows transactions conducted fairly quickly maintaining high degree reliability relevance information 3 transaction processing transactions transaction minimum unit system informing platform execution contract methods direct transfers accounts creating smart contract followed placement result peer peer network consensus building system uses federative model build consensus xe2 x80 x93 voting trusted validator nodes consensus building algorithm xe2 x80 x93 algorithm passage finite state automaton consensus x0cworks cycles time steps time step transactions extracted placed pool dimensional array placed pool transactions sent trusted nodes order receive response response received transaction request add sent added ledger validator sent validator network consensus built xe2 x80 x93 end chain transfer legality fully confirmed transaction sent validation marked writing saving ledger transaction processing achieve decentralization server ledger storage fully fledged handler transactions system uses concept system kernels kernels mean data handler performs specific production task regardless availability operability remaining system components kernel input time task executed receives list variables processing gets output result xe2 x80 x93 positive error result system kernel contains response code addition main data set structure required highest possible speed process working independently ledger entry structure achieve significant ledger performance compromising security propose use ledger database building merkle tree hash code previous block transaction result merkle tree tth xe2 x80 x93 tiger tree hashing type hash function check integrity data obtain unique identifier chain restore sequence data divided small parts xe2 x80 x93 blocks individually hashed leaf tiger hash internal tiger hash calculated pair hashes hash pair transferred new chain unchanged internal tiger hash calculated chain pair procedure repeated hash left ledger operated merkle trees transaction processing speed low load computing resources high opinion rational use resources credits ledger structure propose abandon merkle trees use transaction ledger credits system entry consisting hash code transaction block add list candidates addition ledger additionally entry node identifier timestamp generated ledger entry contains transaction direction initial final accounts type write number write units type depositing number depositing units principle increases speed transaction processing increases complexity illegitimately changing ledger excludes possible hindsight changes ledger entry block size unit time cycle searching main trusted nodes cycle time calculated depending network complexity unit time network contains n transactions x0cgenerated transferred processing network end previous cycle start cycle obtain status candidate added ledger transactions selected network n placed block block size depends number transactions search transaction participants credits peer peer network represented graph user accounts form vertices multitude possible transactions form directed edges connect vertices account edges initial terminal vertex construct oriented graph orgraph taking following conditions identification xe2 x97 x8f transaction sender receiver xe2 x97 x8f vertex account connected vertex directed edge transaction xe2 x97 x8f vertex graph account finite number directed edges incoming outgoing transactions orgraph contains required route fulfilling necessary transaction conditions construct simple chain finite sequence vertices vertex connected vertex sequence edge data transmission channel channel communication main network node common node credits network separate thread multithreading data sent encrypted form transaction executed ensure network security data validator nodes transmitted encrypted form connection nodes low level based network library data transfer occurs error thread automatically interrupted corresponding entry placed writing logging system log file data transmitted typified variables transmitted data encrypted symmetric rc4 algorithm algorithm works common secret key key transferred connection created nodes transmitted encrypted form accordance diffie hellman algorithm rc4 algorithm like stream cipher built basis pseudo random bit generator key written generator input pseudo random bits read output key length 40 2048 bits generated bits uniform distribution diffie hellman algorithm allows parties receive common secret key channel unprotected listening protected communication channel change received key exchange messages symmetric encryption algorithm based complexity computing discrete logarithms algorithms public key calculations performed modulo certain large prime number p certain natural number smaller p selected special way want encrypt value x calculate y xe2 x80 x8bx xe2 x80 x8bmod p x0cit easy calculate y having x inverse problem calculating x y complicated exponent x called discrete logarithm y knowing complexity calculating discrete logarithm number y publicly transmitted communication channel large modulus p initial value x impossible pick diffie hellman algorithm generate key based mathematical fact actions system tied timestamp number previous block user xe2 x80 x99s login smart contract id allows duplicates identified executing duplicate found transaction pool rest considered illegitimate action system action system transaction characterizes simplest transfer value account account transfer result contract method validator subsequently search solution consensus search subsystem order prevent duplication transaction block identifier system accepts agreement true correct transaction came validator subsystem processing transaction current account recorded validator system values left account conduct transaction consensus found problem double waste solved transaction executed information received validator confirmed information ledger status change automatically distributed nodes trusted list ledger synchronized order date transaction ledger trusted nodes current validator node necessary synchronize newly arrived transaction ledger nodes time solve problem separate port synchronization possible increase speed process information coming validator kernel distribution load port synchronization thread executed cyclic priority allocation ram cpu load cpu cycles lower average memory stores 1 000 operations state accounts encrypted form synchronous algorithm increases speed response requests validator nodes adding transaction validation adding transactions ledger called validator subsystem immediately consensus building compiling white list calling party systems impossible order improve security incoming parameters xe2 x80 x93 object characterizes transaction resulting value resultvalue 0 xe2 x80 x8b execution aborted error result possible error code ledger 0 resultvalue xe2 x80 x8b function executed errors result number entry incoming parameter xe2 x80 x93 object containing unique label transaction sender recipient transferred value value correspondence desired value transferred value desired value system information changed necessary x0ccost transactions system uses credits currency serves xe2 x97 x8f internal means payment system usage xe2 x97 x8f exchange different currencies system xe2 x97 x8f exchange values system xe2 x97 x8f create process operations smart contracts xe2 x97 x8f purchase information party sources services system cost transaction vary depending network load particular users system theoretically direct huge flow transactions certain peak time suggest material method impact system users control network load cost performing transactions years system operation set different type transactions operations algorithm automatic generation transaction cost developed later 4 smart contracts introduction smart contract credits system electronic algorithm describes set conditions actions events real world digital systems associated implement self controlled smart contracts decentralized environment completely excludes human factor required transfer cost smart contract cryptocurrency independent central authority needed entities smart contract credits consists following entities 1 property public variables xe2 x80 x8b xe2 x80 x93 system entity storing public data necessary work contract credits system 2 method xe2 x80 x8b credits system entity responsible observing logic sequence actions conducting transaction actions contract participants credits system sign smart contracts method modifies contract properties launching processes verifying compliance conditions coordination smart contract comes force parties sign ensure automated fulfillment obligations execution contract terms needs fully automated means smart contracts exist environment unimpeded access executable code smart contract items contract terms mathematical description clear logic execution main x0cprinciple smart contract complete automation reliability contractual relations parties smart contract method credits smart contract method system entity responsible compliance logic sequence actions transaction actions contract logic sequence actions described program code module containing commands sequential execution allows desired result obtained code handle system commands example assignment command user commands separately written functions contract properties statically dynamically initialized variables available contract method methods party contract available owner connected party contract increase usage development provided scripting languages example javascript method program code uses widely scripting language operators commands assignment conditional unconditional jumps creation functions procedures subroutines connection party libraries virtual executable machine contract method credits system executed virtual environment system virtual machine vm method called particular contract vm allocates memory area loads contract bytecode containing methods variables initialized redefined calling contract methods vm starts processing method bytecode runtime variables code loaded memory area commands successively executed result transferred peer peer network subsequent placement ledger initiator execution method user system behalf method launched value term credits cryptocurrency indicator value term contract unit allowing comparison completely different units building consensus executing accepting contract parties instead registering separate value gateway combination credits cryptocurrency serves bunch effecting value transfers possible value liquid respect credits currency means value liquid respect value performing smart contract terms contract term credits system value trigger checked fields required close complete contract fulfillment smart contract terms occurs trigger desired fields checked equivalent desired value possible ways find solution fulfill contract terms x0c1 contract concluded parties transfer value case contract fulfillment provision cost equivalent value transferring party receiving party 2 contract concluded parties transfer value payment fulfilling certain number conditions example delivery value receiving party 3 contract conversion value cost equivalent form credits placed system case platform starts looking shortest possible path exchange value conversion contracts fulfillment contract provided transaction transactions collect required quantity units value complete contract data sources balanced optimal solution fully featured accurate work checking providing additional information credits uses party data providers need introduce additional data sources system stems inadequacy public information contract parties example obtaining borrower xe2 x80 x99s credit status making decision issue credit work party information systems platform uses integration bus remote access generates request party system site format data presentation system participants paid basis payment credits request sent encrypted form ports addresses provided information systems standard ones result request response service containing necessary information decision error code characterizing impossibility receiving required response possible steps eliminate error 5 implementation plan credits cryptocurrency launching release version system fixed 1 000 000 000 credits issued exchanged erc20 standard tokens issued initial token sale exchanged fixed exchange rate 1 erc20 standard token 1 credits monetary unit x0ctechnical plan project implementation s1 s2 s3 s4 s5 pre alpha alpha beta release candidate release platform storage fa key consensus design mfa consensus implementation mfa key design implementation pow poc mfa optimization data store messagepack history decentralization ledger nosql store implementation cvm blockchain backup design credits virtual implementation machine integration ecosystem optimization check errors party system design implementation integrate system reasoner optimizati inference engine formal specification key design elements reasoner integration blockchain user interface implementation web ux design wallet wallet formal specification rpc rest api formal specification ux design applicati test blockchain explorer optimisation party explorer android ios desktop wallets x0c