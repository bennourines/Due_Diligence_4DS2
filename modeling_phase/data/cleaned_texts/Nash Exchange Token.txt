b platform decentralized cryptographic trade payment service creation v 1 1 latest publication date nov 23 2017 http www neonexchange org information document subject change time constitute xef xac x81nancial advice x0cnex platform decentralized cryptographic trade payment service creation ethan fast phd xe2 x88 x97 neon exchange stanford usa ethan neonexchange org luciano engel eng neon exchange florian xc3 xb3polis brazil luciano neonexchange org f xc3 xa1bio c canesin msc neon exchange cambridge ma usa canesin neonexchange org fabian wahle phd neon exchange z xc3 xbcrich ch fabian neonexchange org thomas saunders neon exchange minneapolis mn usa tom neonexchange org abstract today cryptocurrencies primarily traded centralized exchanges user funds risk hackers platform managers decentralized exchanges dexs allow users retain control funds trades mediated smart contracts blockchain chain computation generally slow high volume order books paper describes neon exchange nex new decentralized exchange neo blockchain applies publicly verifiable chain matching engine handle massive trading volume support complex orders limit orders possible existing dexs nex introduces payment service funds management layer enables thirdparty smart contracts neo send receive global assets computation fund developments future expansion related services nex issue 50 million tokens holders share profits services 1 introduction cryptocurrency markets grown enormously recent years daily trade volume $60 million january 2015 $8 billion november 2017 1 despite fact cryptocurrencies secured decentralized architectures trades currencies place centralized exchanges funds deposited control entity facilitating exchange layer centralization puts user funds risk hackers platform managers famously millions dollars worth bitcoin stolen mt gox 2011 bitfinex 2016 27 20 recently decentralized exchanges emerged allow users trade giving control funds 26 2 systems trades executed smart contracts blockchain removing need centralized party control user accounts exchanges succeed primary goal decreasing party risk success comes cost huge loss trading performance smart contracts far slow execute complex matching logic order books high volume centralized exchanges practice means users execute complex trades presents opportunities arbitrage stale orders 11 centralized exchanges provide speed decentralized exchanges provide security natural ask hybrid system provide best worlds paper propose xe2 x88 x97 computer science phd granted 2018 stanford university version 1 1 copyright neon exchange 2017 x0cthe optimal mix speed security provided decentralized exchange fully chain matching engine order matching far computationally expensive operation running exchange encapsulating component trusted chain service reap enormous improvements speed support complex orders limits margins time committing orders chain matched xe2 x80 x94with provable deterministic behavior xe2 x80 x94we retain security benefits traditional decentralized exchanges neon exchange nex new decentralized exchange embodies ideas built neo blockchain white paper presents vision nex platform performance benefits technical approach nex fits broader neo ecosystem discuss roadmap coming months plans public token sale 2 background 2 1 blockchain smart contracts blockchain decentralized ledger record transactions parties verifiable permanent way need central authority 24 2008 bitcoin emerged public blockchain large scale adoption digital currency chains attempted improve technology notably ethereum launched 2015 blockchain programmable turing complete smart contracts 28 smart contracts allow developers publish programs blockchain inspect deterministically execute accomplish complex goals way verifiable involved parties example smart contract accept incoming funds user release certain date collect funds series users split evenly smart contracts possible sophisticated distributed chain applications decentralized exchanges 2 2 decentralized exchanges decentralized exchanges emerged years section lay trade offs design space nex contributes existing systems summary nex trades small degree user trust vastly improved performance usability earliest decentralized exchanges placed order books directly blockchain 4 3 systems market makers perform chain transactions time want place modify cancel order new orders placed smart contract execute matching logic runs slowly redundantly virtual machines network general exchanges large network bandwidth operate slowly decentralized exchanges operate scheme today second class systems uses automated market maker amm smart contracts opposed chain order book 22 23 systems adopt price adjustment model parties trade amm spot price asset determined resulting market forces amms provide increased availability performance chain order books slower centralized exchanges place artificial constraints supply prevent working capital depleted potential arbitragers state channels proposed reduce network overhead general problem asset exchange 21 6 allowing parties iterate transfer chain ultimately committing chain state channels expensive open close usually requiring security deposit series chain transactions reason useful known parties want manage series interactions e g xe2 x80 x9cbar tab xe2 x80 x9d single party conducting transaction broader market building state channels recent class dex based chain relay 26 2 systems market makers broadcast order chain picked interested counterparty passed smart contract fulfillment systems require far fewer chain transactions perform trade suffer performance issues comparison centralized exchanges notably order matching automatic systems presenting arbitrage opportunities users slow cancel orders similarly absence matching means users place complex orders limit buys market sells 2 x0cin contrast approaches introduce new kind decentralized exchange nex based trusted chain matching engine 5 matching engine works exactly like equivalent centralized exchange control active orders commits trades chain access balance user account like exchanges based chain relay nex orders matched chain fulfilled chain nex xe2 x80 x99s automatic matching engine reduces opportunities arbitrage allows complex orders ensure trust nex provides public record orders deterministic specification behavior users verify orders matched chain claim award event incorrect behavior taken makes nex decentralized exchange performance comparable today xe2 x80 x99s centralized exchanges 2 3 neo blockchain neo launched 2015 china xe2 x80 x99s public blockchain recent improvements network compelling alternative ethereum smart contracts distributed applications 29 nex run neo later expanding support exchange ethereum ideas nex apply platforms major differences neo ethereum relevant decentralized exchanges 2 3 1 modeling user balance ethereum based account model user xe2 x80 x99s balance eth stored number ethereum virtual machine evm easily modified e g sent received smart contract logic 12 contrast global assets neo neo gas based utxo model funds sent received chain spent transaction ids network 10 notably differences apply global assets neo network tokens created smart contracts behave similarly eth 13 system design trade offs ethereum example easy smart contract interact user xe2 x80 x99s balance eth difficult node prove transaction taken place syncing chain running evm contrast easy parties neo verify transaction taken place chain e g spv 9 difficult smart contracts program interactions user xe2 x80 x99s neo gas balance nex succeed smart contracts neo require way programmatically interact global assets like neo gas solve problem introduce novel payment service layer converts global assets smart contract tokens easily interacted smart contracts neo network users convert global assets tokens depositing payment service address later withdraw contract address different balance interactions party smart contract completed believe solution generalize networks combine utxo models independent smart contracts cardano 7 2 3 2 calls smart contracts second major difference neo ethereum smart contracts allowed course execution ethereum smart contract dynamically smart contract given address passed run time contrast neo enforces calls smart contracts declared statically advance 14 constraint makes easier neo implement sharding optimizations vm state means nex smart contracts hard code token pairs supported exchange 2 3 3 consensus neo ethereum operate different consensus models neo uses delegated byzantine fault tolerance dbft consensus 19 25 ethereum uses proof work pow 8 neo xe2 x80 x99s consensus model allows higher theoretical transaction throughput 10 000 tps huge positive impact performance decentralized exchange ethereum moves proof stake pos model 2018 neo xe2 x80 x99s comparative advantage diminish details worked transition occurs 15 3 x0c3 neon exchange neon exchange nex aims combine performance centralized exchanges trust security properties decentralized exchanges system consists main components chain trade matching engine smart contract trades executed payment service global assets neo gas converted tokens transfered directly smart contracts making compatible exchange following sections describe component depth 3 1 chain matching engine chain matching engine allows nex benefit performance characteristics centralized exchanges maintaining decentralized user account model based blockchain figure 1 orders signed sent user addresses matching engine quickly deterministically processed high performance hardware matched orders signed chain committed user accounts blockchain figure 1 nex architecture provides fast decentralized exchange chain matching engine illustrate example user interaction nex exchange user authorizes trade exchange token token b 1 sends order matching engine 2 second user authorizes submits trade token b exchange token 3 4 engine matches orders 5 submits smart contract execution 6 note steps 1 2 3 4 initiated api nex exchange website trade nex user authorize nex access token traded calling nep 5 approve method token xe2 x80 x99s smart contract user submit signed json request nex matching engine api order matched chain engine nex smart contract execute order single invocation transaction neo contain smart contract calls engine batch set matched orders chain transaction minimize computation assuming 1 000 transactions second nex potentially execute 100 thousand trades second chain future batches adopt match rings enhance liquidity 18 3 2 trusted chain matching chain matching engine brings enormous performance benefits opens door potential trust issues users exchange users know engine matching orders fairly example manipulating order books benefit address problem propose idea provable fair chain matching scheme chain matching engine follows publicly specified deterministic algorithm combining knowledge public ledger order trades sent exchange fulfilled blockchain user verify exchange operating fairly trust nex explicit future plan build smart contract users submit evidence unfair exchange behavior return large reward concretely matching nex occurs deterministically based price time commonly known fifo 16 lower priced orders matched preference given orders placed earlier time given price level modifications order reset placement time 4 x0c3 3 centralized user accounts security problems centralized exchanges simply technical challenge overcome social consequence common user desire hold assets exchange accounts desire largely familiarity bank like user experience provided centralized platforms managing funds nex aims bring similar user experience decentralized exchange storing user xe2 x80 x99s encrypted private key client user xe2 x80 x99s browser preserves security guarantees decentralized account model allowing users login nex traditional web form asks username password 3 4 types orders unlike existing decentralized exchanges support point point orders allow tokens traded fixed price nex supports complex trades limit market orders describe types trades available nex table 1 table 1 order types supported nex type description limit market margin2 exchange tokens given price ratio exchange token current market price borrow leverage long short token nex able support complex order types speed flexibility matching engine limited slow computation cycles blockchain 3 5 exchange api nex exposes public json api party applications use trade tokens api allows users place modify cancel orders matching engine transactions place chain nex api handle tens thousands requests second line popular centralized exchanges 17 submit order matching engine client json request signed private key associated address placing order ensures user submit trade address control attempting match order engine verify user granted nex xe2 x80 x99s smart contract asset order successfully executed user authorized funds order rejected modify cancel order user similarly submit json request signed correct private key order canceled modified matched order partially matched unmatched portion order affected table 2 nex initial fee structure 3 6 user 30 days volume taker fee maker fee 0% 1% 2 5% 5% 10% 20% 0 25% 0 22% 0 19% 0 19% 0 16% 0 13% 0% 0% 0% 0% 0% 0% fee structure nex follows maker taker fee structure common exchanges market makers place new limit orders order books pay fee takers place order market place limit order current market price pay small fee table 2 fees deducted 2 order type roadmap supported time initial launch 5 x0cfrom taker token denomination trade nex computes user xe2 x80 x99s 30 days moving average volume volume trades associated public key percentage total exchange volume 3 7 implementation nex chain matching engine built elixir functional programming language designed build scalable distributed fault tolerant applications elixir builds erlang language originally intended development telecommunication systems modern web developers manage challenges dealing high availability elixir help nex realize chain matching engine provides service users world functioning continuously downtime 3 8 smart contract token exchange nex matching engine communicates smart contract commits trades users smart contract contains logic powered nep 5 token standard allows hold user tokens involved active trades matching engine computes match sends smart contract involved user addresses types amounts tokens trade contract completes trade calls smart contract batched single invocation transaction increase performance reduce network volume 3 8 1 trade method signature nex exchange smart contract sc accepts parameters string indicating operation performed bytearray containing serialized data usage method output returned bytearray byte indicating success failure resulting data serialized remainder bytearray central interface chain matching engine blockchain trade method exchange sc method parameters currency maker currency taker maker taker address maker address taker data exchange sc delegates trade currency corresponding sc nep5 transferfrom method case transfer currency maker taker vice versa fails non failed transfers reversed method return false method return true 3 8 2 security ensure party execute fraudulent trade users trade method exchange smart contract accept orders signed private key held matching engine 3 8 3 withdrawal nex smart contract access funds involved active trades balance tokens user xe2 x80 x99s address retrieve tokens held active trade user submit cancel order nex matching engine submit immediate withdraw order exchange sc transferring tokens user delegating request matching engine ensures engine match order longer backed user funds enhance user trust nex smart contract supports slower direct withdrawal requires communication chain matching engine second withdrawal process ensures 1 users withdraw active trade funds event broken compromised matching engine 2 matching engine time notice cancel orders invalidated direct withdrawal funds withdraw directly user calls public withdrawal method exchange sc specifying token type blocks later user complete withdrawal method tokens transfered users retrieve funds immediately submitting order cancellation matching engine expect slower direct withdrawal method exists simply prove users control funds involved active trades 6 x0c3 9 payment service nex payment service allows neo smart contracts interact assets live outside neo virtual machine example user use payment service transactions chains sending eth neo smart contract distributes friends xe2 x80 x99 neo addresses future payment service support assets blockchains non digital assets usd serving gateway trade chain assets nex near term payment service designed provide similar function global assets neo blockchain neo gas broadly payment service provides starting point reasoning decentralized exchange interact assets chains 3 9 1 motivation neo gas surprising neo smart contracts send neo gas directly computation good reasons involving network scalability section 2 3 1 result nex payment service necessary complex interactions xe2 x80 x94such decentralized exchange xe2 x80 x94between smart contracts global assets 3 9 2 interacting payment service high level payment service converts global assets neo gas token assets easily sent received smart contracts figure 2 deposit neo payment service equivalent xneo created sent received smart contracts nep 5 standard example withdraw neo payment service balance xneo adjusted accordingly address receives xneo withdraw equivalent neo payment service figure 2 nex xe2 x80 x99s payment service layer allows neo smart contracts interact utxo based global assets neo gas user deposits neo nex payment service smart contract creating balance xneo transferred smart contracts 1 user authorizes party smart contract access xneo 2a user calls contract 2b sends xneo user authorizes second smart contract use rest 2c smart contract calls second smart contract 2d finally users second smart contract withdraw neo payment service zeroing xneo balances 3 3 9 3 network assisted global asset withdrawal procedure nex payment service powered novel withdrawal procedure developed global assets neo blockchain smart contracts able send neo gas user address directly able execute logic decides user authorized withdraw certain assets normal contract transaction use idea allow users withdraw funds nex payment service concretely withdraw assets payment service user calls withdrawal method service sc specifying unspent txid asset type withdraw smart contract checks information user cleared withdrawal adds txid output address white list vm storage white list consulted attempted transfer funds smart contract user withdraw appropriate smart contract normal contract transaction network default kind withdrawal step process step user registers txid system withdrawal second step perform contract transaction 7 x0cexecute withdrawal possible withdrawals step process perspective end user incentivizing parties perform second step process allowing small gas fee scenario user authorize withdrawal sc number bots monitoring public events chain compete execute contract transaction return fee 3 9 4 generalization assets blockchains future concepts applied neo gas nex payment service applied assets chains additional challenge dealing chain assets neo smart contract observe directly solve propose create hubs monitor events occur chain user depositing funds address controlled nex push smart contract important difference similar principals hold neo smart contract create virtual nep 5 representations asset nex control allowing users example send ethereum neo address smart contract owner receiving address smart contract withdraw funds outside chain following procedure prove ownership neo address question 4 decentralized banking enabling decentralized exchange nex offers long term vision decentralized banking smart contract based funds management service assets blockchain traditional banking management service designed provide fund security investment opportunities figure 3 example funds management smart contract provide advanced security features dual key system consisting frequent use key large funds key user moving funds nex frequent key limited daily trade threshold need provide large funds key frequent use key compromised user lock account keys transfer funds new account following success core exchange features envision smart contract integrate manage nex services peer peer lending indexed investment accounts figure 3 nex enables long term vision decentralized banking smart contract based funds management service 1 users buy assets conventional services 2 interact neo blockchain nex smart contract 3 assets traded nex nep 5 pairs enable cross chain exchange 4 funds stored management contract access services indexed investment accounts peer peer lending 5 nex token nex token allows holders claim share fees generated payment service exchange total 50 million tokens issued entitle holders share fees taken exchange payment service nex holders claim profits staking process claims staked nex operate similar gas claim calculations neo network way token holders stake nex benefit directly success exchange services fees generated holders receive larger rewards 8 x0cplease note legal regulatory policy require changes token model aim transparent possible nex community share updates occur 5 1 calculating fees fees calculated terms asset traded transfered nex example user places market price order trading 1000 nex neo exchange collect fee 1000 xe2 x88 x97 0 0025 2 5 nex similarly user transfers 1000 neo payment service fee 0 001 gas fee added gas fee total total nex fees calculated simply computing fees taken asset exchange fees taken proportion moved independent smart contract manages claiming process 5 2 claiming fees staking nex tokens users stake nex tokens smart contract pays proportion exchange payment service fees stake tokens users send nex tokens smart contract stake method records starting block sent user user periodic claims contract retrieve share nex profits staking began users commit staking tokens longer periods time receive larger proportion fees 5 2 1 claim example user owns 1000 nex nex generated fees tokens equivalent 100 million dollars market value claim assuming user staked nex rate 75% 1000 eligible claim worth $100 000 000 xe2 x88 x97 50 000 000 xe2 x88 x97 0 75 $1500 rate hypothetical release true rates later time claim received xe2 x80 xa2 user claims direct cut fees token exchange nex trading neo gas nex rpx user receive share assets xe2 x80 xa2 user claims equivalent preferred asset type nex conversion automatically trade features corresponding fee structure 5 3 token sale nex hold token sale q1 2018 plan sell 25 million tokens public total pool 50 million announce details sale soon worked legal advisors aim maximally compliant regulators attempt include countries possible sale 6 current progress roadmap describe current state development nex 6 1 incorporation nex incorporated zug switzerland currently cooperating closely swiss financial authorities ensure compliance order protect investors 6 2 technology implemented alpha prototypes smart contracts described paper release publicly q4 2017 begun work prototypes trading interface matching engine strongly believe transparent development process possible open sourcing early work benefit neo community github account updates information https github com neonexchange 9 x0c6 3 roadmap nex plans trading neo tokens operational mid 2018 propose following preliminary release schedule xe2 x80 xa2 q4 2017 smart contract examples payment service decentralized exchange demo profit distribution mechanism testnet xe2 x80 xa2 q1 2018 nex token sale release open source platform token sales neo xe2 x80 xa2 q2 2018 payment service launch mainnet neo gas matching engine launch testnet supported accompanying cli xe2 x80 xa2 q2 2018 smart wallet api integration tethered tokens mainnet xe2 x80 xa2 q3 2018 trading interface matching engine launch mainnet begin trading neo gas nex cross chain demo eth neo testnets xe2 x80 xa2 q4 2018 cross chain launch support trading eth eth tokens support margin trading mainnet xe2 x80 xa2 2019 decentralized banking smart contract asset management chains references 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 coinmarketcap com http coinmarketcap com 2017 etherdelta https etherdelta com accessed 2017 etheropt https github com etheropt accessed 2017 maker market https oasisdex com accessed 2017 neo white paper superconducting exchange https github com neo project docs blob e01d268426a8b5f9b3676cfd03d0b8b83d7711a1 en white paper md highly scalable architecture design accessed 2017 raiden network https raiden network accessed 2017 building cardano https whycardano com accessed 2017 bitcoin developer guide proof work https bitcoin org en developer guide proof work accessed 2017 archived https www webcitation org 6v7duj9jj november 20th 2017 bitcoin developer guide simplified payment verification https bitcoin org en developer guide simplified payment verification spv accessed 2017 archived https www webcitation org 6v7duj9jj november 20th 2017 bitcoin developer guide utxo https bitcoin org en developer guide term utxo accessed 2017 archived https www webcitation org 6v7duj9jj november 20th 2017 cost decentralization 0x etherdelta http hackingdistributed com 2017 08 13 cost decent accessed 2017 archived http www webcitation org 6v7ff8r7d november 20th 2017 ethereum wiki design rationale https github com ethereum wiki wiki design rationale accounts utxos accessed 2017 archived http www webcitation org 6v7fswqi2 november 20th 2017 neo nep 5 token standard https github com neo project proposals blob master nep 5 mediawiki accessed 2017 archived http www webcitation org 6v7fuupv2 november 20th 2017 reconstructing smart contracts ii scalability https themerkle com reconstructingsmart contracts ii parallel universes unlimited scalability accessed 2017 archived http www webcitation org 6v7fxfbha november 20th 2017 ethereum wiki proof stake https github com ethereum wiki wiki proof stake faq accessed 2017 archived http www webcitation org 6v7g0yaqh november 20th 2017 10 x0c 16 cme matching algorithm fifo https www cmegroup com confluence display epicsandbox matching algorithms matchingalgorithms fifo accessed 2017 archived http www webcitation org 6v7garrcz november 20th 2017 17 high frequency trading coinbase exchange https www coindesk com high frequency trading coinbase exchange accessed 2017 archived http www webcitation org 6v7ghnihg november 20th 2017 18 loopring white paper https github com loopring whitepaper blob master en whitepaper pdf accessed 2017 archived http www webcitation org 6v7gnu8z7 november 20th 2017 19 castro m liskov b et al practical byzantine fault tolerance osdi vol 99 1999 173 xe2 x80 x93186 20 coindesk bitfinex bitcoin hack know don xe2 x80 x99t know https www coindesk com bitfinex bitcoin hack know dont know 2016 archived http www webcitation org 6v7fw2mc9 november 20th 2017 21 coleman j state channels http www jeffcoleman state channels accessed 2017 archived http www webcitation org 6v7fi0gbq november 20th 2017 22 hertzog e benartzi g benartzi g bancor protocol hierarchical monetary system foundation global decentralized autonomous exchange 2017 23 othman pennock d m reeves d m sandholm t practical liquidity sensitive automated market maker acm transactions economics computation 1 3 2013 14 24 swan m blockchain blueprint new economy o xe2 x80 x99reilly media inc 2015 25 vukolic xcc x81 m quest scalable blockchain fabric proof work vs bft replication international workshop open problems network security springer 2015 112 xe2 x80 x93125 26 warren w bandeali 0x open protocol decentralized exchange ethereum blockchain 2017 27 wired magazine inside story mt gox bitcoin xe2 x80 x99s $460 million disaster https www wired com 2014 03 bitcoin exchange 2014 archived http www webcitation org 6v7fulqza november 20th 2017 28 wood g ethereum secure decentralised generalised transaction ledger ethereum project yellow paper 151 2014 29 zhang e hongfei d neo white paper http docs neo org en index html accessed 2017 archived http www webcitation org 6v7fpgohz november 20th 2017 11 x0c