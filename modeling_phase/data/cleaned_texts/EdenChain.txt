edenchain programmable economy platform james ahn technical whitepaper version 1 2 edenchain programmable economy platform technical whitepaper 1 disclaimer action reading following disclaimers document contains pertinent information r d businesses eden material prepared informational purposes intended provide relied tax legal accounting advice consult tax legal accounting advisors engaging transaction eden s technical whitepaper information posted homepage guidelines solicitation documents attract investments token issued eden security equivalent jurisdiction decided contribute development eden donation eden include sale exchange cryptographic money form securities investment units stock eden eden token holders receive dividends income residents permanent residents donate eden receive tokens uncertainty legal regulations provide false information eden violates fundraising terms conditions eden request compensation download distribute copies form information provided eden home pages technical white papers etc possibility breach information white paper reviewed approved regulatory authorities publication distribution white papers imply complied regulation relevant law requirements maximum extent permitted applicable laws regulations rules eden entrepreneurs team members etc liable indirect incidental consequential damages related eden project whatsoever document contains information open market research reports information industrial publications internal research eden etc information generally considered reliable assurance accuracy reliability information information contained eden s homepage whitepaper related documents suggested model case binding executed explicitly stated funders terms conditions reproduce distribute kind information documentation provided eden including disclaimer edenchain programmable economy platform technical whitepaper 2 abstract eden blockchain based platform capitalize trade types assets programmable economy technology blockchain smart contracts capitalize tangible intangible asset values tokenization use smart contracts integrate real virtual economies creating fundamentally new programmable economy platform use eden s programmable economy platform includes following advantages 1 lower transaction costs system bereft middleman 2 redistribute profits middleman monopolized 3 creates new market existed capitalization domestic foreign materials turn enrich lives returning economic benefits currently major technical problems achieving programmable economics blockchain technology poor performance lack secured connectivity eden solves technical problems provides components necessary implementing programmable economy eden implements merkle tree namespace solve performance problem executing transactions different namespaces parallel integrates e oracle technology external system interactions addition provides reliability privacy adoption mvt median voter theorem consensus algorithm granting robust functions selection values occur interacting external systems eprotocol ecc elliptic curve cryptography tc threshold cryptography acts powerful mechanism protect attack hackers encrypting network data poet proof elapsed time settlement algorithm ledger data designed enable efficient leader emulation fewer computing resources eden s key programs implemented sgx enclave disable software attacks hardware attacks enhancing secured connectivity interacting external systems addition eden incorporates global dns multi datacenter pattern virtual private network vpn hub technology order ensure secure services despite potential occurrence situations disrupt local systems natural disasters largescaled attacks hackers results durable network continue operate eden service zones world edenchain programmable economy platform technical whitepaper 3 eden applied diverse array industries services initial coin offerings icos iot shared economy platforms gaming finance etc given ability capitalize valuable assets execute transactions rapidly securely low costs edenchain programmable economy platform technical whitepaper 4 1 introduction 1 1 programmable economy internet smart phones big data cloud services artificial intelligence technologies major impact way live devices services embedded daily lives virtually indispensable similarly blockchain technology continue integrated lives dramatically altering manner interact world programmable economy born blockchain meets economic system programmable economy new economic system capitalizes tangible intangible values blockchain technology freely trades internet need middleman existing system middleman provides services buyers sellers order carry transactions safely quickly return middleman receives compensation economic system general public participate network middleman monopolizes profits trades programmable economy buyers sellers connected directly eliminates need middleman result transaction costs lowered entire process simplified participants network receive corresponding revenues gone entirely middleman programmable economy individuals utilize blockchain technology tokenize types assets tangible intangible register blockchain secure ownership trade tokens automate trades iot services edenchain programmable economy platform technical whitepaper 5 figure 1 eden s programmable economy 1 2 tokenization tokenization process converting certain types assets tokens blockchain network cameron huff 2017 world exist plethora asset classes stocks real estate automobiles gold etc individuals able buy sell assets purposes technology developed distinct asset classes begun emerge copyrights insurance policies derivatives contain tradeable value certain conditions met blockchain technology existing assets replaced blockchain based tokens ownership registered necessary conditions specified smart contracts according characteristics asset possible create new assets combination different asset types assetization process assigning ownership intangibles game items credit card points s influence social media platforms edenchain programmable economy platform technical whitepaper 6 figure 2 tokenization 1 3 smart contract computer scientist cryptographer nick szabo explained smart contracts follows set promises specified digital form including protocols parties perform promises szabo 1996 short refers automated trade agreement functions human intervention conditions specified contract met chamber digital commerce described szabo s concept smart contract elements model smart contract automation data processing protocol software code chamber digital commerce 2016 furthermore smart contracts composed steps total 1 identify agreement 2 set conditions 3 code business logic 4 encrypt blockchain technology 5 execution processing 6 network updates edenchain programmable economy platform technical whitepaper 7 bocconi university professor vincenzo morabito divided smart contracts types deterministic nondeterministic morabito 2017 deterministic smart contract type contract data outside execution non deterministic smart contract form requires external data execution morabito 2017 non deterministic smart contracts vulnerable security breaches relative deterministic smart contracts non deterministic smart contracts need retrieve data external systems blockchain networks non deterministic smart contracts integrated external systems create types smart contracts automation agents important element smart contracts figure 3 smart contract 1 3 1 bitcoin smart contract bitcoin provides programming language called script script bytecode stack based language similar forth designed turing incomplete intentionally support loop recursion order ensure execution script programs risk hacking lamela seijas 2017 script supports functions stack manipulation string manipulation bitwise manipulation basic cryptography script inherently limited use edenchain programmable economy platform technical whitepaper 8 factors maximum size script 10 000 bytes limitation bitcoin s block size number available opcodes limited 201 harding 2015 1 3 2 ethereum smart contract ethereum supports turing complete language uses loop recursion flexible implementation bitcoin s script language script prohibits loop recursion order deliberately delay execution program prevent long wait times ethereum solved problem introducing concept gas wood 2017 gas understood kind royalty fee concept uses ether encryption execute smart contract time executes calculations ethereum smart contract runs way subtracts certain gas paid advance individual deliberately delay execution repeat calculation indefinitely interesting feature ether smart context language reactive property ensures smart contract programs executed executed transactions designed reactive characteristic order avoid dos attack smart contracts written languages supported ethereum run ethereum virtual machine evm evms run smart contracts non secure environment create register smart contracts publicly permissive blockchain runs quarantined redundant network environment problems arise running particular smart contract evms roll state execution return gas 1 3 3 nxt smart contract nxt adopted proof stake pos consensus algorithm secure performance scalability generation blockchain technology designed client server architecture connects internal external systems apis unlike bitcoin ethereum nxt prepared smart apis provided nxt nxt api provides basic functions necessary fields file storage messaging trading general logic written programming language javascript python java order create nxt smart contract functions input delete update data block completed nxt api edenchain programmable economy platform technical whitepaper 9 types functions smart contracts created nxt limited blockchain technologies supporting language based smart contracts dummy depend type content apis provided 2 technical motivation smart contracts key element programmable economy tokenization realized smart contracts smart contracts ability rapidly defend attacks misuse tampering hackers deal large number transactions sensitive data smart contracts operate autonomous actors behavior completely predictable christidis 2016 allows smart contracts reliable transaction processing distributed systems professor aad van moorsel categorized issues generated smart contracts categories codifying issue security issue privacy issue performance issue alharby moorsel 2017 codifying issue explains difficulty creating completely seamless smart contract security issue related attacks bugs weaknesses smart contract performance issue caused scalability problems blockchain executing smart contract finally privacy issue describes problems arise content smart contract public number technical issues need addressed order smart contract trusted autonomous actors issues solved smart contracts fields programmable economy true smart contracts 2 1 technical issues major technical issues implementation programmable economy throughput speed security issues restrict functionality programmable economy current blockchain processing techniques exists great deal difficulty techniques conjunction actual services slow speeds vulnerability attacks carried hackers 2 2 performance scalability edenchain programmable economy platform technical whitepaper 10 discussed technical issues bitcoin ethereum s respective blockchain technologies performance scalability according coinbase co founder fred ehrsam facebook handle 157 000 requests second ethereum handle 7 transactions second tps case tokens technical issues related performance scalability solved order continued growth adoption blockchain technology addition higher levels scalability performance necessary smart contracts require far computations traditional blockchain transactions example smart contract interfaced external system slow processing smart contract bottleneck blockchain degrading performance scalability overall system seriously undermining system responsiveness issues related performance scalability salient time number transactions conducted blockchain based platforms smart contract applications continue increase obstacles continue present blockchain suffer lack mainstream adoption enterprises consumers figure 4 tps performance 2 3 lack secured connectivity economist mark flood states important understand financial network edge vertices connected connecting edges forms smart contract flood 2017 distinct systems require require high degree connectivity order execute certain tasks order smart contracts create abundant application services realize programmable economy high level connectivity interact external systems required example suppose cargo owner moves cargo point point b owner creates smart contract pay gps information attached cargo order smart contract implemented gps information attached freight car transmitted blockchain smart contract stored predetermined time interval result smart contract executed freight car driver receive promised cost words system securely interlocked external system provided smart contract provide benefits promised original smart contract smart contracts able work variety external edenchain programmable economy platform technical whitepaper 11 systems order process contracts automatically important point system interaction means interlocking external systems means ensuring stability interacting external systems figure 5 lack secured connectivity ethereum allows oracle interoperate external systems guarantee safety data external systems alharby moorsel 2017 secured connectivity protects attacks hackers occur interaction smart contracts external systems guarantees stability secured connectivity important technical issue addressed scalability automation smart contracts currently provided blockchain technologies bitcoin ethereum edenchain programmable economy platform technical whitepaper 12 3 eden programmable economy platform 3 1 introduction eden eden blockchain based programmable economy platform provides high performance processing speeds address aforementioned technical issues eden capacity develop variety automated services smart contracts enabling interoperability external systems core technologies implementing programmable economy smart contracts greater technological economic value non deterministic smart contracts require chain integration deterministic smart contracts operated onchain conventional blockchain technologies bitcoin ethereum unsafe exposed hacker attacks lack guaranteed trust interacting external systems normally required non deterministic smart contracts eden uses e bridge layer retrieve data multiple data sources non deterministic smart contract interfaced external system eden encrypts data incorporates median voter theorem mvt secure trust defend attacks hackers performance vital technical issue essential implementation smart contracts eden combines namespaces merkle tree isolates transactions based particular namespace secures performance scalability constructing execution system capable parallel processing namespace enables ability carry vast number transactions simultaneously parallel eden supports solidity popular smart contract language time dyerium s evm smart contracts heavily sensitive services payment settlement stable reliable smart contract programming languages important creation unnecessary new type programming language emergence new type language requires long time validated constant testing exposed security vulnerabilities validation period eden constructs blockchain evm solidity verified continually improved community eden guarantees secured connectivity fully realize programmable economy trading blockchain based assets internet tokenization type asset edenchain programmable economy platform technical whitepaper 13 publicly prove ownership asset owner particular asset p2p transactions transactions exchanges edenchain programmable economy platform technical whitepaper 14 3 2 architecture figure 6 eden architecture eden permissioned blockchain consisting layers distributed ledger layer validation layer bridge layer distributed ledger layer place data blockchain separately stored data transactions agreed validation layer processed distributed ledger data added transactions validation layer transaction executed verified layer includes evm runs smart contract validation layer transaction scheduling function significant impact performance scalability eden bridge layer securely import data needed chain smart contract blockchain cooperation chain bridge layer nodes naturally exist onchain chain e protocol implements encryption technique called elliptic curve cryptography threshold cryptography ecc tc reliable communication nodes 3 3 permissioned blockchain permissioned blockchain evolved alternative permissionless blockchain technology allows join network bitcoin ethereum permissioned blockchain technology authorized network administrator authentication process order participate network newly emerging blockchain technologies kadena tendermint chain adopted permissioned networks hyperledger blockchain open source project linux foundation adopted permissioned blockchain technology eden configured permissioned blockchain run smart contracts quickly efficiently trusted environment edenchain programmable economy platform technical whitepaper 15 permissionless blockchain network ethereum smart contract runs nodes leads significant problems surrounding performance efficiency smart contracts stored evm blockchain network executed according certain conditions million million smart contracts exist ethereum blockchain performance problems occur miners network prioritize running smart contracts gain higher profits higher gas smart contracts executed individually running smart contracts nodes based philosophy permissionless blockchain technology individually running validating smart contracts nodes times considered efficient eden permissioned blockchain builds runs trustworthy environment smart contract execution achieved use platform ensures safety increases efficiency use nodes namespaces helps guarantee 100 percent processing transactions figure 7 100% transaction guarantee 3 3 1 block withholding kyber network ceo loi luu described fraud technique called block withholding associated risks luu 2015 block withholding attack technique prevents miner found solution problem pow consensus algorithm receiving incentive disclosing answer mining pool technique effectively mining group seeks attack example miner group wants attack newly formed miner group b miner group selects high performance computer penetrate miner group b launches block withholding attack members miner group b stop receiving incentives motivation participate mining group weakened eventually leads disorganization miner group b types block withholding attacks identified bitcoin forum number recent papers eyal 2015 order avoid issues eden operates fair stable system permissioned blockchain purpose eden secure incentives mining create edenchain programmable economy platform technical whitepaper 16 programmable economy public confidence eden essential creation programmable economy system transparently operated devoid foul play 3 4 high availability eden permissioned blockchain consideration service availability necessary given eden server operated small number authorized agencies companies server operation terminated hackers attack servers natural disaster earthquake eden able guarantee high availability order ensure services users businesses alike continue operate times regardless external threat eden utilizes cloud services ensure high degree availability operates eden system multi datacenter pattern global dns load balancer system provides eden service configured operated service zone major continents asia north america europe provide stable service despite attacks hackers occurrence natural disasters network service zones deployed continents composed virtual private network vpn cloud services provide connectivity data centers continents high speed dedicated lines enabling fast networking data center data center configuration multi datacenter pattern pattern provided cloud service provider amazon number internet companies apache foundation netflix cloudfoundry attlasian recommended microsoft azure meshenberg gopalani kosewski 2013 edenchain programmable economy platform technical whitepaper 17 figure 8 eden system operation high availability figure 8 shows configuration operating environment eden multi data center pattern vpn applied operating environment receives data request outside global dns plays role connected appropriate service zone secures availability operating multiple global dns servers endpoints services designed operated global dns load balancer delivers requests forwarded global dns eden servers order processed load balancer requests routing collects status information servers helps perform intelligent service operation round robin service operation turn allows system pinpoint servers encounter problem monitor workload server aiding capacity planning servers running eden protected operational firewall operational firewall way organize eden servers functional groups apply firewall policy organized functional groups operational firewall functionally apply abstracted security policy server security policy flexibly designed applied groups managed internally allows eden architecture minimize form potential mistake setting work users edenchain programmable economy platform technical whitepaper 18 vpn mesh topology built service zones performance management problems arise vpn configuration complicated range service zone increases eden operating system configure vpn star topology vpn router service zone connected vpn gateway connecting service zones enable vpn networking service zones 3 5 proof elapsed time poet consensus algorithm plays important role blockchain technique approaches nakamoto consensus way conduct leader selection lottery process selected leader right authenticate previous block create new block case bitcoin node solves hash puzzle selected leader second method uses bft byzantine fault tolerance method select leader final agreement reached stages voting eden uses proof elapsed time poet consensus algorithm poet nakamoto consensus method uses cpu command select leader randomly enormous levels energy solve hash problem like bitcoin currently poet provides opportunity leader block generation authority nodes participating blockchain network probability similar leader selection algorithms foundation 2017 poet implemented sgx enclave defend hacker attacks allow leader selection process proceed safely node poet uses cpu command sgx enclave obtain wait time follows exponential distribution random number selects node smallest wait time leader edenchain programmable economy platform technical whitepaper 19 figure 8 poet poet designed follow poisson distribution form discrete probability distribution follows exponential distribution shown expresses times certain number events occur unit time event independent f t e t 0 3 6 distributed ledger layer dll distributed ledger layer provides decentralized database functionality eden basis linux foundation s open source project hyperledger dll stores data generated eden block data modified added dll stores data disk device assumes stored data originated legitimate transaction dll find necessary data outside block id transaction id provides function accessing information transactions included block dll blockcache module minimize disk access blockcache mainly stores currently blocks memory requested block found reads block disk loads memory depending frequency use possible determine blocks kept memory cache effect optimal use memory obtained 3 7 software connector software systems researcher xiwei xu proposed method blockchain technology form software connector xu 2016 view improve quality software architecture edenchain programmable economy platform technical whitepaper 20 enhance information transparency traceability addition important architectural design determining information stored blockchain chain stored chain data size stored blockchain limited eden designed entire architecture considering distributed ledger layer stores information transactions occur software connector module interact distributed ledger layer interfaces defined software connector followed software connectors form middleware component interoperability software modules essential elements distributed environments affect performance reliability security hyperledger adopts modular design makes easy use distributed ledger function software connector entire architectural design easily integrate functions system according designer s purpose needs figure 10 blockchain software connector 3 8 execution layer el execution layer el executes processes verifies transactions providing important functions smart contracts running eden platform transactions order update data eden s distributed ledger el provides trusted execution environment tee transaction safely protected data extortion data forgery hacker attacks transactions key logic including smart contracts executed tee el transaction execution scheduling tes specifies transactions executed node tes important technical factor affects performance different processing performances computing resources depending transactions managed executed tes includes ethereum virtual machine evm run smart contracts written solidity transaction executed smart contract running ethereum el executes evm edenchain programmable economy platform technical whitepaper 21 3 9 ethereum virtual machine evm currently ethereum s smart contracts users blockchain projects demonstrate stability functionality instead developing new language system smart contracts eden leverages evm eden permissioned blockchain increase accessibility eden smart contracts create variety smart contracts 3 10 bridge layer bl bridge layer bl important technical element differentiates eden blockchains guarantees zero knowledge trusted connectivity chain offchain ethereum smart contracts interact external systems oracle guarantee trustworthiness data external sources realize smart contract based programmable economy necessary secure trusted connectivity enables blockchain external systems securely function despite threats hackers trusted connectivity secured possible expand functions interacting external systems automating services bl composed chain module interacting smart contract chain module interacting external system modules networking onchain chain modules chain module serves gateway responding external data requests required smart contracts chain module fetches data requested chain module accessing actual external system verifies data selects specific value transmits chain module chain chain modules located different networks configure network securely communicate exchange data 3 11 transaction execution scheduling tes eden client update data dll transactions smart contract execution possible transactions eden uses batch block units grouping transactions transactions gathered form batch batches form block el transactions processed block block basis edenchain programmable economy platform technical whitepaper 22 figure 11 transaction batch block grouping transactions batches dependency transactions occur smart contract easily observed transactions batch assumed related problem executing certain transactions transactions invalidated example hypothetical transaction generated transaction b transaction c transactions related process considered normally completed transactions executed successfully transactions grouped batches error occurs transactions transactions included batch invalidated considering execution order correlation transactions result dependency problems easily solved 3 12 transaction data structure transaction consists header body contain following data fields field description public key client s public key dependency transaction data dependency edenchain programmable economy platform technical whitepaper 23 field description namespace namespace differentiating transactions nonce random data differentiating transactions figure 9 transaction header field description header transaction header data header signature signature data payload payload data figure 10 transaction body similar blockchain technologies eden designed sign transaction client s public key addition transaction header body configured pair dependency field transaction header specifies transaction corresponding transaction dependency dependency field indicates transactions involved transactions run parallel transaction scheduling performed according relationship order namespace plays role delimiter indicates nature transaction eden create coin blockchain system smart contracts example alice wants create alice coin issue alice coin supplied smart contract template order trade alice coin issued way transaction generated time alice assigned namespace indicate transaction related alice coin edenchain programmable economy platform technical whitepaper 24 eden collect process alice coin related transactions referencing transaction header approach allows eden greatly improve performance scalability parallelizing transactions according namespace 3 13 merkle tree merkle tree presented ralph merkle 1998 tree data structure authentication merkle 1998 leaf nodes hash values child nodes data stored nonleaf nodes merkle tree currently variety projects ipfs zfs bitcoin ethereum apache cassandra efficiently store data verify data integrity data root node merkle tree updated time new node added hash function recursively applied hash value leaf nodes hash value root node different value specific node changed property enables data integrity verified knowing root node value node value counterparty node value 3 14 namespace eden uses radix merkle tree store current state blockchain validator nodes check conformity blocks contain radix merkle tree radix merkle tree displays data optimal space child node unites nodes effectively use memory leaf node radix merkle tree node address included possible identify sibling parent node node address value validator node examines node address included transaction block batch verify transaction node address namespace node path edenchain programmable economy platform technical whitepaper 25 figure 11 radix merkle tree node address namespace form identification value ascertaining type transaction transactions eden contain namespace information validator nodes use namespace information group transactions blocks related transactions example transaction contains simple transactional information namespace edn smart contract xyz namespace xyz validator node distinguish xyzrelated transactions edn related transactions simply checking namespace contained transaction edn xyz different types transactions data consistency problem transactions executed parallel result longer necessary execute transaction time data consistency issues case existing solutions blockchain space edenchain programmable economy platform technical whitepaper 26 figure 12 transaction based namespace 3 15 transaction routing eden runs tee prepared namespace transaction routing router receives execution request transactions submitted validator node searches resource registry execution node order render batches separated namespace forwards transactions processed execution node resource registry computing nodes processing namespace recorded router find namespace resource registry transfers transaction default execution node carries transaction tee allocated namespaces run independently simultaneously global lock current state exist data consistency issues monitoring workload allocated tee real time constructing appropriate number execution nodes possible operate blockchain optimal computing resources according required computing power edenchain programmable economy platform technical whitepaper 27 figure 13 transaction routing namespace 3 16 e bridge e bridge core technology bl connects eden external system essentially acts software bridge connecting chain chain data moving blockchain ensure security implementing technologies consensus algorithm encrypted messaging case external system data guarantee security attacked hackers places chain module chain module interact necessary trust external system assure data transmitted external system securely transmitted threat linked chain module trust problem chain data source resolved external system provides public services reputation example apple stock needed smart contract data received nasdaq provided data considered reliable trust problem occur chain module communicating external system largely classified issues edenchain programmable economy platform technical whitepaper 28 1 data source reliability reliability problem data provided external system correct 2 reliable data transfer data source correct delivery data means data reliable data source simply transmitted fully subjected hacking data corruption improper data fetching 3 reliable data transfer chain module chain module reliable data transmitted external system transmitted chain module attacked e bridge technology solves technical problems provides trusted connectivity chain chain modules e bridge designed way exist software modules oracle server enclave located chain executor located chain oracle clients able interact secure connectivity figure 14 e bridge layer 3 16 1 e bridge architecture e bridge consists executor executes transactions e oracle client forwarding external data access requests smart contract e oracle server processing requests clients sgx enclave acts tee running e oracle server programs executor e oracle client located chain e oracle server sgx enclave located chain e protocol enable secured connectivity onchain chain modules e bridge edenchain programmable economy platform technical whitepaper 29 figure 15 e bridge architecture 3 17 executor executor equipped evm responsible running smart contracts executor runs isolated environment ensure security updates smart contract directly recorded distributed ledger technology dlt data verified validator allowed access dlt eden designed run validate smart contracts executor node running n executor nodes 3 18 e oracle e oracle software module provides functions smart contracts access external data consists e oracle client e oracle server e oracle client requests external data e oracle server collects data sends e oracle client e oracle client ability called smart contract e oracle client loaded smart contract e oracle client uses e protocol request data required e oracle server e oracle consists nodes provides data verification methods nodes consensus algorithm final data selection 3 18 1 e oracle client e oracle client special form smart contract smart contracts provide external data access functionality e oracle client requests external data access e oracle client passes parameters required execution e oracle server receives edenchain programmable economy platform technical whitepaper 30 external data collected e oracle server delivers smart contract e oracle client acts gateway smart contract e oracle server 3 18 2 e oracle server e oracle server provides actual functionality required access data requested e oracle client important feature e oracle server execute external data access requests e oracle client collect external data select appropriate values forward values e oracle client order enhance security e oracle server run external data access related code e oracle server runs code separate space called sgx enclave e oracle server consists n nodes external data designed fetch multiple pieces data data e oracle server imported multiple e oracle servers run data reliability systemic problems prevent proper importing data 3 18 3 sgx enclave sgx enclave intel s software guard extension sgx enclave runs programs trusted environment ensure security sgx enclave protects data programs running enclave hacker attacks placing programs separate spaces encrypting data making inaccessible external processes encrypted data code safe able decrypted enclave hacker finds data code directly accessing memory channel attack impossible decrypt way determine private key enclave according senior wipro software engineer surenthar selvaraj sgx enclave provides security cpu level defend hardware software attacks intel selvaraj 2016 memory enclave read written regardless privilege level cpu mode enter enclave environment traditional calls jumps register manipulation stack manipulation addition keys encryption enclave randomly changed key values stored cpu memory accessed externally eden runs e oracle server code sgx enclave order provide robust data system security defend form hacker attack edenchain programmable economy platform technical whitepaper 31 figure 16 sgx enclave 3 18 4 e oracle consensus eden runs multiple e oracle servers secure trusted connectivity external data imported running e oracle server complete correctness data ensured system error issue data derived trusted data source avoid problem e oracle operates 2n 1 called e oracle pool multiple eoracle pools difficult determine values provided e oracle server use types values received e oracle server divided types discrete type value continuous type value discrete type value discontinuous value refers value type true false man woman continuous type value refers successive values 15 34432 1 0213 discrete type values value multiple e oracle servers value continuous type values vary depending data source nature external system data generated trusted data source example derivatives determined apple stock prices e oracle server acquires apple stock prices services nasdaq yahoo finance value nasdaq 175 01 yahoo finance 174 98 e oracle server selects values combines values determine final value deliver e oracle client e oracle consensus technology determines values ultimately situation edenchain programmable economy platform technical whitepaper 32 3 18 5 schelling point american economist thomas schelling devised concept schelling point people tend behave naturally common sense think act randomly schelling 1960 schelling famously responded question meet stranger new york meet stranger tomorrow stating information booth grand central station noon explained reason people likely choose time place traditionally time place appointments use schelling point create agreement external data e oracle e oracle server separate node accesses external data parameters passed smart contract receives results e oracle servers exchange values select final value centralized system important basic assumption trust values submitted e oracle servers ethereum founder vitalik buterin suggested creation schelling coin solution problem buterin 2014 schelling coin offered submitting ultimately selected correct value incentive individuals participating process determining value participants submit value similar value individuals submit receiving payment process repeated values selected participants naturally approach actual value schelling point uses common facts focal point selection schelling point create common knowledge participants continuously present incentives distinguish incorrect correct values lead value majority participants select difficult apply schelling point participants constantly changing common information value choose created 3 18 6 e oracle consensus median voter theorem mvt e oracle servers contain types data discrete type data continuous type data data type requires distinct consensus algorithm e oracle applies majority voting discrete type data mvt continuous type data 3 18 7 majority voting value e oracle limited yes true false majority voting performed select common value e oracle server confirms value final value majority voting commonly consensus algorithm applied discrete type data difficulty edenchain programmable economy platform technical whitepaper 33 3 18 8 median voter theorem mvt mvt method applied exists continuous type data mvt theory majority voting system choose result preferred median voter holcombe 2006 economist duncan black explained result chosen median voter majority voting system nash equilibrium value moves away value median voter benefit gained black 1948 implies decision median voter s choice large number participants try determine certain value majority system benefit realized case median voter refers person thinks choice selected half participants ideal choice figure 17 mvt puglisi 2011 3 19 voting theorem case common resource voting steady state equilibrium vsse resource utilization growth rate determined median voter borissov 2010 equation illustrating principle shown 0 1 0 figure 21 voting steady state equilibrium vsse voter strives maximize utility order increase value vsse number individuals want increase vsse status value exceed 50% total number individuals edenchain programmable economy platform technical whitepaper 34 value vsse determined following equation median voter 1 8 3 19 1 equilibrium growth rate determined follows 1 1 8 final equilibrium state value vsse determined median voter majority secured vsse value changed mvt consensus algorithms implemented sgx enclave hackers hack half nodes order succeed attack requires considerable time effort mvt uses median final selection value applied continuous type data solve issues cases majority voting suitable addition mvt require common information unlike schelling point select final value values submitted e oracle servers prior information finally mvt need introduce separate incentive system simply clearly implemented e oracle server uses mvt select final value selecting continuous type data 3 20 threat model majority voting mvt e oracle consensus vulnerable 51% attack hacker succeeds taking 51% e oracle servers exposed externally values submitted hijacked server median e oracle server send modulated values e oracle client order prevent risk e oracle consensus module runs programs sgx enclave defend hardware software attacks accesses external services https data sources support https allow data access e oracle server edenchain programmable economy platform technical whitepaper 35 4 e protocol e protocol protocol communication e oracle servers e oracle pool e oracle servers need interact access external data reach consensus collected data e oracle server manipulate data tamper program running sgx enclave possibility hacker sneak network packets prevented e protocol allows communication threshold cryptography encrypts data threshold cryptography encryption protocol allows k people group composed n people share special values protect data shoup 2000 furthermore threshold cryptography protocol cooperative property data necessary decryption shared participants encrypted data decrypted data individual participants present threshold cryptography contains following characteristics lee shen wheatman 2016 1 trusted party required depending algorithm 2 participants smaller k decrypt message 3 attacker use acquired information determine signatures future messages 4 signatures created participants create mix signatures e protocol applied process importing data requested smart contract session external e oracle client finally selecting value returning e oracle client 4 1 elliptic curve cryptography ecc threshold cryptography tc rsa threshold method require trusted party leak important information initial setup secret sharing nguyen 2005 rsa threshold improves safety solving problems existing threshold cryptography ecc tc method provides similar level security keys smaller size rsa threshold complete operations faster memory ibrahim ali 2003 ecc tc share keys public key private key exist edenchain programmable economy platform technical whitepaper 36 points elliptic curve padmavathi lavanya 2012 ecc tc consists stages key generation encryption decryption ecc tc encryption divides message encrypted n encrypts piece divided message general steps applying ecc tc described follows 1 randomly select abase point x y elliptic curve 2 place plaintext xm ym 3 divide m w apply tc 4 node selects private key n calculates public key p n x y example node generate random number k encrypt message cm k x y xm ym kpa 5 decrypt cm proceed follows xm ym kpa na k x y xm ym k na x y na k x y xm ym encrypted messages reconstructed shamir s method decrypted private key read original message e protocol uses ecc tc encrypt messages e oracle following figure illustrates process encrypting decrypting edenchain programmable economy platform technical whitepaper 37 figure 18 ecc tc encryption figure 19 ecc tc decryption 4 2 external attacker external attacker accessed e protocol message information obtained public key q random number k pieces information obtained normal ecc attacker obtain information external attacker accessed message knew e oracle server uses ecc tc attacker obtain public key q random number k impossible decrypt message identify signature 4 3 attack malicious participant possible attempt modulate decrypt message node participating eoracle session attempt little effect decrypt message edenchain programmable economy platform technical whitepaper 38 ecc tc necessary know secret keys nodes participating ecc tc impossible decrypt message individual secret key 5 confidentiality eden confidentiality blockchain divided aspects confidentiality smart contract ensures specific individuals able observe content smart contract second confidentiality transaction ensures content transaction available specific individuals oracle confidentiality ensures data exposed requested external system account philosophical characteristics technology blockchain difficult secure second forms confidentiality eden variety smart contracts implemented individual allows encrypted smart contract person confidence person organization submitted smart contract execute believing initial contract safe important assumption greatly affect overall security eden guaranteed eden allow encrypted smart contracts encryption transactions essential element financial transactions specialized sealed auctions eden s smart contracts need interact external systems eden provide records past transactions ownership requested outside utility eden decline oracle confidentiality important security factor communicating external systems trusted connectivity secured smart contracts order smart contracts automate secure continuous interactions external systems required process important information able migrate network hacker able access information cause margin misuse seriously undermine security 5 1 confidentiality sgx encrypted protocol confidentiality ensured sgx enclave encrypted protocol privacy guaranteed details transaction smart contract executed eden seen processes e oracle consensus access external system e oracle server import data select multiple pieces data executed sgx enclave sgx enclave running limited access data encryption understood insiders system operators hackers edenchain programmable economy platform technical whitepaper 39 sgx enclave external data imported https https uses ssl certificate encrypted communication reduces risk hacking prevents insider learning content data smart contracts support interactions external systems support https allow unencrypted communication protocols sgx enclave store data communicating external systems permanent storage device disk deleted immediately execution ends 5 2 encrypted protocol hackers possible attacks terms networking e oracle running sgx enclave networking external systems networking e oracle servers communication sgx enclave external system requires https data encrypted addition communication e oracle servers encrypted ecc tc result possible decrypt manipulate message attacker accesses message 5 3 lack censorship transactions smart contracts executed eden run evm sgx enclave data controlled accessed censored eden permissioned blockchain similar permissionless blockchain censor data provides environment transactions smart contracts run equally completely 5 conclusion eden blockchain technology improves speed security typical technical requirements applying blockchain technology programmable economics data consistency problem serial execution scalable increasing computing power handle transactions increase processing speeds eden uses namespace technology tie transactions contain namespace transactions belonging different namespaces data integrity issues executed parallel simultaneously number namespaces increase individuals increase processing speeds adding computing power aid achieving higher levels scalability individuals require faster processing create namespace computing edenchain programmable economy platform technical whitepaper 40 zone process transactions based namespace order maintain optimal performance blockchain conjunction external service deal large number transactions risk subsequent hacking event increases conventional blockchain techniques focus security blockchain external security provided eden uses e oracle technology effectively defend hacker attacks conjunction external services e oracle technology uses multiple data source ecc tc mvt technologies given e oracle implemented sgx enclave nearly impossible hack order succeed hacking 51% e oracle attack server eden easily use blockchain technology diverse array enterprise use cases edenchain programmable economy platform technical whitepaper 41 references alharby m moorsel 2017 blockchain based smart contracts systematic mapping study computer science information technology black d 1948 rationale group decision making journal political economy bontje j 2016 node execute contract code transaction retrieved https ethereum stackexchange com questions 357 node executethe contract code transaction buterin v 2014 schellingcoin minimal trust universal data feed retrieved https blog ethereum org 2014 03 28 schellingcoin minimal trust universal data feed buterin v n d generation smart contract decentralized application platform retrieved https github com ethereum wiki wiki white paper cameron huff 2017 nasdaq retrieved http www nasdaq com article howtokenization putting real world assets blockchains cm767952 chamber digital commerce 2016 smart contracts 12 use cases business chianese 2015 smart environments cultural heritage novel approach create intelligent culural spaces journal location based services ehrsam f 2017 6 scaling ethereum billions users retrieved medium https medium com fehrsam scaling ethereum billions users f37d9f487db1 eyal 2015 miner s dilemma ieee symposium security privacy tschorsch f n d bitcoin technical survey decentralized digital foundation l 2017 sawtooth retrieved https sawtooth hyperledger org docs core releases latest introduction html proof ofelapsed time poet harding d 2015 maximum size scriptsig scriptpubkey retrieved bitcoin stack exchange http bitcoin stackexchange com questions 35878 amaximum size scriptsig scriptpubkey holcombe r g 2006 public sector economics upper saddle river pearson prentice hall p 155 ibrahim m h ali 2003 robust threshold elliptic curve digital signature providing new verifiable secret sharing scheme circuits systems jameson h 2017 6 accounts transactions gas block gas limits ethereum retrieved https hudsonjameson com https hudsonjameson com 2017 06 27 accounts transactions gas ethereum borissov k 2010 common private ownership exhaustible resources theoretical implications economic growth istanbul konstantinos c 2016 blockchains smart contracts internet things ieee lamela seijas p 2017 scripting smart contracts distributed ledger technology edenchain programmable economy platform technical whitepaper 42 lee h shen h wheatman b 2016 implementation discussion threshold rsa lewis n d agentleintroductiontosmartcontracts retrieved https bitsonblocks net 2016 02 01 gentle introduction smart contracts li s xu l d zhao s 2015 internet things survey information systems frontier luu l 2015 power splitting games distributed computation case bitcoin pooled mining ieee flood m d 2017 contract automaton computa tional representation financial agreements merkle r 1998 digital signature based conventional encryption function retrieved merkle paper https people eecs berkeley edu raluca cs261 f15 readings merkle pdf meshenberg r gopalani n kosewski l 2013 active active multi regional resiliency retrieved medium https medium com netflix techblog active activefor multi regional resiliency c47719f6685b microsoft 2017 multiple datacenter deployment guidance retrieved developer network https msdn microsoft com en library dn589779 aspx morabito v 2017 smart contracts licensing business innovation blockchain nakanishi s 2016 6 gas limit transaction block gas limit different retrieved stackexchange https ethereum stackexchange com questions 7359 gas limit intransaction block gas limit different nguyen h 2005 rsa threshold cryptography padmavathi g lavanya b 2012 comparison rsa threshold cryptography ecc threshold cryptography small mobile adhoc networks advanced networking applications puglisi r 2011 political economics approach schelling t 1960 strategy conflict harvard university press selvaraj s 2016 overview intel software guard extension enclaves retrieved intel https software intel com en blogs 2016 06 06 overview intel software guardextension enclave shoup v 2000 pratical threshold signature ibm research lab solidity n d solidity retrieved http solidity readthedocs io en develop index html huckle s 2016 internet things blockchain shared economy applictions szabo n 1996 smart contracts building blocks digital markets szabo n 1997 formalizing securing relationships public networks pureswaran v 2015 device democracy saving future internet things ibm gramoli v n d blockchain software connector wood d g 2017 ethereum secure decentralised generalized transaction ledger edenchain programmable economy platform technical whitepaper 43 xu x pautasso c zhu l 2016 blockchain software connector ieee