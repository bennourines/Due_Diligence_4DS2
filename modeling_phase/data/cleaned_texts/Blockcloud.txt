blockcloud blockchain based service centric network stack zhongxing ming shu yangy qi li dan wangz mingwei xu ke xu laizhong cuiy dept comp sci tech tsinghua univ tsinghua national laboratory information science technology y szu national engineering laboratory big data system computing technology z dept computing hong kong polytechnic university abstract connecting hundreds billions devices internet things iot technology large influence people s life future iot threatened frail connectivity poor scalability absent trust cracked security broken business model researchers proposed service centric networking scn provide reliable connectivity global scalability trust security incentive services approaches hard guaranteed direction use blockchain technology achieve trust secure incentive iot solutions based assumption stable connected underlying network luxury mobile dynamic iot scenarios paper describe new approach combines advantages scn blockchain empower iot propose service centric blockchain architecture leverages service driven communication paradigm support mobility scalability design new consensus mechanism en efficient ledger structure provide trust security incentive decentralized manner finally develop service pricing distribution mechanism fairly protects profits service providers users network introduction predicted 20 billion devices 2022 1 internet things increasingly platform accessing services run applications smart healthcare virtual augmented reality vehicle telematics self navigating cars drones multi user ultra high definition telepresence envisioned common near future table unfortunately dream smart safe efficient future threatened inherited internet design today s iot architecture facing great challenges frail connectivity poor scalability absent trust cracked security broken business model 2 4 number researchers propose service centric networking scn address problems 5 15 scn future internet technology provides service aware network stack applications communicate directly service names instead addresses way scn provides clean slate solution interface failover device mobility global scalability 15 scn frail terms trust security economic incentive service level 16 problem scn lack compelling research supported national natural science foundation china grant 61625203 61572278 national key r d program china grant 2016yfb0800102 2016yfc0901605 chinese postdoctoral science foundation grant 2016m591181 table iot units installed base category millions units category 2016 2017 2018 2022 business cross industry 1 102 1 1 501 0 2 132 6 4 381 4 consumer 3 963 0 5 244 3 7 036 3 12 863 0 business vertical specific 1 316 6 1 635 4 2 027 7 3 171 0 grand total 6 381 8 8 380 6 11 196 6 20 415 4 source gartner january 2017 sustainably profitable business models time holding studies use blockchain provide iot trust secure economically incentive properties 17 20 blockchain technology provides working proof decentralized trust 21 provides frictionless internet native currency allows time empower sensor world wide service market immediately earn profit strongly incentivizes sensor provide services network 22 blockchain application layer overlay functions rely underlying network underlying network provides stable connectivity sufficient scalability blockchain play positive role real iot scenarios highly mobile dynamic present blockcloud new approach combines advantages scn blockchain empower iot blockcloud scn forms underlying physical network provides connectivity mobility scalability blockchain logically operates scn provide decentralized trust security fairness economic incentive design concept shown figure 1 combining scn blockchain unified system making fit iot challenging task little previous work reference 5 aspects approach address challenge design layered structure embed blockchain scn ii leverage service access layer sal 15 enable service based communications iii design proof service pos mechanism reliably verify services iv develop compacted directed acyclic graph codag structure effectively record transactions v devise truthful continuous double auction tcda mechanism fairly distribute services note blockcloud model compatible todays internet clear simple evolutionary strategy like fig 1 empowering iot service centric blockchain ip blockcloud universal overlay blockcloud run including ip blockcloud s advantages service distribution application friendly communication naming robust security mobility broadcast realized incrementally relatively painlessly contribution paper follows design blockcloud new service centric blockchain architecture systematically address mobility scalability trust security fairness incentive problems iot design proof service consensus reliable verification iot services develop codag fast recording iot transactions devise tcda fair pricing matching services remainder paper organized follows section ii presents reason leveraging service centric blockchain approach section iii illustrates architecture proposed approach section iv provides detailed description service centric communication paradigm section v shows novel proof service consensus reliable service verification section vi presents design compacted dag prove effectiveness section vii describe tcda mechanism prove strategyproof service providers service users ii background motivation service centric approach iot exposed challenges traditional internet largely result design today s internet design communications expected happen fixed entities 8 iot world scale dynamic property connected sensors facing great challenges sense mobility security scalability network management business model 23 24 executives big strategic changes set disappointed seek scale todays iot solutions support tomorrows hundreds billions things 2 service centric networking scn promising approach evolve internet infrastructure away host centric paradigm based perpetual connectivity network architecture focal point named service paradigm connectivity intermittent end point network service capitalized transparently expected benefits improved efficiency better scalability better mobility better robustness challenging communication scenarios 25 example placing environment monitoring service near user possible user access locally backhaul internet connectivity available e g earthquake blockcloud team proposes improve iot service centric paradigm simple change hourglass model allowing thin waist use service names instead ip addresses service achievement makes service containers class citizen iot architecture service names blockcloud chunk data conversation tcp ip transport signature plus sequence number today streaming service youtube directly forcing embedded conversation consuming host youtube com figure 2 shows interconnected autonomous systems ases data centers acting service execution environments service instantiated locations service management placement perspective orchestrator logic needs decide service execution environment service instantiated given rich set resources scn aims optimize location individual service component instances according performance requirements application location users according experienced demand 1 improving mobility blockcloud mobility devices inherently supported adopting service based communication paradigm introduced serval 15 centerpiece serval architecture new service access layer sal sits unmodified network layer enables iot devices communicate directly service names sal provides clean service level control data plane split enabling policy control stack based routing connects clients services 15 service subscriber s perspective service provided network need manage direct communication exact end point provides service manner end points seamlessly change network addresses migrate flows interfaces establish additional flows efficient uninterrupted service access explained section iii best knowledge blockcloud blockchain based technology comprehensively address mobility problem iot 2 enhancing scalability traditional ip network iot platforms provide centralized server aggregate iot devices data services publish web portal manage subscription membership centralized architecture ensures data resource availability renders poor scalability high bandwidth consumption fig 2 service centric networking overview high volume control data exchange scalability iot spaces challenging webscale internet scale applications bisection bandwidth requirements centralized cloud solution staggering data generated easily exceed reported trillion objects amazon s3 26 blockcloud distributed nature services peerto peer technology makes scalability possible service registration discovery key features blockcloud easily achieved adoption distributed hash table dht network 27 explained section iii b blockchain service centric approach supports ubiquitous service mobility good scalability need kind centralized infrastructures service registration todate service resolution routing 15 16 infrastructures provided internet service providers isps existing systems like dns centralized operation exposed potential risks malicious attacks intrusive surveillance published service credibly verified greatly harms profits end users malicious services subscribed problem incentive model service providers incentive publish service network 1 quantity profit providing service predicted 2 achievement profit providing service guaranteed reason means build fully trusted party centralized distributed perform global accounting profit distribution current scn traditional internet technologies problems solved blockchain approach important contributions blockchain enable formation trust generating mechanism decentralized manner makes network trust generating machine important contributors blockchain decentralized governance incentive mechanisms ecosystem growth service providers tokens help smart contracts certainty getting profits protected distributed consensus mechanisms adopting blockchain approach enhance servicecentric network achieve following gains 1 getting trust blockcloud devices form blockchain network system runs fully decentralized manner propose novel proof service pos consensus mechanism solve problems guaranteeing truthful service facticity services provided network automatically checked guaranteed pos consensus cheating providers punished kicked system successful decentralization iot lie peer peer trustless environment need participants trusted centralized single point failure 2 protecting security blockcloud blockchain system peer peer network known coral 27 form secure backbone blockcloud network communication operations devices embedded blockchain service information stored coral routed peer nodes called service miners guaranteed proof service consensus explained future section iii system central point exposed attackers security guaranteed consensus mechanism distributed miners economically motivated honest 3 achieving fairness blockcloud services published subscribed network service providers subscribers atomically matched blockcloud matching process performed smart contract controlled end point centralized party smart contract runs truthful continuous double auction tcda prevents cheating maximizes social welfare entire community tcda mathematically strategy proof incentive traders lie hide private information traders best knowledge blockchainbased technology approach global fairness service distribution iot 4 strengthening incentive identifying matching supply demand services real time blockcloud create new marketplaces complex real time digital marketplaces build foundation established iot devices blockchain networks expand reach transformation quickly enable new peerto peer economic models foster sharing economies end iot expected physical world bit easy search utilize engage virtual world iii blockcloud architecture architecture overview blockcloud introduces new functionality blockchains defining set new operations supported blockchain carefully learning lessons design philosophy tcp ip network 28 exploring successful experience superior fig 3 blockcloud architecture blockchain research result 29 blockcloud team decide build layered structure blockcloud layers layers transactionchain layer servicechain layer control plane layers routing layer service layer service plane b blockcloud layers 1 transactionchain layer transactionchain occupies lowest tier blockcloud operations encoded transactions underlying transactionchain transactionchain stores transactions network global ledger blockcloud holds evolving concept provides feasibility compatibility different underling blockchain technologies characteristic iot chosen technology transactionchain layer elastic efficient secure scalable cost effective currently blockcloud team proposes use compacted directed acyclic graph codag mathematically proved efficient large scale dynamic iot scenarios 30 codag improves traditional dag 31 structure guarantee fast confirmation time liveness property section vi describe design codag prove properties agnostic underlying transactionchain design blockcloud limitations blockchain technology transactionchain long security reliability properties directly dependent underlying blockchain believe ability migrate technology important design choice allows larger system survive underlying blockchain compromised 2 servicechain layer layer 1 servicechain defines new operations requiring changes underlying blockchain blockcloud nodes aware layer underlying blockchain nodes agnostic blockcloud operations defined servicechain layer encoded valid blockchain transactions additional metadata blockchain nodes raw transactions logic process blockcloud operations exists servicechain level rules accepting rejecting blockcloud operations defined servicechain accepted operations processed servicechain construct database stores information global state system state changes given blockchain block servicechains build variety state machines currently blockcloud defines state machines global service management system service matching pricing system 3 routing layer blockcloud separates task routing requests e discover service actual providing service avoids need system adopt particular management service onset instead allows multiple service providers coexist including commercial entity peer peer systems blockcloud uses service files storing routing information similar dns zone files format servicechain binds names respective hash service file stores bindings control plane service files stored routing layer users need trust routing layer integrity service files verified checking hash zone file control plane 4 service layer layer service layer serves actual services network service names signed key respective owner service providing services outside transactionchain blockcloud allows arbitrary iot services provided variety iot devices users need trust service provider verify authenticity service proof service control plane blockcloud designed service oriented platform design motivated team s experience yearslong research development service centric networking 15 32 33 communication blockcloud driven service names addresses service corresponds group possibly changing processes offering service applications use names directly express intent publish access specific services elevates services class network entities distinct hosts interfaces core blockcloud new service access layer sal sits transport network layers 15 sal maps service names packets network addresses based rules service table managed blockchain explained section iv unlike traditional service layers sit transport layer sal s position transport provides programmable service level data plane adopt diverse service discovery techniques sal programmed user space control plane acting service level events triggered active sockets e g service instance automatically registers binding socket gives network programmers hooks ensuring serviceresolution systems date section iv provide details clean service centric network stack c proof service practice service publishers convince customers truly provide service blockcloud introduce novel class proof service schemes allows proving particular service physically provided network announced section v describe operations prove properties proof service detail d state machines blockcloud supports smart contacts running state machines servicechain layer blockcloud construct arbitrary state machine processing information underlying transactionchain servicechain treats transactions underlying blockchain inputs state machine valid inputs trigger state changes given time state machine exactly global state time moves forward underlying blockchain evolves global state updated servicechain introduce new types state machines requiring changes underlying blockchain currently blockcloud introduces state machines 1 service machine represents global state service management system dealing provides particular service 2 market machine matches service publishers subscribers truthful continuously double auction algorithm explained section vii e marketplace blockcloud incentive driven marketplace iot services publish service blockcloud subscribe service blockcloud central party stop service providers contribute network rewarded tokens form positive self growing platform continues evolve blockcloud marketplace decentralized blockchain application built blockcloud platform service providers publish services marketplace users subscribe services marketplace responsible maintaining public feedback quality services reputation providers information information help users evaluate reusable services market mechanism efficient determination service trades address following tasks 34 buyers sellers benefit trade identified second buyers sellers matched maximize total gains trade specific price determined matched buyer seller pair blockcloud propose novel truthful double auction mechanism multiple buyers sellers compete buy sell services continuous double auctions cdas common forms marketplaces emerged dominant financial institution 35 cda exploits dynamics free market balance demand supply efficiently highly responsive decentralized system blockcloud team develops truthful continuous double auction tcda mechanism allows users bid service tcda following properties defending price cheating cheating traders increase profit incentives cheat guaranteeing fairness tcda treats sellers buyers equally sellers buyers opportunity earn profits minimizing trading maintenance cost tcda optimizes trading maintenance cost scale system support large number tradings simultaneously preliminary work tcda support service trading mobile networks theoretical result published 36 blockcloud generalize problem use core algorithm 36 build service trading fig 4 publishing subscribing services blockcloud component marketplace section vii describe tcda detail iv service centric network stack researchers conducted number studies servicecentric networking information centric networking 10 years ago 7 8 10 15 scn designs serval 15 provides service aware network stack applications communicate directly service names instead addresses ports sal provides clean servicelevel control data plane split enabling policy control instack based routing connects clients services diverse discovery techniques carefully investigating different scn icn technologies combining previous work blockcloud team research field 32 33 decide use serval network stack implement blockcloud s service based communication distributed applications dapps running serval stack publish subscribe services blockcloud logic shown figure 4 paper briefly introduce serval network stack descriptions coming serval publication serval stack offers clean service level control data plane split user space service controller manage service resolution based policies listen service related events monitor service performance communicate controllers service access layer sal provides service level data plane responsible connecting services forwarding service tables connected sal maps new flow socket flow table ensuring incoming packets demultiplexed connectivity maintained physical mobility virtual migrations dapps interact stack based sockets tie socket calls e g bind connect directly servicerelated events stack events cause updates data plane state passed control plane subsequently use update resolution registration systems figure 5 shows logic blockcloud gives service providers control service access clients flexibility resolving services instance forwarding packet connection based service sal defer binding service packet reaches network fine grain date information ensures efficient load balancing faster failover rest traffic flows directly end points according networklayer forwarding sal performs signaling endpoints establish additional flows different interfaces paths migrate time sal provides transport agnostic solution interface failover device mobility virtual machine migration handle wide range services deployment scenarios controller disseminates serviceid prefixes hashed names blockcloud sal applies rules packets sending onward necessary service routers deeper network remote service instance sal control forwarding rules service table installed propagate hosts instead local service controller manages state service table ii potentially propagates service controllers blockcloud responsible registering resolving routing services supports different service deployment scenarios page limit introduce details serval stack comprehensively understand serval architecture highly encourage readers read serval paper 15 fig 5 serval network stack service registration blockcloud maintains service naming system separate logical layer underlying transactionchain operates blockcloud uses underlying blockchain achieve consensus state naming system bind services providers specifically uses underlying transactionchain communication channel announcing state changes changes state value pairs announced new blockchain blocks relying consensus protocol underlying transactionchain blockcloud provide truthful manner operations supported naming system like service registration updating matching separation control service plane blockcloud decouples security registration ownership availability data associated names separating control data planes control plane defines protocol registering services identified service names creating service hash bindings creating bindings owning cryptographic keypairs logically separate layer service plane responsible storing service information mainly service hash pairs consists service files discovering service hash url b external storage systems storing service information 27 service names signed public keys respective service owners devices receive services service plane verify authenticity checking services hash service file service includes signature owners public key design significantly increases data storage capacity system allows layer evolve improve independently b service resolution mentioned xiii b3 services resolve alternative resolution networks dht based ones cases hash based serviceid forwarded service tables ultimately registering resolving node responsible serviceid dht based resolution coexist iana controlled resolution hierarchy simply map different rules service table currently blockcloud team decide use coral 27 dht coral peer peer content distribution network offers high performance meets huge demand completely decentralized self organizing enables people publish content previously distribution costs fit mobile dynamic networks simple composition previous solutions achieve 27 space constraints omit details coral paper believe blockchain industry relatively young evolving early pick winning dht technology hard predict dht technology operational reliable years layered structure blockcloud provides fully compatibility new dht technologies enables system self evolved c service routing service files stored coral serves pointers device provides service route service returned servicechain subscriber previous service provider moves gets offline quickly discovered serval stack 15 route particular service redirected alternative provider help serval service file previous service provider updated manner blockcloud supports ubiquitous mobility service migration frequently happen real iot scenarios coral network stores service files service previously announced transactionchain effectively whitelists service stored coral key aspect relevant design blockcloud routes irrespective fetched verified tampered production servers service miners maintain copy service files size service files relatively small roughly 4kb file keeping copy routing data introduces marginal storage cost storing blockchain data v proof service provide services massive users network contribute resources including storage computation bandwidth routing data evaluate contributing resources historically tough problem 37 document propose flexible model formalize service solution incentivizes correct behaviors participant syntax model single registered service network entities related process including routers end servers internal cache servers middle boxes entity contributed resources composed storage computation bandwidth routing data etc illustrate resources following storage storage end users 38 servers intermediate nodes disks caches 39 computation according contract scripts device set devices capacity chosen execute scripts system designate group leader assign jobs node group member node computes intermediate results leader relay intermediate nodes help deliver data destination including hop delivering devices e g wifi 5g vanet hop hop delivering devices e g wsn wireless sensor network routers vpn middle boxes etc assemble final results example design distributed firewall intrusion detection system node path defend attacking traffic 40 bandwidth services need download upload data network connection setup devices storing data end users data flow connection bandwidth different devices aggregated promote total bandwidth especially multi homing scenario 41 use e denote network entity pt denote total proved resources pe s pe c pe b pe r pe d represent proved storage computation bandwidth relay data entity e total contributed resources seen combination different resources devices networks pt x e pe s pe c pe b pe r pe d 1 prove reality contribution services great challenges addressed including 1 devices act service provider provide services correctly promised services verified devices 2 devices provide services verify services properly incentivized penalized network provide common good services users avoid verifier dilemma including resource exhaustion ddos attack incorrect transaction attack 42 recently work devoted prove contributions decentralized network 42 authors proposed concept consensus computer miners expected execute correctly 38 filecoin reward store data correctly penalize 43 new protocol called verification game devised verify computation results incentivizes correct behaviors work focus storage computation iot network devices limited storage computation resources draw lessons previous work build new protocol extended iot world address challenges define following roles proof model definition 1 provide service correctly involves parties service provider subscriber verifier subscriber s needs subscribes service provider p provide service verifier v verifies service shown equation 1 proof service decomposed proof basic elements including storage computation bandwidth relay elements proof storage computation addressed focus bandwidth relay document different computation storage return deterministic results bandwidth relay probabilistic define approximate qos quality service help prove relay bandwidth intuitively service provider promises qos registers service initially verifiers repeatedly try check service service approximate verifier try n times times success definition 2 dht table routing layer maintain approximate qos record f f0 1gn fvign counterg denotes current verification results table 0 represents success 1 represents fail counter loops forth 0 n 1 indicating current position verification results table fvign denotes verifiers set satisfies approximate qos p 2 concept approximate service service provider penalized fails meet qos requirements verifiers try times state results stored dht table decentralized way verifiers read table trying write trying counter loop reset 0 system decide reward penalize provider reward verifiers finally specific incentive rewarding set according 42 vi compacted directed acyclic graph simple survey related ledger structure achieve consensus ledger structures appeared recently categorized following classes permissioned protocol achieving consensus permissioned protocol extensively studies past 30 years 44 new node needs apply permission joining network transacting permitted nodes permissionless protocol different permissioned protocol nodes freely join leave network permissionless protocol totally decentralized classified chain model chain model chain model nodes transactions privately summarize upload transactions network periodically eventually chain model transaction directly submitted network chain model accelerate transaction speed chain solutions proposed lightning network 45 improves scalability setting micropayment channels users blockstream proposes sidechains 46 independent sidechains devised desired flexibility sidechains communicate main chain way peg chain solutions rely credit transaction parties trusted parties cost sacrificing decentralization chain model 1 linear chain based bitcoin 47 permissionless protocol widely deployed transaction carried chain bitcoin uses proof work key digital signatures prevent double spending guarantee safeness bitcoin improved solutions springing like ghost 48 bitcoin ng 49 solutions tried improve bitcoin different aspects e g efficiency fairness usability ethereum 50 considered promising increases transaction speed supporting flexible smart contracts based evm ethereum virtual machine users develop decentralized application crypto currencies continuously improved linear chain based solutions limited efficiency example bitcoin supports 7 transactions second ethereum supports 20 transactions second visa supports 24 000 transactions second 51 proved speed constrained maximum network delay guarantee security dag based model break limit linear chain based solutions alternative structure based directed acyclic graph dag proposed 52 unlike linear chain based solutions allows block attached end chain dag based solutions allow multiple blocks attached simultaneously current projects dag based ledger structure iota 53 byteball 54 iota famous better scalability lower transaction fee researchers find non deterministic confirmation time huge flooding traffic 55 56 byteball maitains main chain selected witnesses establish total order blocks witnesses reputable users elected users byteball makes tradeoff deterministic criteria decentralization academic area phantom 57 spectre 56 proposed performances proved strictly spectre enjoys high throughput fast confirmation extended support linear ordering blocks phantom keeps ordering cost slow confirmation process hybrid consensus hybrid consensus protocol 58 combines advantage permissioned permissionless protocol tries achieve best worlds nakamoto proposed forum bitcoin backbone protocol solving byzantine agreement 59 project called thunderella 60 hybrid consensus support instant transactions permissioned protocol faster works centralized manner permissionless protocol allows miners join leave freely sacrifices efficiency works slowly chain solutions improve patch like solutions cause new problems hybrid consensus protocol combines benefits worlds relies permissionless protocol backbone protocol solving byzantine agreement document adopt hybrid consensus improving underlying backbone protocol iot world faster transaction speeds b codag framework iot network iot devices usually constrained battery computing power communication bandwidth etc fig 6 codag ledger framework solve problem design framework shown figure 6 framework miners devices additional role called gateway ubiquitously exists iot world miner responsible maintaining ledger represents consensus network improved dag structure illustrated following section like 58 miners slow fast modes 1 slow mode dag based ledger structure slow mode responsible electing members fast mode 2 fast mode use byzantine agreement members elected slow mode decentralized way centralized way 61 gateway device resources run protocol like cellphone connected wearable devices smart car connected incar devices 5g base station connected numerous iot devices gateway responsible downloading ledger recently maintaining encrypted communication channel devices making transactions gateways gateway like important intermediate node chain solutions 45 gateway usually reliable trusted entity iot world devices needs upload payment data gateway receive results device capacity gateway c codag compacted dag based ledger structure iot network numerous devices resources high frequency transactions devices supported initially miners enter slow mode uses permission protocol achieve consensus elect members fast mode members elected decentralized way e recent m miners found new blocks confirmed ledger protocol election miners enter fast mode byzantine agreement members misbehave encounter attacks system fall slow mode hybrid consensus 60 greatly improves transaction speeds permission protocol works decentralized way underlying protocol influences period takes enter fast mode worse attack speeds lower orders magnitude fall slow mode document use dag suitable asynchronous operations decentralized environments ledger structure improve permission chain protocol traffic congestion uncertain worst case confirmation time brought new challenges solutions document design new ledger structure called codag compacted directed acyclic graph structure transactions enveloped blocks organized directed acyclic graph dag dag gossip like structure fits asynchronous operations unlike previous dag based structures new graph connected honest blocks limited width table ii summary notations g graph dag document v set nodes e set directed egdes lv level node v wl width level l k maximum width cv connectivity node v rv reverse connectivity node v cl candidate set level l new ledger let g v e dag v set nodes blocks following text use node block interchangeably e set directed edges graph use lv denote level node graph length longest path genesis node current node example fig 7 level node 8 3 level width number nodes level example 3 nodes level 3 use wl denote width level l dag width constrained constant k 8l wl k e g dag fig 7 constrained 3 width represents maximum number blocks system generate round width adjusted self adaptive according transaction generation rate network worst case structure degenerates bitcoint s linear blockchain structure width equals 1 width influences puzzle difficulty guarantee security level system graph node points k nodes previous level number paths node genesis connectivity node e g connectivity node 8 9 including 9 paths h8 4 1 0i h8 4 2 0i h8 4 3 0i h8 5 1 0i h8 5 2 0i h8 5 3 0i h8 6 1 0i h8 6 2 0i h8 6 3 0i let cv denote connectivity node v leaf nodes tips tip largest connectivity number called navigator graph exist multiple tips equal connectivity navigator example node 13 14 15 connectivity node 14 randomly selected navigator number paths navigator node reverse connectivity node use rv express example node 14 navigator reverse connectivity node 8 3 including 3 paths h14 10 8i h14 11 8i h14 12 8i basic idea protocol honest nodes connected higher probability higher reverse connectivity current navigator fig 7 simple example codag d protocol codag overview illustrate new protocol recall nakamoto s protocol nakamoto s protocol nutshell defend sybil attack nakamoto s protocol miners try best block specifically solve time consuming computational puzzle depends history transactions block appended chain blocks confirmed stable 6 blocks appended block network delay forks appear miner computes block new block arrive honest miners choose longest chain append new blocks forks exist nakamoto s protocol satisfies important properties 62 1 consistency honest miners network consistent view ledger 2 liveness transaction successfully submitted appear ledger honest miners protocol codag like nakmoto s protocol miner computer blocks solving puzzles despite faster generation rate codag miner generates blocks solving puzzles newly generated block appended codag tip validates blocks previous level e points blocks graph faster convergence speed set upper limit k width graph network delay adversarial nodes exist forks e k nodes level circumstance nodes higher reverse connectivity higher priority compared lower reverse connectivity k priority nodes level considered candidates level use cl denote candidate set level l candidate stable moment probability event node fails elected candidate future negligible miner generates stable block rewarded system like nakamoto s protocol special case nodes priority belong borderline candidates case nodes classified candidates share rewards protocol width set properly dag narrow dag node generation speed slow dag wide confirmation time long e codag block generation candidate selection algorithm block generation algorithm use k denote maximum level graph g hv wi denote directed edge points v w design algorithm generate compute blocks places new generated block x appended algorithm generate computes connectivity number node points nodes largest connectivity previous level generate use algorithm connectivity intermediate function takes dag node input computes connectivity nodes input algorithm current dag g new block x output new dag x directed edges points x previous nodes let l maximum level graph g algorithm 1 connectivity g v 1 begin 2 cv 0 8v 2 v 3 l maximum level g 4 cgenesis 1 5 lv 1 l l 6 8v 2 fv 2 v jlv lg 7 8w 2 flw l 1g 8 hv wi 2 e 9 cv cw 10 return fcvjv 2 v g theorem 1 computation complexity algorithm generate o l k2 proof algorithm connectivity based dynamic programming line 5 algorithm connectivity loops l times line 6 loops k times line 7 loops k times complexity algorithm generate o l k2 candidate selection algorithm design algorithm select select candidate level dag select computes candidate node layer algorithm 2 generate g v e x 1 begin 2 connectivity g genesis 3 jfvlgj k 4 l 1 5 y z nodes largest connectivity level l 1 6 v v s fxg 7 e e s fhx yi hx zig dag computes connectivity node node largest connectivity set navigator secondly specific layer l select computes reverse connectivity node layers nodes k largest reverse connectivity selected candidates input algorithm dag specified layer output candidate set algorithm 3 select g v e l 1 begin 2 l maximum level g 3 cl 4 connectivity g genesis 5 n fvjcv cw 8w 2 v g multiple nodes equal connectivity 6 x select element n 7 rv 0 8v 2 v rx 1 8 l 1 k l 9 8v 2 fv 2 v jlv kg 10 8w 2 flw k 1g 11 hw vi 2 e 12 rv rw 13 t jfvjlv lgj k t k 14 return cl t 15 16 sort t fcvjv 2 t g sort t highest lowest according reverse connectivity value 17 0 k 1 18 cl cl s ft g 19 return cl cl s fvjv 2 t rv rt k 1 g theorem 2 computation complexity algorithm select o l k2 proof complexity algorithm connectivity o l k2 previously proved complexity line 8 12 o l l k2 total complexity dominated o l k2 f connected channel codag structure different chain like structure adopts flexible structure suitable asynchronous operations different previous dag based structure adopts compacted structure nodes connected intuitively codag like connected channel width channel adjusted according user demands consider scenario adversary tries generate alternate channel higher connectivity honest channel takes control navigator node like bitcoin whitepaper 47 define following notations p proportion computing power honest party controls q proportion computing power adversary party controls qz probability adversary catch z levels lemma 1 qz 1 p q q p z 2 basically control navigator adversary needs produce nodes alternate channel channel produced honest miners level parties start time probability honest party finds w block p probability adversary party finds w block q left proof 47 consider long transaction confirmed node level selected candidate taken node level fig 8 adversary starts alternate channel lemma 2 reverse connectivity node v locates z level away largest level possibility candidate identity overtaken 1 pz k 0 ke k 1 q p z k proof suppose nodes level l node produced honest miners b produce adversary miners suppose ra rb largest level graph l satisfies l l fig 9 adversary competes channel z probability pr ra rb future equals 1 pz k 0 ke k 1 q p z k strategies channel based scenario adversary start alternate channel level shown figure 8 case best strategy adversary party develop complete separate channel e adversary node point adversary node honest node previous level model bitcoin different bitcoin second scenario adversary competes channel honest miners honest nodes point adversary node shown figure 9 obviously best strategy adversary point adversary nodes point honest nodes left pointers honest nodes point honest nodes point adversary nodes left pointers prove level k l honest nodes vi vj cvi cvj cvi b cvj b adversary nodes wi wj cwi cwj cwi b cwj b prove induction level l 1 honest nodes point avoid pointing b connectivity 1 connectivity b 0 adversary nodes point b avoid pointing connectivity 0 connectivity b 1 level k l suppose nodes level satisfy assumption p honest nodes q adversary nodes honest node vk satisfies cvk x cvk b y adversary node wk satisfies cwk x0 cwk b y 0 level k 1 honest node vk 1 cvk 1 x p x0 k p cvk 1 b y p y 0 k p adversary node wk 1 cwk 1 x0 q x k q cwk 1 b y 0 q y k q secondly prove lemma level k l let r k p 8vk rvk total reverse connectivity honest nodes level k let r k p 8vk rwk total reverse connectivity adversary nodes suppose r k r k satisfied adversary party catch honest party level k 1 r k r k 1 p r k 1 k q r k r k 1 q r k 1 k p indicating honest nodes point honest nodes adversary nodes point adversary nodes based equations infer r k 1 r k 1 p p k q q k q k p p k q 1 x2 higher probability honest party computing power r k 1 r k 1 p q satisfied higher probability second strategy fall strategy second strategy intuitively node considered k votes votes given nodes previous level honest nodes votes given honest nodes left randomly given adversary nodes previous level adversary nodes votes given adversary nodes left randomly given honest nodes previous level honest party owns larger portion computing power votes given honest nodes votes accumulated level growing vii truthful continuous double auction preliminaries paper consider buyers sellers services multi unit capacities differentiated revenues costs auctions private information observed directly traders trader bids manner permits exploitation profit opportunities arising pricing behavior traders summarize base auction independent private value model definition 3 independent private value model model trader knows values item know value value depend values require trading system strategy proof traders incentive lie price definition 4 auction strategy said strategy proof incentive traders lie hide private information traders strategy proof property wide range computer network problems 63 65 typical application strategy proof vickrey clarke groves vcg mechanism 66 68 order maximize individual welfare trader seek maximize social welfare public system vcg mechanism achieves socially optimal allocation incentive compatible manner suitable puts high computational costs central organizer balance supply demand need design system competitive equilibrium definition 5 competitive equilibrium market positively valued good positive unit price p total quantity supplied qs p total quantity demanded qd p qs p qd p total quantity supplied equal total quantity demanded notation qs p qd p indicates supply demand quantities depend price p total supply given price simply sum quantities good seller plans sell price let qi p denote quantity service seller plans sell price p qs p takes following form qs p x qi p 3 competitive profit wi p seller takes following form wi p pqi piqi 4 marginal price parameter pi denotes price seller expects sell service similarly total demand bid price sum commodities price let qj p denote quantity commodity buyer j wants buy price p qd p x j qj p 5 competitive profit wj p buyer j takes following form wj p pqj pjqj 6 marginal price parameter pj denotes price buyer expects buy service note competitive equilibrium achieved price p qs p qd p definition 6 equilibrium price price quantity supplied equal quantity demanded possible infinitely competitive equilibria market clearing prices exist competitive equilibrium ensures demand meets supply free market populated rational selfish agents 69 concept widely economic areas new york stock exchange nasdaq stock market 70 b2b ecommerce websites e g free market mechanism determine uniform equilibrium price auction round use equilibrium price determine winners auction marginally matched buyers sellers use uniform equilibrium price units way buyers sellers achieve privilege system fair buyers sellers contrast traditional auction markets electricity spectrum blockcloud marketplace involve tens millions traders result system level cost maintaining trading significantly high generally speaking transactions system manages higher trading cost takes existing auction algorithms applied tcda control number transactions paper reduce trading cost reducing number transactions propose stage mechanism solve problem build linear programming model targeted minimizing number transactions develop algorithm solve problem allows matching result buyers sellers b algorithm overview figure 10 shows tcda framework based multilateral continuous double auction tcda consists traders provide subscribe service marketplace manages auction prices services specified buyer seller auction anonymous parameter values private trader fig 10 tcda framework auction performed rounds beginning auction round traders submit price quantity offers marketplace bid ask consists single price quantity pair price submitted api provided blockcloud end auction round marketplace matches price quantity offers received round accordance publicly known protocols reports matches buyers sellers prices set marketplace auction round uniform set equal matched buyer seller pairs receiving auction result matched buyers sellers carry assigned trades profit outcomes system continuous double auction real iot scenario traders continuously join leave system traders matched previous round new participants bid rounds c stage double auction mechanism auction tcda performed following procedures sequentially determining transaction price ii determining winners auction iii determining quantity level matched buyer seller pair present algorithms handle issues figure 11 shows tcda achieves equilibrium price winners auction matched buyer seller pairs determined sequential manner system strategyproof fair sellers buyers minimize trading cost terms number transactions 1 procedure 1 determining transaction price section calculate market clearing price based winners auction determined let m number sellers system m total units service sell short supply n number buyers fig 11 trading procedures tcda system n total demanded service wanted buyers short demand let l denote number total traders e l m n auction round trader reports k e units service supplied demanded estimated price p organizer following definition p 0 trader buyer 0 trader seller 7 calculate market clearing price sort absolute value reported prices descending order let pi denote ith highest absolute value ki denotes supply demand corresponding trader price pi price set p defined follows f p1 p1 z p 1 k1 pi pi z p ki pl pl z p l kl g 8 jp1j jp2j jplj listed price represents price unit supplied demanded service benefit constructing price set organizer change auction l traders auction l m n traders trader supplies demands unit quantity service given price set define price located m 1 th position set m 1 th price algorithm 4 presents pseudo code finding m 1 th price note upper bound absolute value pi carrier price definite number real practice practical online service trading system accuracy price expected definite use bucket sort p 1 l sorted computational complexity o l result computational complexity algorithm 4 o l algorithm 4 price determining procedure set price e p 1 l m supplied service 1 1 m 2 p jp j 3 end 4 sort p 1 l descending order 5 return p m 1 consider value m 1 th price ps means m 1 th price s th highest price prices 2 procedure 2 determining winners given market clearing price present market clearing rule determines winners set traders win auction end auction round trading set prove auction achieves competitive equilibrium rule market clearing rule trader m 1 th position seller trading set consists following buyer prices m 1 th position ii seller prices m 1 th position iii price m 1 th position trader m 1 th position buyer trading set trading set price m 1 th position included algorithm 5 shows pseudo code determining winners computational complexity algorithm 5 o l algorithm 5 market clearing procedure sort price p 1 l m supplied service 1 set j fg assume p 1 l sorted algorithm 1 2 2 1 l 3 pi 0 m 1 jj pi 0 m 1 4 j j fpig 5 end 6 end 7 return j theorem 3 trading set algorithm 5 achieves competitive equilibrium proof let t denote trading set generated algorithm 5 consider trader m 1 th position seller let s denote set prices sellers t according market clearing rule obtain s following equation s fpi pi 0 j rank pi m 1g 9 rank pi represents position pi t let s fbi 0 j rank pi m 1g jsj jsj m jsj denotes number items s m total service sell including sellers t let b denote set prices buyers t obtain b fpi pi 0 j rank pi m 1g 10 s b fpijrand pi m 1g s b jbj jsj m jsj jsj m obtain jsj jbj number prices sellers equals number prices buyers seller buyer t represents supplied demanded unit total supply equals total demand t shows market achieves competitive equilibrium ii consider trader m 1 th position buyer according market clearing rule buyer price m 1 th position t buyer price set b time compute seller price set s following equation s fpi 0 j rank pi m 1g 11 trader m 1 th position buyer obtain s fbi 0 j rank bi m 1g 12 similar market achieves competitive equilibrium completes proof 3 procedure 3 matching traders given trading set generated algorithm 5 describe match buyers sellers service trading model system level cost managing trading type cost vary depending specific technology perform trading computational storage resources organizer trading system minimize trading cost system scalable manage millions users generally expect trading transactions higher trading maintenance cost result system efficiently match traders minimize number trading transactions formulate minimization problem consider w trading set generated algorithm 5 consider c sellers w c m let s1 s2 sc denote quantity service traded sellers pc 1 si qs p p market clearing price consider d buyers w d n pd j 1 kj qd p matching problem formalized following linear programming problem min xc 1 xd j 1 xij s t 8 pd j 1 xij si 1 2 c pc 1 xij kj j 1 2 d xij 2 n 1 2 c j 1 2 d xij denotes quantity service unit seller buyer j xij denotes trading cost selling buying xij unit service given competitive equilibrium qs p qd p order minimize trading cost need minimize number transactions need minimize number non zero xij maximize value non zero xij 0 xij minfsi kjg minimum number transactions achieved set non zero xij maximum value minfsi kjg following procedure gives solution linear programming problem matching procedure given trading set generated algorithm 5 system matches seller highest supply buyer highest demand quantity trading minimum quantity seller s supply buyer s demand lead following cases 1 seller buyer leave trading set supply equals demand 2 trader larger quantity supply demand remains trading set 1 happens organizer simply repeats matching process 2 happens organizer puts remaining trader trading set repeats matching process trading set achieves competitive equilibrium process terminate finite steps supply demand traders satisfied computational complexity sorting sellers buyers o max m m matching process o m n combining procedures solve auction problem computational complexity o m n e o l note m 1 auction system vickrey s second price sealed auction vickrey proved strategyproof 66 m 1 prove auction model strategy proof buyers risk averse sellers risk averse mean trader reluctant accept bargain uncertain payoff bargain certain possibly lower payoff following theorems lay foundation tcda s property proofs provided detail appendix appendix b theorem 4 tcda strategy proof buyers theorem 5 tcda strategy proof risk averse sellers contrast regular auction markets electricity stock iot device dynamically join leave system situation happens blockcloud use signaling message let remaining trader quickly join auction system use fine grained accounting approach buyer gradually pays tokens service provider way buyer waste money seller leaves network agreed quantity service consumed viii conclusion paper propose new approach combines advantages scn blockchain empower iot propose service centric blockchain architecture leverages service driven communication paradigm support mobility scalability design new consensus mechanism en efficient ledger structure provide trust security incentive decentralized manner finally develop service pricing distribution mechanism fairly protects profits service providers users network appendix proof theorem 4 theorem 4 tcda strategy proof buyers proof assume real estimated price unit service buyer j vj let b denote auction price buyer j submits auction suppose price traders change result market clearing price y relate buyer j end auction let represent market clearing price buyer j submits real price vj assume vj sth highest price submitted prices let 1 1 represent s 1 th s 1 th highest price buyer j declares price vj utility buyer considered difference value real price vj market clearing price y vj relationship market clearing price y declared price b buyer j illustrated figure 12 shadow represents situation buyer j win auction area marked means buyer j gains negative utility wins auction bold lines relationship market clearing price y buyer j s submitted price b traders auction prices unchanged buyer j wins auction offering price higher vj utility negative vj 1 therefor best strategy buyer j declare real price buyer j win auction hand declaring price lower vj help buyer win auction change market clearing price buyer incentive ii vj relationship market clearing price y declared price b buyer j illustrated figure 13 area marked denotes positive utility buyer j wins auction shown figure buyer j declares real price win auction strictly positive utility vj declaring higher price gain utility case increase possibility getting negative utility shown buyer j declares lower price market clearing price reduced buyer improve utility lose auction iii vj relationship market clearing price y declared price b buyer j illustrated figure 14 case market clearing price determined buyer j s price buyer j lower price knows situation advance declaring lower price lead positive utility possibility winning auction zero shown figure 6 rational buyer buyer j choose increase declared price lead negative utility win auction based analysis matter price traders cases buyer j gains best utility declares real price time declaring real price buyer maximize utility situations tcda based sealed biding buyers know situation happen best strategy declare real price completes proof appendix b proof theorem 5 theorem 5 tcda strategy proof risk averse sellers proof assume seller s marginal real price ui price seller submits auction b let represent market clearing price seller declares real price ui 1 1 represent 1 th 1 th highest prices ui situation traders change price relationship market clearing price y seller s auction price b illustrated figure 15 17 ui relationship shown figure 15 figure sellers declare marginal price win auction gain strictly positive utility ui gain utility offering lower price lead possibility gaining negative utility let overlapping shadow including border represent pricing area seller gain higher utility submitting real price b 1 seller increases price discuss situation market clearing price changed higher utility achieved seller accurately forecast value 1 lower utility specifically seller concludes wrong expectation makes b 1 miss expected higher utility lose stable income comes offering real price optimal strategy risk averse seller ii ui relationship shown figure 16 declaring marginal price seller win auction utility zero seller choose reduce price win auction seller wins auction gain negative utility therefor makes sense seller reduce price incentive seller increase price help seller win auction iii ui relationship shown figure 17 situation seller gain utility declaring higher price ui utility seller zero real price declaring higher price seller zero utility losing auction b 1 strictly positive utility winning auction ui b 1 situation iii exists possibility getting higher utility declaring higher price seller happen accurately forecasting 1 wrong estimation situation ui seller miss expected excess utility lose stable income brought offering real auction price optimal strategy risk averse seller possibility losing stable utility p ui higher gaining higher utility declaring higher price p ui p b 1 based analysis matter auction price traders declare order increasing possibility winning auction best strategy risk averse seller declare real price completes proof references 1 2017 ericsson mobility report pulse networked society online available https www ericsson com mobility report 2 device democracy saving future internet things iot report ibm institute business value 2015 3 x sun n ansair edgeiot mobile edge computing internet things ieee communications magazine vol 54 12 2016 pp 22 29 4 dynamic resource caching iot application layer smart cities ieee internet things journal 2017 5 sathiaseelan l wang aucinas g tyson j crowcroft scandex service centric networking challenged decentralised networks proceedings 2015 workshop networking interdisciplinary approach acm 2015 6 m freedman j rexford s ko p gopalan d shue scaffold wide area distributed services 6th geni engineering conference 2009 7 t koponen m chawla b g chun ermolinskiy k h kim s shenker stoica data oriented network architecture proc acm sigcomm 2007 8 named data networking ndn project parc technical report ndn 0001 online available http www named data net ndn proj pdf 9 d griffin m rio p simoens m franke service centric networking handbook research redesigning future internet architectures 2015 10 m gritter d r cheriton 2000 jul triad new generation internet architecture online available http www dsg stanford edu triad 11 h balakrishman k lakshminarayanan s ratnasamy s shenker stoica m walfish layered naming architecture internet acm sigcomm 2004 12 m caesar t condie j kannan k lakshminarayannan stoica s shenker rofl routing flat labels acm sigcomm 2006 13 detti m pomposini n blefari melazzi s salsano supporting web information centric network routes computer networks vol 56 17 pp 3705 3722 2012 14 c dannewitz d kutscher b ohlman s farrell b ahlgren h karl network information netinf c information centric networking architecture computer communications vol 36 7 pp 721 735 2013 15 e nordstrom d shue p gopalan r kiefer m arye s ko j rexford m freedman serval end host stack servicecentric networking 9th usenix acm symposium networked systems design implementation nsdi 2012 16 ghodsi t koponen b raghavan s shenker s w j information centric networking seeing forest trees hotnets 11 2011 17 l federico leonardo d stefano m andrea s vladimiro blockchain based infrastructure reliable cost effective iotaided smart grids living internet things conference cybersecurity iot 2018 18 p sharma c m j park software defined fog node based distributed blockchain cloud architecture iot ieee access 2018 19 dorri s s kanhere r jurdak optimized blockchain iot proceedings second international conference internet things design implementation ser iotdi 17 2017 pp 173 178 fig 12 relationship y b vj fig 13 relationship y b vj fig 14 relationship y b vj fig 15 uj fig 16 uj fig 17 uj 20 o novo blockchain meets iot architecture scalable access management iot ieee internet things journal 2018 pp 1184 1195 21 m iansiti k lakhani truth blockchain harvard business review 2017 22 d w orner t von bomhard sensor earns money exchanging data cash bitcoin proceedings 2014 acm international joint conference pervasive ubiquitous computing 2014 pp 295 298 23 e alsaadi tubaishat internet things features challenges vulnerabilities international journal advanced computer science information technology ijacsit vol 4 1 2015 pp 1 13 24 challenges internet things iot texas instruments iot report 2016 25 irtf information centric networking research group icnrg irtf org 2016 26 j barr amazon s3 trillion objects 1 1 million requests second 2013 online available https aws amazon com blogs aws amazon s3 trillion objects 11 million requests second 27 m freedman e freudenthal d mazires democratizing content publication coral 1st usenix acm symposium networked systems design implementation nsdi 2004 28 d clark design philosophy darpa internet protocols acm sigcomm 1988 29 m ali r nelson jand shea m j freedman blockstack global naming storage system secured blockchains 2016 usenix annual technical conference usenix atc 16 2016 30 s yang z ming d pan k xu d wang efficient secure blockchain protocol internet things blockcloud consensus technical report 2018 31 s popov tangle version 1 3 iota white paper 2017 32 z ming m xu c xia d li d wang siona service information oriented network architecture journal network computer applications 2014 pp 80 91 33 z ming j ubillos m xu based shim6 based approach host mobility sigmobile mob comput commun rev vol 15 4 2012 34 d freedman double auction institution survey santa fe institute studies sciences complexity 1993 pp 3 25 35 p vytelingum d cliff j n r strategic bidding continuous double auctions elsevier artificial intelligence vol 172 2008 pp 1700 1729 36 z ming m xu n wang b gao q li truthful auction user data allowance trading mobile networks 37th ieee international conference distributed computing systems icdcs 2017 37 s sen c joe wong s ha m chiang smart data pricing economics manage network congestion commun acm vol 58 12 pp 86 93 nov 2015 38 filecoin cryptocurrency operated file storage network https filecoin io 2017 39 z ming m xu d wang age based cooperative caching information centric networking 2014 23rd international conference computer communication networks icccn aug 2014 pp 1 8 40 s yang m xu d wang j wu source address filtering large scale network cooperative software mechanism design 2012 21st international conference computer communications networks icccn july 2012 pp 1 7 41 z ming m xu n wang b gao q li truthful auctions user data allowance trading mobile networks 2017 ieee 37th international conference distributed computing systems icdcs june 2017 pp 1271 1280 42 l luu j teutsch r kulkarni p saxena demystifying incentives consensus computer proc acm ccs 15 new york ny usa 2015 43 j teutsch c reitwiebner scalable verification solution blockchains https truebit io 2017 44 m castro b liskov practical byzantine fault tolerance osdi 1999 1999 45 bitcoin lightning network https lightning network lightning network paper pdf 46 m corallo l dashjr m friedenbach g maxwell miller poelstra j tim p wuille enabling blockchain innovations pegged sidechains 2014 47 s nakamoto bitcoin peer peer electronic cash system 2008 48 y sompolinsky zohar secure high rate transaction processing bitcoin 2015 49 eyal e gencer e g sirer r v renesse bitcoin ng scalable blockchain protocol usenix nsdi 16 santa clara 2016 50 g wood ethereum secure decentralised generalised transaction ledger 2014 51 r pass l seeman shelat analysis blockchain protocol asynchronous networks advances cryptology eurocrypt 2017 2017 pp 643 673 52 y lewenberg y sompolinsky zohar inclusive block chain protocols financial cryptography data security 2015 pp 528 547 53 s popov tangle https iota org iota whitepaper pdf 54 https byteball org byteball pdf byteball decentralized system storage transfer value http www gartner com newsroom id 3165317 55 kind spam benefit network online available https iota stackexchange com questions 537 kind spam benefit network 56 y sompolinsky y lewenberg zohar spectre serialization proof work events confirming transactions recursive elections https eprint iacr org 2016 1159 pdf 57 y sompolinsky zohar phantom scalable blockdag protocol https eprint iacr org 2018 104 pdf 58 r pass e shi hybrid consensus efficient consensus permissionless model disc 17 59 s nakamoto proof work chain solution byzantine generals problem https www mailarchive com cryptography metzdowd com msg09997 html nov 2008 60 r pass e shi thunderella blockchains optimistic instant confirmation https www thundertoken com 2018 61 eos io technical white paper v2 2018 62 r pass l seeman shelat analysis blockchain protocol asynchronous networks advances cryptology eurocrypt 2017 cham 2017 pp 643 673 63 d li j wu j liu y cui k xu defending distance cheating link weighted application layer multicast ieee acm transactions networking ton vol 19 5 pp 1448 1457 2011 64 j huang r berry m l honig auction based spectrum sharing mob netw appl vol 11 3 pp 405 418 2006 65 j feigenbaum c papadimitriou r sami s shenker bgp based mechanism lowest cost routing distributed computing vol 18 1 pp 61 72 2005 66 w vickrey counterspeculation auctions competitive sealed tenders journal finance vol 16 1 pp 8 37 1961 67 e clarke multipart pricing public goods public choice vol 11 1 pp 17 33 1971 68 t groves incentives teams econometrica vol 41 4 pp 617 631 1973 69 p vytelingum d cliff n r jennings strategic bidding continuous double auctions elsevier artificial intelligence vol 172 pp 1700 1729 2008 70 p d klemperer run auctions european 3g telecom auctions working paper oxford university 2001