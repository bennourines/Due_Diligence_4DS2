b aidos kuneen xe2 x80 x94 blockless anonymous cryptocurrency post quantum era xe2 x80 x94 aidos developer aidos foundation january 2018 version 0 04 draft abstract white paper introduce new cryptocurrency aidos kuneen aidos kuneen developed deliver fast anonymous blockless decentralized scalable solution post quantum era transfers zero fees aidos kuneen employs mechanism known imesh imesh transactions directly referenced order form directed acyclic graph dag structure inclusion xe2 x80 x98spectre xe2 x80 x99 allows nodes determine transactions legitimate dag structure reject addition spectre provides resilience attackers happen gain control 50% network xe2 x80 x99s computational power ensure continued security post quantum era aidos kuneen utilises hash based signature xe2 x80 x98xmss xe2 x80 x99 xmss provides small signature small public key size turn reduces network load order provide anonymity network aidos kuneen employs akshuffle akshuffle incorporates postquantum zero knowledge proof xe2 x80 x98zkboo zkb xe2 x80 x99 allows truly anonymous transfers entire network allow aidos kuneen service expected future growth xe2 x80 x98iot xe2 x80 x99 sector introduce innovative new cooperative proof work mechanism known copow copow allows number senders network cooperatively perform necessary proof work order confirm transactions network reducing physical processing requirements sender finally provide simulation number leaves imesh determine minimum number reference transactions required order converge dag deliver fast confirmation times whilst having minimal effect transaction size copyright c 2017 xe2 x80 x932018 aidos developer aidos foundation event shall authors copyright holders held liable claim damages liability action contract tort arising connection document use dealings document work licensed creative commons attribution 4 0 international license http creativecommons org licenses 4 0 1 x0ccontents 1 introduction 3 2 related works 4 3 signature scheme 3 1 wots 3 2 xmss 4 4 5 4 imesh 4 1 spectre 4 2 akconsensus 6 6 8 5 proof work 9 6 co operative proof work 9 7 akshuffle 10 8 network 11 9 leaves imesh 11 10 future plans 13 11 conclusion 13 appendix results simulation xe2 x80 x94 number leaves nl eaves 15 appendix b results simulation xe2 x80 x94 growth ndescendant 16 list figures 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 generation wots public key signing wots private key wots verification key generation auth path xmss imesh example voting procedure simplified dag structure statements finalisation transactions cuckoo graph example akshuffle operates aidos kuneen network topology leaves imesh xce xbb 1 transaction minute nr e f 2 xce xbb 1 transaction minute nr e f 4 xce xbb 1 tps xce xbb 5 tps xce xbb 10 tps xce xbb 1 transaction minute xce xbb 1 tps xce xbb 5 tps xce xbb 10 tps 2 4 5 5 5 6 6 7 8 9 10 11 11 15 15 15 15 15 16 16 16 16 x0c1 introduction founding transactions came founding transactions open public free track flow btc address address bitcoin obscure cryptocurrency introduced satoshi nakamoto 1 2008 begun draw wider attention general public governments alike bitcoin network transactions written xe2 x80 x98blocks xe2 x80 x99 blocks cryptographically validated powerful computers known xe2 x80 x98miners xe2 x80 x99 proof work pow system block validated appended end continually growing chain blocks aptly named xe2 x80 x98the block chain xe2 x80 x99 miners subsequently rewarded successfully validating block means transaction fees paid senders transact bitcoin network order address issues introduce new cryptocurrency aidos kuneen aidos kuneen network known imesh based directed acyclic graph dag technology imesh transactions directly referred transactions blocks extension block chain confirmation transaction determined number transactions vote transaction imesh able achieve benefits scalability completely removing requirement miners subsequently removes need associated transaction fees currently blocks added blockchain rate required order incentivise mining approximately 10 minutes transactions contained blocks consist input output adios kuneen specifically designed provide xe2 x80 xa2 increased scalability addresses inputs outputs imesh performs relatively simple pow comprevious transactions xe2 x80 x94 provides auditable history putations confirm transaction transof past bitcoin transactions network order action broadcast network transaction prove ownership transactions signed address stored imesh immediately need owner elliptic curve digital signature algorithm wait xe2 x80 x99s transaction stored addi ecdsa tionally limitation size number transactions stored time recent years number problems imesh grows greater number transactions identified bitcoin implementation including involved means confirma xe2 x80 xa2 limited scalability tion time single transaction reduce core bitcoin code maximum block size network matures restricted blocks unable store transactions xe2 x80 xa2 zero fees limit exceeded turn leads scalas longer required pay transaction fees ability problem transactions broadcast owing fact miners free simultaneously unable transact matter small withincluded current block requiring special knowledge techniques xe2 x80 xa2 high transaction fees xe2 x80 xa2 post quantum resistance aidos kuneen specifically chosen hashbased signature provides strong post quantum security number different signature architectures developed provide resistance future quantum based computer hardware including ring lwe lattice hash based methods majority practical purposes large key signature sizes example key sizes ring lwe lattice based signatures weigh number kilobytes means employ methods example forced use long alphanumeric address strings conducive usage non technical general public cryptocurrency intended widespread daily use completely unsuitable senders required pay transaction fee order incentivise miners include transaction block bitcoin usage continues grow price bitcoin increases relative value fee increase longer makes sense send small transactions bitcoin network fee easily exceed value bitcoin transacted forces senders use complicated schemes send small value transactions e g micropayment channels xe2 x80 xa2 poor resistance quantum computers 2017 development quantum computers infancy experiments carried quantum computational operations executed small number quantum bits furthermore google reported intent commercialize quantum technologies years 11 time according shor xe2 x80 x99s algorithm 10 algorithms based discrete logarithm problem including ecdsa bitcoin easily solved sufficiently powerful quantum computer focus attention family hash based signature methods instead hash based functions xe2 x80 x98sphincs xe2 x80 x99 provide ability reuse public key multiple times step right direction sphincs suffers large public key size 1 kilobyte methods making unsuitable application xe2 x80 xa2 limited anonymity auditable nature bitcoin means order spend bitcoin spending transaction refer 3 x0ceventually xe2 x80 x98extended merkle signature scheme xe2 x80 x99 xmss identified ideal balance human usability small key size xmss allows repeatedly utilise public key large number times 1000 times unlike sphincs xmss lightweight public key 32 bytes signature key size approximately 3 kilobytes utilising xmss benefit 2128 bit post quantum security 12 lieve short medium term binary based systems continue remain dominant form consumer grade hardware iota xe2 x80 x99s confirmation process outlined iota xe2 x80 x99s white paper counts number referring transactions descendant transactions notice total number leaves dag increases occur naturally percentage leaves descendant transactions refer decrease means attackers potentially grow malicious transactions faster network combat introduce confirmation process based spectre presented 9 spectre count number descendant transactions counts number transactions subsequently vote transaction leaves diverge difficult attacker grow confirmations malicious transactions xe2 x80 xa2 strong anonymity order achieve anonymity utilize post quantum zero knowledge non interactive zkni proof xe2 x80 x98zkboo xe2 x80 x99 presented 7 zkboo allows transact freely imesh need reveal xe2 x80 x99s address receiver wider network 2 related works spectre voting process require faster dag convergence rapid confirmations white paper presented iota team specifically clarify convergence behaviour dag white paper simply states xe2 x80 x98one expects l t total number leaves remains stable xe2 x80 x99 section 9 additionally simulate behavior leaves imesh order ensure dag converges monero1 bytecoin2 zcoin3 achieve anonymity monero bytecoin use xe2 x80 x98ring signature xe2 x80 x99 methods discussed cryptonote 13 ring signature methods rely signature utilises novel trapdoor function e g public key encryption unfortunately feature found available hash based signature methods zcoin utilises zero knowledge non interactive proof called xe2 x80 x98zksnarks xe2 x80 x99 zk snarks quantum secure owing fact uses pairing based cryptography4 3 signature scheme previously mentioned aidos kuneen employs xmss described rfc draft ietf 2 signature algorithm xmss based earlier work winternitz time signature wots wots hash based signature scheme designed single use xmss builds work delivers mechanism makes possible sign multiple messages single key coinjoin5 potential option providing anonymity use xe2 x80 x98coinjoin xe2 x80 x99 variants e g xe2 x80 x98coinshuffle xe2 x80 x99 coinjoin requires presence active participants time intends send coins requirement prove handicap early stages adoption aidos kuneen userbase small 3 1 wots iota6 iota dag based fee iot focussed cryptocurrency iota unique makes use ternary based signatures standard binary fact ternary based systems theoretically computationally efficient binary based systems aidos kuneen chosen utilise traditional binary based signatures order fully utilize existing cpu features simd instructions dedicated sha extensions decision believe current generation digital processors sufficiently fast efficient meet requirements iot oriented figure 1 generation wots public key processors containing dedicated circuits sha 2 based hash processing e g arm processors7 figure 1 demonstrates public key generated order generate public key initially generates 1http monero org series 67 character strings consisting 32 byte 256 2https bytecoin org 3https zcoin io bit random binary data private key 4post quantum zcash https github com zcash zcash issues 805 priv j j 1 67 priv j hashed 5https en bitcoin wiki coinjoin sha 256 algorithm total 15 passes hash6https iota org 7https static docs arm com ddi0501 f ddi0501 pdf ing priv j xored value prf pseudo 4 x0crandom function xor operation employed 3 2 xmss duce signature size maintaining security figure 4 demonstrates public key xmss genlevel output operations public erated key pub j j 1 67 67 character string consisting 32 byte binary data figure 2 signing wots private key figure 2 illustrates message signed signing calculates 256 bit hash h msg original message corresponding 12 bit checksum figure 4 key generation h msg series 4 bit 67 character binary strings ni 1 67 produced h msg checksum priv j values hashed ni short xmss builds tree known xe2 x80 x98merkle tree xe2 x80 x99 times xored values pub j gather public keys single key allows produce signature sig j j 1 67 public key reused times checksum prevent attacks malicious messages example checksum attacker create message hash 000 0 e ni 0 1 64 signature equal private key private key exposed initially generate 2h wots private keys privi j 1 2h j 1 67 corresponding wots public keys pubi j 1 2h j 1 67 h height merkle tree 2h number xe2 x80 x98ltrees xe2 x80 x99 generated ith 1 2h ltree generated pubi j j 1 67 receives root hash ith ltree hashing wots public keys e h pubi1 pubi2 pubi67 root hash ith ltree ith leaf merkle tree operation repeated 2h times fill remaining leaves merkle tree finally root hash merkle tree calculated hashing leaves merkle tree e roots ltrees root hash xmss public key signing simply selects unused private keys corresponding public key calculates wots signature xmss signature wots signature xe2 x80 x98auth path xe2 x80 x99 auth path additional piece binary data calculate root hash merkle tree e xmss public key figure 3 wots verification figure 3 illustrates signature verified order verify signature verifier calculates ni 1 67 procedure signing explained sig j hashed 15 xe2 x88 x92 ni times xored values produce pub j output yields pub0j j 1 67 checked confirm equals signer xe2 x80 x99s public key pub j j 1 67 5 x0cas table 1 illustrates 3 height levels merkle tree aidos kuneen users desire change addresses payment transact 1000 times address able use height 10 reducing impact generating public keys heavy users corporate entities merchants transact 1000 times public key use height 16 height 20 note chosen use xmss mt detailed 2 xmss mt means need generate public keys simultaneously signature size larger xmss weighing 40 kilobytes figure 5 auth path xmss reference figure 5 desire select private key 3 signing verifier calculate node 3 signer xe2 x80 x99s signature order determine node 12 verifier need determine node 4 means auth path include node 4 manner order determine node 31 xe2 x80 x99s root hash e xmss public key signer requires nodes 11 22 included auth path order perform verification verifier posses wots signature node values auth path e values nodes 4 11 22 allow verifier calculate root hash merkle tree determine root hash equal xmss public key 4 4 1 imesh spectre sender sends transaction includes transactions previously sent figure 6 illustrates dag structure transactions refer imesh sending sender selects leaves imesh e transactions currently referred transactions determines parent transactions leaves valid determining parent transactions valid leaves included senders transaction note xe2 x80 xa2 signers record private keys order accomplish use logarithmic merkle tree traversal scheme presented 16 provide efficient traversal minimal storage cost xe2 x80 xa2 public key consists 32 xc3 x97 2 bytes root hash merkle tree seed prf prf seed pseudo random values generated single prf include seed signature public key size 32 bytes xe2 x80 xa2 signature key size approximately 3 kilobytes xe2 x80 xa2 sha 256 hash provides strong preimage resistance e attacker unable guess input output hash difficult guess private key public key quantum based hardware additionally note able reuse public key number times h height merkle tree increased requires time generate public keys initial stage figure 6 imesh unlike block chain based networks bitcoin table 1 merkle tree height estimated time key gener block refers preceding block single transaction dag refers transactions ation cpu core intended users xmss dag block chain technology chain grows height keys key generation user linear sequence e block time dag interlinked nature transactions allow 10 1 024 seconds time grow simultaneously directions leading supenormal users rior scalability compared block chain based systems 16 65 536 minutes companies 20 1 048 576 xe2 x89 x88 30 minutes big companies interlinked nature draw6 x0cbacks comes conflicting transactions example assume alice xe2 x80 x99s address holds total 10 coins sends 10 coins bob transaction t1 thinking sends 10 coins cathy transaction t2 alice inadvertently attempted spend coins twice known xe2 x80 x98double spend xe2 x80 x99 result transactions direct conflict block chain based system conflicting transactions written block stored e t1 receives confirmation t2 t2 rendered invalid hand conflicting transactions highlighted red figure6 imesh difficult determine valid solve problem aidos kuneen adopts voting mechanism presented xe2 x80 x98spectre xe2 x80 x99 9 system guarantees majority amplification transactions add votes reinforce previous decisions 3 transactions transactions x y parents vote majority voters transaction 1 xe2 x80 x935 rule allows amplification votes parents transaction x transaction 1 xe2 x80 x934 necessary counter xe2 x80 x98pre mining attack xe2 x80 x99 scheme e attacker builds blocks withholds network fact honest transactions tend greater number ancestor transactions honest transaction receive votes means rules 1 2 note spectre resilient attackers 50% network xe2 x80 x99s total computational power traditional 33% demonstrated 9 additionally imesh receivers wait transaction confirmed sufficient number transactions like waiting number xe2 x80 x98confirms xe2 x80 x99 bitcoin prior spending reference 9 provides guidance long receivers wait trusting new transaction comparison let xe2 x80 x99s assume wait 5 confirmations accepting payment bitcoin network let xe2 x80 x99s assume attacker managed gain control 30% total hash power bitcoin network possibility success attack 17 8% 1 similarly imesh spectre voting scheme employed transaction tx received approximately 130 referrals probability fraudulent intentionally conflicting transaction tx b accepted legitimate place tx reduced 17 8% imesh network grows frequency transactions increases waiting time required transaction verified legitimate network decrease e larger network grows faster conversely network small waiting times long network hash power likely small opportunity attacker attempt exploit order prevent potential attack vector introduce mechanism known xe2 x80 x98akconsensus xe2 x80 x99 discussed section 4 2 confirm transactions trusted nodes imesh infancy figure 7 example voting procedure simplified dag structure spectre counts number voters conflicting transactions figure 7 shows voting procedure transactions x y conflict transaction x transactions 6 xe2 x80 x938 vote transaction x x past y similarly transaction y transactions 9 xe2 x80 x9311 vote transaction y transaction 12 votes according majority votes transactions transactions 10 11 12 transactions 1 xe2 x80 x935 vote transaction x x voters y voters result total number x voters greater y voters x accepted legitimate transaction y rejected rules spectre voting procedure summarised follows voting scheme senders incentive refer 1 transactions transaction x paras transactions confirmation ent vote transaction x transactions 6 xe2 x80 x938 speed sender xe2 x80 x99s transaction directly related 9 xe2 x80 x9311 number referring transactions sender honest transactions gain votes transactions refer small number transactions receiver secretly withheld dishonest parties potentially reject payment sighonest nodes continue add new transactions nificant time transaction validated receiver receive coins subsequently vote honest transaction 2 transactions x y parent noted leaves transaction 12 vote ma imesh possibility leaf referred jority voters new transaction reduce combat need carefully consider transactions referred single transaction explore issue greater detail section 9 7 x0c4 2 akconsensus mentioned previous section assume imesh xe2 x80 x99s infancy period attacker access sufficient resources realistically command majority total network hash power reason unable fully trust spectre consensus mechanism early stages network growth introduce xe2 x80 x98akconsensus xe2 x80 x99 temporary system utilises federated byzantine agreement fba based xe2 x80 x98the ripple protocol consensus algorithm xe2 x80 x99 semi trusted model detailed 18 order validate transactions time spectre consensus mechanism ripple protoco l fba process order confirm validity transactions similar process referred xe2 x80 x98akconsensus xe2 x80 x99 adopted aidos kuneen noted implementation process aidos kuneen differs significantly ripple akconsensus place group trusted nodes periodically review randomly selected transaction imesh group trusted nodes reaches agreement validity transaction transaction known xe2 x80 x98statement xe2 x80 x99 serves act milestone network figure 8 statements finalisation transactions figure 8 illustrates statements act milestones transactions nodes regard statements xe2 x80 x9cabsolute truth xe2 x80 x9d conflicting transactions discarded locally node subsequent transactions referred statement known finalised transactions numbered transactions figure 8 transactions finalised statements reference process consensus follows e g transactions designated 2 finalised 1 node defines addresses trusted nodes statement 2 trusted list 2 nodes selects transaction review rules employed akconsensus order determine broadcasts trusted nodes validity conflicting transactions follows trusted list transaction referred xe2 x80 x98candidate statement xe2 x80 x99 xe2 x80 xa2 transaction finalised youngest statement deemed valid considered invalid 3 trusted node initialises t 50% 4 trusted node reviews legitimacy candidate statement based local history xe2 x80 xa2 conflicting transactions finalised statement transaction possesses older time stamp deemed valid 5 trusted node deems candidate statement legitimate broadcasts xe2 x80 x98yes xe2 x80 x99 vote fullnodes referenced candidate statement deemed fraudulent subsequently discarded xe2 x80 xa2 transactions possess time stamp transaction smaller hash deemed valid 6 node receive minimum t% xe2 x80 x98yes xe2 x80 x99 votes nodes trusted list akconsensus requires minimum 80% agreement becertain period candidate statement discarded tween trusted nodes order accept candidate state7 trusted node increases t t 10% ment extension 20% order reject 8 step 5 repeated invalid candidate statement 9 final round requires minimum t 80% node xe2 x80 x99s trusted nodes agreement order accept candidate statement legitimate elevate status statement acknowledged introduction akconsensus directly contradict aidos kuneen xe2 x80 x99s ultimate vision completely decentralised cryptocurrency akconsensus reasons outlined previously accepted xe2 x80 x9cnecessary evil xe2 x80 x9d time network manote order accepted statement candidate tured point capable resisting attack statement valid transaction structure additionally aidos kuneen believes strongly exist imesh providing completely fee product user base presence akconsensus allows realisation vision day need resort alternative xe2 x80 x98incentivised xe2 x80 x99 mechanisms early network protection 8 x0c5 proof work 9 xe2 x86 x92 4 xe2 x86 x92 15 xe2 x86 x92 2 equal roots case compute length resulting cycle 1 plus sum sending transaction senders perform path lengths node paths join xe2 x80 x98proof work xe2 x80 x99 pow similar performed diagram paths join node 4 cycle length miners bitcoin network mandatory perfor computed 1 4 1 6 mance pow prior sending transaction necessary order protect imesh ddos attacks spam transac cuckoo cycle chosen pow function tions double spend attacks previously discussed imesh following reasons addition pow distribute computational work xe2 x80 xa2 anticipate significantly higher daily transaction load validating transactions participants volumes compared bitcoin network ensures network fact unlike bitcoin fee nature aidos constrained limitations processing capabilities kuneen means economic disincentive frea handful xe2 x80 x98masternodes xe2 x80 x99 instead remains completely quently sending small transactions removed free scale required pow operation aidos kuneen requires fast verification method transaction assigned length l 32 bit integer fields xe2 x80 xa2 unlike typical pow algorithms crypknown xe2 x80 x98nonce xe2 x80 x99 value nonce set tonight scrypt typically resource hash block contain leading run zeros intensive nodes able verify validity form series xe2 x80 x98cuckoo graphs xe2 x80 x99 cycle length l nonces faster utilising cuckoo cycle discussed detail leading run zeroes determines time required pow operation xe2 x80 xa2 unlike bitcoin pow performed chosen produce average pow time 5 xe2 x80 x9310 minthe blocks aidos kuneen pow utes performed individual transaction significantly individual transactions pow operations aidos kuneen implements cuckoo blocks aidos kuneen requires cycle discussed 14 cuckoo cycle arises power perform pow verification esseninsertion keys xe2 x80 x98cuckoo hashtable xe2 x80 x99 naturally tial highly efficient means verification leads cyclic formation random bipartite graphs cuckoo cycle employed cuckoo hashtable consists identical tables unique hash function maps key table xe2 x80 xa2 order prevent attacker able proplocation provides possible locations key agate fraudulent transactions network arrival new key table location deterspecialist hardware asics fpgas mined possible locations currently occupied provide advantage pow time mainly existing keys extracted inserted dominated memory access speed specialist proalternate location potentially displacing key cessing hardware essentially rendered ineffective process subsequently repeated vacant location identified predetermined number itera following cuckoo cycle parameters tions reached process leads formation cy pow operations cles referred xe2 x80 x98cuckoo graph xe2 x80 x99 cuckoo xe2 x80 xa2 cycle length l 20 minimize size impact graph bipartite graph node location transactions edge inserted key connecting locations key reside xe2 x80 xa2 number nodes n 225 provide memory usage 128mb xe2 x80 xa2 easiness n m 100% m number edges prevent optimizations edge trimming 6 co operative proof work figure 9 cuckoo graph cater specifically iot devices performance typically low introduce novel co operative proof work mechanism known copow utilising copow network able group number unverified transactions single larger transaction known xe2 x80 x98batch xe2 x80 x99 allows senders individual transactions batch effectively pool computational power validating batch unit individual transactions copow effectively acts like decentralised version bitcoin mining pool allows large numbers lower powered devices interact directly network single powerful device diagram figure 9 illustrates directed cuckoo graph n 8 8 nodes edges 2 15 4 9 8 5 4 15 12 11 10 5 4 13 added order add 8th edge 10 11 follow paths 10 xe2 x86 x92 5 xe2 x86 x92 8 11 xe2 x86 x92 12 find different roots 8 12 path shorter reverse path 12 xe2 x86 x92 11 add new edge 11 xe2 x86 x92 10 resulting middle diagram order add 9th edge 10 13 find path 10 shorter reverse path add new edge 10 xe2 x86 x92 13 resulting right diagram adding 10th edge 8 9 find paths 8 xe2 x86 x92 5 xe2 x86 x92 10 xe2 x86 x92 13 xe2 x86 x92 4 xe2 x86 x92 15 xe2 x86 x92 2 9 x0ccopow functions follows bob key k actually having 1 sender wishing participate copow broadcasts reveal key request network node aidos kuneen utilizes xe2 x80 x98zkboo zkb xe2 x80 x99 presented 2 wish participate perform 8 zkni mechanism zkboo requires use hash aes encryption function ing copow respond request shown quantum secure 17 3 sender joins copow group 4 group established process leader selection performed group established new device receives identity existing leader 5 sender sends transaction leader mixes transactions participants form batch 6 senders commence pow batch 7 sender periodically sends result xe2 x80 x98pow proof xe2 x80 x99 meets requirement xe2 x80 x98target proof xe2 x80 x99 leader 8 sender periodically receives pow results parties leader 9 parties submit incorrect results ejected group figure 10 example akshuffle operates reference figure 10 operation akshuffle 10 parties fail submit results described follows set period time leader ejects party user desires shuffle tokens simply sends delivers restart command remaining parties akshuffle address shuffle address 11 process continues parties successoutput encryption f k m y x key k fully solves xe2 x80 x98final hash xe2 x80 x99 pow k secret key x public input completed group disbanded point user desires withdraw shuffled toparties participating copow group periodically kens simply create transaction sends tosend pow results leader prove kens normal address pk my2 e xmss public actively participating group prevents key transaction contains user xe2 x80 x99s akshuffle address free loading parties join group intend f k m y x user xe2 x80 x99s akshuffle addresses actively contribute target proof threshold set f k1 x 1 f k2 x 2 f k n x n input addresses means hash complex final hash knows address actually important ensure devices limited computational withdrawal order prove ownership user comcapacity able successfully meet target proof pletes zkni proof proving know k required time period target proof akshuffle addresses listed input equals variable example target proof final tar f k m y x transaction includes user xe2 x80 x99s pubget xc3 x972 xe2 x88 x925 adopted groups low capacity iot lic input x order prevent reuse shufdevices target proof final target xc3 x972 xe2 x88 x922 fle address important point user required withdraw originally adopted normal desktop pcs deposited system allow partial withdrawals added anonymity participants copow group user xe2 x80 x99s balance reuse shuffle address strictly option utilise tor network communications forbidden order maintain anonymity group note transactions akshuffle transactions user normal payments completely different akshuffle zkboo shuffling xe2 x80 x99s tokens 7 akshuffle use akshuffle send tokens directly increased anonymity employ akshuffle user fact signature size akshuffle utilize zero knowledge non interactive zkboo large weighing 500 kilobytes zkni proof anonymous transactions utilising 5 inputs zkni prove value satisfies set functions need reveal secret key example alice input x key k encryption function f k x shares y f k x bob bob wants know alice key k alice doesn xe2 x80 x99t want reveal secret key bob employing zkni alice prove 10 x0c8 network command table 2 basic packet commands description ping pong find node resp node req transactions resp transactions req leaves resp leaves invent figure 11 aidos kuneen network topology illustrated figure 11 aidos kuneen network comprised series nodes communicate p2p fashion clients connect directly nodes node api clients able send api requests order broadcast transactions network usually performed automatically wallet application nodes transactions sent received efficient serialization e g msgpack8 order reduce packet sizes ack invent invent copow ack copow find value store value ping node response ping request node info response node infers request transactions contents respond transactions contents request leaves xe2 x80 x99 hashes respond leaves xe2 x80 x99 hashes invent new transaction hash ack invent invent node searching copow group ack invent copow reserved future use reserved future use order ensure anonymity public nodes clients utilise tor network essential 9 leaves imesh nodes receive sensitive information clients xe2 x80 x99 ip addresses clients xe2 x80 x99 transac mentioned previously section 4 speed confirmation depends heavily number leaves nl eaves tions imesh fact number leaves important note tor employed com imesh increases probability new transacmunications nodes fact tion refer leaf reduces routing traffic tor network introduces unavoidable element delay inter nodal communications number scenarios number efficiency nodes critical aspect speed leaves conceivably increase illustrated figof entire aidos kuneen network additionally ure 12 little need enforce anonymous communication nodes fact initial clientto node connection secured tor initial receiving node transmit sensitive information client relays transaction nodes unfortunately tor quantum secure tor advantage established trusted network large number participants believe short term strong anonymity provided tor network excellent fit aidos kuneen continue investigate potential methods providing quantum resistant anonymity available table 2 lists basic packet commands aidos kuneen network figure 12 leaves imesh scenario attacker seek slow imesh intentionally referring non leaf transactions effect adding additional unreferenced leaves dag decreasing overall efficiency entire network order combat situation set nr e f xe2 x89 xa5 3 help prevent attackers increasing number leaves 8https msgpack org 11 x0cindiscriminately combine fact at4 xce xbb 10 tps tacker add new leaf transaction find provided attacker control algorithm 1 simulation number leaves 50% total network hash power honest transactions imesh input nr e f number directly referring transactions rapidly reference attacker xe2 x80 x99s new leaves inteinput tsi m number iterations grating dag preventing uncontrolled input xce xbb rate incoming transactions growth unreferenced leaves input xce xbb pow time complete pow output number leaves similar situation scenario attacker seek spam network broadcasting large number time 0 current time low zero value transactions pow t xs transactions undergoing pow t xs transactions imesh accomplice attempt create large number leaves time tsi m short time causing confirmation times step xe2 x87 x90 exponentially distributed value rate xce xbb significantly increase easily prevented extime xe2 x87 x90 time step isting requirement complete pow transaction regardless value transacted add new transaction transaction list period complete pow scenario transaction t1 enter new transaction t new t new lea f xe2 x87 x90 true imesh t2 process valileaves xe2 x87 x90 select random nr e f leaves t xs dated e undergoing pow appeared t new leaves xe2 x87 x90 leaves imesh t1 t2 actually referring pow time xe2 x87 x90 exponentially distributed value rate reference transaction scenario necessarily xce xbb pow result malicious intent fact expected t new pow time xe2 x87 x90 time pow time append t new pow t xs occur frequently normal network operation solve problem increase number referring transactions transaction nr e f order decrease nl eaves e converge imesh undesirable effect increasing transaction size need determine optimal nr e f value order converge imesh seeking maintain small transaction size end present simulation behavior imesh firstly assume process incoming transactions modelled poisson flow size transaction t x given constant 32 xc3 x97nr e f bytes time complete pow modelled exponential distribution let xce xbb equal rate poisson flow 1 xce xbb pow equal expected time complete pow average users produce transactions rate xce xbb complete pow 1 xce xbb pow note transaction rate includes pow time 1 xce xbb pow user performing pow users generating new transactions transactions likely include reference transactions transaction currently undergoing pow fact nr e f t depends nr e f t xe2 x88 x92 t 0 e status past makes difficult solve nr e f directly necessary simulate behaviour nr e f handle transactions pow finished t pow t xs t pow time xe2 x89 xa4 time remove t pow t xs append t t xs l t leaves l lea f xe2 x87 x90 f alse end end end count t t lea f true t xs print end figures 13 17 appendix results simulation result nr e f 8 16 32 xce xbb 1 transactions minute included results essentially nr e f 4 results number leaves nl eaves decreases proportion increasing value nr e f xce xbb 1 transaction minute nr e f 2 fully converge dag nl eaves 3 26 nr e f xe2 x89 xa5 4 better nl eaves 1 18 furthermore look xce xbb values notice nr e f 2 considerably worse nr e f values example xce xbb 5 tps nl eaves 3800 nr e f 2 nl eaves 500 nr e f 8 clear use nr e f 2 assume transactions enter imesh speed bitcoin time converge dag 3000 seconds 50 minutes values nr e f nr e f 2 xce xbb 10 tps algorithm 1 shows algorithm simulate number leaves imesh 1 xce xbb pow 10 minutes mentioned t x exhibits simple linsimulate nr e f 2 4 8 16 32 following ear behaviour doubles increase value rates input transactions xce xbb nr e f purely transaction size focused point view 1 xce xbb 1 transaction minute models early seek minimise nr e f value days imesh user base small simulate number transactions 2 xce xbb 1 tps transaction second ndescendant refer directly indirectly 3 xce xbb 5 tps peak transaction speed transaction grow cases mentioned previously figures 18 21 appendix b illustrate results bitcoin network occurred 2017 12 x0cin figures x axis shows number transactions enter imesh imesh stable y axis shows ndescendant number descendant transactions random transaction graph diagonal linear line ndescendant grow ideal rate xce xbb 1 transaction minute graphs nr e f diagonal xce xbb increases ndescendant reduces example xce xbb 5 tps ndescendant increase diagonally 25000 transactions 25000 xc3 x97 0 2 seconds 1 39 hours average nr e f 2 nr e f 8 4000 transactions 4000 xc3 x97 0 2 seconds 13 3 minutes average ndescendant starts increase linearly believe best course action allow nr e f remain variable nr e f 8 adopted initial setting fact imesh grow xce xbb 5 tps maximum tps bitcoin nr e f 8 allows imesh converge leaves 500 additionally previously discussed setting nr e f 8 xe2 x89 xa5 3 help prevent attackers increasing number leaves indiscriminately imesh continues grow review value nr e f variable order maintain optimal network performance 10 future plans following plans intended integrated aidos kuneen network future 1 distribute transactions nodes allow increased scalability e single node hold transactions network instead queries nodes network required 2 implement kademlia based scheme tor like anonymity post quantum security distributed peer discovery 3 implement sophisticated zkni algorithm order reduce transaction sizes 11 conclusion white paper presented new cryptocurrency aidos kuneen aidos kuneen employs imesh transactions directly referred order form dag structure prevent double spending utilize xe2 x80 x98spectre xe2 x80 x99 determine legitimacy transactions employ hash based signature xe2 x80 x98xmss xe2 x80 x99 signature scheme post quantum resistance anonymity introduce akshuffle utilises zero knowledge proof xe2 x80 x98zkboo zkb xe2 x80 x99 postquantum security cater future growth iot sector introduce novel cooperative proof work mechanism called 13 copow allows low powered devices combined resources perform pow group finally provided simulation number leaves imesh expected behaviour network network grows table 3 aidos kuneen technical specifications ticker adk total supply 25 000 000 adk minimum unit 0 00000001 10 xe2 x88 x928 adk pow algorithm cuckoo cycle anonymity akshuffle post quantum zero knowledge proof tor consensus algorithm spectre distributed ledger imesh transaction dag signature scheme xmss post quantum hash based signature usage finance banking digital commerce iot micropayments x0creferences 1 satoshi nakamoto bitcoin peer peer electronic cash system 2008 2 crypto forum research group draft irtf cfrg xmss hash based signatures 10 xmss extended hash based signatures 2017 3 serguei popov tangle 2017 4 sheldon m ross introduction probability models 10th edition 2012 5 sergio demian lerner dagcoin cryptocurrency blocks 2015 6 johannes buchmann erik dahmen andreas h xc3 xbclsing xmss xe2 x80 x94 practical forward secure signature scheme based minimal security assumptions 2011 7 irene giacomelli jesper madsen claudio orland zkboo faster zero knowledge boolean circuits 2016 8 melissa chase david derler steven goldfeder claudio orlandi sebastian ramacher christian rechberger daniel slamanig greg zaverucha post quantum zero knowledge signatures symmetric key primitives 2017 9 yonatan sompolinsky yoad lewenberg aviv zohar spectre serialization proof work events confirming transactions recursive elections 2016 10 peter w shor polynomial time algorithms prime factorization discrete logarithms quantum computer 1995 11 masoud mohseni peter read hartmut neven commercialize early quantum technologies 2017 12 pqcrypto post quantum cryptography long term security initial recommendations long term secure post quantum systems 2015 13 nicolas van saberhagen cryptonote v 2 0 2013 14 john tromp cuckoo cycle memory bound graph theoretic proof work 2014 15 anton churyumov byteball decentralized system storage transfer value 16 michael szydlo merkle tree traversal log space time 2004 17 pqcrypto post quantum cryptography long term security 2015 18 david schwartz noah youngs arthur britto ripple protocol consensus algorithm 2014 14 x0cappendix results simulation xe2 x80 x94 number leaves nleaves figure 13 xce xbb 1 transaction minute nr e f 2 figure 16 xce xbb 5 tps figure 14 xce xbb 1 transaction minute nr e f 4 figure 17 xce xbb 10 tps figure 15 xce xbb 1 tps 15 x0cappendix b results simulation xe2 x80 x94 growth ndescendant figure 18 xce xbb 1 transaction minute figure 21 xce xbb 10 tps figure 19 xce xbb 1 tps figure 20 xce xbb 5 tps 16 x0c