build run decentralized software plain english building worlds fastest decentralized cloud smart software specialized blockchain designed specifically replace cloud computing execute tens millions transactions second enabling build smart software plain english empower create future table contents premise 4 abstract 4 sparkster 6 vision 6 mission statement 6 selling ideas effort 7 problem statement 7 iterative software development lifecycle 7 enterprise software defunct 8 impediments innovation 9 environmental concerns 9 solution software built 10 background 11 12 business overview 13 core value proposition 13 scale revenue strategy 14 viral growth 14 network effects 14 strategic partnerships 15 vertical markets 16 iot 17 cryptocurrency smart contracts 17 barriers entry 18 gdpr considerations 18 product overview 19 sparkster platform 19 sparkster decentralized cloud 20 smart software 21 flows 21 functions 22 documents 23 integrations 24 devices 25 gateways 25 smart contracts 26 bugs 27 technical implementation sparkster decentralized community network 28 road 10 million tps 28 practical example 29 sparkster technology stack 30 consensus 31 privacy 31 security 33 multi chain interoperability 33 consistent hashing 34 ai iot 34 system incentives 35 optimizing execution costs clients 39 roadmap 40 token economic value model 41 token purpose intent 41 token distribution platform 42 token sale procedure 42 token distribution strategy 43 token sale structure 44 currencies accepted 44 referral rewards program 44 allocation token proceeds 44 advisory team 45 leadership team 46 sparkster warriors 48 references 55 disclaimer important disclosure 57 premise sparksters better ways things right tools finger tips finally build solutions improve efficiency solve meaningful problems bring better world abstract sparkster decentralized cloud facilitate decentralized execution smart software evolution smart contracts network cell phones notebooks laptops personal devices held network miners miners rewarded spark tokens contributing spare capacity personal devices sparkster decentralized cloud envision future decentralized networks far cheaper traditional cloud computing likes amazon microsoft google ibm given cloud providers pay rack space cooling dedicated hardware networking infrastructure backup power support personnel personal devices near zero marginal cost operation relative cloud providers c users sajjad appdata local microsoft windows inetcache content word 001 jpg contributor afforded opportunity set price use device time natural market conditions drive cost decentralized cloud traditional cloud computing presents opportunity collectively disrupt $246 billion dollar cloud computing industry darrow 2017 distribute significant portion revenue participants sparkster decentralized cloud spark tokens traditional cloud computing matter nodes added network average cost operation remains constant enabling scale near linear costs decentralized network inexpensive nodes nodes cell phones added network cost operation declines cost operation traditional cloud computing companies wishing run software pay execution software sparkster decentralized cloud spark tokens large companies likely adopt public decentralized cloud like theyve adopted amazon aws microsoft azure satisfy following requirements 1 privacy data stored accessed deconstructed transaction fragments encrypted disseminated network nodes meaningful value viewed public ledger 2 security devices operating network interacting client data hardened form tampering access data processed prevents device accessing network 3 performance transaction latency comparable traditional centralized cloud computing transaction throughput exceed tens millions transactions second 4 material cost savings cost savings sufficient justify efforts involved redesigning software 5 architecture transparent software designed environment easily automatically operate decentralized environment requiring knowledge architectural design considerations decentralized environments software author 6 blockchain agnostic users freedom build software interact existing blockchain choice plain english today existing integrations ethereum iota neo cardano stellar roadmap 7 true decentralized oracles integrate ai iot favorite api importantly integrate code plain english aim paper describe purpose built decentralized blockchain design addresses seven concerns presents legitimate practical solution existing proven technologies collectively rise trustable public decentralized cloud facilitating future cloud computing sparkster today sparkster platform empowerment empower bring ideas life building software learning code use intuitive drag drop interfaces ability define business logic plain english build imaginable focus want build let platform transform ideas working software seconds inspired mit scratch position young children build games simple building blocks empower everybody build enterprise grade applications similar manner innovation 21st century exclusively dependent software development need look far plethora examples emerging companies uber airbnb instagram exclusively software companies sparkster platform aims democratize access innovation innovation 21st century accessible everybody sparkster platform software uber taxi industry seismic disruption competitors microsoft sap oracle business models fundamentally disrupted advent user generated software empowered sparkster platform present fastest cheapest easiest democratic personalized way build software period building worlds fastest decentralized cloud enables people execute software network communitys cell phones combined packaged cheapest democratic fastest way build software run software high performance decentralized cloud proposed sparkster necessary mainstream blockchain adoption vision ideas currency future envision future everybody bring ideas reality create financial independence contributing society process mission statement aim empower dreamer innovate achieve democratizing access tools necessary innovation 21st century software development selling ideas effort ideas ubiquitous theyre limited certain social classes education family upbringing ideas privilege prerogative everybody everyday lives better efficient ways things sparkster platform empowers bring ideas life unshackles limitations job financial disposition regional cultural impediments sparkster marketplace empowers sell ideas find patrons fans help bring change seek create sustainability paying customers sparkster platform presents path liberation path financial independence problem statement enterprises startups individuals attempting adopt ai iot smart contracts entrenched impediments harnessing innovative technologies existing enterprise technologies architecturally incompatible departments slowly qualified people familiar technologies available sufficient supply iterative software development lifecycle c users sajjad appdata local microsoft windows inetcache content word 002 jpg c users sajjad appdata local microsoft windows inetcache content word 003 jpg typical process software currently created convoluted expert understands intricacies business process describe requirements member team team technicians usually limited understanding actual business team attempt document understood meeting domain expert iterative process rejection rework finally successfully document customer domain expert wants begin process analyzing achieve begin development point weeks months passed testing engage customer soon discover understanding signed document customers perception document different usually dismay discover theyve developed different desired iterative process perpetuates try close gap interpretation approved document process software development called software development lifecycle sdlc slow painful berry 2003 technology developed meet need point time needs change market conditions change businesses respond new strategy order update software meet changing demands professionals need consulted great cost simplest changes software large cost associated significant time lag requesting changes initial consultation requesting change explaining new requirements development testing implementation changes inhibits technological advancement instead status quo enterprise software defunct reality businesses today running software absolutely incapable interfacing technologies future matter provides business software sap oracle microsoft homegrown integrating internet things iot devices artificial intelligence ai smart contracts existing business processes possible technology platforms software ripped replaced integrated new technology platform businesses continue competitive advantage revolutionary technologies clark 2017 believe existence sap leonardo evidence premise business software use today need replaced order businesses advantage technologies future continue competitive example iot powered machinery factory simply integrated existing business processes replenish raw material inventory production line entirely new software architecture necessary consume data generated machines use data real time autonomous replenishment decisions sap recognize built leonardo platform software developers impediments innovation traditional erps architecturally incompatible technology future real problem vast majority software developers lack technical knowledge build new technologies kalla 2017 enterprises today struggling find sufficient talent help integrate ai iot enterprises help bring benefits technologies materialize let finding talent integrate smart contracts presents significant challenge enterprises innovate build new business models harness power ai iot smart contracts similar enterprises greatest challenge startups face lack funding lack software developers available ideas reality aleksandrova 2018 presents impediment innovation startups struggle bring innovative products services contribute value society individuals cryptic nature computer programing languages prevents majority people able materialize ideas technologies accessible apis apis purview software developers fortunate versed computer programming language manifesting ideas requires significant capital difficult accumulate inaccessibility technology presents impediment innovation developing technology preserve ability write computer code translate essence simple functions cryptic language understood computers believe inhibits technological development stops great ideas truly realizing potential building future environmental concerns greenpeace report titled green cloud computing contribution climate change suggested cloud computing consumed 632 billion kilowatt hours energy 2007 expected increase 1 963 billion kilowatt hours 2020 associated co2 emissions anticipated reach 1 034 mega tonnes schmidt 2010 high levels co2 emissions clearly unsustainable solution software built c users sajjad appdata local microsoft windows inetcache content word 004 jpg software defined plain english software defined platform architected specifically integrate innovative technologies ai iot smart contracts taking advantage new technologies simple dragging dropping block sparkster platform ready use today empower create future empower bring ideas reality sparkster platform today sparkster platform empowers people running business tools build business process future ultimately competitive sparkster makes software development accessible 99% know code dont want learn enterprises yield power human capital ignite new culture innovation inclusive participation kindles passionate tinker passion manifest culture continual improvement knowledge workers people know business intimately respond changing business circumstances instantly build future terms thats sparkster platform build software designed 100x faster cheaper easier alternative building decentralized software difficult currently prohibitive high gas prices long execution times decentralized software built knowledge decentralized architecture run cheap devices cell phones iot devices deployed click button mining unused cell phone capacity simple installing app process making software execution cheaper democratic drastically cut co2 emissions thats need sparkster decentralized cloud background having spent 14 years working software engineers design build erp software fledgling startup sparkster born extreme frustration answer founder exclaiming tools ill idea emerged empowering managerial team tools define business logic worrying technical coding guiding principle platform developed began 6 year journey r d find way platform built today sparkster platform simply production ready enterprise ready designed cloud principles utilizing managed monitored docker containers platform autonomously scales horizontally support near unlimited throughput users devices addition security forefront design architectural considerations sparkster platform implementing aes 256 bit encryption oauth 2 0 container interactions security isnt afterthought integral architecture sparkster platform product garnered interest enterprise company largest technology companies world far signed official partnerships arm libelium years entire market emerged participants share concerns software development traditional sense unnecessarily complicated burdensome time consuming according gartners magic quadrant low code code segment consists household names ibm microsoft salesforce commend support efforts remove inefficiency process software development disagree majority existing industry major way trying software development easier faster software developers want software development accessible everybody focused 99% participants industry focused 1% software developers believe lead industry realization vision invite compare platform exist magic quadrant determine platform easiest use addition far platform build nice interfaces mobile apps revolutionary technology build ai iot ethereum smart contracts iota smart transactions single line code years ahead competition business overview core value proposition innovative technology results specific outcomes form core value platform empowerment team members build software based solutions disruptive cost reduction disruptive cost reductions achieved drastically reducing time spent building refining software cost running software innovative tools demonstrated applications built hundredth time relative traditional application development addition knowledge specialized programming language unnecessary cost skilled software developers drastically reduced eliminated factors combined lead disruptive cost reductions relative traditional software development existing manual paper based processes onerous spreadsheets replaced custom software applications built house minutes months team members empowered build solutions innovative technology theyre able design applications visually define business logic plain english deployments click single button having worry plumbing scenes disruptive technology emancipates middle management gives power tools improve business processes whist bringing meaningful positive impact organization marketplace brings core value propositions allow innovative authors publish high level compositions use marketplace empowers contributors earn efforts selling creations earning income sharing ones innovation heart mission addition selling s ideas future aim facilitate decentralized execution software built code platform participants devices functions execute compensated spark tokens running software defined sparkster platform sparker decentralized network facilitates substantial reductions cost running applications scale traditional centralized cloud providers amazon microsoft enable add cloud servers predictable cost cloud server transitioning cost transaction cost node enables company run software having anticipate demand surges respond future demand looking rearview mirror imagine having entire aws cloud available business need reserving instances thats sparkster decentralized cloud addition drastically cheaper aws azure fixed costs running service like rack space cooling dedicated hardware networking infrastructure backup power support personnel dont exist decentralized cloud companies pay transactions spark tokens miners devices available resources sparkster decentralized cloud exchange spark tokens scale revenue strategy achieve scale sparkster platform free use personal capacity limited certain number transactions month personal capacity limit lifted referring users use platform commercial capacity subject ongoing fees form user licenses transaction fees device fees storage fees etc paid engaging users listening feedback aim service irreplaceable ubiquitous inspired byod movement anticipate user community solve problems encounter personal professional lives tools platform platform theyre familiar sparkster platform decentralized cloud complementary products theres significant interest today companies large small want generate new business models atop decentralized blockchain technology sparkster technology stack presents cheapest easiest fastest way achieving software built sparkster 100x faster easier traditional means sparkster platform generate demand organically sparkster decentralized cloud viral growth sparkster platform free use individuals transaction quantity limits increases personal use limits attained referring friend platform like gets free ride uber increase storage space dropbox word mouth referrals critical component growth plan network effects sparkster platform aims provide fundamental constructs e g conditions necessary build software applications building applications fundamentals optimal significant opportunity user community create higher level constructs e sales tax calculators utilized members community build high level applications e accounting software effect provide simple building bricks members community use bricks construct cars houses etc c users sajjad appdata local microsoft windows inetcache content word 005 jpg peer peer marketplace innovative users provide sell higher level constructs e sales tax calculators accounting software platform users increases user engagement presents model value platform provides users increases exponential rate consumers higher level constructs compose applications bring new businesses innovative solutions unsolved problems provide income generation opportunities willing author publish platform marketplace elect execute software decentralized computing network gain participants network computing cost decrease materially participants compete earn spark tokens unused cell phone iot device capacity democratize software execution present viable cost effective alternative services like aws azure long run given negligible marginal cost making ones cell phone available decentralized computing believe rise disruptive software execution model relative cloud computing addition significant cost reductions relative cloud computing democratizing software execution real impactful implications environment eliminating cloud computing strategic partnerships http sparkster wp content uploads 2018 01 arm mbed partner 210x150 jpg http sparkster wp content uploads 2018 01 libelium logo jpg strategic partnerships mutually beneficial like vertical markets present opportunity deliver meaningful value platform existing community users grow user base addition partnerships provide cross pollination opportunity community benefits interacting sharing ideas collaborating create solutions existing problems strength strategic partnerships validation concept technology established organizations key users technology shared vision want partner help bring technology masses far signed official strategic partnerships libellium industrial sensor gateway distributor arm worlds largest computer chip designers building deep integration strategic partners presents significant opportunities expand reach build specific integrations serve needs partners community grow customer base giving access market leading specialists leverage libelium weve built gateway software facilitates seamless connectivity cloud device simple rules engine facilitates local data processing determine data sent platform data arrives platform data application composed platform decisions business process application orchestrate actions real world e turn sprinkler system simply provide meaningful graphical dashboard arm weve developed ability build iot devices writing single line code users ability use drag drop blocks define device logic develop specific iot devices simple example device detects temperature greenhouse turns warning led temperature rises falls outside normal operating range uses relay open close window device programmed controlled monitored writing single line code platform generate device code c produce binary deploy local arm arduino esp device completely autonomously click button addition deploying logic build logic connecting platform mqtt iot communication protocol implement appropriate device security generate virtual representation device platform virtual representation facilitates bidirectional secure dataflows platform data build iot powered applications addition powerful iot applications dashboards built clicks example wanted monitor temperature greenhouse state window real time dashboard built minutes single line code vertical markets developing targeted solutions specific vertical markets based assessment potential growth value vertical market contribute community far identified vertical markets built deep integration internet things iot cryptocurrency smart contracts significant opportunities markets terms user growth contribution value iot according market participants iot industry represents $20 trillion opportunity 2025 feel transformative technology fundamentally disrupt existing business operations existing business process technology architected designed input devices physical world making decisions executing business processes practical example machines slow speed deliveries raw materials picked warehouse delivered production line avoid raw material congestion factory floor today erp systems unable handle unscheduled machinery maintenance factory autonomous way existing technology human intervention needed deal scenario erp use today weve devices primary focus platform fully integrated sufficiently generic concept adapted suit plethora partner integrations implementations cryptocurrency smart contracts whilst vast applications disruptive opportunities created smart contracts perceive fundamental problem burgeoning industry expect lawyers learn write code expect lawyers entirely replaced autonomous smart contracts today smart contracts inaccessible majority potential users impacted commercial adoption platform uniquely positioned address problem enabling smart contracts built plain english focus strictly defining actual business logic contract expected execute platform handling translation functioning smartcontract weve integrated ability generate ethereum smart contracts iota flash channel transactions platform authored platform generates appropriate code smart contract execute respective network means knowledge implementation details smart contracts completely unnecessary weve built tested insurance ethereum smart contract use case buyer purchases medical insurance prior policy issued request forwarded underwriter approval approval granted client emailed copy policy document entire scenario built single line code note scenario simulated work actual medical insurance providers underwriters weve built smart contract issues tokens payment received ico smart contract written plain english executed ethereum network feel free check demo video contract action barriers entry aim create barriers entry patenting technology innovative ideas engaged leading london based technology specialist law firm bird bird provide opinion patentability technology ideas based analysis engaged kilburn strode llp write patent applications filed q2 2018 market innovative technology presents opportunities aim build community rate new entrants able scale point represent material threat gdpr considerations gdpr concerns addressed limiting storage nodes join particular cell suppose limitation introduced ip address storage node european address eu regulatory requirements sensitive data leave jurisdiction architecture lends uniquely solving problem regards right forgotten particular challenge blockchain environments given data immutable solutions propose global state maintained architecturally ordered distributed hash tables delete command simply render historical data inaccessible applications built atop sparkster decentralized cloud impacting immutability addition encrypt deleted data platform key provide additional guarantee data inaccessible client applications built atop sparkster decentralized cloud shall wait legislations evolves address blockchain environments adjust strategy appropriately product overview sparkster platform sparkster platform enables build software writing code simply dragging dropping blocks plain english snap blocks describe want create worrying works building software easy playing lego cut time software months days easy children built software minutes software generated sparkster platform specifically architected high volume distributed applications horizontally scalable implementing streaming pipelines platform architected support veracious demands iot ai environments security architected core platform implementing aes 256 bit encryption interaction oauth 2 0 authorization authentication sparkster platform generates enterprise grade software knowledge concern software design necessity architectural awareness software generated sparkster platform architecturally independent meaning software generated sparkster platform compatible architecture sparkster decentralized cloud client elects execute software long run sparkster decentralized cloud prove far cheaper sparkster platform execution environment sparkster decentralized cloud picture containing object description generated high confidence sparkster decentralized cloud facilitate execution smart software defined sparkster code platform decentralized fashion miner install sparkster mining app cell phone provide user generated smart software local sparkster runtime environment sre sre localize architecture necessary execution decentralized coordination functions workflows etc companies individuals wishing applications run decentralized fashion place bid decentralized exchange stake spark tokens accordance theyre willing pay free market clients free place bid miners free ask wish matching bids asks platform access fee cleared function workflow execution begin tokens issued miners use cell phone desktop processing power addition compute nodes storage nodes join network nodes responsible decentralized data persistence documents maintaining repository components designed community users event data needs persisted decentralized fashion nodes paid appropriate fee spark tokens platform access fee long term data persistence clients free place bid miners free ask wish matching bids asks platform access fee cleared data persistence initiate miners compute storage stake tokens collateral ensure operate honestly verification nodes validate transactions generated compute nodes persisted storage nodes verification nodes detect illicit activity cease stake advanced miners bounty detecting illicit behavior lies system checks balances gives rise safe secure public decentralized cloud instances compute execution data persistence data rest transit fully encrypted compute nodes data nodes able determine theyre executing persisting achievable given execution occur memory cell phone data stored storage nodes fully encrypted private owner data smart software sparkster platform environment software designed drag drop fashion business logic defined plain english smart software distinct smart contracts natively incorporate abilities smart contracts easily provide 1 html responsive interfaces desktop mobile compliant default 2 provide rest apis facilitate integration existing business processes traditional software 3 ability external api handle responses deterministic fashion automated oracle processing layer outline components constitute smart software flows sparkster platform flows constitute definition piece software flows assemblage core components sparkster platform including functions documents devices integrations ai etc functions functions single building block performs unit work easy way think action business logic defined function plain english accompanied fully customizable user interface functions plugged composability create string functions results particular business process example function calculates particular discount item certain quantity levels reached paired function calculates sales tax entire basket items demonstrates functions thought lego blocks easily plugged create meaningful applications addition user interface business logic functions generate api automatically critical want use particular function application compute nodes consist cell phones tablets notebooks sparkster decentralized cloud responsible executing functions function consists operations actions example function operation update field adding existing numbers participation network simple installing app device setting desired price function operation execution device owner rewarded device selected execute function behalf client documents documents basic data storage entity sparkster platform provide interface english language business logic api interface difference function facilitate persistence retrieval updating deleting data datastore datastore needs defined relationships data storage entities documents easily established plain english documents aim represent entity real world good example document patient record inventory item storage nodes sparkster decentralized cloud rewarded storing retrieving data storage nodes consist desktops servers operated community data immutable decentralized networks document decentralized cloud records created edited deleted maintain system versioning records updates adopted new versions new instances record integrations integrations interface outside world provide simple efficient abstraction api webservice hosted provided external party integrations defined single line code involve merely populating form likely scope non technical person able build use approach particularly valuable technical user define integration publish marketplace non technical user simply consume use project application line philosophy having understand plumbing scenes works focusing strictly desired outcomes good example integration graphical user interface provides shipping quote simply input weight origin destination zip codes return shipping price directly fedex ups api decentralized environments integrations called oracles oracles externalities particularly difficult handle decentralized networks imagine example integration interact iot lightbulb device traditional smart contracts contract executed nodes network happen 1 000 nodes network tried turn light stepping flooding problem occur turn messages arrive different times network attempts arrive consensus imagine manually turns light middle process annoying nodes turning light process today oracles handled centralized manner requiring trust source data overcome problem novel way assign task turning light compute node cell phone tablet etc sure compute node performed required task reply iot device sent different node receive successful reply node rewarded devices devices imagine representation physical device real world virtual representation enables integrate physical devices applications devices consist core concepts commands fields fields facilitate bidirectional data transfer example imagine greenhouse iot temperature probe actual temperature measurement sent sparkster platform temperature field commands sparkster platform instructs device action example turnon command cause led light turn open command instruct relay controlling window cause open capabilities exposed specific device blocks available aspects platform functions documents flows etc gateways gateways represent group devices connected gateway gateway provides internet connectivity devices share internet connection reduce deployment costs gateway platform interact device individually deal devices group example talk august door lock internet use apple tv gateway device talking individual device door lock talking directly apple tv gateway example interacting group devices aggregate gateway car park parking space device directly connected internet connect appropriate protocol xbee gateway gateway connected platform implemented system libelium able provide unique capabilities able execute local preprocessing gateway data sent platform particularly useful significantly reduce bandwidth consumed sending data platform internet change status e parking space changes vacant occupied vice versa dont need worry interacting individual parking space devices interact limited data need gateway mentioned interaction devices gateways sparkster decentralized cloud special case function execution compute nodes smart contracts smart contracts enable platform build execute adjudicate transactions financial consequences real world currently support versions smart contracts ethereum smart contracts iota smart transactions iota flash channels traditionally contracts way parties come agreement contracts define task need accomplished terms time period fulfillment event dispute traditional contract seeks enforcement terms agreement theory practice resolution disputes occurs outside contract court law costly time consuming endeavor high legal fees years draw resolution smart contracts enable digital enforcement verification facilitation traceable agreement parties need 3rd party intermediaries smart contracts automatically executed soon necessary conditions contract met means practice funds released party performed according terms contract release funds administered impartial entity contract adjudicating transactions core strengths smart contracts penalties defined autonomously executed party failing perform obligations according terms smart contract smart contracts acts impartial adjudicator case executes penalty clauses defined parties accordance specific unambiguous logic created reduces necessity legal involvement event party fails perform relative agreed contract current challenge smart contracts require advanced programming skills create run risk error logic programming developer lead loss vulnerability assets sparkster platform seamlessly create smart contracts writing code need hire developer clicks smart contracts built sparkster platform plain english single line code easily deployed ethereum network click button believe revolutionary business missing ingredient facilitating safe secure peer peer trade applications built core components platform functions documents workflow devices etc easily interact smart contracts appropriate english language blocks addition smart contracts specific use cases e insurance smart contract authored individual available use smart contract template essence create marketplace smart contracts authored plain english easily understandable everybody decentralized perspective smart contract executed client meta mask bearing sparkster decentralized cloud software built sparkster platform potential interact blockchain limited ethereum iota future facilitate interaction neo cardano stellar ripple bugs software autonomously generated sparkster platform overlooked incredibly important benefit theyre bug free business logic hands actual code scenes makes magic happen uniform consistent application built platform entirely bug free save countless hours weeks relative traditional software development reason traditional software development environments hope competing software built platform 100x faster traditional software developers technical implementation sparkster decentralized community network road 10 million tps introduction sparkster decentralized cloud page 20 required reading understand section c users sajjad appdata local microsoft windows inetcache content word 007 jpg sparkster decentralized cloud designed specialized blockchain execution smart software eliminate constraints imposed blockchains given clients desire companys data private eliminate necessity maintaining global state significant allows shard distributed hash tables client groups importantly shard needs awareness shard unique benefit afforded sparkster decentralized cloud specialized blockchain specifically afforded clients isolation key factor building high throughput systems useful analogy explain means recall human cell division zygote zygote grows develops splits embryo cells instead embryo continues divide matures similarly think blockchain cluster nodes cell sufficiently large number nodes particular cell cell division induced lets worst case scenario 1 000 transactions second cluster nodes cell division induced transaction rates doubled 2 000 transactions second similarly cell division continue given sufficient nodes transaction rates increased linearly limiting factor possible need maintain global state practice means cell complete isolation cells theres performance penalty overhead c users sajjad appdata local microsoft windows inetcache content word 009 jpg attributed continued cell division isolation node clusters core principles building high throughput systems c users sajjad appdata local microsoft windows inetcache content word 006 jpg practical example lets practical example explain works imagine ge gm wanted build run software sparkster decentralized cloud ge want data accessed employees maybe customers ge ges software applications need interact data consequences distributed hash tables concern ges data need gms data implications substantial means peers replicating data distributed hash table dht ge red nodes completely isolated peers replicating data gm yellow nodes ge gms data replicated parallel fundamentally substantial increases blockchain performance achieved transactions received processed different cells parallel case doubling throughput transactions second reason works cell isolated cells eliminating communication overhead involved maintain consistent dht cells add cells necessary impacting performance cell increasing throughput overall system cell appended note example consists customers reality cell consist thousands customers use case suppose wanted build business product millions customers akin uber airbnb company opt distribute customers cells benefit throughput millions transactions second suppose customers distributed according letter customers begins cell b practical given customers purchase history need seen customer incredibly valuable company building software allows build software serve millions customer concurrently having architect software necessarily theoretically theres limits cells create theoretically theres limit tps able achieve thats 10 million transactions second orders magnitude limiting factor mining participants encourage participate sparkster decentralized cloud system incentives pivotal weve designed free market participants independently determine charge use resources miners free set prices clients free elect willing pay sparkster technology stack sparkster technology stack represents set technologies specifically designed facilitate decentralized cloud computing smart software evolution smart contracts written plain english people prior knowledge software development concern underlying decentralized architecture consensus today exists different approaches solving byzantine generals problem ultimately arriving consensus trustless parties implementing proof work bitcoin trusts whomever greatest hashing power semko 2017 ethereum trusts whomever money reliance proof stake protocol lacina 2015 addition bitcoin ethereum suffer significant confirmation times impractical commercial applications use chain transactions mitra 2017 federated byzantine agreement system fbas proposed stellar network mazieres 2016 proven easily perform 1 000 transactions second latency 2 5 seconds confirmation barclays africa claimed achieved 10 000 transactions second processing 36 million transactions hour transactions second stellar process 2018 achieved forming consensus slice total participants network known quorum slice entire network consensus federated meaning party trusts party b party b approves transaction party necessarily approves transaction arrive consensus quickly koller 2017 focusing efforts creating consensus algorithm meets throughput latency needs decentralized software execution network chosen implement stellar consensus protocol scp commercial implementation fbas inherent limitation stellar consensus protocol scp including lack intrinsic incentives good behavior lack formal methodology determine trust forming consensus slice mazires 2016 focus paper resolve limitations scp create self governing network incentives actors honest rise decentralized cloud execution software propose stellar consensus protocol scp reaching consensus parties network additional layer determine tasks allocated layer governs earnings participant aim create system incentives keeps parties honest minimizes risk attack network minimizes wasteful work performed participants network privacy privacy security absolutely necessary handling transactions behalf corporate clients company bound jurisdictional legal restrictions eus general data protection regulation gdpr czarnecki 2017 legal restrictions reason company demand data privacy theyre adopt public blockchain reason protect customer supplier data pilfered competitors essence corporations adopt public blockchain infrastructure theyve adopted public cloud privacy data major consideration provide privacy propose zero knowledge proofs zkps encrypting data persisted sparkster decentralized cloud zero knowledge proofs limit number parties interacting sensitive privileged data enabling party executing transaction prover reveal privileges sensitive data verifying party able prove data addition zpks enable ensure publicly observable data remains encrypted topic zero knowledge proofs discussed extensively likes vitalik buterin resources found explain zkps buterin 2017 provide intuitive oft quoted example consider scenario ring peggy victor suppose peggy purple wants prove victor green knows passphrase door cave peggy private wishes prove knows passphrase wish reveal passphrase peggy chooses path victor seeing b victor yells path like return suppose experiment repeated 20 times time peggy emerged successfully probability peggy able pull successfully knowing passphrase 1 million examples zkps use today example zcash implemented zk snarks form zero knowledge cryptography example peggy victor needed interact multiple times forth order arrive sufficient conviction peggy know passphrase zk snarks evolution succinct non interactive meaning proof consists message sent prover verifying party addition messages lightweight usually bytes verified milliseconds security ensure customers sensitive data remains secure executed sparkster decentralized cloud steps protect tampering sparkster mobile app employ following anti tamper tamper detection approaches outlined 1 app compare public key sign app confirm signed sparksters development private key comparison fails know app tampered prevented joining sparkster decentralized cloud 2 digital signatures check sums enable detect possible file tampering tampering detected memory immediately deleted application matter protection 3 ensure application files libraries etc encrypted significantly limit risk tampering 4 input validation limit risk injection attacks 5 employ party tools detect malicious injected payloads running memory thread execution hijacking attack techniques 6 ensuring data sent device secure post xsrf tokens 7 app data cached transactions executed entirely memory 8 securely delete data nullify memory completion transaction addition force garbage collection transaction 9 data transmitted device encrypted protect man middle attacks 10 ensure communication devices protected ssl tls 11 eliminate knowledge customer transaction belongs reducing incentives hack application data multi chain interoperability given sparkster decentralized cloud blockchain specialized cloud computing execute payments natively necessity integrate blockchains virtual currencies facilitate payments essence wish create piece software makes payments parties software defined sparkster platform need interact networks presently sparkster platform native integration ethereum iota generate ethereum smart contracts plain english interact ethereum smart contract plain english implications smart software quickly easily developed interact use ethereum smart contracts addition interact iota network iota smart transactions facilitated iota flash channels implications substantial given ability generate enterprise grade software sparkster platform easily integrate smart contracts transactions existing business processes ease simplicity alternatively build software solves meaningful business problems pay customers currencies theyre actually sparkster limits future add support chains specifically neo cardano stellar roadmap details consistent hashing centralized coordinator global state compute nodes identify cell clients data stored thats smart algorithm called consistent hashing comes algorithm allows hash clients id extract bounded number bounded imagine bounds represent point circle cells clusters nodes divide circle equidistantly easily able assign cell client identify cell consistent hashing algorithm importantly compute node determine independently find clients data interacting central authority requiring central database network fully decentralized ai iot sparkster platform aims empower people bring ideas reality emerging technologies ai iot necessary constituents platform aim technologies accessible people having programming let complex mathematics underpins ai far ai based facial recognition completely codeless bringing forms artificial intelligence natural language processing speech recognition accessible manner sparkster platform sparkster industrial iot partnerships today arm libelium native integration apple homekit amazon alexa arduino raspberry pi sparkster platform thought environment architected specifically high throughput requirements iot making technologies accessible code youtube channel features video children aged 7 10 years old creating iot devices independently codelessly sparkster platform mobile world congress 2018 demonstrated sparkster platform ai facial recognition detect cleaner opening august door lock controlled apple homekit execute automated payment iota entire demo built code plain english find video demo youtube channel system incentives exist limitations stellar consensus protocol scp addressed broad capacity scp lacks system incentives participants honest fails provide solution determine trust forming consensus mazires 2016 systems incentive necessary ensure sufficient network participation rate participation directly proportional rate price operation decline paying participants participation necessary delivering decentralized cloud significantly cheaper operation traditional cloud computing critical delivering vision disrupting $200bn cloud computing industry incentives provide additional positive effects provide mechanism encouraging participants network behave appropriately compute nodes storage nodes rewarded spark tokens contribution network compute nodes contribute mobile tablet notebook cpu memory purpose remotely executing software components behalf paying clients storage nodes contribute storage space network bandwidth purpose storing retrieving encrypted data behalf paying clients clients pay network participants execution software storage data given marginal cost operation near negligible compute nodes sparkster decentralized cloud quickly converge costs clients significantly cheaper traditional cloud computing likes amazon microsoft provides clients significant incentive adopt sparkster decentralized cloud turn benefits network participants growth network load device owners set price function operation use device statement action charged price function operation set device owner function defined operations cost execute operations reason system required provide disincentive creating operations run forever known infinite loops functions defined clients maximum gas limit set maximum number operations function legally execute function reaches limit function execution automatically terminate necessary ensure functions designed correctly e small units execution infinite loops impact availability network price governs device rewarded function node selected execute function behalf client customer allocation work execution governed proof stake probability distribution probability assignment compute node number tokens stakes node total number tokens stakes nodes proof stake provides incentive compute nodes storage nodes operate honestly network misbehavior result stake seized verification nodes detect misbehavior example node claims executed task fact stake taken verification node theres strong incentive compute nodes storage nodes operate honestly lies natural incentive verification nodes police network hopes capturing stakes behave maliciously compute nodes storage nodes earn income proportional stake verification nodes earn income proportional work perform verifying transactions instead wasteful effort case bitcoin hern 2018 verification nodes sparkster decentralized cloud perform useful proof work quorum verification nodes necessary order detecting node receive reward quorum slice participants chosen random avoid risk collusion unwilling stake tokens participate sparkster decentralized cloud verification nodes earning use cpu memory storage nodes rewarded storing retrieving data like compute nodes probability assigned persistence request function tokens staked factors necessary storage node misbehave deleting data received payment case verification nodes request data order validate retain data clients able elect long like data persisted sparkster decentralized cloud time frame expired verification nodes longer verify data persistence storage nodes free delete data risk losing stake pricing set storage node owners independently record month basis encourage reliability storage node participants participants paid lump sum storage agreement theyre paid performance basis theyre rewarded week storage data week prior time time storage nodes experience hardware failures availability compromised case storage node acting maliciously mitigate risk stake seized storage node owners able place node maintenance mode maximum 16 hours 16 hours node automatically added network verification nodes resume data requests verification purposes allocation persistence requests storage nodes governed probability distribution probability assignment node number tokens stakes node total number tokens stakes nodes availability index defined response time variable defined availability exponentially smoothed indexed value based number hours node gone maintenance mode introduce incentive storage node operators ensure nodes remain available exponential smoothing ensures past forgotten recent availability performance given greater significance problems past recovered derived follows node let 1 h h 0 number availability index specific month h number maintenance hours month total number hours month 1 1 0 current expected availability rate smoothing factor 0 1 response time monitored verification nodes theyre verifying transactions persisted storage nodes nodes fail respond response threshold response time score impacted similar bitcoin mining difficulty response time thresholds reduce automatically predictable way entice participants improve network performance time storage nodes found provide response times higher 1 s 1 response time variable network threshold nodes response times determined verification node n observations decay transaction threshold function transactions processed time t rate transactions processed decay constant number transactions target transaction quantity 1 1 0 ln optimizing execution costs clients free open market network participants facilitate competition ultimately drive execution costs network participating competes execution opportunities clients freedom choose theyre willing bid execution wait offer executes order free market presents fairest way find execute opportunities find equilibrium market roadmap token economic value model built global marketplace bring authors innovators makers sparkster platform authors create components example ethereum smart contract automotive industry publish marketplace innovators makers discover components marketplace integrate build custom software solutions problem trying solve tools enable software built 100x faster traditional software marketplace adds order magnitude improvement efficiency productivity spark token provides vehicle consumers authored components compensate author contribution gives authors incentive contribute marketplace spark token facilitates micropayments feasible traditional fiat given exorbitant credit card transaction fees minimum charges imposed credit card merchant banks sparkster token currency accepted compensation sparkster platform authors able publish components software exchange sparkster tokens q4 2018 launch decentralized cloud components executed miners cell phone iot devices available decentralized compute environment software authored sparkster code platform miners rewarded spark tokens providing incentive compete provide unused capacity close marginal cost capacity near negligible network effects result communitys participation cost executing software sparkster cloud diminishes time increasing client participation network time addition network effects result community contributing creations marketplace making faster easier build software sparkster platform believe result sparkster market leader creation development enterprise software token purpose intent tokens intended facilitate trade members community provide incentive authors innovators contribute marketplace publishing marketplace authors opt charge use contribution author free choose charge payment spark tokens sparkster charge author discretionary platform fee paid transactions occur sparkster marketplace deducted automatically remittance author fees charged contributions marketplace offered free sparkster platform fully functional available use prior token sale sparkster decentralized cloud released public use spark token purchase execution decentralized cloud miners paid tokens miners required stake tokens collateral ensure cheat verification nodes check miners honest theyre found cheating stakes captured spark token integral efficient operation sparkster decentralized cloud token distribution platform token sale conducted ethereum network issuing standard erc 20 tokens use wallets exchange coinbase binance etc token sale procedure order participate token sale need 1 signed whitelist received email confirmation allocation 2 complete kyc aml verification procedure 3 sign saft token sale agreement 4 follow instructions provided email complete payment anybody interested purchasing tokens directly required complete kyc aml verification persons defined sec permitted purchase tokens verified qualify purchase tokens authorize ethereum account request point forward able buy sell hold tokens authorization revoked event determine engaged terrorist financing violates guidelines provided sec token distribution strategy 1% total token supply distributed charitable organization dreamers foundation mission organization promote education technological innovation worlds poorest people create technology promotes growth independence enhances sense self determination picture containing text description generated high confidence 10% tokens reserved support current future team distributed rewards incentives bonuses etc support growth development 20% tokens reserved shareholders sparkster compensation investment years build sparkster platform 2% tokens retained facilitate liquidity exchange listing exchange listing necessary ensure wishing use sparkster decentralized cloud ability purchase tokens order unsold tokens retained sparkster facilitate exchange liquidity team initial investor tokens vested period 2 years remaining 67% tokens eventually sold token sales phases effort ensure everybody given chance tokens willing pay exorbitant gas fees right moment sale begins maintaining whitelist sales token sale structure presale 250 million tokens presale conducted allow non persons wishing purchase $25 000 tokens interested participating presale visit http sparkster join whitelist crowd sale remaining 38 million tokens public crowd sale open non persons specifics crowd sale determined consultation telegram community currencies accepted able pay spark tokens equivalent value ethereum eth referral rewards program token reward 0 5% referred token purchases offered referrals token buyers personal referral url offered register token sale referrer earn bounty referred user makes payment tokens token rewards earned deducted token allocated phase offered remaining unallocated balance token holders including earn tokens bounty program need approved kyc aml process c users sajjad appdata local microsoft windows inetcache content word 011 jpg allocation token proceeds proceeds token sale allocated follows following salesforces footsteps intend allocate significant portion proceeds sales marketing efforts amounts guide intend allocate proceeds advisory team professor gary leavens chair computer science ucf expert computer programming languages image result mit logo image result university michigan image result ucf gary t leavens professor chair department computer science university central florida received ph d mit 1989 graduate studies mit worked bell laboratories denver colorado member technical staff bell labs owned t owned nokia professor leavens recognized expert programming languages research interests include programming specification language design semantics program verification formal methods emphasis object oriented aspect oriented paradigms worked specification languages smalltalk larch c larch languages embody insights work theory behavioral subtyping best known work language design semantics related multiple dispatch languages multijava professor leavens consulting sparkster team 2015 juan albelo senior vice president sap image result juan albelo image result sap image result oracle 20 years sales experience software industry companies like peoplesoft oracle successfactors sap sungard peoplefluent juan extensive leadership software sales sales operations consulting education services experience multi cultural abilities business development expertise extensive upper management acumen passionate success building high performing teams currently serving head hcm sales sap proven track record quarterly accomplishments years sales marketing experience products services highly competitive software industry leadership team sajjad daya ceo image result cisco logo serial entrepreneur having co founded companies divisions world sajjad instrumental building leading portfolio global companies generate annual revenues excess $50 million younger years sajjad worked cisco systems technical capacity sajjad diverse hands experience building aspect company ground shoestring budgets sparkster result unrelenting ferocious passionate commitment empower powerless amit kumar vp technology image result wipro professional 20 years experience leadership roles areas application database management seasoned veteran experience working wipro ankh software worked domains healthcare manufacturing e commerce extensive practical knowledge architecting platform service software service development models amit lives breathes cultural mindset making impossible possible sajjad amit worked directly 11 years shabeer kirmani technical evangelist image result t image result pfizer image result nbc universal shabeer enthusiastic techie researcher public speaker dreamer shabeer diverse professional background working fortune 100 firms including t pfizer nbcuniversal sectors diverse finance telecommunications pharmaceuticals informatics consulting government recently working data scientist defense space sector certified project management professional pmp avid reader shabeer enjoys good books thought provoking discussions volunteering traveling great food sajjad shabeer friends 6 years dayanie rajeev vp human resources image result citi image result ibm dayanie true champion human capital management function decade experience working organizations citi bank accenture dayanie credited building team sparkster warriors ordinary people dayanie instrumental identifying individuals tenacity passion technical prowess overcome technical obstacle theyre presented dayanie credited leading large hr projects ibm sajjad dayanie working 10 years sparkster warriors neeru pallen image result times comes creative digital marketing neeru lot strings bow decades worth experience having worked companies times london passion hands online content marketing helped transform diverse range businesses working closely creative team create finely tuned targeted content strategies resonate readers neerus happy place gift enhancing performance engagement levels site touches munawar bijani image result lockheed martin image result institute simulation training munawars passion programming started age 12 curiously desire learn drove teach program munawar blind visionary skills programming develop games blind people notably combat flight simulator formed company 2010 sold copies games world munawar worked companies institute simulation training team worked partnered lockheed martin develop system firefighters navigate safely smoked filled buildings today munawar prized developers instrumental building important aspects underlying architecture inspiration meet nagendra obbu image result wipro image result infosys image result capgemini nagendra senior software engineer wealth experience worked wipro infosys capgemini known diverse range experience nagendra worked integrative application solutions banking projects discover worked capgemini negendras role includes planning researching developing logic coding testing deploying web projects minimal assistance highly adaptable individual skills participate projects varied levels complexities challenges siddharth ubale image result hsbc image result nedcor siddharth software engineer specializes data analytics data warehousing 8 years experience working clients hsbc nedcor bank involved large scale big data projects known employing latest technologies tools data analytics formulating methods effectively draw business solutions data sparkster involved building enterprise level data warehouse system interactively renders reports statistical requests mithun debnath image result ola image result snapdeal software engineer extensive experience backend technologies experience developing large complex applications involving migrations integrations saas applications analytical rigor strategic thinking critical aspects attribute success hes dive end end technical implementation case work projects ola snapdeal hes creating niche solutions enjoys reading science fiction plays badminton prasad nadendla prasad senior software engineer involved research development ai related technologies solutions sparkster instrumental security integration iot understands business needs applies artificial intelligence technology solve real world business problems constantly proposes creates ai enabled platforms mesh multiple technologies novel applications drive meaningful solutions sparkster praveen namoju praveen plays crucial role driving leading project teams analysis design development applications adds perspective spans disciplines software development solution design project leadership addition leading team great writing architectural documentation needed construct integrate systems inherently compatible extensive modification alteration team monitors platforms performance anticipates needs optimizations tracks industry trends evaluates new alternative technologies assists creating reports related present future technology needs trip boston usa extended training enhances ability understand businesses need technical automation domains swarup kumar roul lead software engineer experience solving business challenges simple technical solutions specialization lies adapting innovative current coding techniques practices maintaining enterprise coding standards organization stack web developer works business team develop user centric software products idea production swarup passionate techie happens indescribable affinity coffee team describe extremely friendly sincere ambitious nature foodie great cook believes simplicity key brilliance shaik naimuddin veteran software developer comes experience rich workflow management addition working workflow project written automated logging monitoring platforms execution system ensures reliable messaging guarantees click button things happen 100% time enjoys work challenges learn new stretch different direction baggiaraj specializes designing developing user interfaces products hungry new challenges innovations works closely product team understanding converting design vision prototypes code ability visualize unstructured information transform sleek responsive attractive design commendable hes sport enthusiast loves play cricket badminton hes working magic design sethuraman babu user interface developer demonstrates solid grasp current best practices web mobile ui design sharp eye concept execution strong ability follow creative direction required highly organized exceptional attention details ability prioritize accurately completing tasks stand user experience specialist udbhav agarwal software engineer specializing open source big data technologies helped firms taking systematic disciplined quantifiable approach building software warehousing sub second latency works closely product managers functional teams build effective data products clients drive product decisions improve customer experience increase overall operational efficiency involved designing driving implementation scalable reliable data pipelines monika s krishnappa user interface developer specializing creating 3d interface designs innovative conceptual designer impeccable skills creating interactive content user interface design extensive experience developing designing responsive interfaces render unified experience user multiple platforms convert requirements information architecture user flows wireframes times helps contribute fast paced projects quick turn makes impressionable difference abjeet dhiraj senior software test engineer seven years experience quality assurance design verification testing methodologies supported holistic testing efforts multiple projects software releases including integration system regression performance user acceptance testing project artifact efforts include test plans test scenarios test cases test scripts interacts product managers architects developers project concept implementation ensures deliverables expected quality kavya ravishanker user interface developer inclined strong concept development ability design effective graphical user interfaces cross platform elements includes focus layout composition typography website architecture design handles design development integration debugging testing delivering quality scalable high performance user interface code akshay tiwari senior ui developer 6 years experience akshays role ensures process making application creation easier intuitive efficient accurate applying user centered design processes develop user flows reusable components works web developers engineers qa meeting deliverables time successfully apply principles graphic design interactive design user interface design information design improve development responsive design user interfaces elements abhijit kumar patel software test engineer takes stages software delivery requirements gathering testing hes quick thinker suave problem solver works closely development teams address known gaps sdlc process recommends comprehensive delivery program lowers ratio issues deliverables improves overall quality development environment strong interpersonal communication skills key strengths references aleksandrova m 2018 march 6 10 biggest challenges startup founders face building tech startup team retrieved eastern peak https easternpeak com blog 10 biggest challenges startup founders face building tech startup team berry d m 2003 august 10 inevitable pain software development silver bullet retrieved semanticscholar org https pdfs semanticscholar org 8c1e 65eb4b442d190a5b4a37e72b9d49197fecd5 pdf buterin v 2017 february 3 zk snarks hood retrieved medium com https medium com vitalikbuterin zk snarks hood b33151a013f6 clark l 2017 june 14 business applications embrace iot blockchain face future retrieved computerweekly com https www computerweekly com feature business applications embrace iot blockchain face future czarnecki j 2017 april 26 blockchains personal data protection regulations explained retrieved coindesk com https www coindesk com blockchains personal data protection regulations explained darrow b 2017 february 22 retrieved http fortune com 2017 02 22 cloud growth forecast gartner hern 2018 january 17 bitcoins energy usage huge t afford ignore retrieved guardian https www theguardian com technology 2018 jan 17 bitcoin electricity usage huge climate cryptocurrency transactions second stellar process 2018 january 10 retrieved lumenauts https www lumenauts com blog transactions second stellar process kalla s 2017 july 16 moon blockchain s hiring crunch years retrieved coindesk https www coindesk com moon blockchains big hiring crunch years koller m 2017 october 25 stellar consensus protocol decentralization explained retrieved itnext io https itnext io stellar consensus protocol decentralization explained 338b374d0d72 lacina c 2015 24 inevitable failure proof stake blockchains new algorithm needed op ed retrieved coin telegraph https cointelegraph com news inevitable failure proof stake blockchains new algorithm needed mazieres d 2016 february 25 retrieved stellar org https www stellar org papers stellar consensus protocol pdf mazires d 2016 june 14 stellar consensus protocol retrieved https www youtube com watch v vmwnhzmezjc mitra r 2017 december 4 lightning protocol raiden network beginners guide retrieved blog springrole com https blog springrole com lightning protocol raiden network beginners guide c9d7bc702748 schmidt s 2010 april 30 dark cloud computing soaring carbon emissions retrieved guardian https www theguardian com environment 2010 apr 30 cloud computing carbon emissions semko r 2017 november 12 decentralised cryptocurrency dead retrieved medium com https medium com deviota decentralised cryptocurrency dead c1763dc75efb disclaimer important disclosure important disclaimer risks uncertainties associated sparkster respective businesses operations spark tokens sparkster token sale sparkster platform sparkster decentralized cloud referred whitepaper find description risk related token sale section legal read carefully whitepaper thereof copy thereof taken transmitted country distribution dissemination token sale crowd sale initial token offering like described whitepaper prohibited restricted spark tokens intended constitute securities jurisdiction acquisition spark tokens present exchange cryptocurrencies form ordinary shares sparkster ltd holder spark tokens entitled guaranteed form dividend holders spark tokens entitled certain rights token sale agreement spark tokens utility token performance particular value outside sparkster platform sparkster marketplace sparkster decentralized cloud whitepaper constitute prospectus offer document investment securities whitepaper constitute form opinion advice sell solicitation offer sparkster ltd purchase spark tokens help investment decision whitepaper information purposes contents whitepaper financial promotion contents whitepaper serves invitation inducement engage sort investment activity prospective acquirers spark tokens carefully consider evaluate risks uncertainties associated cryptocurrencies sparkster ltd respective businesses operations spark tokens sparkster token sale familiarize information set whitepaper risk notice token sale agreement prior purchase spark tokens ensure aware risks prior obtaining spark risk statement details potential risks consider recommend seek independent financial advice engaging sort business endeavor eligible purchase spark tokens sparkster token sale referred whitepaper citizen resident tax green card holder united states america whitepaper subject change updated time notice