b mobius universal protocol suite blockchain ecosystem real world data november 23 2017 v1 6 1 info mobius network mochi inc abstract mobius integrates old internet new decentralized internet value stripe integrates payment processing apps mobius mobi integrates blockchain ecosystem apps simple xe2 x80 x8bpublic apis abstract away underlying complexity blockchain integration development developer build modular constructs blockchain specific domain expertise result mobius makes easy connect application device data stream blockchain ecosystem live dapp store allows developer securely distribute scale cross blockchain applications mass adoption mvp use case live dapp store makes trivial developers accept app cryptocurrency payments mobius protocol encompasses standards interoperable blockchain login payment smart contracts governance oracles blockchain heart distributed transactions ledger code law envisages possibility fully autonomous decentralized markets xe2 x80 x8bour goal allow market participants leverage mobius consume big data feeds distill mission critical insights xe2 x80 x8bmobius makes reality conception blockchain smart markets protocol xe2 x80 x8b incentive compatible sided periodically clearing combinatorial auction mobius smart market brings possibility distributed hyper efficient marketplaces unprecedented scale coordinate trade data micro services increasing number rational programmatic agents d xe2 x80 x8bevelope xe2 x80 x8brs easily design market mechanisms implement cryptographically secure distributed markets blockchain recently unimaginable pure monopoly conditions blockchain decentralized iot marketplace provides data fuel live ai applications simplest way implement smart market mobius blockchain protocol x0ctable contents 1 introduction 4 2 token economy 4 3 universal blockchain payment protocol 5 4 universal token login protocol 8 5 universal governance protocol 8 6 decentralized app economy 9 6 1 mobi commerce network effects 9 6 2 growth sided network effects 10 6 3 network effects market participants 11 6 4 equilibria network effects b2b c p2p adoption dapp store 12 6 5 network effects consumer adoption dapp store ecosystem 12 6 6 hackathons best developers enhancing network effects 13 7 universal proof stake oracle protocol 15 7 1 market lemons quality uncertainty oracle data 17 7 2 oracle smart contract ecosystem 17 8 blockchain smart markets 18 8 1 blockchain smart markets protocol 19 9 market design proof stake oracle protocol 20 9 1 background 20 9 2 stated market design goals 20 9 3 design implementation 21 9 4 forward auction 23 9 5 sell 25 10 smart markets use cases 30 10 1 block button auction 30 10 2 real time intra block bidding 31 10 3 cloud services market 32 11 development progress 33 12 roadmap 34 13 mobi allocation summary 34 x0c14 mobi token sale details 35 15 team 36 16 supporting documents links 38 x0c1 introduction blockchain comparable early internet 9 600 bps modems entering market xe2 x80 x8b ethereum running mere 13 tps unscalable real world applications ethereum xe2 x80 x8bsignificantly encumbers future adoption xe2 x80 x8bproblematic high fees m xe2 x80 x8b ajor attack surface c xe2 x80 x8b ontinual hard forks portend future instability blockchain developer tools protocols infancy comparable primitive web developer tools early 1990s era stripe created standardized simple protocol accept credit card payments amazon aws cloud easy deploy web application fundamental need abstract t xe2 x80 x8bhe underlying implementations mobius universal apis convert myriad app developers blockchain developers stripe unleashed e commerce suite apis integrate payment solutions m xe2 x80 x8b obius apis ease integration blockchain ecosystem everyday applications 2 token economy 8 xe2 x80 x8b 50 tokens growing created year organizations collectively raised xe2 x80 x8balmost $1 3 billion half 2017 xe2 x80 x8b blockchain ecosystem soared market capitalization greater $150 billion xe2 x80 x8b t xe2 x80 x8b number blockchain users continues grow despite xe2 x80 x8bfacebook xe2 x80 x8b like growth xe2 x80 x8bnumber blockchain users minuscule compared xe2 x80 x8b4 billion internet users 8 xe2 x80 x8b 4 billion iot devices xe2 x80 x8b gap internet world blockchain world represents multi trillion dollar opportunity xe2 x80 x8bthe internet app economy xe2 x80 x8b s predicted $ xe2 x80 x8b 6 3 trillion 2021 xe2 x80 x8b smart devices grow xe2 x80 x8b 5 xe2 x80 x8b 0 billion 2020 xe2 x80 x8b strong developer communities open apis xe2 x80 x8bkey success internet ecosystem enterprises includes likes facebook salesforce amazon alibaba xe2 x80 x8b similarly success expanding blockchain ecosystem requires developers robust api protocols open bidirectional mobius protocol apis turn xe2 x80 x8b18 2 million software developers world blockchain developers simple standardized protocols developer easily connect application device data stream blockchain ecosystem mobius closing gap internet blockchain world multifaceted solution creating easy developer tools consumer dapp store smart market allow hyper efficient transactions processed real world data autonomous agents universal proof stake oracle protocol addition mobius protocols define universal cross blockchain standards payments login oracles simple apis developer frameworks webhook callbacks payment space mobius analogous stripe easy developers accept credit card mobius similarly makes easy developers transact blockchain token benefit significantly lower transaction fees disintermediating legacy centralized institutions mobius dapp store works x0cin conjunction mobius api solve consumer discovery problem features fees exponentially lower centralized apple google analogs short intermediate aim progressively decentralize entire global app economy possibility implement micro fee add future dapps store prove viable source revenue 3 universal blockchain payment protocol current global payment infrastructure centralized convoluted slow expensive legacy models long overdue overhaul efficient trustless dynamic digital alternative accepting credit debit cards involves key steps authorization clearing settlement process process depends payment gateways terminals merchant banks credit card associations cardholder banks stakeholders result leaves participants high fees slow payment finalization legacy payments expensive xe2 x80 x8boften costing approximately $0 30 2 9% transaction xe2 x80 x8b source h xe2 x80 x8b ttps www pathwaypayments com processing diagram html x0cblockchain technology revolutionize simplify global payments disintermediating large financial institutions significantly reducing transaction costs current blockchain developer apis frameworks infancy hard use developer technology blockchain today similar payment developer frameworks stripe example example xe2 x80 x8bauthorize net merchant web services simple object access protocol soap createcustomerprofile request data structure xe2 x80 x8b xml version 1 0 encoding utf 8 soap envelope xmlns soap http schemas xmlsoap org soap envelope xmlns xsi http www w3 org 2001 xmlschema instance xmlns xsd http www w3 org 2001 xmlschema soap body createcustomerprofile xmlns https api authorize net soap v1 merchantauthentication api login id transactionkey transaction key transactionkey merchantauthentication profile merchantcustomerid merchant customer id merchantcustomerid description profile description description email customer profile email address email paymentprofiles customerpaymentprofiletype customertype individual customertype payment creditcard cardnumber credit card number cardnumber expirationdate credit card expiration date expirationdate creditcard payment customerpaymentprofiletype paymentprofiles profile validationmode livemode validationmode createcustomerprofile soap body soap envelope source xe2 x80 x8b xe2 x80 x8bhttps www authorize net content dam authorize documents cim soap guide pdf x0cthe authorize net api verbose cumbersome hard use equivalent stripe rest api calls $ curl xe2 x80 x8b h xe2 x80 x8b ttps api stripe com v1 tokens xe2 x80 x8b xe2 x80 x8b u xe2 x80 x8bsk test bqokikj0vbii2hlwgh4olfq2 xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bcard xe2 x80 x8b number xe2 x80 x8b 4 xe2 x80 x8b 242424242424242 xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bcard xe2 x80 x8b exp month xe2 x80 x8b 1 xe2 x80 x8b 2 xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bcard xe2 x80 x8b exp year xe2 x80 x8b 2 xe2 x80 x8b 018 xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bcard xe2 x80 x8b cvc xe2 x80 x8b 1 xe2 x80 x8b 23 xe2 x80 x8b xe2 x80 x8b https stripe com docs api curl create card token $ curl xe2 x80 x8b h xe2 x80 x8b ttps api stripe com v1 tokens xe2 x80 x8b xe2 x80 x8b u xe2 x80 x8bsk test bqokikj0vbii2hlwgh4olfq2 xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bdescription xe2 x80 x9c xe2 x80 x8b customer xe2 x80 x8b anthony white example com xe2 x80 x9d xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b xe2 x80 x8b d xe2 x80 x8bsource xe2 x80 x8btok 189gk92ezvkylo2cleb0l8ka xe2 x80 x8b https stripe com docs api curl create customer stripe api simple elegant easy use stripe leveraged complicated payment developer infrastructure turn developer easy use api company raised $440 million valued $9 billion today mobius solving problem emerging blockchain economy apple google app store fees credit card fees meaningful percent revenue creating significant deadweight loss mobius easy developers transition decentralized blockchain economy significantly lower cost faster confirmation times mobius api provides universal interface accept blockchain token analogous stripe provides universal interface accept different credit cards visa mastercard discover american express currently complicated accept manage secure tokens example video game developer creates ethereum erc20 token acts game credits complicated tokens ethereum network backend accounting system current token developer process 1 run ethereum node 2 create unique ethereum address user 3 monitor user ethereum address incoming token transactions 4 secure private keys 5 manage token accounting backend mobius api simplifies providing modern easy use rest api returns json uses secure webhooks alert developers incoming token transfers mobius api works erc20 token golem augur iconomi bancor storj status credo grow expanding api support blockchains tokens ethereum erc20 x0c4 universal token login protocol tokens represent membership service login mechanism service uses tokens login mechanism similar technical infrastructure needs analogous token payment infrastructure mobius provides simple rest api abstracts low level blockchain development required verify token ownership time login facilitate verified login token represent subscription provides benefits including increased anonymity lower transaction fees potential independent secondary market develop providing greater value subscribers incentive early subscription membership purchase secondary market allow people anonymously buy sell membership transacting centralized financial institutions credit cards debit cards bank accounts allowing complete anonymity assuming usage anonymous protocol token like zcash monero pivx multiple tiers membership represented tokens requiring different number tokens access different levels example basic membership require token login plus membership require tokens login 5 universal governance protocol organizations create token plan use platform governance similar use cases example wikipedia reddit create token likely similar governance proof stake platform integration needs governance organizations allow token holders vote proposals dictate communities develop platform integration require advanced users editors moderators vested x0ctokens stake reduce spam harmful community behavior organizations want reward community members improve community add value similar use cases abstracted web frameworks databases building blocks web applications abstracted vast majority developers create web framework ruby rails database server postgresql instead use existing web frameworks database servers save time blockchain based governance follow model offered developers mobius standard protocols apis use facilitate token based voting vested stake micro actions result token rewards penalties based community feedback 6 decentralized app economy biggest problems hindering mass adoption dapps cryptocurrencies fiat replacement consumer discovery adoption currently widely dapp store mobius creating universal dapp store similar apple app store google play store app accepts mobius token listed dapp store dapp store integrate mobius token universal decentralized credit system significantly lower fees apple app store google play store dapps incentivized accept mobius token dapp store network effects dapp store mobius token mobius token experience similar network effects internet token valuable people use parallel developer having token primarily governance reasons developer token want accept easiest use cheapest form payment transient users turned away simultaneously developer token want limit governance stake based micro actions users vested stake community platform dapp store mobius network provide platform easily support use cases 6 1 mobi commerce network effects past decades developed world xe2 x80 x99s economic vitality progressively dependent widespread internet accessibility likewise blockchain adoption prove equally indispensable nation xe2 x80 x99s gdp transforming centralized systems inefficient legacy processes trustless decentralized vending machine like transactions defined smart contracts public blockchains potential turn noisy big data value added insights prediction markets create immutable public records power decisions autonomous ai agents years ahead dapps tomorrow differ substantially today xe2 x80 x99s apps reflecting coming wave decentralization app economy existing apps need find easy way connect blockchain ecosystem thesis blockchain xe2 x80 x9ccontent xe2 x80 x9d form apps come fruition best developers given economic incentive advance mass market adoption end users option accessible major enterprises significant funding notable example paypal xe2 x80 x99s referral program resulted xe2 x80 x8b7 10% daily growth early 2000 xe2 x80 x99s xe2 x80 x8b program initial cac $20 00 triggered network effects offered free money x0cnew users referrals winner takes marketplace dapp store requires similar strategy seed content increase adoption m xe2 x80 x8b ore dapps stimulates adoption increasing economic incentive create deploy new dapp content xe2 x80 x8b closing feedback loop classic chicken egg problem marketplaces dapp store developers inclined add content users present users adopt content depending availability unique value stickiness result developers incentivised add content platform early adopting end users gradually adopt platform persuade group early adopting developers enlist advance strong market penetration offer economic incentive giving mobius tokens seed initial growth short intermediate term akin paypal xe2 x80 x99s referral program strategy user acquisition growth drive positive feedback loop engagement bolster network effects 6 2 growth sided network effects based xe2 x80 x8blotka volterra population xe2 x80 x8bequations model dynamics underlying mobius token dapp store follows dx dt xce xb1x xy dy dt xce xb4xy y xe2 x97 x8f x number market participants dapp store represents demand xe2 x97 x8f consumer y number developers dapp store xe2 x97 x8f xe2 x97 x8f t xe2 x80 x8brepresents time dx dt growth rate market participants respect time xe2 x97 x8f dy dt xe2 x80 x8b s growth rate developers respect time xe2 x97 x8f xce xb1 xce xb4 positive real parameters describe interactions developers market participants essentially rate change market participants dependant number current market participants number developers similarly true developers leads virtuous cycle market participants start dapp developers encouraged participate incentivizes xe2 x80 x8bnew market participants start dapp store x0c1 token buyers join platform resulting demand users 2 encourages sellers developers dapps participate increases supply users 3 result event encourages buyers join demand users 4 brings better sellers table supply users 5 repeat loop 6 3 network effects market participants let assume fraction xce xb6 potential population dapp store individual pays price measured units mobi market participant dapp store individual maximum limit price willing pay participate reserve price xe2 x80 x8b measured mobi reserve price represented follows reserve price g x f xce xb6 xe2 x97 x8f g x desire person x market participant xe2 x97 x8f f xce xb6 measure benefit new market participant derives having xce xb6 xe2 x97 x8f fraction total population market participants f xce xb6 increasing function terms xce xb6 tells valuable dapp store people x0c xe2 x97 x8f g x f xce xb6 comes l xe2 x80 x8b otka volterra population xe2 x80 x8bequations reserve price term g x f xce xb6 represents fact market participants derive larger benefit benefit increase fraction population market participants market participants smaller values elucidated virtuous cycle number market participants developers increase quality increases market participants spend mobi developers list better quality apps 6 4 equilibria network effects b2b c p2p adoption dapp store individuals derive shared expectation fraction population market participants xce xb6 individuals makes decision market participants purchasing mobi based expectation fraction people actually end purchasing mobi xce xb6 s xe2 x80 x8b elf fulfilling expectations xe2 x80 x8bequilibrium quantity purchasers xce xb6 community expects xce xb6 percentage population potential consumers market participants dapp store spend buy mobius expectation turn fulfilled behavior 6 5 network effects consumer adoption dapp store ecosystem x0c xef xb8 xbf define function xce xb6 h xce xb6 follows potential consumers expect xce xb6 fraction population market participants dapp store h xce xb6 fraction market participants dapp store function h xce xb6 real world adoption rate based networking effects furthermore potential consumer base expects xce xb6 fraction population commit market participants potential market participant x want market participant provided reserve price participation higher potential customer pay g x f xce xb6 xe2 x89 xa5 m m cost mobius individual pay wants participate set xef xb8 xbf people participate 0 xce xb6 xef xb8 xbf xce xb6 solution following equations xef xb8 xbf g xce xb6 f xce xb6 m xef xb8 xbf g xce xb6 m f xce xb6 xe2 x87 x92 xef xb8 xbf taking inverse obtain xce xb6 xef xb8 xbf xce xb6 g xe2 x88 x921 m f xce xb6 gives relationship mobius price paid market participant adoption rate based network effects drive adoption dapp store based greater understanding dynamics relationship users developers 6 6 hackathons best developers enhancing network effects possibility hold regular hackathons dapp store developers developers rewarded performance according following criteria1 new unique users join engage platform ii retention returning users consume new content 1 t xe2 x80 x8b hese criteria optimized according dapp development roadmap x0ca fixed tokens allocated hackathons 32 5% community pool monthly basis adjusted weekly cadence desired decentralized governance community mobi instance hackathon occur specified time community vote proportion mobi apps desire win developer prize tokens redistributed based performance developers critical inflection point reached terms app popularity developers pay small token contribution list app dapp store hackathons continue regular monthly cycle tokens paid list new apps dapp store redistributed performers hackathons distribution tokens expected follow z xe2 x80 x8b ipfian distribution xe2 x80 x8b formally let xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f n xe2 x80 x8b number developers k xe2 x80 x8b rank based performance s xe2 x80 x8b value exponent characterizing actual distribution observed zipf s law predicts population xe2 x80 x8bn elements frequency elements rank xe2 x80 x8bk xe2 x80 x8b f xe2 x80 x8b xe2 x80 x8bk xe2 x80 x8b xe2 x80 x8bs xe2 x80 x8b xe2 x80 x8bn xe2 x80 x8b n f k s n 1 k s xe2 x88 x91 1 ns n 1 s calculated end month based transactions observed distribution scaled modify rewards given hope reduce reward earned highest performers marginally better reward middle performers lower end performers cutoff dont reward accomplished follows 1 cutting developers 80% rank 2 s 1 replacing s logarithmic value distributing rewards proportionally x0cthe goal optimize incentivization structure developers quality apps possible middle ranks higher reward comparison zipfian power law distribution recommend essentially black curve describes original distribution reward final distribution represented red curve area curve represents total reward 7 universal proof stake oracle protocol blockchains exist digital world access data fed blockchain ecosystem xe2 x80 x8boracles specialized applications provide access external data essentially feeding blockchain information consumed defined smart contracts oracles set tunnels data streams viable source ranging bloomberg price feeds internet things iot devices x0csmart contracts built consume information oracles smart contracts designed triggered events reported oracles performing pre programmed tasks based data inputs primary tasks oracle provide information smart contracts oracle data consumed end users apart smart contracts importantly data provided oracle trustworthy meaning smart contracts able trust reliability data source executing blockchain world transaction rollbacks possible central issue data reliability dealt adequately moment furthermore currently standard secure oracle protocol allows oracles operate cross blockchain feed valuable data multiple blockchain systems mobius solves fundamental architectural weaknesses creating standardized proof stake based protocol enables developers easily create oracles securely input data blockchain ecosystem particularly smart contracts proof stake protocol incentivise oracles provide correct data penalize oracles provide incorrect data mobius universal proof stake oracle protocol psop require oracles vest stake mobi inputting data blockchain ecosystem oracles provide incorrect data penalized losing vested mobi oracles provide correct data compensated mobi data consumers oracles found providing incorrect data lose portion vested staked mobi market designs incentivize authentication validation ultimately successful aggregation information implemented proof stake protocol broad adoption deployment oracles create additional blockchain monetization method oracle devices oracle pools analogous mining pools develop pools people world combine oracles provide data blockchain ecosystem better monetize example farmers yuanyang county yunnan china purchase install temperature sensor oracles provide distributed verified temperature data blockchain ecosystem temperature readings receive score based number oracles agree reading temperature data purchased open marketplace providers verifiers data receive mobi compensation farmer providing single point temperature data rarely compensated data provide like successfully mining bitcoin rare want specific temperature data point temperature oracle pool world wide temperature coverage standard temperature provider provide rarely data compensated based help complete dataset instead providing single datapoint x0c7 1 market lemons quality uncertainty oracle data quality difficult ascertain xe2 x80 x8b nformation asymmetry xe2 x80 x8b lower quality oracles seek masquerade higher quality oracles smart contracts adverse incentive consideration assume quality oracles uncertain smart contracts pay mobi considering overall average quality oracles case market fails distinguish higher lower quality oracles leads higher quality oracles underpaid driven market overcome issue segmented markets oracles predefined quality threshold allowed participate smart contracts ability tell wheat chaff fair payment terms mobius achieved segmented markets higher lower quality data naturally come existence smart contracts tell quality differences single market form smart contracts willing pay average prices way overcome quality issues devise rating mechanism like quality score forward auction smart contracts provided quality rating based oracles past performance mobius staked quality scores aggregated based past performance staking mobi xe2 x80 x8bproof verification xe2 x80 x8b design proof verification protocol allow audits oracles xe2 x80 x8bprequalifying oracle xe2 x80 x99s entry market helps set xe2 x80 x8bsegmented market oracle data high fidelity oracles participate separate market low fidelity newly minted oracles format run high fidelity auction entry require minimum quality score achieved combination good past history staking mobius 7 2 oracle smart contract ecosystem software oracles provide access online data like oracle trending twitter handles hardware oracles provide access real world data like iot rfid data classification direction data flow xe2 x80 x8binbound oracles xe2 x80 x8bproviding data blockchain xe2 x80 x8boutbound oracles providing data real world blockchain important subclass xe2 x80 x8bconsensus oracles suggests work consensus multiple oracles providing similar data reliability issues consensus based rules parse aggregate data provided instance multiple weather iot devices provide humidity readings consensus humidity reading calculated consider game theoretic viewpoint interested private information oracles hold actions self interested rational agents participating market sell data x0clet n 0 1 n denote list oracles mechanism sale data blockchain let t vector type profiles oracles t t1 t2 tn includes type oracle type ti represents value information beliefs utility preferences oracle oracles xe2 x80 x8bindependent private values xe2 x80 x8b game theory parlance oracles valuations data supply depends type t types statistically independent valuations privately held oracles publicly known affected competing oracles participation data smart market independence valuation leads strong dependence bids placed reverse auction private valuations oracle oracles xe2 x80 x8binterdependent values know valuations prone mimic valuations competing oracles strongly distribution types t oracles statistically dependent leads weaker relationship bids placed actual valuations oracles want supply data required sign contract xe2 x80 x8bancillary staker verifies validates authenticates oracle xe2 x80 x99s data stakes mobius behalf oracle participate auction case issues data ancillary staker held responsible concept xe2 x80 x8bancillary stakers xe2 x80 x8b ancillary stakers essentially kind smart contract specialized role proof stake oracle protocol stakers parties independent oracles primary job validate oracle data stake mobius reputation data charge oracles percentage cut proceeds sale data stakers like reverse insurance agents scenario oracle willing stake situations kinds smart contracts arise proof stake oracle protocol xe2 x80 x8bintermediary smart contracts buy data oracle s process resell smart contracts outbound oracles place intermediary xe2 x80 x99s brand represents kind white labeling xe2 x80 x8binsurance smart contracts provide insurance smart contracts underlying quality data buying 8 blockchain smart markets blockchain smart markets auctions harnessing blockchain technology clear periodically transactions place distinct pools smart contracts end users acting buyer sellers bilaterally pools oracles participate restricted sellers decentralized smart contracts end users submit bids buy offers sell data services commoditized manner process managed auction manager xe2 x80 x98auctioneer xe2 x80 x99 clearing market usually involves auctioneer solving complex mathematical optimization problems arbitrary constraints periodically maximize gains trade smart markets designed reduce transaction costs significantly eliminate externalities allowing competition possible traditional settings x0csmart markets allow coordination diverse smart contracts end users usually possible monopoly conditions coordination ability natural complement blockchain world use cryptocurrencies distributed ledgers allows implementation operation complex smart markets larger number participants time period smart markets time successive instances market clearing range milliseconds days markets include sided forward auctions demand sided reverse auctions supply sided auctions supply demand components currently smart contracts completely public data consume public precludes xe2 x80 x8bpublic blockchain smart contracts participating blockchain data auctions requiring data kept private xe2 x80 x8bprivate xe2 x80 x8bblockchain smart contracts proprietary systems data private primary use case public blockchain end users consume data privately chain actual transfer data ideally place apps dapp store example autonomous car buy contract navigation data auction consequent chain navigation alerts obtained app dapp store 8 1 blockchain smart markets protocol mobius implement blockchain smart markets protocol allow auctioneers market designers game theorist work sync developers easily design quickly deploy smart markets enable trade commoditized data services secure transparent manner smart market sale data rely proof stake oracle protocol blockchain smart markets protocol apart earlier discussed smart market data additional use cases blockchain smart markets protocol include smart market decentralized cloud x0cservices including file storage cloud computing note actual data consumed real time stored blockchain encrypted versions stored blockchain depend characteristics data kind market functioning currently significant blockchain scaling issues possible encrypted data blockchain chain solutions hybrid solutions important 9 market design proof stake oracle protocol 9 1 background underlying theoretical construct game theory game theory concerned mathematical modeling strategic behavior market participants specified rules economics concerned detailed rules procedures economic institutions like markets auctions auctions games designed auctioneer played bidders given fixed rules xe2 x9e xa1 study outcomes reverse game theory market design economists analyze markets design engineer mechanism design called reverse game theory takes engineering viewpoint designing market achieves desired objectives given strategic settings rational players engineering approach design markets desired objects strategic settings rational players includes efficiency auction design optimal equilibrium bidding strategies revenue comparison fairly accommodating participants xe2 x80 x99 needs critical design market xe2 x9e xa1 specify set rules govern market given target objective xe2 x9e xa1 design market achieve predefined objective xe2 x80 x8bstandard xe2 x80 x8b decide goals need achieve design market 9 2 stated market design goals seek design mechanism e market trade exchange data blockchain infrastructure oracles end users exchange facilitated smart contracts bidding agents end users consume data market implemented proof stake oracle protocol blockchain smart markets protocol noted smart contracts end users private blockchains proprietary methods allow smart contracts consume data privately public blockchains smart contracts completely public data consume public losing value public blockchains end users ideally consume data privately chain implemented providing data winning user private x0cblockchain chain purpose section examine market design support functioning iot data marketplace blockchain ecosystem market design methodology define goals xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f facilitate efficient exchange information oracles end users smart contracts minimize false invalid data authentic validated data exchanged simple understand participate transparent easy replicate outcomes similar outcomes repeated trials monetary transfers settled mobius data encrypted added blockchain kept blockchain information exchange accomplished transfer encryption keys oracles end users incentivizes oracles data auctions voluntary individually rational bidders incentivized participate participants better taking auction incentive compatible minimize strategic behavior honesty best dominant strategy participants avoid windfalls bidders winner xe2 x80 x99s curse problem simple understand participate auction transparent easy replicate shapley shubik core prices prices theoretically guaranteed close actual optimum value information shapley shubik 1969 9 3 design implementation propose sided auction determine prices contractual language guarantees data authenticity assuming scaling issues data supplied oracles encrypted added blockchain implemented auction follows x0cnote auction mechanism implemented public blockchain data submitted private blockchain kept chain conceptualization data commodity production perspective information data like iot device data produced according predefined terms auction contract data integrity authenticity validity requirements terms govern auction available oracles encrypted added blockchain encryption keys sold auction xe2 x80 x8brsa form encryption encrypt data added blockchain auction xe2 x80 x8bprivate xe2 x80 x8bpublic key pair created public key declared added blockchain oracles wanting auction add data blockchain encrypt auctioneer xe2 x80 x99s public key case auctioneer oracle winning bidders provided x0cwith private keys decrypt data auction ends decryption takes place chain data private transfers auction settled mobi case oracle sells multiple copies data encrypted public key private key sold multiple times encryption keys transferred winning end users payment mobi end users consume data fixed time report violations terms oracles paid expiry time period auction overall structure xe2 x97 x8f step 1 forward auction incentive compatible direct mechanism sale information required propose modified combinatorial vcg auction auction allows multiple keys data set sold bidders bid additional amounts restrict sale additional keys xe2 x97 x8f step 2 reverse auction run reverse auction procurement auction buy data oracles simultaneous descending dutch auction select oracles selling data end users reserve price opening price case dutch auction set according closing price forward auction plus markup initial price effective reserve price clearing price forward auction plus markup xe2 x97 x8f step 3 clearing price combine bids reverse forward auction determine combination keys sell 9 4 forward auction encryption keys sold xe2 x80 x8bforward auction modified xe2 x80 x8bcombinatorial auction version weighted v xe2 x80 x8b ickrey clarke groves mechanism discuss game theoretical set vcg auction oracle data bidders including end users smart contracts private blockchains given following consider list bidders participating auction data let n 0 1 n denote bidders taking auction 0 denoting auction operator auction operator type smart contract combination distributed demand supply platform let t vector type profiles bidders t t1 t2 tn includes type bidder type ti represents value information beliefs utility preferences bidder x0cpossible outcomes x b let x denote set possible decisions auction outcome auction denoted x m x xe2 x88 x88x m m0 m1 mn m denotes vector positive negative payments bidders including auctioneer measured mobius smart contract values outcome auction denote bidder xe2 x80 x99s value v x ti value dependant outcome auction type ti smart contract furthermore utility bidder derives auction ui x m t v x ti xe2 x88 x92 mi given assumptions denotations based stated market design goals achieve allocative efficiency allocative efficiency denoted decision x achieved auction decision maximizes total value allocation xe2 x87 x92 n x xe2 x88 x88 argmax x xe2 x88 x88x xe2 x88 x91 v x ti 1 furthermore budget balance auction produce net loss limiting condition case m0 xe2 x89 xa1 0 xe2 x87 x92 xe2 x88 x91 mi 0 xe2 x88 x88n auctioneer denoted bidder 0 solves following optimization problem determine outcome auction constraints n v x n t max x xe2 x88 x88x xe2 x88 x91 v x ti 1 xef xb8 xbf n x x n t xe2 x88 x88 argmax x xe2 x88 x88x xe2 x88 x91 v x ti 1 x0cthis represents incentive compatible direct mechanism leads highest value smart contract winning auction paying negative externality form payment measured terms mobius vcg auction xe2 x80 x8bif bidding agent reports type ti vcg mechanism charges smart contract penalty report changes optimal allocation x hurting bidders report termed xe2 x80 x8bpivotal xe2 x80 x8b xef xb8 xbf xef xb8 xbf mi x n t xe2 x88 x91 v j x x n xe2 x88 x92 t xe2 x88 x92i tj xe2 x88 x92 j xe2 x88 x88n xe2 x88 x92i xef xb8 xbf xe2 x88 x91 v j x x n t tj j xe2 x88 x88n xe2 x88 x92i extra payment specified compensate remaining bidders n xe2 x88 x92 loss account smart contract exactly negative externality smart contract auction mechanism equilibrium incentive compatible weakly dominant strategy smart contract truthfully bid true value functionally equal second price auction 9 5 sell mechanism needs place maximize revenue auction data sold multiple times equivalently multiple private encryption keys data sold analog non blockchain world sale mp3 songs digital music store leads fundamental questions bids combined determine quantity transacted effect bids quantity transacted recognized reverse auction incentive analysis analysis depends type data values agents bidding data agents ability sole consumers data available auction outbidding sum competing bids number mobius required buy oracle data equilibrium essentially clearing price set oracles response smart contract demand xe2 x80 x8bendogeneity quantity data traded holds true sided auction second price auction conduct second price auction winning smart contract pays second highest bid examples discussed section place private blockchain proprietary methods data consumption private x0cfor example consider 1 oracle selling single instance data set smart contracts bidding copy data sold auction transfers mobius lowest bid increment 0 01 mobius smart contract bid mobius mobi outcome payment s c 1 7 won 5 01 mobi s c 2 5 lost 0 s c 3 4 lost 0 highest bidder s c 1 wins auction gets private encryption key oracle data set pays 5 01 mobius second highest bid incremented scenario highest bidding smart contract charged minimum bid needed rank closest competitor win contract ensures smart contracts bid true actual private values incentives smart contracts place bids lower actual values selling multiple keys incremental bidding multiple keys data sold oracle sell data multiple times easily accomplished selling multiple private encryption keys incremental bidding example forward auction sale iot data supplied 5 distinct oracles encryption keys sold oracle smart contracts participate auction private blockchain smart contracts place binary demand tuples keys want 1 indicates wanted 0 indicates wanted smart contract demand set total demand quantity bid set won oracle payment required oracle total payment s c 1 1 1 1 1 1 5 9 1 1 1 1 1 5 01 2 01 5 0 1 5 01 9 26 04 mobi s c 2 1 0 1 1 0 3 5 1 0 1 1 0 5 0 5 5 0 15 mobi s c 3 1 1 0 1 0 3 2 0 1 0 0 0 0 2 0 0 0 2 mobi x0cthe winning smart contract pays bid mobius lower winning bidder lower winning bidder winning smart contract pays lower bidders price blocking additional sales smart contracts option block sales paying increment called blocking increment blocking increment sum blocked bids blocking increments payed mobius highest value bidders allowed block blocking smart contract highest bidder blocking bid treated normal bid step 1 auction run blocking takes place second price payments mobius calculated step 2 blocking increment calculated sum blocked winning bids blocking increment xe2 x88 x91 xe2 x88 x88 blocked bids mi step 3 blocked winning bids added blocking winners payments calculated step 1 blocked winner xe2 x80 x99s bids decremented appropriately payments blocking winner payment second price bid blocking increment blocked winner payment second price bid blocked increment additionally combinatorial auction oracle data priced incrementally smart contract buying oracle data automatically charged blocking increment section data smart contract ends buying smart contracts place demand tuples keys want 1 indicates wanted 0 indicates wanted x indicates blocking x0csmart contract set demanded quantity demanded bid second oracle price mobius set won second price payment total payment s c 1 x x x 1 1 5 9 1 1 1 1 1 5 01 2 01 5 01 5 01 9 26 04 mobi s c 2 1 0 1 1 0 3 5 1 0 1 1 0 5 0 5 5 0 15 mobi s c 3 1 1 0 1 0 3 2 0 1 0 0 0 0 2 0 0 0 2 mobi smart contract blocked set blocked bids calculation final payments set won s c 1 0 0 0 0 0 0 0 0 0 0 0 26 04 10 36 04 mobi 1 1 1 1 1 s c 2 x 0 x 0 0 5 0 5 0 0 10 15 10 5 mobi 0 0 0 1 0 s c 3 0 x 0 0 0 0 2 0 0 0 2 2 2 0 mobi 0 0 0 0 0 revenue equivalence auctions blocking blocking yield revenue important avoid adverse incentives manipulate bids blocking winner pay lower amounts unlimited supply singleton demand blocking option complete sets oracle data traded represents scenario k private encryption keys oracle data available sale n smart contracts wanting buy exactly key vcg auction rules k n clearing price bk 1 k xe2 x89 xa5 n clearing price 0 case unlimited supply keys sell zero vcg conditions furthermore vcg mechanism implies key simply sold k 1st highest bid restrict number keys auctioned number bidders x0cthe key actually expensive produce oracles produce additional keys zero marginal cost effectively unlimited supply encryption keys oracles supply restrictions voluntarily impose restrictions imposed auctioneer oracles auctioneer actually artificially reduce supply order increase revenues given truthful valuation reporting mechanism optimal single price m optimal quantity encryption keys k clearing auction maximum revenue solved follows let n smart contracts values v arranged ordered set v v 1 xe2 x87 x92 xe2 x87 x92 k xe2 x88 x88 argmax xe2 x88 x88n v m v k 1 optimal singleton price k 1th highest bid vcg mechanism value k 1th highest bidding smart contract approximate auction absence truthful ordering values large number smart contracts randomly sampling valuations random sampling optimal price auction game played follows step 1 randomly partition smart contracts n sets n 1 n 2 smart contract probability n n1 1 2 randomly assigned sets n2 n1 n2 xe2 x8a x98 step 2 procedure find payments m 1 m 2 optimal singleton prices set step 3 clearing prices allocations calculated follows xe2 x88 x80i xe2 x88 x88 n 1 v m 2 smart contract wins single key pays m m 2 similarly xe2 x88 x80j xe2 x88 x88 n 1 v j m 1 x0csmart contract j wins single key pays m m 1 random sampling optimal price auctions xe2 x80 x8bdominant strategy truthful xe2 x80 x8b xe2 x80 x8bweakly budget balanced ex post individually rational xe2 x80 x8b minimum keys sold auction shown random sampling optimal price auction game e xpected t otal revenue xe2 x89 xa5 1 4 68 m 10 smart markets use cases 10 1 block button auction button auctions options bidder decide withdraw auction block button auction demand forward auction static oracle data supply available smart contracts end users participants assisted demand distributed platforms transactions settled mobius settled block created end auction block button auction participating smart contract choice participate block drop smart contract drops entry smart contract remaining wins auction round bids demand tuples change start interested bidders participants oracle data price reserve price mobius new block created price increments fixed mobius bidder willing pay current block price participating smart contract drops auction entry strictly prohibited block smart contract remaining smart contract winner accounts settled block created exchange private encryption keys final display price mobius suppose bidder private value v data dominant strategy participate till block price exceeds v leads incentive compatible truthful mechanism bidders act private true value regardless participating bidders equilibrium bidders play dominant strategies outcome x0c xe2 x97 x8f xe2 x97 x8f winning bidder buyer highest valuation final block price second highest bidder xe2 x80 x99s valuation simultaneous descending auction situations arise different bidders differing preferences packaging oracle data sets auction requirements lead intractable constraints auction optimization problem scenarios xe2 x80 x8bpackage auction lead better results like participants higher revenues efficient allocations 10 2 real time intra block bidding applications 1 iot data marketplace 2 demand supply distributed platforms real time block bidding buying selling oracle data real time auctions occur time takes new block added blockchain transactions settled mobi complete block created system actually run real time independent blockchain adding new blocks x0cthose auctions facilitated supply distributed platforms designed assist oracles sell data entire trade place time takes create new block 10 3 cloud services market apart long term contracts simple order matching market suffices long term contracts termed xe2 x80 x8blook ahead markets web services cloud including cloud based file storage consider xe2 x80 x8bday ahead market following setup generalized system trade cloud based web services blockchain example let consider market rent host storage space calendar day 15 minute blocks closed double sided anonymous auction 15 minute blocks following day timeline xe2 x80 x8bterm ahead xe2 x80 x8bmarket provides trade storage 15 minutes settlement time carried 15 minute block term ahead day ahead market x0c xe2 x97 x8f buy interested buyers specify requested durations level data redundancy maximum buying price xe2 x97 x8f sell sellers specify time blocks capacity tb minimum price mobius bandwidth charges sellers required provide stakes collateral defaulting potential contracts stake sizes fixed auctioneer pro rated according tb xe2 x97 x8f market clearing end current trade period bid ask orders accumulated determine market clearing price market clearing volume orders matched period equilibrium clearing price calculated orders settled clearing price 11 development progress mobius entirely self funded prior pre sale version mobius universal blockchain payment protocol beta interested email beta mobius network x0c12 roadmap 13 mobi allocation summary mobi smart contract token generation 888 000 000 mobi created majority mobi sold public reserved community incentivize network growth reward contributors remaining tokens held company prior token sale 5% mobi community portion distributed dapp store apps distribution process place giving users sign dapp store prior token sale credits dapp store deposited apps token sale credits developer earned apps converted mobi 1 1 basis x0cdistribution bootstrap dapp store drive submission apps dapp store prior token sale demonstrating store xe2 x80 x99s real world value use mobius token distribution xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f 35 0% mobi sold token sale pre sale include bonus tiered pricing structures elaborated token sale economics document 32 5% mobi reserved community grow network reward contributors 32 5% mobi reserved company growth r d 14 mobi token sale details xe2 x80 x8bhttps mobius network token sale pre sale live xe2 x80 x8bhttps mobius network token sale pre buy x0c15 team xe2 x80 x8bfounders david s gobaud ceo co founder stanford university b s computer science harvard law school j d past co founder xe2 x80 x8byoshi xe2 x80 x8bwhite house y combinator r xe2 x80 x8b esume cyrus s khajvandi xe2 x80 x8bcoo co founder stanford university b s biological sciences honors past co founder ceo xe2 x80 x8bincentru advisor credo xe2 x80 x8bbitbounce io early adopter btc eth c nsf hhmi researcher monis rahman head research scientist stanford ph d xe2 x80 x8bcomputational mathematical engineering xe2 x80 x8b leave auction market design deep learning big data past cto xe2 x80 x8bnext 2 percent stanford university school medicine protein folding simulations purdue b s computer engineering x0cmobius technical advisory board x0c16 supporting documents links important information xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f xe2 x97 x8f website h xe2 x80 x8b ttps mobius network dapp store h xe2 x80 x8b ttps mobius network store dev api docs h xe2 x80 x8b ttps mobius network docs node sdk h xe2 x80 x8b ttps www npmjs com package mobius network mobius node python sdk xe2 x80 x8b https pypi org project pymobius php sdk xe2 x80 x8bhttps github com zulucrypto mobius php email xe2 x80 x8bhttp eepurl com cwcydr blog h xe2 x80 x8b ttps medium com mobius network github h xe2 x80 x8b ttps github com mobius network community xe2 x97 x8f xe2 x97 x8f twitter xe2 x80 x8bhttps twitter com mobius network rocket chat h xe2 x80 x8b ttps mobius rocket chat x0c