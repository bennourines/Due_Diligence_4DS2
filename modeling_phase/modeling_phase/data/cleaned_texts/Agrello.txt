b self aware agent supported contract management blockchains legal accountability alex norta1 2 anton vedeshin1 hando rand1 simon tobies2 addi rull1 2 margus poola1 2 teddi rull1 1 2 agrello ou xcc x88 pa xcc x88rnu mnt 548 15 10916 tallinn estonia hando agrello org addi agrello org large scale systems group tallinn university technology akadeemia tee 15a 12816 tallinn estonia alex norta phd ieee org abstract whitepaper addresses existing problems conventional non machine readable contracts conventional contracts cc complicated set disconnected ict systems conflicts occur tracking execution restrictively slow addition ccs challenging enforce hand called self aware contracts sac similar ccs respect legal enforceability machine readable supportable blockchain technology sacs require qualitative trust contracting parties blockchains establish instead quantitative notion trust sac related events immutably stored currently existing machine readable contract solutions e smart contracts lack suitable obligation constructs execution enforcement additionally current systems comprehend dynamics legal relationships important mask legal obligations daily human conduct whitepaper address gap specifying called agrello framework enables blockchain driven self aware agents assisted contracts decentralized peer peer p2p economy key words self aware multi agent blockchain smart contract decentralized peer e governance human readable 1 introduction traditional understanding conventional contract cc exchange commitments identified parties enforceable law important prerequisite contract commonly exists written document evidence parties involved voluntarily engage establish consensus 19 business cases ccs documents 44 identify contracting parties uniquely state explicitly commitments commitments performed status changes time problem x0c2 alex norta traditional form setting managing ccs underspecified ability manually track status restricted concrete overview cc status contractual relationship parties prone conflict resulting costly conflict resolutions collapse entire contractual relationship enforcement ccs 29 proves complicated time consuming impossible certainly international circumstances authors 20 recognize shared blockchain technology enables business collaborations require high reliability shared trusted privacypreserving immutable data repositories smart contracts called business artifacts adopting data aware processes provide basis shared blockchains enable business collaboration languages solidity 25 ethereum 52 authors map running case collaborative process smartcontract scripting language approach addresses trust issue collaborative processes single party entity monitor events instead blockchain enables trustless process collaboration single entity control mapping collaborative processes blockchains enables monitoring process enactment auditing related events 21 different smart contract language choices compared procedural languages currently norm 25 logic based languages alternatives state art shows partial smart contract approaches exist blockchain technology lack framework moving smarttowards self aware contracts sac ability gather information internal external contextual state progress reason behavior artifact law furthermore state art recognize sacs cater having humans contract loop paper fills gap posing question self aware human readable contracts legally viable reduce complexity establish separation concerns deduce sub questions follows enables contracts self aware enables sacs human manageable ensures contract immutability legal viability remainder whitepaper structured follows section 2 presents running case sac management related literature prepares subsequent sections section 3 focuses important relationship sacs essential content mapping business processes require monitoring section 4 discusses meaningful integration humans sac lifecycle section 5 explores pre existing blockchain technology solutions combined suitable way achieving trustable management contract elements section 6 evaluates results running case employing proof concept prototype finally section 7 concludes whitepaper comprises plans future work x0cself aware contracts 3 2 background literature running case section 2 1 present related literature prepares reader subsequent sections section 2 2 contains running contract case stems real life apartment renting contracts note use terms beneficiary creditor obligor debtor 2 1 related work scholarly literature sacs exists 2 core elements legislation addressed including duties obligations share intersecting properties characteristic duty absence benefiting party beneficiary performance obligation serves beneficial result determined beneficiary focus whitepaper obligations properties figure 1 informally depicts fig 1 informal properties obligation properties figure 1 micro process obligations development business process modeling notation bpmn 28 small green lined circle denotes start process red lined circle end rectangles figure 1 tasks x labeled diamonds denote exclusive choice split join respectively directed arcs connect nodes control flow start end figure 1 shows obligations exist refrain details called smart obligations presented section 3 fig 2 right development micro lifecycle x0c4 alex norta contract law rights obligations related party contract decides use right corresponding obligation party rights stem contract reflected obligations party figure 2 depicts micro lifecycle rights specifications determining beneficiary right right claim right pertains action type object finally obligors determined enable right example lessee payment obligation rental contract case late payment lessor right claim late payment charges invoking right lessee obligation pay orchestration choreography protocols facilitate verify enact agreements consenting parties termed smart contracts 23 40 45 initially find application diverse domains financial technology 10 internet things iot applications 42 digital signing solutions 14 essential aspect smart contracts decentralized validation transactions initially means called proof work pow 51 core technology enables smart contracts public distributed ledger termed blockchain records transaction events requiring trusted central authority blockchain technology spreads popularity inception bitcoin 31 peer peer p2p cryptocurrency payment system comprises limited set operations protocol layer bitcoins use pow transaction validation computationally expensive electricity intensive proof stake pos blockchains source heritage peercoin1 based earlier version bitcoin core different pow algorithms scrypt2 x113 groestl4 equihash 6 etc purpose launching new algorithm prevent accumulation computing power entity ensure application specific integrated circuits asic introduced economy ongoing discussions consensus platform meets needs respective project requirements consensus topics widely discussed pow 50 pos 5 dynamic pos5 byzantine fault tolerance 12 discussed hyperledger nature consensus achieving data consistency distributed algorithms available options e g fischer lynch paterson theorem 7 states consensus reached 100% agreement nodes utxo model transactions use input unspent bitcoins destroyed transaction outputs new utxos created unspent transaction outputs created change returned spender 1 way certain volume bitcoins transferred different private key owners 1 2 3 4 5 https peercoin net https litecoin info scrypt http cryptorials io glossary x11 http www groestlcoin org groestlcoin http tinyurl com zxgayfr x0cself aware contracts 5 new utxos spent created transaction chain utxo bitcoin transaction unlocked private key sign modified version transaction bitcoin network miners generate bitcoins process called coinbase transaction contain inputs bitcoin uses scripting language transactions limited set operations6 bitcoin network scripting system processes data stacks main stack alt stack abstract data type following lifo principle 39 authors define ontology allows rapid validation concepts properties existing contracting languages comprise7 stateof art formalization means ontologies use web ontology language owl 27 organizes class hierarchies allows practitioners find common semantical understanding problem domain note ontologies represent constantly evolving information internet originating heterogeneous data sources obligation ontology paper design prote xcc x81ge xcc x81 tool 30 free open source ontology editor systematic knowledge acquisition prote xcc x81ge xcc x81 comprises graphic user interface plugins varying ontology visualizations correctness checks employ hermit reasoner 18 check ontology consistency identify subsumption relationships classes obligation ontology static employ coloured petri nets cpn 22 graphical oriented language covering dynamic aspects obligation processing cpntools8 informally cpn notation comprises states denoted circles transitions denoted rectangles arcs connect states transitions states states transitions transitions tokens color e attributes values arcs carry inscriptions cpn ml expressions evaluate multiset single element modules cpn non atomic place holder nodes hierarchic refinements correspond respective services system implementation holistic lifecycle management sacs relevant ignored far industry practitioners consequently 34 startup phase commences choosing library contract template configured service types roles concrete service offers tentative ecommunity partners populate service offers roles negotiation phase results terminating dissent party counteroffer requires restart negotiation consent establishes contract phase lifecycle 35 involves creating local contract copies ecommunity partner local contract copies means deducing respective sets business policies network monitors monitoring agents communication endpoints concrete technical services enactment phase 41 carried distributed way violation 6 7 8 https en bitcoin wiki script https steemit com smart alexbafana smart contract languages comparison http cpntools org x0c6 alex norta business policy occurs non violating ecommunity parties vote perceived severity outcome options calming ongoing contract enactment disruptive maintain enactment comprises voting outcomes ignoring violation replacements business rules service offers ecommunity party new calming reactions require varying degrees destruction flowing business semantics rolling remaining subset earlier contract lifecycle stages targeted way disruptive voting outcome leads sudden termination ongoing enactment business rule violation perceived severe rollback results new negotiation starting contract business case seizes exist potential conflicts occur decentralized autonomous agents dao require specific modeling management resolution 32 management works conflict detected analyzing exceptions reported execution second conflict type origin impact exception uncovered finally depending nature exception appropriate conflict negotiation resolution strategy participating entities implemented ontology enables modeling conflict types related exceptions negotiation resolution strategies enabling conflict management resolution ongoing contract enactments evolve 16 orderly way case assumption collaborating party modifies internal technical process matches externally exposed service offer subset internal process business secrets remain private based set rules internal process changes trigger varying changes process view cross domain collaborating parties degree affecting ecommunity party internal processes objective assure collaboration configuration remains sound enactment contract reaches desired terminal state finally clear need bring different solutions different technology application domains holistic design cyberpysical systems cps 43 cps integrates computational physical capabilities allow interaction humans diverse means 3 novel interaction ways expand capabilities humans correlation physical world computation communication control key attraction feature cps example domains design development generation avionics vehicles smart cities industry 4 0 flexible scalable governance cps raises need employing sacs smart contracts combined smart objects belief desire intention bdi agents 8 jason9 platform development bdi agent systems incorporates reasoning cycle interpreting executing source code agentoriented programming language agentspeak stems logics programming allows knowledge presentation mathematical relations 9 http jason sourceforge net wp x0cself aware contracts 7 2 2 running case user story depicted figure 3 describes process making rental agreement based activities lessor lessee lessor person property owner person represents property owner right rental agreement behalf owner john property use case scenario legal terms called immovable e plot land permanently attached plot land house apartment condo type premises garage parking lot shed e space rented property movable legal terms e g trailer tool lessee person looking property rent long short period time mary deposit act 2 act 1 john mary mary john deposit rent contract initiation timeline b contract expiry termination fig 3 informal exchange protocol contract initiation b contract expiry termination lessee pays deposit lessor sign rent contract act 1 apartment keys handed lessee moving apartment lessee pays monthly rent b possession retrieval act act 2 signed state apartment condition apartment keys handed lessor lessee moves finally lessor pays deposit lifecycle rental contract divided following stages phases preparatory b negotiations c contract execution e rollback e contract expiry stage following figure 3 preparation phase rental contract triggered request mary looking example suitable apartment period 12 months stage certain standard requirements contract determined john mary proceed negotiate terms contract mary needs information owner property apartment john needs information mary john xe2 x80 x99s mary xe2 x80 x99s names personal identification codes addresses data parties x0c8 alex norta included contract apartment specified condition status colloquially apparent formally defined john mary object contract defined characteristics apartment location address size square meters intended purpose e g living storing work instance parking space storage room outside apartment included traditionally mary looks information apartments rent internet employs real estate agent negotiate terms contract john means spend time look information calls visits find suitable apartment rent real estate agent charge fee services agrello system provides innovative approach negotiation phase john predefined essential terms contract characteristics rental object time price rating lessee based information looks best match rental request agrello system contract conclusion john mary possible match occurs mary declines offer indicates factors consent based information john modifies search criteria better match modified requirements conclusion contract means parties contract expressed conclude e parties signed altered party contract execution phase begins documentation condition apartment traditionally refers possession transfer act includes information condition apartment recorded state utilities water electricity heating number keys given lessee john hand keys mary pay deposit apartment mary obliged pay monthly rent time apartment good condition mary fails perform monthly rent payment john right claim late payment charge rollback situation occurs e g john provide apartment john return rent mary payed contract terminates expiry date contract arrives contract prematurely terminated consequently apartment transferred john contract expiry phase john expects condition apartment return point initial transferral mary property transfer procedure similar description status utilities recorded 3 self awareness contracts current smart contract lingua franca solidity embodies programming language industry practitioners skills comprehend e g lawyers possible defend contracts independent arbitrator lack suitability utility expressiveness x0cself aware contracts 9 legal context example solidity comprise language constructs resemble obligations rights pertaining parties contract purpose ccs establish relationships govern behavior contracting people requires sound constructs obligations rights emergence cps smart contracts require capability reasoning rights obligations involvement bdi agents enables yield sacs scalable socio technical application scenarios humans use technology solving problems collaboratively ccs lawyer look contract check deadline missed obligation breached self awareness sense means entities cc lawyer merge artifact software agent comprises contract logics form machine readable obligations precisely agent deduce e g missed deadlines obligations perceive agent obligations smart contract conclude smart contract reasons remainder structured follows section 3 1 discusses ontological concepts properties contractual obligations section 3 2 shows formal way processing obligations agents section 3 3 explains use bdi agents managing contracts 3 1 contract content sac comprise important elements contracts provide metadata contract execution metadata ways informatics systems importantly agents assist automate manage contract execution mentioned rights obligations optimized machine readability explain rights obligations running case section 2 2 machine readability rights obligations maintaining capability non technical persons comprehend smart rights obligations based sac figure 4 depicts class diagram agrello framework ontology10 sub class relationships exist capture essential contractual elements example refine obligation adding subclasses monetary obligation nonmonetary obligation express certain remedies available non monetary obligations repair replacement monetary e g late payment charges exist person subclasses obligor perform obligation beneficiary benefiting performance obligation optionally party beneficiary performance obligation e g utilities provider rental contract purpose remedy subclasses figure 4 eliminate negative consequences result breach contract additionally invoking remedies beneficiary achieves situation obligation performed 10 agrello owl http tinyurl com lkkapvg x0c10 alex norta fig 4 agrello ontology class diagram correctly example rental payment delayed lessor claim late payment interest right subclasses important reflect beneficiary claim example lessee destroys furniture apartment lessor right claim repair claim replacement finally state subclasses figure 4 reflect status obligation performance contract lifecycle fig 5 obligation ontology graph respect class references focus obligations rights figure 5 depicted graph shows main ontological relationships obligation x0cself aware contracts 11 class accordance figure 1 depiction shows components integrated ontology concretely figure 5 comprises obligor beneficiary precondition action deadline furthermore remedy based obligation party fulfills obligation claim right create obligation finally follows lifecycle state stages figure 5 precondition expression fulfilled order obligation enabled action task obliger carry beneficiary e g pay rent action properties action type pay action object rent deadline states obligation performed fig 6 right ontology graph ontology graph figure 6 shows static relationship classes related right related figure 2 difference beneficiary rights prescribed contract right remedy instances contract breached example apartment returned lessee condition beginning contract lessor right claim repair replacement damages claimed irrespective aforementioned rights case lessor fulfill agreement subsequent lessee delays caused necessary repairs 3 2 obligation processing contract lifecycle obligations stages processing according ontology classes figure 4 stages inactive active performed delayed defective terminated additionally exist stages x0c12 alex norta revised unfulfillable focus automation obligation processing precisely discuss respective stages xe2 x80 x93 inactive agent taken obligation consideration e precondition obligation met xe2 x80 x93 active agent takes obligation consideration e precondition obligation met infers obligor perform related action deadline passes xe2 x80 x93 performed action carried obligor xe2 x80 x93 delayed obligor carried action agreed deadline delayed state presumes action object obligation delivered beneficiary delivered sufficient xe2 x80 x93 defective action object obligation defective xe2 x80 x93 terminated obligation terminated fundamental breach mutual agreement consideration obligation place following cpn model figure 7 obligation stages delayed defective contractual agent starts reasoning breaches notify collaborating party rights remedy breaches options conflict resolution delayed stage action object obligation delivered deadline passes delivered sufficient example rent paid paid required defective distinction figure 7 shows monetary non monetary obligations monetary obligation includes monetary action non monetary obligation includes action non monetary action object example obligation pay rent monetary obligation obligation transfer possession apartment non monetary obligation non monetary obligation enter defective obligation stage requires action object lack expected quality compared agreement example lessee returns possession apartment lessor apartment agreed condition contrary obligation pay rent qualitative deficiencies rent action object obligation quantitative features qualitative ones state performed obligation state defective defects discovered aftermath obligation stages delayed defective figure 7 initiate rights beneficiary obligation claim remedies delayed stage initiate rights claim performance late payment charges monetary obligations contractual fine non monetary obligations defective stage reached non monitory obligations allows beneficiary claim repair replacement able claim damages remedies figure 7 enable beneficiary achieve purpose obligation performance obligation fundamentally breached resulting obligation reaching stage terminated initiate right beneficiary cancel contract obligation stage terminated time mutual agreement parties x0cself aware contracts 13 nonmonetaryobligation monetaryobligation inactive obligation obligation activate obligation monetaryobligation delay monetary obligation precondition met active monetaryobligation claim late payment charge claim performance use custom right obligation obligation obligation delayed claim performance use custom right claim contractual fine right active obligation perform delayed nonmonetaryobligation delay non monetary perform obligation performed obligation obligation obligation nonmonetaryobligation nonmonetaryobligation claim replacement claim repair detect defect right claim replacement claim repair defective performance nonmonetaryobligation obligation defective nonmonetaryobligation nonmonetaryobligation obligation nonmonetaryobligation cancel contract cancel contract fundamental breach delayed obligation occured fundamental breach defective obligation occured obligation obligation terminated obligation fig 7 transaction processing obligations 3 3 interacting contract agents running case section 2 renting apartments refined developing uml sequence diagrams 46 depicting interaction protocols agents sequence diagram figure 8 refinement figure 3 initiation rental contract second sequence diagram figure 9 pertains figure 3 b rental contract termination figure 8 assign fictitious public key number comprises characters readability entities left represent contractual agent personal agents lessor lessee respectively fourth entity denotes blockchain events registered furthermore assume smart home scenario apartment agents assigned smart lock gas water electricity smart meters respectively x0c14 alex norta fig 8 initiation protocol contractual agents sequence diagram figure 8 commences contract agent sending message lessee agent obligation ob dep active meaning deposit paid consequently lessee agent performs payment invoking tx dep 7a30 blockchain e deposit held contract agent note usually deposit paid lessor xe2 x80 x99s account problematic lessor exclusive control funds entitled damage apartment times deposit paid lessee apartment undamaged condition case contract agent wallet parties forced find consensus deposit message figure 8 contract agent blockchain checking unspent transaction output u t xo 7a30 assure deposit transferred contract agent wallet blockchain responds confirmation xe2 x80 x93 result b0 3 xe2 x80 x93 indicating payment contractagent xe2 x80 x99s public key address blockchain formation transfer act act1 figure 3 types information collected contract agent sends active obligation message ob pt lessor agent requesting pictures apartment condition lessor agent responds delivering pictures value query messages qu value sent contract agent gas water electricity agents respectively respond sending current smart meter x0cself aware contracts 15 counts result value messages contract agent combination pictures generate act1 subsequently recorded blockchain contract agent sends active obligation message ob key lessor agent subsequently sends message order transfer 31x7 smart key agent e smart key apartment usable lessee note blockchain smart key assignment possible perform assignment multiple persons lessor aware identity finally contract agent sends active obligation message ob rentpay lessee agent sends transaction tx rent 03m6 blockchain e recipient monthly rent payment lessor fig 9 termination protocol contractual agents termination protocol apartment rental contract figure 9 commences contract agent sending active obligation message ob pic lessee agent returns set pictures apartment conditions smart meter values requested qu value messages gas water electricity agents respectively respond result value messages respective smart meters assuming delivered pictures apartment condition accepted lessor contract agent invokes command act2 pic value1 value2 value3 generated act2 recorder blockchain contract agent sends active obliga x0c16 alex norta tion message ob key lessee agent indicating apartment smart key returned lessor consequently lessee agent sends message order transfer 03m6 smart key agent contract agent informs lessor agent message right damage claim final confirming check possible damage compensation assume figure 9 damage compensation occurs subsequently contract agent sends active obligation message ob dep lessor indicating deposit paid lessee lessor agent sends transaction message tx dep 31x7 blockchain finally contract agent sends check command utxo 7a30 blockchain responds message result b0 3 e deposit successfully returned lessee 4 manageability self aware contracts aim agrello framework increase productivity informationand value logistics important understanding lifecycle place creating enacting rolling orderly terminating sacs consequently section 4 1 describes sac lifecycle followed section 4 2 focuses involvement bdi agents lifecycle finally section 4 3 discusses human interaction means sac lifecycle 4 1 lifecycle self aware contracts lifecycle figure 10 use bpmn notation lifecycle commences need establish peer peer p2p contract collaboration parties sub process preparing 34 contract template equipped service types affiliated agent roles assume library exists party generated rental contract templates predefined parameters inserted upper lower bound rent apartment offered service types populated concrete service offers agents fill specific roles running case paper roles lessor lessee blockchain smart key utility agents gas water electricity sac approach advantages traditional renting situation follows case lessor usually determines utility providers lessee receiving end paying lessor case sacs possible avail specific roles service types competing potential providers example lessee conscious environment disagrees preset gas agent provisions environmentally friendly alternative providers compete gasservice providers consequently fine tuned free market competition rental contract preparation phase increases likelihood finding optimal service provider quorum x0cself aware contracts 17 fig 10 agrello lifecycle sacs negotiation sub process figure 10 allows agents set concrete prices predefined ranges assembling proto contract agent receives copy deciding negotiation outcome decision options occur negotiation lessee agent disagree set monthly rent rate proposes different number counteroffer implies new copies assigned agent new negotiation round second agent considers proto contract disagreeable collapses negotiation case lifeycle reaches lifecycle end agents agree create sac agent initiation phase 35 figure 10 commences contract agent exists establishment decentralized governance infrastructure dgi required subsequent enactment note initiation phase matches sequence diagram protocol figure 8 dgi establishment involves distribution obligation sets derived contract agent respective agents additionally monitors assigned contract monitoring agents cma observe obligations adhered cases obligation breaches cma reports contract agent rollback steps commence explain finally preparing rental contract enactment means private processes collaborating agent set technical level communication endpoints established clarity exists meaning exchanged heterogeneous data sets enactment phase figure 10 lessee pays monthly apartment rent blockchain earlier established cmas monitor lessee agent adheres deadlines obligations case obligation violation 24 35 voting procedure commences establish obligation breach fundamental merely obligation revision required running case breach occurs lessee pays rent late assuming rent payment x0c18 alex norta includes payment monthly utility costs voting involves lessor agent utility agents gas water electricity assume voting power determined proportional payment monthly rent payment lessee case lessee refuses pay voting outcome fundamental breach consequently contract renegotiated hopefully clarify issues result paying rent note renegotiation involves partial termination flowing business semantics targeted rollback remaining subset negotiation component existing contract remains intact renegotiation phase renegotiation fails ongoing rental contract businesssemantics flow fully terminated involved agents equally terminated lessee late monthly rental payment blockchain vote outcome likely demand payment hand interest addition hand assume revision obligation takes place possibly match rental context longer e g lessee receives salary later consequently pay monthly rent later case obligation adjustment inserted rollback initiation phase ongoing contract continues finally rentalcontract termination phase involves takedown dgi follows protocol figure 9 agents released collaboration equally terminated 4 2 bdi agent involvement agents shown figure 10 fulfill specific roles self aware rental contract contract agent operates behalf housing agency coordinates remaining agents creation end preparation stage agents figure 8 consent rental contract establishment responsibilities allow deducing dgi lessorand lessee agents comprise local sets obligations coordinates cmas observe locally behalf local obligation sets adhered furthermore responsibilities initiation phase figure 10 follow sequence diagram figure 8 execution phase listens cma rent payment performed orderly way responsibility trigger voting procedure leads earlier explained rollback results finally captures termination request rental contract lessor lessee triggers overall dgi dismantling essential constraints roles contract template populated preparation stage corresponding agents reach consensus instantiated dgi setup important data act1 creation delivered requested e pictures gas water electricity values utility agents constraint votes cast required rollback phase lessor lessee agents responsibilities populate corresponding role affiliated service type contract template x0cself aware contracts 19 preparation phase agents participate negotiation phase provide counteroffers disagreements agreements consensus formation lessor lessee agents responsibility cooperate facts collecting leads establishment act1 act2 accordance figure 8 figure 9 respectively initiation phase lessor agent responsibility transfer smart key lessee execution phase responsibility lessee agent pay monthly rent blockchain obligation adhered lessee agent obliged cooperate rollback procedure agree new obligation continue rental contract pay damage compensation fundamental breach occurs lessor agent responsibility cooperate rollback voting procedure detects breach cma reports constraint lessee agent ability pay deposit initiation phase rent execution phase possible damages compensations rollback phase termination constraint lessee agent delivered photos display apartment condition similar lessee moved condition lower lessee agent pay compensation blockchain address lessor agent constraint lessor agent initiation phase delivering pictures document apartment condition fails transfer smart key lessee acceptable time limit termination phase lessor agent detect damages apartment acceptable time limit utility agents gas water electricity responsibility fill respective roles contract template preparation phases report current meter values initiation phase case lessee agent fails pay rent assume utility expenses utility agents participate rollback voting procedure finally termination phase utility agents deliver meter values finalization act2 figure 9 constraints utility agents fail adhere responsibilities given time limits smart key agent responsibility accept assigned lesses initiation phase transferred lessor termination phase smart key agent additional responsibilities sac lifecycle figure 10 constraint smart key agent immediately respond user change commands finally blockchain agent merely immutable event record ledger rental contract lifecycle 4 3 means human interaction organization model figure 11 shows human involvement collaboration running case rental contract organization model agent oriented modeling notation 49 denotes relationships human bdi agents arcs agents specify relationship x0c20 alex norta types figure 11 use controls subordinate relationship agents ispeerto define equal roles isbenevolentto relationshp self interested agent roles additionally figure 11 specify utility agent gas water electricity agent controls isbenevolentto ispeerto ispeerto lessor lessee housing company controls controls isbenevolentto controls isbenevolentto lessor agent contract agent lessee agent controls controls utility agent smart key agent gas agent controls water agent controls ispeerto gas company electricity agent controls ispeerto water company electricity company fig 11 organizational model rental contract human involvement specified figure 11 takes place dedicated assisting bdi agents example lessee agent engages rental contract behalf lessor human individual gas agent acts rental contract behalf utility company provides gas apartment respective assisting bdi agents act human agents coordinating control contract agent turn control housing company finally smart key agent alternating control lessor lessee agent respect shifting human agent ownership 5 trusting contract elements contract immutability legal viability related problems immutability implies store machine readable agent executable contract obligations changed necessary store events e g payments affect contract execution immutably conventional contracts events example receipts emails phone calls e g lessor lessee immutability events prevents situations x0cself aware contracts 21 parties claim opposite payment performed prerequisite allow agent aided review contract execution separate contract agent fed contract question connected event storing repository agent commences past consumes relevant events processes obligations contract present immutability value entails events immutably timestamped remainder structured follow section 5 1 comprises essential elements setup sacs section 5 2 gives technical details executing contracts section 5 3 describes additional trusted events contract execution finally section 5 4 explains contextual trustworthiness contract integration 5 1 elements trust order support execution self aware smart contracts blockchain technology elements necessary contract signed contract parties essential elements enacting blockchain enhanced self aware smart contracts identity contract parties unambiguously identifiable especially lessor rent contract wants assurance flat person xe2 x80 x99s agent reacts lessor xe2 x80 x99s offer assuming person positive credit rating reacts flat offer identity contract signing verified intended lessee instead let person insufficient credit rating flat e g friend family member signature conventional contracts require hand written signature achieve comparable better legal commitment digital cryptographically secure signatures necessary events stated access external events related contract obligations essential automated execution case contract agent sense rent happens specific month externally informed event push message able query blockchain stores events pull message alternatively agent blockchain connection blockchain relays information transitively different types events necessarily stored blockchain e g sensor data smart meters access permissions smart lock require different blockchain timestamp sac agents obligations considers external events process obligations e g payments reason delays deadlines events consumed contract agent need time stamped contract source code source code contract contains obligation formal machine readable notation guarantee immutability contract source code corresponding hash reside blockchain case contract party claims defective contract execution agent x0c22 alex norta manipulated source code original copy exist resolve conflicts storing hash blockchain sufficient contract party provides source code hash value edge case occurs parties provide copy contract 5 2 contract execution legal viability considered execution contract takes place examples related issues number independent nodes running contract problem versus chain execution unlike etherum smart contracts sacs require external events progress obligation executions stored blockchain legally sufficient merely store transactions contract parties blockchain current state sac execution derived blockchainstored information processing rent payment obligation listing 1 requires handling logics deadlines obligation l 1 4 states lessee obligor pay monthly rent lessor beneficiary time token l 6 stored agents belief base trigger processing recurring o6 obligation agent orient approach respective code provided library module listing 2 provides excerpt l 1 9 plan handles instantiation rent payment obligation day month l 12 17 acquire date following month plan plan l 20 30 invoked lines 1 9 purpose create event inside agent triggers creation concrete obligation beginning following month event triggers plan l 1 9 event occurs term listing 1 l 6 added belief base listing 1 monthly rent payment obligation 1 2 3 4 5 6 obligation o6 lessee lessor d t e p r e c o n d t o n year month 1 pay rent r e c u r r n g d e d l n e date year month 10 state new recurring t m e t o k e n f o r r e c u r r n g o b l g t o n o6 timetoken 2017 2 1 logic micro lifecycle described listing 1 based declarative logic programming facilities jason agent framework11 comprises integrating agent blockchain leads trade raising question run contract agent chain chain running sac chain requires storage server execution agent framework entails agent framework provides means communicating blockchain jason framework 11 precisely agentspeak logic declarative programming language jason agents written agentspeak running means source code interpreted jason framework x0cself aware contracts 23 reasoning cycle implemented java allows extending handwritten code e library interfacing blockchain work blockchain provide date api introduces dependency agent speak java involved offchain approach require adaption change blockchain api listing 2 instantiation rent payment obligation 1st day month 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 t m e t o k e n f o r r e c u r r n g o b l g t o n obligationname timetoken oy om od obligation obligationname obligor beneficiary d t e p r e c o n d t oy om od task recurring state new obligation obligationname obligor beneficiary d t e p r e c o n d t y m d task recurring ge t ne x tt t ok e n timetoken oy om od d t e p r e c o n d t y m d newdate c r e t e e v e n t f o r r e c u r r n g o b l g t o n obligationname newdate g et n ex t ti m et o ke n timetoken ty tm td d t e p r e c o n d t o n year month day newdate number day tm 11 newdate date ty tm 1 day c r e t e e v e n t f o r r e c u r r n g o b l g t o n obligationname date ny nm nd sulfur date b c ny nm nd b c concat t m e t o k e n f o r r e c u r r n g o b l g t o n obligationname timetoken ny nm nd event 1 ms event chain comparable ethereum smart contracts obligation driven contracts necessary write state information blockchain contract execution driven events payments need stored blockchain executing contract requires keeping execution state memory machine hardware execution higher degree abstraction logic declarative programming language agentspeak yields introduces necessity reasoning cycle e g reacting percepts reasoner unifying terms run sac chain components implemented virtual machine blockchain requires developing new language 12 eliminates need api integration agent advantage encapsulation hiding hand written code comprises mirco lifecycle general obligation processing excerpt listing 2 12 way tackle problem introducing intermediate language based xcf x80 calculus x0c24 alex norta open issue relation declarative imperative programming smart contracts sac language aim based obligations static declarative approach leaves open question logics like voting protocols algorithms covert way question arises parties run contract agent hand contract details accessible public hand idea blockchain distribute information tampering protection traceability solution contract party runs light node contractcode enactment stores transactions related contract parties 5 3 trusted events sac executed events like payments involved agent reasoning obligations needs track fine grained information bits recurring obligation processed monthly rental payment agent create concrete obligation13 month containing according date listing 2 line 3 agent senses environment checking current date recognizes recurring obligation instantiated date month creates additional information contract agent requires appropriately process obligations contrast payment events given signatures value transfers information require storage blockchain restored restarting contract agent e g starting second instance review contract execution 5 4 contextual trustworthiness self aware contracts integrated context different degrees rental contract especially high degree integration computing monthly utilities reading consumption electricity water smart meters raises difficulties levels security iot devices repeatedly subject security vulnerabilities14 paying utilities automatically cause inconveniences lessee 13 clarify terminology recurring concrete obligations rental contract obligation paying rent monthly processing obligation split parts instances simplifying task agent 14 https techcrunch com 2017 02 28 amazon aws s3 outage breakingthings lot websites apps https security radware com ddos threats attacks brickerbot pdospermanent denial service https krebsonsecurity com 2016 10 makes iot things underattack http iotworm eyalro net x0cself aware contracts 25 flat logics recognizing handling faulty sensor data introduced contract agent privacy concern secure transfer sensitive measurement data interoperability integrating technologies different technical domains15 software agents blockchains smart devices iot considerable challenge data exchange relates syntactic interoperability exchanged data parsed counter party correct data formats semantic interoperability data exchange clarified e g temperature measured xe2 x97 xa6 c mistakenly interpreted xe2 x97 xa6 f sound data exchange involves architectural aspects question arises contract agent receives sensor data software agent acts proxy iot devices provides uniform interface accessing smart meters hard coded agent notion sacs based obligations refer p2p economy white paper idea obligations stems contract law covers p2p scenarios rental contract case obligations applicable business business scenarios anticipate framework scalable business business b2b cases considerable changes core concepts e g sale goods services 6 feasibility evaluation map running rent contracting case section 2 evaluation comprises parts section 6 1 gives architecture agrello framework section 6 2 shows code agrello language aspects sac includes examples obligations rights section 6 3 shows conceptual agrello graphical user interface prototype currently development 6 1 system architecture agrello system architecture figure 12 derive 37 called esourcing reference architecture esra introduced crossorganizational process aware collaboration use simplified form umlcomponent diagram model 4 architecture depiction briefly esourcing establish outsourcing relationships supporting matchmaking offered requested process views 17 allows stepwise collaboration evolution contextual changes require furthermore 32 software agents enable communication conflict resolution p2p process aware collaborations agents act autonomously behalf collaborating organizations sac orchestrates assurance information 15 http www jot fm issues issue 2006 11 article4 x0c26 alex norta conflict resolution trustworthy note business processes mapped solidity 52 blockchain based enactment housing company external layer conceptual layer internal layer utility company external layer conceptual layer internal layer fig 12 agrello system architecture simplified bi lateral cross organizational collaboration scenario architecture figure 12 shows set components organized layered architecture assume left right respective collaborating parties esourcing approach scales agrello supports p2p multi party running case 15 16 section 2 middle figure 12 component comprises agrello contract templates repository hub 38 hub allows finding contract templates gui displays human readable language preparation contract template correspondence figure 10 user parameterizes template mapping creates representation xml based based equivalent based esourcing markup language esml 39 extend obligations rights agrellolanguage accordance section 3 note population negotiation phases accordance figure 10 collaboration components employed layers figure 12 follows external layer comprises respectively replicated collaboration component synchronizes contained coordination interface equal component counter parties collaboration component serves security ensuring gateway p2p data exchange furthermore embedded additional components negotiate sacs specified agrellolanguage affiliated obligations rights functionalities necessary perform reputation identity action management related sac involvement collaboration component contains bdi agents act behalf concrete collaborating party explain coordinator component assures enactment phase sacs align execution obligations rights process aspect contract template hub comprises embedded components identity management reputation management functionalities complement collaboration components respective collaborating counter parties bid x0cself aware contracts 27 ding services receive auctioning tendering input collaboration management quickly deploy contracts libraries sac templates obligations rights exist important templates validated tool support soundness e syntactic semantic deficiencies elimination conceptual layer internal collaborating parties shielded external layer information exchange counter parties contained sac setup support comprises libraries smart contract parts obligations rights modeling tools use rapidly creating sacs composed sac simulated verified internally soundness e eliminating design errors note simulation inferior verification likely execution paths sac tested contrast verification employs formal methods sophisticated tool support complete correctness check sacs setup support comprises development tools issuing bdiagents externally represent collaborating party translator component relays external internal layer explain 37 shows detail translator reconcile different standards formats terms modeling notations information types external conceptual layers provided agrello framework internal layer comprises concrete smart contract systems e g ethereum 53 lisk16 hyperledger 12 qtum17 assume blockchain agnostic position map heterogeneous set smart contract languages slight variations solidity 13 6 2 agrello language high level structure business collaboration language agrellolanguage derived research driven pre existing esourcing markup language esml 39 schema foundation agrellolanguage given extensible markup language xml 9 facilitate building distributed applications clouds 11 figure 13 shows structure agrellolanguage sac collaborating parties structuring agrellolanguage content conceptual blocks briefly block comprises constructs resource definition data definition mapped running apartment renting case parts resource definition housing company utility smart meters related information note bdi agents count resources defined unique identifier universal resource identifier uri 26 block defines business context terms business legal geographical aspects importance contractual relations collaborating parties context renting case assume estonian jurisdiction holds concretely business context provisions comprise obligations rights assigned concrete process tasks explain 16 17 https lisk io https qtum org en x0c28 alex norta fig 13 agrellolanguage structure sac formulation legal context provisions allow setting general terms conditions contract block current adoption formal process specification language permits use control flow patterns business process definitions semantic clarity 36 note process definitions comprises constructs linking resource data definition sections agrellolanguage based respective pattern collections 48 47 furthermore life cycle definitions 33 business processes contained tasks agrello framework blockchain agnostic mapping assures heterogeneous organizational internal smart contract platforms integrated cross organizationally life cycle mapping establishes semantic equivalence life cycles cross organizationally harmonized business processes tasks opposing domains different labels tasks belonging processes opposing domains semantically equal establish semantic equality second mapping block focuses mapping task labels monitoring construct figure 13 specifies enactment phase service consumer perceives refer reader 33 details running rental case brief agrellolanguage code examples obligations rights listing 3 shows example obligation pay monthly rent assume obligation unique id changed enactment sac involves monetary units execution state obligation listing 3 enabled e sac enactment lifecycle stage obligation active parties obligations define beneficiary lessor note use shrunk public key x0cself aware contracts 29 number lessor wallet figure 8 holds lessee defined obligor pay monthly rent party involved obligation following figure 1 obligation type todo lessee act concretely paying rent listing 3 obligation example paying monthly rent 10 obligation rule tag monthly rent rule id 0001 11 changeable false monetary true 12 state enabled state 13 parties 14 benficiary lessor 31 x7 beneficiary 15 obligor lessee 03 m6 obligor 16 party nil party 17 parties 18 obligation type todo obligation type 19 precondition 20 act1 signed key transferred 21 precondition 22 action type payment 03 m6 31 x7 rent action type 23 action object rent monthly action object 24 rule conditions month lastday rule conditions 25 remedy 26 late payment interest 03 m6 31 x7 27 remedy 28 obligation rule precondition obligation listing 3 act1 signed lessor lessee access smart key able apartment action type payment wallet lessee lessor constitutes type rent additionally conforming figure 1 action object defined rent qualifiers serviced monthly specific rule condition rent payment occur day month finally reference inserted obligation remedy late rent payment exists lessee transfer defined monetary lessor right listing 4 comprises intersecting specification elements obligation pointed section 2 main difference obligation beneficiary waive right assume right example listing 4 hypothetical case lessee broken television lessor owner right defined corresponding id lessor right waive right e g case lessee convinces lessor television damage fault evidence exists right changed fly compensation set f alse expectation replacement object right lifecycle state enabled immediate enactment parties similarly defined listing 3 x0c30 alex norta corresponding figure 2 type right set claim pertaining lessor lessee replacement broken television assumed precondition act1 signed smart key handover lessee took place action type replacement television defined object brand type serial number listing 4 right example replacing broken televsion 10 right rule tag tv replacement rule id 0002 11 changeable true monetary false 12 state enabled state 13 parties 14 benficiary lessor 31 x7 beneficiary 15 obligor lessee 03 m6 obligor 16 party nil party 17 parties 18 right type claim right type 19 precondition 20 act1 signed key transferred 21 precondition 22 action type replace tv action type 23 action object 24 tv brand type serial number 25 action object 26 rule conditions deadline date rule conditions 27 remedy 28 la te rep lac eme nt ter est 31 x7 29 remedy 30 right rule assume replace command confirmed mobile phone lessee photo showing television delivered mobile phone lessor obligation listing 4 certain date set deadline television replacement lessee service remedy payment certain wallet lessor 6 3 agrello user interface objective agrello framework allow intuitive development sacs mapped technical lower level representations agrellolanguage mapped e g solidity operate directly blockchain conceptual interface depiction figure 14 template builder shows left sac blocks drag drop contract window right right figure 14 window parameterizing blocks shows e g parameter set $1 750 monthly rent left figure 14 depicts functions represent actions contract respective party carry example variables functions contract template right comprising function x0cself aware contracts 31 fig 14 intuitive agrello graphical user interface sac development rent involving specified variables lessor lessee variable apartment concretely contract window shows assembled obligation defined lessor agrees rent apartment lessee specified period $1 750 month 7 conclusions whitepaper presents novel cross organizational blockchain agnostic framework peer peer collaboration based 15 years academic research stemming author emergence cyber physical systems potential arises reduce costs time spent information value transfer logistics far humans managed novel blockchain technology enabled smart contracts combined intelligent multi agent systems internet things devices yield called self aware contracts allow high degree automation peer peer collaborations demonstrate approach running case renting apartment presented traditional protocols initiating terminating rental contract existing blockchain based solutions lack essential constructs specifying legally binding machine readable contracts pragmatically formalize obligations rights ontology running case mapped automated protocol belief desire intention agents act behalf humans consequently focus decision making mobile devices processing obligations rights high level state transition automata colored petri nets shows processing semantics involving blockchain assures event x0c32 alex norta traceability agentspeak code samples indicate way belief desireintention agents act behalf humans facilitate information valuetransfer logistics important agrellolanguage constitutes high level cross organizational declarative way formulating self aware contracts human readable comprise specifications obligations rights mapped organization internal smart contract transaction processing platforms e g solidity discover combination belief desire intention agents declarative agrellolanguage yields self aware contracts assure combined set trusted information channelled contractbased collaborations way agents create composed oracle governed lifecycle management layer comprises stages preparing self aware contract template initiating setup phase collaboration enacting contract managing rollbacks caused e g breach obligation deliverance faulty information agent orderly termination self aware contract collaboration addition employing agents provide degree artificial intelligence collaboration human manageability agrello framework achieve providing declarative smart contract language specifies crossorganizational contract collaborations agrellolanguage based preexisting language results eu project initially automating crossorganizational production processes agrellolanguage provides extensions adopting human readable specifications obligations rights core concepts lawyers establish traditional contracts legal viability additionally intuitive user interface allows assembling self aware contracts building blocks subsequent parameterization immutability legal viability agrello framework achieves employing blockchain capability contracting parties signed digitally parties xe2 x80 x99 identities authenticated furthermore relevant external events stored blockchain respective timestamps critical assuring legal traceability actual contract code store blockchain guarantee immutability recognize involving agents possible process events chain chain way achieve fine tuned load balancing important events stored blockchain non repudiable traceability future work aim develop mapping agrellolanguage obligations rights lower level called smart contract languages soldity operate directly blockchain platforms furthermore investigate scalable agent based solution solving oracle problem pertaining blockchains scalable approach assures trusted information channeled self aware contract collaboration important oracle self healing fly modifications constituents possible cases malevolent agent behavior contextual changes relevant user adoption design intuitive graphical user interfaces allow x0cself aware contracts 33 laymen lawyers business people development specific contracts based human readable templates references 1 m antonopoulos mastering bitcoins 2014 2 pleszka k araszkiewicz m editor logic theory practice lawmaking springer publishing company incorporated 1 edition 2016 3 r baheti h gill cyber physical systems impact control technology 12 161 xe2 x80 x93166 2011 4 d bell uml basics component diagram ibm global services 2004 5 bentov gabizon mizrahi cryptocurrencies proof work pages 142 xe2 x80 x93157 springer berlin heidelberg berlin heidelberg 2016 6 biryukov d khovratovich equihash asymmetric proof work based generalized birthday problem proceedings ndssa xcc x82a xcc x86z xcc x8116 21 xe2 x80 x9324 february 2016 san diego usa isbn 1 891562 41 x 2016 7 b bisping p d brodmann t jungnickel c rickmann h seidler stu xcc x88ber wilhelm weidner k peters u nestmann mechanical verification constructive proof flp international conference interactive theorem proving pages 107 xe2 x80 x93122 springer 2016 8 r h bordini j f hu xcc x88bner m wooldridge programming multi agent systems agentspeak jason volume 8 john wiley sons 2007 9 t bray j paoli c m sperberg mcqueen e maler f yergeau extensible markup language xml world wide web journal 2 4 27 xe2 x80 x9366 1997 10 o bussmann future finance fintech tech disruption orchestrating innovation pages 473 xe2 x80 x93486 springer international publishing cham 2017 11 v butterin generation smart contract decentralized application platform 2014 12 c cachin architecture hyperledger blockchain fabric workshop distributed cryptocurrencies consensus ledgers 2016 13 c dannen solidity programming pages 69 xe2 x80 x9388 apress berkeley 2017 14 n emmadi h narumanchi reinforcing immutability permissioned blockchains keyless signatures xe2 x80 x99 infrastructure proceedings 18th international conference distributed computing networking icdcn xe2 x80 x9917 pages 46 1 xe2 x80 x9346 6 new york ny usa 2017 acm 15 r eshuis norta o kopp e pitkanen service outsourcing process views ieee transactions services computing 99 preprints 1 2013 16 r eshuis norta r roulaux evolving process views information software technology 80 20 xe2 x80 x93 35 2016 17 rik eshuis alex norta oliver kopp esa pitkanen service outsourcing process views ieee transactions services computing 2014 press preprint http ieis tue nl staff heshuis tsc2014 pdf 18 b glimm horrocks b motik g stoilos z wang hermit owl 2 reasoner journal automated reasoning 53 3 245 xe2 x80 x93269 2014 19 p hamburger development nineteenth century consensus theory contract law history review 7 2 241 xe2 x80 x93329 10 2011 20 r hull v s batra y m chen deutsch f f t heath iii v vianu shared ledger business collaboration language based data aware processes pages 18 xe2 x80 x9336 springer international publishing cham 2016 x0c34 alex norta 21 f idelberger g governatori r riveret g sartor evaluation logic based smart contracts blockchain systems pages 167 xe2 x80 x93183 springer international publishing cham 2016 22 kurt jensen lars michael kristensen lisa wells k jensen l m kristensen coloured petri nets cpn tools modelling validation concurrent systems international journal software tools technology transfer page 2007 2007 23 m ko xcc x83lvart m poola rull smart contracts future law etechnologies pages 133 xe2 x80 x93147 springer 2016 24 l kutvonen norta s ruohomaa inter enterprise business transaction management open service ecosystems enterprise distributed object computing conference edoc 2012 ieee 16th international pages 31 xe2 x80 x9340 ieee 2012 25 l luu d h chu h olickel p saxena hobor making smart contracts smarter proceedings 2016 acm sigsac conference computer communications security ccs xe2 x80 x9916 pages 254 xe2 x80 x93269 2016 26 l masinter t berners lee r t fielding uniform resource identifier uri generic syntax 2005 27 d l mcguinness f van harmelen et al owl web ontology language overview w3c recommendation 10 10 2004 2004 28 business process model notation bpmn version 2 0 object management group specification 2011 http www bpmn org 29 o morten firms overcome weak international contract enforcement repeated interaction collective punishment trade finance collective punishment trade finance january 22 2015 2015 30 m musen prote xcc x81ge xcc x81 project look look forward ai matters 1 4 4 xe2 x80 x9312 2015 31 s nakamoto bitcoin peer peer electronic cash system consulted 1 2012 28 2008 32 n c narendra norta m mahunnah l ma f m maggi sound conflict management resolution virtual enterprise collaborations service oriented computing applications 10 3 233 xe2 x80 x93251 2016 33 norta exploring dynamic inter organizational business process collaboration phd thesis technology university eindhoven department information systems 2007 34 norta creation smart contracting collaborations decentralized autonomous organizations pages 3 xe2 x80 x9317 springer international publishing cham 2015 35 norta establishing distributed governance infrastructures enacting crossorganization collaborations pages 24 xe2 x80 x9335 springer berlin heidelberg berlin heidelberg 2016 36 norta p grefen discovering patterns inter organizational business collaboration international journal cooperative information systems ijcis 16 507 xe2 x80 x93 544 2007 37 norta p grefen n c narendra reference architecture managing dynamic inter organizational business processes data knowledge engineering 91 0 52 xe2 x80 x93 89 2014 38 norta l kutvonen cloud hub brokering business processes service xe2 x80 x9drendezvous xe2 x80 x9d platform supports semi automated background checked partner discovery cross enterprise collaboration srii global conference srii 2012 annual pages 293 xe2 x80 x93302 july 2012 x0cself aware contracts 35 39 norta l ma y duan rull m ko xcc x83lvart k taveter econtractual choreography language properties cross organizational business collaboration journal internet services applications 6 1 1 xe2 x80 x9323 2015 40 norta k nyman metcalf b othman rull xcc x82a xcc x86ijmy agent let talk generala xcc x82a xcc x86i xcc x87 software agents tool internet scams future law etechnologies pages 11 xe2 x80 x9344 springer 2016 41 norta b othman k taveter conflict resolution lifecycles governed decentralized autonomous organization collaboration proceedings 2015 2nd international conference electronic governance open society challenges eurasia egose xe2 x80 x9915 pages 244 xe2 x80 x93257 new york ny usa 2015 acm 42 aafaf ouaddah anas abou elkalam abdellah ait ouahman novel privacy preserving access control model based blockchain technology iot pages 523 xe2 x80 x93533 springer international publishing cham 2017 43 r ragunathan lee l sha j stankovic cyber physical systems computing revolution proceedings 47th design automation conference dac xe2 x80 x9910 pages 731 xe2 x80 x93736 new york ny usa 2010 acm 44 t roxenhall p ghauri use written contract long lasting business relationships industrial marketing management 33 3 261 xe2 x80 x93 268 2004 45 rull e ta xcc x88ks norta software agent enhanced privacy protection regulating etechnologies european union pages 73 xe2 x80 x9394 springer 2014 46 j rumbaugh jacobson g booch unified modeling language reference manual 2nd edition pearson higher education 2004 47 nick russell arthur hm ter hofstede david edmond wil mp van der aalst workflow data patterns identification representation tool support conceptual modeling xe2 x80 x93er 2005 pages 353 xe2 x80 x93368 springer 2005 48 nick russell wil mp van der aalst arthur hm ter hofstede david edmond workflow resource patterns identification representation tool support advanced information systems engineering pages 216 xe2 x80 x93232 springer 2005 49 l sterling k taveter art agent oriented modeling mit press 2009 50 m vukolic xcc x81 quest scalable blockchain fabric proof work vs bft replication international workshop open problems network security pages 112 xe2 x80 x93125 springer 2015 51 m vukolic xcc x81 quest scalable blockchain fabric proof work vs bft replication pages 112 xe2 x80 x93125 springer international publishing cham 2016 52 weber x xu r riveret g governatori ponomarev j mendling untrusted business process monitoring execution blockchain pages 329 xe2 x80 x93347 springer international publishing cham 2016 53 g wood ethereum secure decentralised generalised transaction ledger ethereum project yellow paper 2014 x0c