b contentos technical white paper contentos blockchain system aims form foundation decentralized digital content ecosystem provides mature security mechanism protect users xe2 x80 x99 accounts xef xac x82exible meet operational needs economic rules incentivize users contribute valuable contents participate activities system consensus protocol combination dpos bft achieve high throughput fast con xef xac x81rmation transactions contentos provides gprc restful api services supports http https access smart contract supported enables users develop dapps user friendly contentos provides plenty smart contract apis supports chain data query asset transfer contents management cross contract invocation smart contract template module provided easier develop deploy smart contract 1 consensus 1 1 overview according cap theory distributed system consistency availability partition tolerance new consensus protocol called sabft invented achieve consistency availability maximize system xe2 x80 x99s throughput minimize con xef xac x81rmation time transactions generates blocks manner dpos adopts bft achieve fast block con xef xac x81rmation s self adaptive way adjust frequency bft process based load blockchain network tra xef xac x83c x0c1 2 terminology node server running contentos daemon cosd block producer node generate blocks validator node participates bft consensus proposer validator broadcasts proposal proposal block validators try reach consensus reached ll committed commit commit block means mark block irreversible block 1 3 block generation x0csabft generates blocks manner dpos validator takes turn produce 10 blocks row block generated second fork possible longest chain considered current main branch 1 4 fork switch branch grows main branch swichfork taken place xef xac x81nds common ancestor branches pop blocks main branch ancestor apply blocks longer branch 1 5 need bft instant transactions required scenarios especially involves asset transfer bitcoin world guarantee xef xac x81nalize certain block theoretically node resource generate longer chain cause fork switch direct violation safety realm distributed system adopt bft achieve fast consensus consensus reached certain block reverted 1 6 performance sabft reaches consensus 1 2 seconds lan bft process adopts 3 phasecommit propose prevote precommit propose phase validators wait synchronously proposer broadcast proposal rest phases completely asynchronous better illustrate sabft s performance experiment conducted following limitations test environment hardware parameter cpu 2 cpu ram 8 gb bandwidth 100 gb s limitations type parameter consensus nodes 19 max bandwidth nodes 100 kb s block size 50 kb blocks monitored 7000 xef xac x81gure shows margin step 7000 blocks average 1 49 x0cthe xef xac x81gure shows interval committed blocks average 1500ms x0cthe xef xac x81gure shows interval block s generation time commit time average takes 1800ms block committed includes block s generation time 1 7 s di xef xac x80erent sabft s block producing process bft process completely decoupled e validator generate blocks despite state bft process let s current block height 100 bft process committed block height 90 validator start generating 101 s block waiting block 91 100 committed signi xef xac x81cant di xef xac x80erence bft process t reach consensus block height di xef xac x80erence consecutive blocks reached consensus called margin step adjusted sabft automatically according network condition load contentos chain sabft usually reach consensus 1 2 seconds margin step increases heavier load network tra xef xac x83c presence byzantine nodes 1 8 behaviour propose choose proposer new proposer chosen validators bft voting round round robin pick proposal proposer simply propose head block commit s possible block committed main branch fork switch needed 1 9 self adaptation explained x0cin case network jam validators crash byzantine validators block con xef xac x81rmation delayed self adaptive mechanism makes sure system quickly con xef xac x81rm latest generated block later rounds new proposer chosen validators bft voting round round robin proposer simply proposes latest block knows xe2 x80 x99s con xef xac x81rmed blocks con xef xac x81rmed case network latency validators receive proposed block votes validators propose latest block bft consensus reached long time overcome block smaller block number head block proposed consensus reached voting rounds bft process considered state machine state consists height round step step omitted simplify process height rounds exist round starts 0 height increases bft consensus reached round h1r0 indicates current state height 1 round 0 following picture illustrates sabft adjusts bft process abnormal situations mentioned earlier occurs t1 block 1 generated bft process starts proposer proposed block 1 soon t1 xe2 x80 x99 t1 t1 xe2 x80 x99 t2 consensus reached block 1 committed t2 block 2 generated xe2 x80 x99s proposed things messy consensus reached round 0 timeout t4 state enters h2r1 block 4 proposed finally t2 xe2 x80 x99 consensus reached block 4 block 2 4 committed t6 things normal blocks block 5 committed 1 second shown margin step height 2 4 quickly drops 1 1 10 worst case scenario according flp impossibility asynchronous network s deterministic way achieve consensus faulty process round bft process exists critical failure like crash network jam malicious nodes broadcast bad message mess vote process theoretically s situation single bft round ends failure possibility decrease exponentially round grows s bit paranoid worry line perfect way guarantee safety liveness safety priority thing need worried uncommitted blocks eventually eat memory resource easily come retention policy discard far blocks scope discussion 1 11 bad behaviour punishment technically abnormal behaviour hold accountable long track information s xef xac x81rst thought validators o xef xac x84ine constantly absent block producing bft voting removed validator set validators following behaviour punished generates con xef xac x82icting blocks signs con xef xac x82icting votes violates pol voting rule constantly proposes invalid blocks 2 parallel processing maximize tps system parallel processing architecture introduced x0cdata system generalized combination property property minimum representation unit data property considered independent di xef xac x80erent properties processed parallel transaction processed 4 stages decoding reading execution writing decoding stage generates evaluating function dependent input output properties reading stage reads input properties database execution stage feeds evaluating function input properties gets values output properties writing stage writes updated output properties database establish 4 stage parallel pipeline database o occurs reading writing stage o blocks decoding execution use cpu resource 3 economic system general representation asset contentos called cos transferred accounts holding cos doesn xe2 x80 x99t users voting power voting power users stake cos transfer cos vests participate monetary circulation process system user vests xef xac x82uence system cos vests ratio 1 1 time block generated newly generated vests partially reward pool rest assigned block producer reward vest generated block decided mathematic model adjusted members committee block producers 15% vests dapp related users 10% 10% vests reward pool given dapp developers content creators 56 25% commenters 11 25% reward content creator commenter relies following factors reward pool xef xbc x9agenerating block cause xef xac x82ation cos minted process reward pool vote power xef xbc x9aa user xe2 x80 x99s vote power indicates user xe2 x80 x99s vote matters post xe2 x80 x99s reward user higher vote power upvotes post creator post reward user xe2 x80 x99s vote power decrease 3 33% time user upvotes post increase time passes vote power vest k 30 credit score m k m parameters adjusted block producers post power vote power post accumulated total vote power xef xbc x9aincrease user upvotes post decrease block generated posts comments uploaded exactly 7 days ago rewarded post xe2 x80 x99s reward x post power total vote power x total cos reward pool reward added total vote power decrease 1 86400 17 time new block generated transfer cos vests called power power vice versa power instant power takes 13 weeks complete multiple power inside account time allow 4 resource consumption x0c4 1 resource type network resource broadcasting transaction consumes network resources calculated size transaction cpu resource action smart contract invoked cpu resource consumed 4 2 fee simplify fee calculation network cpu resource consumption resource type converted stamina user xe2 x80 x99s stamina insu xef xac x83cient network resource consumption transaction sent transaction discarded deducting stamina transaction invalid stamina deducted stamina insu xef xac x83cient cpu resource consumption transaction executed rest user xe2 x80 x99s stamina costed 4 3 stamina free stamina user certain stamina regenerated daily stake cos user needs stamina stake cos vest vest user extra stamina user gets speci xef xac x81cally usage regeneration stamina contentos calculated exponential weighted moving average exponential weighted moving average time xef xbc x8cthe moving average xef xbc x9a xef xbc x8c potential moving average time actual value time weight 5 account system 5 1 account account unique identi xef xac x81cation account contentos contains 6 16 characters character lower case letter digit number 5 2 contentos uses digital signature check authority user pair pub priv key users sign messages private key receivers use public key verify authenticities messages 6 storage service contentos uses leveldb store data performance follows initial dataset 100 000 x0cleveldb key int64 leveldb key string16 insert 190 985 193 573 query 36 627 39 842 update 32 107 29 975 delete 228 10 223 41 initial dataset 1 000 000 leveldb key int64 leveldb key string16 insert 189 322 174 581 query 33 231 34 575 update 29 455 28 918 delete 254 647 198 649 initial dataset 10 000 000 leveldb key int64 leveldb key string16 insert 174 794 165 809 query 23 347 12 996 update 22 795 17 041 delete 248 015 237 812 details xef xbc x9adb benchmark high performance highly available database service implemented based leveldb mem cache provides transactional supports fast roll mechanism smart contract virtual machine smart contracts contentos currently written c c language webassembly virtual machine smart contracts run 7 1 supported actions smart contracts developed users compiled wasm byte codes deployed blockchain series apis provided contract development eaiser provides similar features erc20 standards apis allows contract developers post article comment statistics care smart contracts updated online developer hot xef xac x81x bugs add new features x0c7 2 limitations running time contract cpu ram bandwidth resources use limited maintain stableness system 7 3 security smart contracts running sandbox called webassembly security model webassembly important goals 1 protect users buggy malicious modules 2 provide developers useful primitives mitigations developing safe applications constraints 1 contentos conduct authority validation resource check execution smart contract 8 smart contract api contentos provides plenty apis enable dapp developer write contracts advanced features include limited low level operations like read write blockchian high level operations like post articles comment cross contracts interactions 9 smart contract template smart contract development deployment easier new feature smart contract template provided contentos users propose template adopted users programming skills develop develop contracts template 10 plugin plugin mechanism implemented contentos users develop plugin add new functionalities currently trxsqlservice statelogservice dailystatservice provided statistics purposes x0c