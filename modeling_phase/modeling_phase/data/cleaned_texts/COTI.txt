b trust chain consensus coti decentralized high performance cryptocurrency ecosystem optimized creating digital payment networks stable coins technical white paper v 4 0 2nd october 2018 abstract long anticipated cryptocurrencies significantly alter online payment landscape accomplish necessary cryptocurrencies user friendly convenient highly scalable blockchain based technologies created tackle challenges posed attempting provide high transaction throughput remaining inexpensive met little success challenge faced lack trust unknown parties leads countless chargebacks transaction cancellations merchants classified xe2 x80 x99high risk xe2 x80 x99 xe2 x80 x99low risk xe2 x80 x99 based association particular industry actual behaviour coti currency internet solves challenges innovative base layer protocol form directed acyclic graph based ledger built transactions connected time harnessing trust based algorithms trust based combination network participant xe2 x80 x98s historical behaviour data objective information coti takes consideration calculating trust unique machine learning algorithm trust trustchain algorithm validate confirm transactions faster trust chains grow new transactions attach prior transactions similar degrees trust results innovative consensus based confirmation mechanism user incentivised high level trust engaging trust building behaviour benefits associated having high level trust e faster confirmation times coti built mechanisms monitor detect defend possible attacks ensuring network security example mechanism coti xe2 x80 x99s double spend prevention dsp nodes coti introduces novel protocols address disputes arise sending transactions required feature possible cryptocurrencies dispute resolution achieved use arbitration service service takes advantage principles game theory ensure fair outcome case dispute votes determine disputing parties right vision coti empower users freely exchange value simply information exchanged internet achieve developing trustchain protocol based directed acyclic graph dag distributed ledger creates scalable blockless protocol utilised industry needs high throughput trust operate coti uniquely positioned provide infrastructure needed industries requiring immense scalability addition arbitration mechanism resolve disputes fraud e g double spending errors coti introduces multidag structure high performance smart contracts provide multitude tools enterprises merchants governments developers stable coin issuers keywords arbitration blockchain coti cryptocurrency dag distributed ledger e commerce 1 introduction blockchain technologies cryptocurrencies alternative mechanisms managing payment transactions past years digital currencies bitcoin ethereum 1 x0cothers enjoyed exponential growth popular interest adoption1 uses included technological applications ranging supply chain management 11 decentralised verifiable health records 17 likened cryptocurrencies early internet citing enormous potential disrupt payment systems way internet disrupted information access 14 generation cryptocurrencies enormously successful faced fundamental challenges prevented achieving universal adoption linear blockchain based cryptocurrencies suffer low transaction throughput2 cryptocurrencies rely network miners perform increasingly complex proof work pow computations incur prohibitively high transaction fees existing cryptocurrencies difficult manage subject mass speculation addition services like dispute resolution commonplace credit cards payment platforms rare frameworks existing cryptocurrencies factors difficult individuals merchants adopt global currency digital dollar day day transactions paper introduces coti currency internet generation cryptocurrency achieves high transaction throughput low fees easy manage providing decentralised structures services users come expect payment platforms dispute resolution coti achieves high transaction throughput employing directed acyclic graph dag transactions known cluster opposed blockchain idea new proven improve performance 13 4 15 typically dag based cryptocurrencies3 intended large numbers low valued transactions possibly machines iot devices coti designed support day day transactions merchants consumers new algorithms introduced drive formation cluster approval transactions fundamental new approach trust score assigned user account based historical behavior governs approval account xe2 x80 x99s transactions network possible fees incurred algorithms described detail section 2 addition new features mentioned coti introduces arbitration service dispute resolution consisting decentralised collective highly trusted network participants vote dispute rulings allows network offer decentralised human input services participants base layer protocol dag based distributed ledger technologies signs particularly adept overcoming scalability limitations inherent blockchain based payment networks blockchain based networks greater scale undesirable effects network usability dag based networks reverse generally true greater network usage results improved network scalability words positive correlation number network users rate transactions confirmed result positive correlation network usage network scalability dag data structure ideally suited coti network xe2 x80 x99s base layer protocol enable achieve decentralisation compromising coti xe2 x80 x99s commitment scalability instantaneity low zero fees building foundations established mentioned initiatives coti introducing innovative dag based distributed ledger technology base layer protocol involves use trust scores key mechanism new unconfirmed transactions select prior transactions validate furthermore coti xe2 x80 x99s dag based distributed ledger technology cluster reaches faster consensus confirming transactions coti xe2 x80 x99s trustchain algorithm eventually cluster able validate confirm maximum hundreds thousands transactions second tps 4 1 number bitcoin transactions day grown 100 2009 400 000 late 2017 2 bitcoin delivers maximum 7 transactions second 6 3 e g iota 4 arguments found section 10 2 2 x0cproof trust pot coti xe2 x80 x99s unique combination trustchain algorithm proof work coti coin coti introduces high performance cryptocurrency built atop base layer protocol cryptocurrency common means payment including fees staking inside coti ecosystem multidag coti bounded instance dag infrastructure nodes permits creation multiple dags purposes originators voucher tokens stable coins dedicated tokens global companies scalability tokens speed settlements blockchains details multidag section smart contracts coti introduces chain smart contracts dag kind details multidag section arbitration service coti offers ready use service users appeal cases fraud dispute related deals settled coti payment system arbitration service creates rolling reserve merchant cover possible claims system wide reserve credit fund rcf guarantee funds maintained coti xe2 x80 x99s native currency required size merchant xe2 x80 x99s rolling reserve calculated based merchant xe2 x80 x99s trust score refer details appendix b xe2 x80 x9ccoti xe2 x80 x99s arbitration system xe2 x80 x9d fees coti network uses transparent equitable fee model fees collected nodes decentralised servers run ordinary users coti network coti network receives portion fees collected nodes support infrastructural technology double spend prevention nodes sections 6 2 11 1 trust score servers section 3 3 network created portion generated cotis set aside reserve fund pay transactions network matures network fee set zero network xe2 x80 x99s infancy following period fees minor decentralised nature network node charges fee determined node nodes set higher fee believe provide good service nodes charge possibly price charged node services equitable publicly available compliant common network rules network rules define ceiling fees minimum fee fees coti ecosystem paid coti coin possible merchant run node customised wallet believe provide better experience customers 3 x0cglossary 2 term meaning node specialised server run user common network tasks transaction validation process checking transaction attachment cluster source transaction terminal transaction cluster having inbound transactions mandatory validation prior transactions fulfilled transactions confirmed transaction transaction consensus algorithm reached defined level total trust trust score user metric effective transaction processing risk mitigation proof trust pot coti xe2 x80 x99s unique combination trustchain algorithm proof work attack malicious attempt compromise system xe2 x80 x99s integrity double spending attack attacker tries process transactions account balance results negative balance attacker acquiring cost trust chain algorithm coti developed new approach achieving consensus transacting parties operating dag based data structure cluster based completely decentralised dag stored central authority ledger record transactions performed network cluster achieves scalability use parallel source selection confirmation transactions use coti xe2 x80 x99s trust scores 2 1 trust score transactions cluster transaction cluster receives trust score equal sending account xe2 x80 x99s trust score information trust score algorithm found trust score section transaction xe2 x80 x99s initial trust score define xe2 x80 xa2 unvalidated transactions sources validated referenced transaction source selection subsection xe2 x80 xa2 proof work pow performed prior transaction attachment result transactions highly trusted senders confirmed faster refer performance investigation section details attaching transaction node required validate prior transactions order new transaction added ledger ledger organised dag directed acyclic graph vertices transactions directed edges drawn transaction validates schematic cluster shown figure 1 white circle represents transaction validated subsequent transactions darker circle represents new unvalidated transaction e xe2 x80 x98source xe2 x80 x98 graph theoretic terminology new transactions added validate darker transaction 4 x0cfigure 1 cluster schematic source transaction dark circle validates previous transactions cluster 2 2 source selection process outlined requires new transaction pick prior source transactions validate coti algorithm making selection based transaction xe2 x80 x99s trust score according source selection algorithm source likely choose prior transactions close current trust score results formation trustchains cluster trustchain reverse oriented path cluster cumulative trust score chain sum trust scores transactions making chain trustchain algorithm makes use cumulative trust score achieve consensus transaction confirmed transaction considered confirmed starting point trustchain cumulative trust score exceeding pre set global confirmation threshold practice consider longest highest trust trustchain starting transaction compare cumulative trust score threshold order determine transaction confirmed source selection algorithm tends connect transactions similar trust scores trust chains generated highly trusted users contain transactions high trust scores cumulative trust score trustchain grow quickly past threshold achieve consensus meaning highly trusted users enjoy fast confirmation times high transaction throughput important consequence source selection algorithm soft segmentation cluster based trust scores words dag sections different trust scores processed parallel distant dag sections essentially independent foregoing complications transaction cluster progress following life stages stage initiated new transaction second attaches cluster validating transactions trust scores similar validated transactions finally confirmed permanently added cluster cumulative trust score heaviest path confirming surpasses set threshold process illustrated figure 2 5 x0cfigure 2 lifecycle transaction bold circle 1 initiation 2 attachment 3 validation 4 confirmation confirmation path blue shaded transactions confirmed purposes illustration n 2 coti xe2 x80 x99s trustchain algorithm designed way trusted users e high trust score experience faster confirmation times trustworthy expectable people cautious dealing people trust like certain transactions confirmed accepting property illustrated figure 3 discussed simulations section 10 figure 3 different trust chain lengths needed confirm moderately trusted transactions left highly trusted transactions right shaded transactions reached cumulative trust threshold confirmation path blue shaded transactions confirmed purposes illustration n 2 2 3 source selection algorithm primary objective build cluster based transaction sender xe2 x80 x99s trust score cluster transaction attached transactions trust scores sufficiently close dag trust score transaction sender assigned transaction weight function xcf x89 let d upper bound trust scores according trust score algorithm equal 100 good method constructing dag based algorithm chooses transactions degree randomness consider example algorithm chooses transactions b c based having trust scores closest trust score source use non random algorithm described increases probability sources present wait long time attached transaction coti xe2 x80 x99s source selection algorithm works following way new transaction issued account s set sources algorithm chooses optimal neighbourhood xcf x89 sources partitioned map function m 1 2 d xe2 x86 x92 t t xe2 x8a x86 s m t t xe2 x8a x86 s xcf x89 t d upper bound trust score initial subset t0 m xcf x89 iterations algorithm generate new subsets ti ti xe2 x88 x921 xe2 x88 xa9 m xcf x89 xe2 x88 x92 xe2 x88 xa9 m xcf x89 ti sufficiently populated d 8 loss generality said sufficiently populated connotes constant percentage sources source set 10% source population chosen sufficiently populated iteration xcf x89 xe2 x88 x92 0 xcf x89 d 6 x0cthen m xcf x89 xe2 x88 x92 m xcf x89 respectively taken set restriction applied subset tj sources neighbourhood xcf x89 transaction attached transaction transaction sender probability function p weighting sources s tj according timestamp difference s new transaction defined algorithm select sources tj degree randomness older sources chosen higher probability newer sources zero probability selecting sources transaction sender java code algorithm 1 shows algorithm 1 java code showing sources selected public sourcelist selectsources int trustscore int minsourcepercentage int totalsourcenum int maxneighbourhoodradius start taking sources trust score clone sourcelist sourcelist new sourcelist sourcesbytrustscore trustscore calculate neighbourhood radius minimal radius 1 look neighbours int nr 1 nr maxneighbourhoodradius nr trustscore nr 1 sourcelist add sourcesbytrustscore trustscore nr trustscore nr max score sourcelist add sourcesbytrustscore trustscore nr double sourcelist size totalsourcenum double minsourcepercentage 100 break randomly choose source weighted timestamp difference return chooseweightedbytimestamp sourcelist note algorithm respond changes flow new transactions takes account number sources transaction xe2 x80 x99s neighbourhood cluster xe2 x80 x99s early stages cases transaction attached transaction tj e g source trust scores accumulated far xcf x89 sources selected neighbourhood transaction sender cases zero spend server create zero value transaction trust score transaction attached transaction scenario source s waiting long time attached new transaction zero spend server create transaction attach s trust score s waiting time zero spend server performs tasks determined according trust score high trust score sources matched faster zero spend servers mentioned section 6 3 activity zero spend servers help identify problems network trust score algorithm 2 4 attachment process following steps performed new transaction received wallet xe2 x80 xa2 address validation xe2 x80 xa2 balance check xe2 x80 xa2 pre balance check xe2 x80 xa2 source selection xe2 x80 xa2 source validation xe2 x80 xa2 proof work pow xe2 x80 xa2 dag attachment 7 x0c xe2 x80 xa2 propagation nodes transaction validated addresses base transaction entire transaction checked balance checked verify address sufficient funds pre balance checked prevent double spending wallet process source selection validation pow attachment local dag performed transaction locally validated tested attached node propagated nodes receives trustchain consensus dsp consensus double spend prevention dsp consensus details receiving transaction nodes perform pow processing consistency verifications transaction transaction checked nodes attach new transactions according source selection algorithm transaction declined transaction fails checks transactions approved transactions initiated user seed created node 2 5 trustchain consensus let g v e dag transactions assume transaction v xe2 x88 x88 v weighted weight function xcf x89 v xe2 x86 x92 n defined xcf x89 v trust score transaction sender let transaction d upper bound trust score transaction confirmed max xce xa3v xcf x89 v xe2 x88 x80 path ended xe2 x88 x80v xe2 x88 x88 ld l xe2 x89 xa5 2 2 1 equation 2 1 implies highly trusted transactions confirmed faster trusted transactions source selection algorithm note highly trusted transaction confirmed quickly largely length heaviest directed path small notice trusted transactions need longer path confirmed algorithm heaviest directed path ends transaction linear time algorithm o v f e f f xe2 x8a x82 g directed acyclic subgraph defined union directed paths ending transaction step sort f topologically f dag finding topological sort xcf x84 linear time chapter 22 4 5 let xcf x84 v1 v2 vn topological sort f notice transaction vertex topological sort definition f figure 4 dag subgraph f topological sorting v3 xcf x89 v3 v1 xcf x89 v2 xcf x89 v1 xcf x89 v2 v5 xcf x89 v5 8 v4 xcf x89 v4 x0cfigure 5 dag subgraph f topological sorting xcf x89 xcf x89 v5 xcf x89 v4 xcf x89 v3 xcf x89 v2 xcf x89 v1 following dynamic programming algorithm gives o v f e f time solution heaviest path transaction algorithm 2 heaviest path algorithm 1 2 3 4 5 6 define function heaviest v 0 xe2 x88 x80v xe2 x88 x88 v f find topological sort xcf x84 f xe2 x88 x80v xe2 x88 x88 v f topological sort xcf x84 assign heaviest v max heaviest w xcf x89 v xe2 x88 x80w w v xe2 x88 x88 e f end return heaviest 2 6 balance check order consistency payment system double spend prevention coti xe2 x80 x99s nodes dsp nodes carry balance checks nodes dsp nodes running address balances calculated node restarted balances recalculated clusterstamp state types balances controlled nodes dsp nodes current balance consists trust chain consensus dsp confirmed transactions positive address balances pre balance consists verified transactions coti nodes dsp nodes check balances independently providing dsp consensus details refer double spend prevention dsp consensus section different clusters multidag balance check approaches implemented 3 multidag 3 1 additional dimension protocol dag model provides coti framework exceptional performance efficient transaction processing multitudes token types uses worthwhile implement atop dag coti uses independent clusters support token makes network efficient adjustable transaction cluster attached transactions cluster different clusters implement transaction confirmation rules coti multidag ecosystem similar ethereum common decentralized infrastructure basis different tokens smart contracts main coin fee payments terms defined coti created clusters different uses 9 x0cfigure 6 multiple clusters dags infrastructure picture trustchain structure clusters omitted simplicity coti multidag different clusters separable transaction layer clusterid simplicity paper use integer numbers clusterids cluster clusterid 0 represents coti coin difference clusterid 0 important genesis transaction clusterid 0 created network launched added genesis transactions clusters created cluster owner smart contracts according particular cluster rules transactions clusterid 0 confirmed taking account balances relevant users transaction confirmations clusters implement rules fee collection coti responsibility nodes reason nodes create fee paying transactions main coin dag transaction attachment clusters coti multidag use identification kyc procedures creates common frictionless crypto universe includes tokens types 3 2 smart contracts section briefly introduces coti xe2 x80 x99s smart contracts refer coti public github repository details coti xe2 x80 x99s smart contract inspired ethereum industry standard de facto invaluable theoretical basis5 similar ethereum smart contracts coti smart contracts provide turing complete computational models unlike high performance projects smart contracts executed chain specialized servers nodes quasi decentralized manner coti smart contracts executed chain decentralized steps smart contract execution recorded dedicated cluster coti multidag verified times nodes receiving confirmation trust chain algorithm section details attachment confirmation process coti smart contracts created signed coti user wallet application smart contracts coded specialized high level program language e g solidity translated 5 https github com ethereum wiki wiki design rationale 10 x0clow level vm executable language byte code smart contracts stored transaction smart contract cluster address specifying execution context figure 7 coti smart contract creation simplicity fees omitted enterable created smart contracts started execution trigger transaction defines particular instance launched smart contract trigger transactions provide link hash transaction depositing coti coins order smart contract fee paid figure 8 start coti smart contract execution coti smart contract virtual machine standard coti node code implemented advanced testnet executing smart contract bytecode vm changes smart contract context variables internal node records result new transaction smart contract cluster 11 x0cfigure 9 coti smart contract execution cycle smart contract bytecode executed parallel nodes new transaction attached smart contract cluster nodes verify previous transactions applies cluster transactions smart contract execution transaction considered confirmed heaviest path transaction cluster xe2 x80 x99s fringe reaches confirmation threshold trust chain algorithm section details transaction bytecode instruction attached node checks results adds signature node smart contract transaction verifications affect node xe2 x80 x99s trust score figure 10 smart contract trust chains decentralized consensus smart contract execution possible completely deterministic entails smart contracts chain data real world data supplied calculation process oracles providing data corresponding timestamp 12 x0cfigure 11 requesting data oracle coti xe2 x80 x99s blockless structure dag network doesn xe2 x80 x99t require gas conception fees coti smart contract execution fixed minimal economical execution fee bytecode instructions belongs node attached transaction includes execution fee transaction network fees transferred network pool 3 3 stablecoins coti xe2 x80 x99s multidag coti smart contracts possibility multiple genesis transactions allows creation high performance stable coins stable coins essentially erc 20 tokens hardly usable everyday payments coti situation different high throughput quick confirmations low fees enable creation highly usable stable coins coti stable coin xe2 x80 x99s transactions constitute cluster confirmation rules stable coin clusters organized according transaction sender xe2 x80 x99s trust score figure 12 stable coin cluster stable coin cryptocurrency constant rate real world asset means supply stable coin fixed stable coin tokens minted burned according market movements picture genesis token minting transactions green token burning transactions 13 x0care black minting burning transactions created smart contracts stable coin originator xe2 x80 x99s wallet according particular stable coin xe2 x80 x99s rules coti multidag allows origination stable coins known types fiat collateralized gold asset collateralized crypto collateralized non collateralized stable coins originated coti commonly parties 3 4 dedicated coins coti multidag type specialised coin designed dedicated coins dedicated coins originated enterprises need currencies dedicated coins useful loyalty programs discounts coupons coti dedicated coin mechanics similar coti stable coin based different rules set originator dedicated coin implemented confirmation rules smart contracts figure 13 coti ecosystem coins different types 4 anatomy payment simplicity section coti multidag structure account 4 1 accounts coti account set user xe2 x80 x99s cryptography addresses combined managed user xe2 x80 x99s convenience addresses cryptographically generated user xe2 x80 x99s seed public keys coti users choose use addresses xe2 x80 x93 time permanent addresses addresses organised accounts different rules addresses negative balance checked nodes signed dsp nodes 14 x0c4 2 transaction structure transaction coti network includes descriptive fields cryptography protocol related fields bundle elementary base transactions figure 14 structure transaction 4 3 fees fees coti network collected nodes fee base transactions created base transactions bundle signed user transaction creating node transaction network fee base transactions included main transaction bundle base transactions spend coti node addresses signed node signature transaction network fee level network wide constant given time correctness network fee included transaction bundle verified nodes transaction confirmation 4 4 multisig accounts coti provides users multisig accounts allowing escrow cryptography lock possibilities multiple signatures checked nodes confirming transactions 4 5 rolling reserve rolling reserve share seller xe2 x80 x99s funds frozen purpose buyer protection key element buyer protection system rolling reserve crucial online trade 15 x0ccoti rolling reserve implemented protocol level maximum efficiency rolling reserve account belongs coti arbitration system pseudo user linked seller conditional owner funds rolling reserve account funds spent ways 1 transferred seller xe2 x80 x99s account end freezing term 2 payment plaintiff seller loses case rolling reserve share freezing term dependent seller xe2 x80 x99s trust score moment payment transaction created coti considering possible options rolling reserve handling having payment split creation transaction bundle wallet seen figure 15 second having payment transferred rr account split rr account seen figure 16 figure 15 handling rolling reserve splitting payment creation transaction bundle figure 16 handling rolling reserve having payment transferred rr splitting 16 x0c5 trust score trust scores key feature coti network effective transaction processing risk mitigation network structuring trust scores calculated dedicated decentralised trust score nodes 5 1 trust scores common actors coti network possess trust score metrics including nodes node xe2 x80 x99s trust score node owner xe2 x80 x99s trust score accounts payment network trust score changes according user xe2 x80 x99s payment statistics alignment event types account trust score real number range 0 100 transactions payment network trust score trust score transaction sender xe2 x80 x99s trust score transaction initiated cumulative trust score transaction sum trust scores transactions heaviest path approving transaction including transaction trust score algorithm designed ensure maximal performance trust score based source selection algorithm example let recommended level trust cumulative trust score transaction 1000 means transactions created highly trusted network participants ts xe2 x88 xbc 85 need 12 confirming transactions chain transactions low trusted network participants ts xe2 x88 xbc 12 need 84 confirming transactions chain trust score nodes collect transaction statistics continuously update participants xe2 x80 x99 trust scores described trust score update algorithm subsection trust scores changed according occurrence external events bankruptcy company owns account trust score nodes receive information events confirmed arbitrators 5 2 uses implications trust score 1 arranging transactions trustchain algorithm providing optimal parallel transaction processing ensuring improved performance highly trusted users additional checks trusted users 2 defining rolling reserve requirements merchants 3 determining fee levels 4 setting pow levels indirectly affect fee levels 5 setting arbitrator threshold defining network participants chosen arbitrators included arbitrators pool 6 defining network topology transaction propagation paths node trust scores 7 optimising node workload node trust scores 17 x0c5 3 trust score types types coti network participants use different trust score counting algorithms participant person business entity nonhuman e g iot device role user merchant financial institution node xe2 x80 x99s trust score described subsection 5 8 xe2 x80 x9ctrust score nodes xe2 x80 x9d participant registered merchant financial institution enables participant receive payments exchange goods services uncooperative participants attempting sell goods services registering merchant financial institution penalized low trust score trust score range malicious network participants result participants assigned high rolling reserve requirements amounting 100% order uphold buyer protection standards figure 17 different types participants roles coti network 5 4 trust score ranges trust scores real numbers range 0 100 zero trust score means participant banned coti network wrongdoing including false identification submission forged documents initial trust score algorithm itsa assigns ts values range 10 30 0 10 range reserved malicious network participants initial ts values legal entities merchants lies broader range 10 40 participants supply data related activities simple customer arbitrator trust score threshold preliminarily defined 25 value adjusted according actual network statistics figure 18 ranges initial trust score different user types 18 x0c5 5 decentralised design trust score nodes trust score nodes decentralised servers provide coti network storage computational power needed calculate trust scores supply network participants trust score nodes work algorithm nodes control cross checking trust score calculations 5 6 initial trust score algorithm initial trust score network participant calculated initial transaction score algorithm itsa based machine learning ml rules based approaches coti kyc server dataset itsa uses calculate initial trust score includes sensitive user details kyc aml procedures questionnaire required fill users wants supply additional details increase trust score possible fill questionnaire 5 6 1 data initial trust score algorithm user possible join payment network completing kyc verification defines minimal data itsa possesses minimal trust score participant joining network identification document type citizenship date birth proof residence phone number country residence zip code kyc data types available itsa runs coti kyc server following data requested users filling trust score questionnaire family status education level employment occupation income data insurance driver xe2 x80 x99s license bank reference social network account web site etc user fill data fill usually data user supplied large trust score person purports higher trust score arbitrator threshold itsa randomly generate request submit supporting documents documents checked randomly chosen arbitrator sent trust score nodes user fails confirm trust score questionnaire data documents found forged constitute misdemeanour event downgrade user xe2 x80 x99s trust score proof source funds required according kyc aml procedures event user plans transfer large sums money 5 6 2 data initial trust score algorithm legal entities legal entities required complete kyc procedures prior opening account data supplied legal entity includes incorporation data owner data beneficiary owners directors responsible officer identifications shares issued securities balance sheets auditor reports business profile data lot elaborated methods evaluate rate company methods different country country coti plans implement trust scores companies main net beta launched 5 6 3 data initial trust score algorithm merchants order participate merchant participant provide following information addition kyc documents questionnaire business activities including nature business historical performance data licenses applicable bank references planned sales volume merchant company required data set legal entity 19 x0c5 6 4 data initial trust score algorithm robots iot devices coti trustchain platform allows creating efficient light weight solutions usable iot devices robots participants coti network needs trustscore initial trust score devices robots borrowed device owner calculated basing device safety robustness hacker attacks coti considering use highiot high iot com device security data calculate iot devices trust score 5 6 5 itsa dataflow figure 19 itsa dataflow submitting kyc data minimal trust score range based kyc data 10 15 beginning use network participants improve trust score filling trust score questionnaire supplying additional data figure 20 itsa dataflow submitting questionnaire supplying additional data machine learning portion algorithm begins ideal types approach m weber objectivity sociological social political knowledge order labeled dataset defined 18 ideal user types including 4 boundary points desired trust score values figure 21 ts ideal types 20 x0cwe took real people feature vectors defined desired trust score values according similar ideal types having dataset use simple machine learning methods like linear regression define optimal set weights itsa itsa doesn xe2 x80 x99t use machine learning approach example reliable statistics cyber crimes country reasonable apply statistics ml algorithm include features individual xe2 x80 x99s age parameter risk aversion statistics itsa code coti public github repository details 5 7 calculation trust scores trust score nodes figure 22 ts generally tends increase initial value users 5 7 1 trust score update algorithm trust score update algorithm tsua designed efficiently collect data user xe2 x80 x99s behaviour order submit information decentralised trust score nodes coti network trust score nodes receive copies processed transactions store database shortened form exclude possibility double counting enable trust score recalculations trust score nodes maintain transaction turnover balance counters tsua recalculates manage trust score lists affecting events like arbitration outcomes decays types decay exponential decay limitation terms exponential decays applied numeric values limitation terms applied events transactions events involving participant trust score converge asymptotically 10 21 x0cfigure 23 process updating ts 5 7 2 data current trust score calculation current trust score value calculated trust score node datasets table table 1 table 1 datasets calculation trust score update explanations dataset explanation initial trust score date initial ts assigned itsa corresponding date calculate decay zero trust flag indicator zero trusted participants initial trust counters score change data compiled frequency completing questionnaires forging data results trust score downgrades monthly turnover11 date monthly turnover0 date list monthly turnovers previous 12 months including current turnover dates decay calculation monthly average balance11 date monthly average balance0 date list monthly average balances previous 12 months including current monthly average dates decay calculation monthly counter11 date monthly counter1 date monthly counter0 date list monthly transaction frequencies previous 12 months including current frequency dates decay calculation misbehavior case1 date misbehavior casen date list known wrongdoing events dates decay calculation dispute outcome1 fulfilment date dispute outcomen fulfilment date list disputes information fulfilment dates 22 x0c5 7 3 current trust score calculation event contributions limited tn terms subject exponential decay 5 1 t1 t1 tn periods time ei refers th event dei fei refer date contribution corresponding event xef xa3 xb1 xef xa3 xb4 fei 1 xef xa3 xb4 xef xa3 xb4 xef xa3 xb4 xef xa3 xb2f ei 2 vei xef xa3 xb4 xef xa3 xb4 xef xa3 xb4 xef xa3 xb4 xef xa3 xb30 dtoday xe2 x88 x92 dei t1 t1 xe2 x89 xa4 dtoday xe2 x88 x92 dei t2 5 1 tn xe2 x89 xa4 dtoday xe2 x88 x92 dei contributions additional numerical data vk fk vk xe2 x80 x93 come initial trust score example xe2 x80 x93 calculated applying exponential decays current trust score calculated follows t s 10 vit s xe2 x88 x92 10 xc2 xb7 e xe2 x88 x92dit s dtoday xe2 x88 x92dit s ne x vei xc2 xb7 e xe2 x88 x92dei dtoday xe2 x88 x92dei 1 nv x vek xc2 xb7 e xe2 x88 x92dk dtoday xe2 x88 x92dk 5 2 k 1 5 2 dei dk exponential decay factors dei dk dates events numerical values vit s initial trust score value zero trust flag true ts 0 calculations calculated ts value zero negative participant xe2 x80 x99s ts set minimum positive ts value 0 1 banned network basis calculation calculated ts value greater maximum ts value participant xe2 x80 x99s ts set maximum ts value 100 calculated ts value signed ts node tsua code coti public github repository details 5 8 trust scores nodes coti network trust scores universal concept applicable users nodes node creation initial trust score value set according owner xe2 x80 x99s trust score scaling coefficient 6 initialisation trust scores independent node trust scores computed similar way users different parameters primary set parameters consists transaction generation frequency transaction propagation flow transaction confirmation frequency load parameters work node coti network greater trust score coti needs account value flow related characteristics including node centrality measures order calculate trust scores node trust scores affected negative events like issuing invalid transactions double spending attempts incorrect transaction attachment algorithm uses evading participate smart contracts execution etc current node trust score calculations carried similarly users section 5 7 3 utilising contribution functions weights decays node trust scores updated copies processed transactions received trust score nodes simultaneously participant xe2 x80 x99s trust scores 6 assumption owner node coti user case standard value 23 x0cnode trust scores define coti network topology help users select suitable node low trusted dsp ts history nodes banned network operations receive fees 6 network components 6 1 wallets clients system use coti wallet manage accounts transfer funds different addresses check current balance wallet contains seed generate private public keys addresses seed generated privately user xe2 x80 x99s secret key user xe2 x80 x99s server key generated kyc server lost seed recovered user xe2 x80 x99s secret key server key order receive coti network data initiate transactions wallet connects node chosen user user preferred nodes node selected randomly coti xe2 x80 x99s wallets customisable ensure user xe2 x80 x99s wallet satisfaction types participants roles user register figure 17 detailed operations wallets vary user user 6 2 nodes coti provides decentralised solution designed enable secure trustworthy payments solution relies distribution cluster responsibility types nodes run users node types coti network node dsp node trust score node history node nodes main client facing servers system wallet connected node transaction received node propagated entire system dsp nodes nodes backbone system nodes responsible trustchain consensus receive new transactions wallets validate pow attach dag nodes execute coti smart contracts decentralized manner coti network nodes define price list users compete users consequently coti nodes responsible collecting fees protocol usage transferring network fee network pool refer coti node model business plan details according projections coti nodes expected profitable7 double spending prevention nodes dsp nodes set highly trusted distributed servers responsible dsp consensus account balance control general protocol data integrity transaction approved signed majority dsp nodes users directly connect dsp nodes run dsp node user required deposit substantial coti deposited dsp node operator group network participants delegating deposits node operator refer double spend prevention dsp consensus section details trust score nodes dedicated servers calculating storing participant trust scores participant kyc statuses run trust score node user required deposit sum coti refer trust score section details history nodes earlier parts cluster clusterstamp process complete account history retrieved history nodes dsp nodes trust score nodes history nodes paid network pool according estimations coti nodes expected profitable8 7 8 refer coti node model business plan details refer coti nodes model business plans book details 24 x0c6 3 servers coti maintain servers help network run smoothly types servers described kyc server coti network xe2 x80 x99s onboarding area new users connect kyc aml verification purposes kyc servers responsible calculating user xe2 x80 x99s initial trust score creating server keys user seed generation server keys created stored kyc server seed recovery process user required connect coti kyc server kyc verification purposes following kyc onboarding users need connect like update trust score questionnaire refer trust score section details users xe2 x80 x99 initial trust score zero spend servers responsible sending zero value transactions source cluster waited long time validated transaction transaction attach source source selection algorithm activity servers help monitor source selection algorithm servers experience activity indicate problems network trust score algorithm 7 proof work coti pow important bitcoin protect network spamming attempts nodes perform pow attaching new transactions coti based pos highly scalable pow cryptocurrency proof work pow schemes designed difficult solve relatively easy verify unfortunately pow systems achieve fast verification simply verifying round parallel search algorithms parallel algorithms quickly adapted graphics cards fpgas asic designs attacker advantage orders magnitude common computer case cryptocurrencies primary goal pow trust decentralisation participant incentivisation critical pow optimised accelerated fpga asic designs meaningful economic return investment approach adopted cryptocurrencies use known sequential memory hard function scrypt algorithms attempt pow dependent sequential random access large array data memory constrained limit parallelisation challenge sequential memory hard functions tuned use large amounts memory lose property easy verify example simply populating 1 gigabyte memory cryptographically secure pseudo random data second perform result requirement validate memory hard pow create opportunity perform denial service attack need family memory hard pow algorithms validated milliseconds requiring lot memory efficiently find solution 7 1 memory hard pow main reason memory hardness important pow function resistant specialised hardware bitcoin mining algorithm requires simple sha256 computation led creation companies specialise manufacture application specific integrated circuits asics sole purpose computing billions sha256 hashes bitcoin blocks chips legitimate applications outside bitcoin mining password cracking presence chips thousands times efficient dollar kilowatt hour computing hashes generic cpus makes impossible ordinary users generic cpu gpu hardware compete 25 x0cthis dominance specialised hardware detrimental effects xe2 x80 xa2 negates democratic distribution aspect cryptocurrency generic hardware dominated ecosystem fact computer guarantees equal opportunity earn initial money supply specialised hardware factor exist actor xe2 x80 x99s mining potential linear fact slightly superlinear quantity pre existing capital potentially exacerbating existing wealth inequalities xe2 x80 xa2 increases resource waste efficient market marginal revenue approaches marginal cost mining revenue characterised wide range money spent mining hardware electricity implies total revenue approaches total cost specialised hardware dominated ecosystem share resource waste close 100% network consumption computer cpu gpu dominated ecosystem people need buy specialised hardware hashes second worth mining power revenue sublinear cost gets certain revenue free implies quantity resources wasted network potentially lower security parameter xe2 x80 xa2 centralises network actors ie asic manufacturers makes 51% attacks likely potentially opens network regulatory pressure specialised hardware manufacturers certainly pack terabytes memory devices effect mitigated factors hobbyists achieve effect simply buying shelf memory cards second memory expensive produce measured laptop equivalents sha256 hashing chips ram ordinary computers optimised achieve goal trivial verify memory intensive solve pow asymmetrical terms memory required validate work consequence individual steps pow parallel foundation validation step despite parallel steps run millisecond algorithms memory hard requiring solution depends relationship parallel steps benefiting storage parallel step xe2 x80 x99s result results quickly verified performing parallel steps checking relationship outcomes 7 2 pow coti better coti uses pow spam protection network participant incentivisation node operators similar pow hashcash short computational operation confused expensive pow employed miner based ledgers like bitcoin pow coti protocol isn xe2 x80 x99t better worse pow bitcoin mining pow serves different purposes bitcoin ethereum protocol pow way define truth means resolve block faster block truth immediately validated peers coti pow way prevent spamming balance incentives network participants finding suitable nonce e pow allows attach transaction dag doesn xe2 x80 x99t decide truth key difference mind xe2 x80 x99s obvious bitcoin ethereum pow difficulty far greater pow coti carries far greater power pow bitcoin ethereum central point consensus coti pow protection mechanism impact consensus transactions higher difficulty handled nodes 7 3 coti alphanet pow history hashing cryptocurrencies began sha256 bitcoin scrypt litecoin ethash ethereum x11 dash followed x13 x15 x17 reason algorithm changes minimise impact purpose built hardware mining ecosystem coin bitcoin originally intended mined computers value bitcoin increased 26 x0cbecame advantageous hardware designed parallel processing mining moved graphics processing units gpus economic value mining increased economically viable use programmable hardware form field programmable gate arrays fpgas advantage cpus gpus step build custom chips purpose built mining application specific integrated circuits asics able dominate competing technologies impractical way likely final iteration bitcoin mining faster energy efficient asic hardware unfortunate effect transition asic hardware mining centralisation order asics advantage near manufacturing facility shipping time reduced additionally access cheap electricity priority electricity variable cost mining operation led centralisation mining china proximity asic development availability inexpensive electricity provinces solution minimise impact asic miners use memory intensive hashing algorithm approach scrypt litecoin equihash zcash algorithms reduced impact asics asic miners scrypt relative advantage gpus negligible currently asic miners equihash approach use sequence hashing algorithms output input dash darkcoin took approach x11 algorithm x11 uses chained hashing algorithms effort thwart 1 asic mining approach worked manufacturers produce asic miners x11 concept x11 extended additional algorithms reason coins use x13 x15 x17 chains seventeen hashing algorithms fixed order hashing algorithms lends construction asics chaining algorithms adds difficulty constructing asic x13 x15 x17 use ordering hashing algorithms x11 likely lead faster manufacturing asics algorithms manufacturers need extend existing design accommodate additional hashing algorithms figure 24 proof work interaction coti pow algorithm intends solve problem constantly disrupting ordering hashing algorithms hashing algorithms proven algorithms x15 sha512 ordering changed based hash previous block reordering asic impossible build require asic adapt additional input easily accomplished cpu gpu reordering prevents simple extension current x11 asics future x15 asics coti pow hashing algorithm consists multiple hashing algorithms operating chain fashion ordering dependent 16 bytes hash previous block 27 x0ctable 2 basic algorithms coti xe2 x80 x99s pow algorithm 1 blake echo 2 bmw b hamsi 3 groestl c fugue 4 jh d shabal 5 keccak e whirlpool 6 skein f sha512 7 luffa 8 cubehash 9 shavite example block hash 0000000000000000007e8a29f052ac2870045ae3970270f97da00919b8e86287 final 16 bytes 0x000000007da11919b8e86287 hex digit nibble determines algorithm use cubehash xe2 x86 x92 shabal xe2 x86 x92 echo xe2 x86 x92 blake xe2 x86 x92 blake xe2 x86 x92 simd xe2 x86 x92 bmw xe2 x86 x92 simd xe2 x86 x92 hamsi xe2 x86 x92 shavite xe2 x86 x92 whirlpool xe2 x86 x92 shavite xe2 x86 x92 luffa xe2 x86 x92 groestl xe2 x86 x92 shavite xe2 x86 x92 cubehash figure 25 relative time hash algorithm hash algorithms longer time differential tends average algorithms adjust time receiving semi constant average execution concepts coti pow extended include scrypt equihash asic resistant algorithms ordering algorithms easily changed infrastructure order dissuade hardware manufacturers building asics entire class coins x11 coti pow time algorithm account assign concatenation hash algorithm process based trust score ts difficulty level dl normalisation range possible ranges based ts example following table 3 pow algorithms different ranges trust score average time pow trust score algorithm 0 10 hamsi xe2 x86 x92 fugue xe2 x86 x92 groestl xe2 x86 x92 simd xe2 x86 x92 echo xe2 x86 x92 luffa xe2 x86 x92 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 28 30 sec x0ctable 3 xe2 x80 x93 continued previous page 7 4 average time pow trust score algorithm 10 20 fugue xe2 x86 x92 groestl xe2 x86 x92 simd xe2 x86 x92 echo xe2 x86 x92 luffa xe2 x86 x92 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92sha512 24 sec 20 30 groestl xe2 x86 x92 simd xe2 x86 x92 echo xe2 x86 x92 luffa xe2 x86 x92 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 16 sec 30 40 simd xe2 x86 x92 echo xe2 x86 x92 luffa xe2 x86 x92 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 12 sec 40 50 luffa xe2 x86 x92 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 8 sec 50 60 cubehash xe2 x86 x92 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 5sec 60 70 whirlpool xe2 x86 x92 jh xe2 x86 x92 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 4 sec 70 80 shavite xe2 x86 x92 blake xe2 x86 x92 skein xe2 x86 x92 sha512 3 sec 80 90 blake xe2 x86 x92 skein xe2 x86 x92 sha512 2 sec 90 100 skein xe2 x86 x92 blake 1 sec pow algorithm nutshell 1 based ts dl values normalised range 0 100 2 algorithm group set select generate hash algorithms sequentially concatenated 3 algorithm group set selected time threshold reached 4 execution hash sequentially meaning hash dependent result previous hash way possibility execution parallelism blocked minimising execution time 5 idea start algorithm use algorithm needs find nonce solve current normalised difficulty mathematical combination ts dl nonce valid hash input algorithm way set nonces generated input addition previous algorithm xe2 x80 x99s hash order verify complete pow cycle algorithm 3 pseudocode solving coti xe2 x80 x99s combined hash pow algorithm 1 given 2 d normalised difficulty given txn ts dl 3 deterministic order hash previous block 4 ha deterministic order ha hashing algorithm 5 previous algorithm 6 previous algorithm hash 0 7 find n ha n previous algorithm hash d 8 save n 29 x0cfigure 26 proof work flow 6 phase previous generated hash use input public key algorithm 7 pow validation instant validation process able validate proof effort meaning algorithms executed performed properly nonce concatenation algorithm xe2 x80 x99s result algorithm 4 pseudocode validation stage coti xe2 x80 x99s pow 1 given 2 ln list nonces 3 d normalised difficulty given transaction 4 deterministic order given txn 5 ha deterministic order ha hashing algorithm 6 pop n ln n nonce 7 compute k ha n previous hash 8 confirm k d validation works block validating algorithm signature public key provided case cycles 1 n validation run private public keys figure 27 proof work validation flow 7 5 normalising ts dl scaling need account possible range original trust score difficulty numbers let xe2 x80 xa2 denote minimum range ts dl xe2 x80 xa2 denote maximum range ts dl xe2 x80 xa2 denote minimum desired target scaling 0 xe2 x80 xa2 denote maximum desired target scaling 100 m xe2 x88 x88 rmin rmax xe2 x80 xa2 denote measurement scaled m xe2 x86 x92 m xe2 x88 x92 rmin tmax xe2 x88 x92 tmin tmin rmax xe2 x88 x92 rmin scale m linearly tmin tmax desired step step 1 m xe2 x86 x92 m xe2 x88 x92 rmin maps m 0 rmax xe2 x88 x92 rmin 2 m xe2 x86 x92 m xe2 x88 x92rmin rmax xe2 x88 x92rmin maps m 0 100 30 x0c3 multiplying tmax xe2 x88 x92 tmin maps m 0 tmax xe2 x88 x92 tmin 4 finally adding tmin maps m tmin tmax 7 6 scaling difficulty cryptocurrencies pow memory hard flexible scale difficulty work finely tune block production rate reason final step coti pow adjust work based difficulty level defined network 8 double spend prevention dsp consensus 8 1 dsp consensus high performance distributed ledgers potential double spending attacks fundamental problem high performance achievable high degree parallelism price non coherent state network portions known solutions problem inefficient centralised coti double spend prevention solution consists adding handful highly trusted nodes network function reach consensus transaction legitimate double spend dsp consensus consists majority dsp nodes transaction half dsp node signatures consensus achieved 8 2 double spend prevention mechanism shown figure 28 order prevent double spending dsp nodes 1 light version cluster pre calculated balances accounts 2 receive copy new transaction attached cluster 3 check new transactions set heuristics detect possible double spending attempts 4 check new transactions available account balances 5 sign legitimate transactions 6 flag transactions suspected double spending 7 inform trust score servers double spending attempts transaction verification process performed dsp node supposed quick operation amounts involved checked opposed signatures transaction checks dsp nodes perform carried transaction attached cluster transactions require signature dsp node considered fully confirmed double spending attempts detected flagged refused malicious valid transactions receive signatures dsp nodes valid transaction receive number signatures defined consensus order continue confirmed dsp nodes load balanced ensure verifications prevent double spending fast 31 x0cfigure 28 verification procedure followed dsp nodes 8 3 creation dsp node nature verifications required prevent double spending user like run dsp node meet following requirements 1 user high trust score order serve dsp node operator 2 substantial coti deposited special multisig account 3 performance security dsp node checked remotely including quality load balancing figure 29 procedure dsp node creation based principle delegated proof stake 9 clusterstamp prevent growing cluster unmanageable storage size coti implemented clusterstamp consists phases 32 x0c1 fully confirmed transactions having trustchain consensus dsp consensus account found xe2 x80 x98last xe2 x80 x99 transaction means fully confirmed transactions confirming transactions genesis transactions generation cluster 2 confirmed transactions excluded working dag kept nodes non confirmed transactions kept working dag clusterstamp process performed automatically following creation verification clusterstamp stored coti history nodes history nodes receiving copies propagated transactions confirmation states reason don xe2 x80 x99t need copy transaction data clusterstamp clusterstamp applicable smart contracts cluster keeping dag operational data structure clusterstamp benefits coti network clusterstamp provides useful reference point opportunity performing system wide audit ensure inconsistencies possible fraud figure 30 clusterstamp process captures information time gray transactions generation cluster begins gray transactions 10 performance investigation order better understand performance characteristics coti xe2 x80 x99s algorithms provide mathematical framework making deductions cluster addition high level mathematical observations simplified context present series empirical investigations use simulation cluster 10 1 mathematical framework purposes analysis simplified assumptions cluster transactions taking place assume nodes fixed time xe2 x88 x86t run source selection algorithm perform proof work second assume new transactions arrive according poisson process fixed rate xce xbb assume transactions valid senders distinct assumptions reflective real world locally true stretches time sections cluster useful consider analysis parameters xce xbb xe2 x88 x86t feature discussions number internal parameters control cluster operate trust scores integer values 1 d maximum possible trust score assume d 100 follows new transaction arrives cluster assume trust score 1 xe2 x89 xa4 xe2 x89 xa4 d probability pt s pt s 1 pt s 2 pt s d 1 corresponds assumption transactions trust score arrive independent poisson processes 33 x0cthe process trust score rate xce xbbpt s additional internal parameter l appears trust chain algorithm parameter determines transaction confirmed highest trust path transaction source transaction cluster cumulative trust score ld finally source selection algorithm enables new transaction attach source sufficiently similar trust score controlled parameter xcf x81 set available sources size s sorted according differences trust scores new transaction xcf x81s available selection trust score source selection algorithm depends parameter r dictates maximum absolute trust score difference allowed transaction transactions approves sake analysis assume r d 100 set parameters xce xbb xe2 x88 x86t d l xcf x81 pt s xc2 xb7 fully determines simplified model cluster useful visualise transactions cluster 2 d space described time x axis trust score y axis dag structure formed constructing directed edge transaction prior transactions verifies visualised graph visualization provided figure 31 spatial representation transactions useful properties particular time reverse topological ordering graph construction x axis graph provides valid vertex visitation order transactions likely connected similar trust scores y axes especially small values xcf x81 figure 31 illustrates xcf x81 decreases connectivity transactions different heights graph figure 31 cluster space time trust score empirically find cluster disconnected xcf x81 xce xbb 10 2 performance analysis dag based transaction systems analysed assumptions uniform random attachment algorithm trust score e g 13 analyses found number source transactions dag approximately approach constant value 2 xce xbb xe2 x88 x86t system stabilised similar result obtained case number sources consider case s source transactions point time let s current sources selected new transaction arrives new transaction publishes selection network perform validation proof work takes xe2 x88 x86t time time s visible source transaction new transactions arrive network average xce xbb xe2 x88 x86t transactions new transactions able attach s close trust score assuming trust score distribution new transactions identical sources cluster new transaction probability xcf x81 allowed attach s average xcf x81s transactions available connect new transaction attaches sources compute probability s selected 34 x0cby transaction x12 xcf x81 x13 x13 x12 1 1 2 1 1 xe2 x88 x92 xcf x81s xcf x81s xcf x81s xe2 x88 x92 1 s recalling s selected new transaction arrives 1 transaction attached means expected number transactions attaching s na 1 2 xce xbb xe2 x88 x86ts xe2 x88 x921 average number dag edges takes validate source transaction know new transaction adds edges dag source transaction quantity na determines s grow shrink time na 2 new transaction removing source average s increase conversely na 2 new transaction removing source average s decrease number sources s denominator expression na 2 attractor s 2 xce xbb xe2 x88 x86t 1 2 xce xbb xe2 x88 x86ts xe2 x88 x921 2 number sources decrease s 2 xce xbb xe2 x88 x86t 1 2 xce xbb xe2 x88 x86ts xe2 x88 x921 2 number sources increase time s approach fixed point 2 xce xbb xe2 x88 x86t particular sufficiently large time s assumed approximately constant consider number validated unconfirmed transactions time t denote v use fact sufficient time expected degree transactions 2 transaction starts source transaction expected degree 2 steady state fixed time let s set source transactions v set validated unconfirmed transactions vi set vertices v longest reverse oriented path number s v transactions s precisely observe v ld 1 path length greater ld cumulative trust score greater ld vertex beginning path confirmed v parents vertex v1 s vertex s contributes edges dag argument vertex v1 consumes average 2 vertices dag find e v1 xe2 x89 xa4 e s 2 xce xbb xe2 x88 x86t similarly parents vertices v2 v1 xe2 x88 xaa s e v2 xe2 x89 xa4 4 xce xbb xe2 x88 x86t proceeding inductively e vi xe2 x89 xa4 2i xce xbb xe2 x88 x86t adding find v e v xe2 x89 xa4 ld ld 1 xce xbb xe2 x88 x86t strict bound constant time established v bounded constant sufficient time passed established number source transactions s number validated unconfirmed transactions v approximately constant time passed turn attention number confirmed transactions c transaction attached cluster source transaction validated unconfirmed transaction confirmed transaction total number attached transactions cluster s v c taking expected e rate change d e s v c d ntransactions xce xbb follows s v constant expectation sufficient time passed d e c xce xbb words rate confirmation new transactions matches arrival rate transactions empirical investigations confirm behaviour case confirmation rate matches arrival rate initial time figure 32 35 x0cfigure 32 figures initial phase system stable rate transactions confirmed equals rate new transactions arrive particular number sources number new validated transactions constant provides conclusive evidence cluster scalable theoretical limitation throughput coti number transactions arriving second coti designed attractive large pool merchants consumers confident number transactions arriving second eventually exceed 10 000 10 3 simulations previous section established throughput characteristics cluster simplified conditions investigate characteristics cluster analyze complex scenarios utilised simulations simulator cluster built facilitate analysis available github simulator capable constructing complex scenarios section restricted attention limited set assumptions outlined mathematical framework simulation verify transformation t xe2 x86 x92 ct xe2 x88 x86t xe2 x86 x92 c xe2 x88 x86t xce xbb xe2 x86 x92 xce xbb c symmetry cluster essentially means rescale time unit seconds xe2 x80 x9cmultiples xe2 x88 x86t xe2 x80 x9d loss generality graphs initial investigation shown appendix remaining analyses set xe2 x88 x86t 1 whilst previous section addresses confirmation throughput doesn xe2 x80 x99t time transaction waited account expect confirmation times decrease line increasing trust score confirmed simulation results figure 33 36 x0cfigure 33 confirmation delay log scale decreases markedly increasing trust scores order magnitude difference trust score 1 100 drop linear flattening end 11 11 1 possible attacks double spend prevention payment solution open possibility double spending attacks mitigate risk coti deploys dedicated double spend prevention dsp nodes nodes carry additional transaction monitoring affecting network refer section 8 xe2 x80 x9cdouble spend prevention dsp consensus xe2 x80 x9d details 11 2 penny spend attack transaction flood account trusted transaction confirmation speed pow requirements fees low attacker highly trusted account send valid transactions small amounts waste storage resources nodes pow required validate transaction limits number transactions attacker send high computational resources required launch attack rare event attacker capable making small transactions account xe2 x80 x99s trust score decrease causing increase pow required create new transactions possible way launch similar attack flood network invalid transactions user accounts coti attempts met little success transactions verified nodes 11 3 sybil attack attacker draw multiple resources form computers virtual machines ip addresses order create numerous accounts different usernames email addresses accounts known sybil identities subvert use trust network 10 accounts low trust created newcomers attacker accounts try create subcluster begins double spend account beginning subcluster proceed validate transactions accounts ignoring coti xe2 x80 x99s source selection algorithm according coti network structure attempting attack require attacker run malicious node maintain subcluster possible ignore coti xe2 x80 x99s source selection algorithm 37 x0cif long chain created attacker claim confirmed transactions trust accumulated situation dsp nodes check situation arisen prevent possibility double spending result attacker pay network fee dsp consensus 11 4 man middle attack packets inserted communication channels attacker attacker try impersonate special nodes dsp node possibility attack problematic user joins coti know public key attacker real coti node solve problem coti client public key coti servers hard coded coti servers serve similar function certificate authority ssl tls handshake secure connection coti servers established servers authentic public keys special nodes 11 5 malicious node attack fact participants purchase nodes perform verification dsp nodes means attacker attempt buy favor coti network particular glance attacker needs verify transactions minimum nodes consisting node dsp node verification requires consensus dsp nodes purchasing dsp nodes expensive assume purchasing majority dsp nodes result profitable attack furthermore participants high trust score create dsp node soon node found acting maliciously dsp nodes lose trust blocked owner xe2 x80 x99s deposit seized 11 6 denial service ddos attacks coti decentralised network implementing distributed ledger technology design network single point failure liable ddos attack nodes network imaginable ddos attack numerous dsp nodes load balancing cloud level ddos protection systems addition trust score nodes imaginable ddos attack point kyc servers servers important insofar entry point new users new registrants kicked ddos attack hours days network continue work usual 11 7 distribution software patches flaws found cryptocurrency implementations 18 patches distributed securely quickly prevent nodes compromised event breach flaws found coti client unlikely result significant losses balances network transaction history verified dsp nodes history nodes respectively 12 future development order provide completely decentralised ecosystem online payments coti exploring alternatives enable decentralised governance governance structure responsible implementing decisions impact base protocol future use coti tokens investments governing body vote matters responsible executing changes vote futarchy type governance currently explored 8 38 x0cone example decentralised governance characterised process adhered protocol update ready protocol update ready team experts field create metric determine possible outcomes established coti token holders able vote decision think best network means decisions based wisdom crowd mechanism choosing team experts determined future iterations network streamline coti xe2 x80 x99s future development coti xe2 x80 x99s transaction bundles free space set aside future data layers stored layers companies wish deploy smart contracts information cluster purpose transferring currencies data types network references 1 peter arntz blockchain technology cryptocurrency https blog malwarebytes com security world technology 2017 12 blockchain technology cryptocurrency 2017 2 blockchain info confirmed transactions day https blockchain info charts n transactions timespan 3 john adrian bondy uppaluri siva ramachandra murty et al graph theory applications elsevier science ltd 1976 4 anton churyumov byteball decentralized system storage transfer value 2016 5 thomas h cormen introduction algorithms mit press 2009 6 kyle croman christian decker ittay eyal eyal scaling decentralized blockchains 2016 20th international conference financial cryptography data security 2016 7 brian s everitt sabine landau morven leese daniel stahl cluster analysis wiley online library 2011 8 robin hanson shall vote values bet beliefs http mason gmu edu rhanson futarchy2007 pdf 2007 9 investopedia 51% attack https www investopedia com terms 1 51 attack asp 2017 10 brian neil levine clay shields n boris margolin survey solutions sybil attack 2006 11 p moller maersk maersk ibm form joint venture applying blockchain improve global trade digitise supply chains https www maersk com press press release archive maersk ibm form joint venture 2018 12 jelena mirkovic peter l reiher taxonomy ddos attack ddos defense mechanisms computer communication review 34 2004 13 serguei popov tangle 2017 14 mit technology review blockchain primer https www technologyreview com collection blockchain primer 2018 15 yary ribero daniel raissar dagcoin whitepaper 2015 16 sheldon m ross introduction probability models academic press 2014 39 x0c 17 mustafa suleyman ben laurie trust confidence verifiable data audit https deepmind com blog trust confidence verifiable data audit 2017 18 bitcoin wiki common vulnerabilities exposures https en bitcoin wiki common vulnerabilities exposures 40 x0cappendix simulation results cluster simulator built available github primary purpose simulator analyse parameter algorithm choices collect empirical data sandbox optimise real world cluster performance simulator analyse impact internal external parameters performance cluster accompanied collection data extraction visualization tools enable rapid scenario analysis core simulator written c analysis components r able simulate 1000 transactions second laptop computer tested simulations 5 000 000 transactions selected simulation results displayed relevant discussion performance characteristics appeared document section 10 summary relevant parameters simulations presented 1 xe2 x88 x86t fixed time node run source selection algorithm perform proof work 2 xce xbb rate new arrivals assumed follow poisson process 3 k number new arrivals arrive time taken run source selection algorithm perform proof work 4 l multiplier determines cumulative trust threshold trust chain surpass order confirmed cumulative trust trust chain exceed 100l transaction confirmed 5 xcf x81 width trust score threshold transaction confirm expressed fraction total number new transactions figure 34 waiting time function trust score note confirmed transactions clustered region high trust low confirmation time figure 35 figures suggest inflection point slightly xce xbb 10 note confirmation delay closely resembles validation delay exception trust drift 41 x0cfigure 36 note inflection point slightly xce xbb 10 appears universal likely related value xce xbb necessary stop dag disconnected visible figure 31 figure 37 figure left shows confirmation time barely affected size threshold xcf x81 figure right shows mean delay validation confirmation times directly proportional time taken run source selection algorithm proof work xe2 x88 x86t figure 38 figures mean confirmation delay significantly controlled parameter k means long rate new transactions arriving high complex proof work detrimental transaction throughput 42 x0cfigure 39 figure size threshold xcf x81 definite affect trust drift transaction confirmation trust chain appendix b b 1 coti xe2 x80 x99s arbitration system introduction world experiencing accelerated pace globalisation digitalisation exponentially growing number transactions conducted online people jurisdictional boundaries blockchain promise comes fruition distant future goods labour capital allocated decentralised global platforms disputes certainly arise users decentralised ebay claim sellers failed send goods guests decentralised airhub argue rented house advertised backers crowd funding campaigns demand refund teams failed deliver promises existing dispute resolution technologies slow expensive unreliable decentralised global economy operating real time fast inexpensive transparent reliable decentralised dispute resolution mechanism renders ultimate judgements enforceability disputes key institution blockchain era b 2 schelling point game theorist thomas schelling developed concept schelling points known focal points solution people use coordinate behaviour absence communication ethereum founder vitalik buterin proposed creation schelling coin token align telling truth economic incentives wanted know rained paris morning ask owner schelling coin xe2 x80 x9chas rained paris morning yes xe2 x80 x9d coin holder vote secret ballot results revealed parties voted parties voted majority rewarded 10% coins parties voted differently majority lose 10% coins thomas schelling described focal points person xe2 x80 x99s xe2 x80 x9cexpectation expects expect expected xe2 x80 x9d schelling coin uses principle provide incentives number agents know trust tell truth expect agents vote true answer expect vote true answer case schelling point honesty schelling coin mechanisms decentralised oracles prediction markets decades fundamental insight voting coherently desirable behaviour incentivised incentives design underlying coti arbitration layer based mechanism similar schelling coin slightly modified order answer number specific challenges scaling subjectivity privacy encourage agents engage trustworthy behaviour 43 x0ctable 4 payoff table basic schelling game vote yes yes 0 1 0 1 0 1 0 1 majority vote b 2 1 arbitration game theory arbitration process impartial party seeks help disputants negotiating parties reach agreement usually hosting meeting numerous discussions explore real underlying issues build proper understanding encourage exchange information parties identify assess options alternative courses action reaching mutually acceptable agreement ending negotiations experienced negotiators help parties measure options consider proposals reaching agreement objective standards called best worst alternatives negotiated agreement batnas watnas arbitration tends speedy relatively cost effective process involved particularly commercial matters process usually confidential arbitrators permission disclose party information given party entire process usually designed private prejudice principle use information waive rights remedies parties agree usually writing game theory area study deals interactions choices agent influence outcome vice versa according fixed rules game theory attempts predict understand explain activities diverse pricing strategies firms lobbying political parties couple xe2 x80 x99s choice evening entertainment applied initially economics prevalent social sciences evolutionary biology work field characterised abstract mathematical approaches emphasis finding common structures diverse social phenomena believe focus analysis value arbitration ability arbitrator arbitration process enable parties come closer calm reflective rational negotiator achieve words process helps parties separate people problem overcome cognitive biases reactive devaluation attribution error plague traditional negotiations parties motivated protect positions reduce risk making unnecessary concessions undoubtedly arbitration adds huge value dimension helping parties communicate effectively avoid protracted negotiations costly court procedures maintain enhance personal commercial relationships process game theory suggests arbitration add value compared pure negotiation parties supremely rational wholly self interested agents subject cognitive biases psychological apparently irrational impediments negotiation permeate everyday life believe aspect arbitration xe2 x80 x99s value relatively underplayed discussed forums view fruitful area arbitrators interested arbitration explore experiences arbitrators brought theoretical approaches richer understanding arbitration range literature rational actor paradigm traditional game theory asked question xe2 x80 x98how arbitration add value xe2 x80 x99 appear odd question ask game theorist natural context supreme rationality couldn xe2 x80 x99t offer arbitrator communicates behalf party equally communicated party directly 44 x0cand role arbitrator help super rational parties explore options weigh costs benefits avoid cognitive traps arbitrator add dispense arbitrator altogether answer question proved complex game theorists supposed actually research predicts arbitrator add value relative pure negotiation process rational actors helping parties overcome fundamental challenges negotiation generally applying xe2 x80 x98batna xe2 x80 x99 yardstick parties know willing settle don xe2 x80 x99t know xe2 x80 x98batna xe2 x80 x99 negotiating counterpart origin incentive disguise xe2 x80 x99s true negotiating position resist making concessions far possible lead parties failing reach settlement potential agreements better outcome xe2 x80 x98batna xe2 x80 x99 way arbitrators theory help disputants overcome possible barrier taking information parties transmitting portion xe2 x80 x98other xe2 x80 x99 example arbitrator commits exchanges parties establish agreement possible e fact xe2 x80 x98zone agreement xe2 x80 x99 exists parties break negotiation tell parties specifics disclosed arbitrator incentive parties strategic bid offers reduced risk losing deal overplaying respective hands arbitrator help administering pre approved process parties rationally adhere negotiating example arrangement place time limit arbitration process arbitrator stands gain lose implementing arrangement committed parties know negotiating parties prepared modify time limit order drive harder bargain professional arbitrators dynamics sort playing regularly reality sense parties perform arbitrator act reasonably virtue presence think game theory help better analyse aspects arbitrator xe2 x80 x99s role hitherto understood tacitly pursued instinct experience theory practical experience accumulate surely gain bringing findings game theoretic literature insights arbitration practitioners b 2 2 coti xe2 x80 x99s arbitration service coti arbitration service introduces decision protocol multi purpose court system able solve dispute type coti xe2 x80 x99s autonomous system works decentralised party arbitrate disputes simple highly complex disagreements step arbitration process securing evidence selecting jurors etc fully automated exception juror decisions dispute reaches disagreement parties coti rely honesty individuals game theoretical economic incentives based fundamental insight legal epistemology court epistemic engine tool ferreting truth events confusing array clues agent jury follows procedure input evidence produce output decision coti leverages technologies crowd sourcing blockchain game theory develop arbitrary system produces true decisions secure efficient inexpensive way coti payment system designed provide users new level quality service coti complex comprehensive solution incorporating important features protocol level important services provided coti arbitration coti arbitration service provides users quick reliable inexpensive way resolve disputes highly required feature possible cryptocurrencies coti provides ready use service customer appeal 45 x0ccoti xe2 x80 x99s arbitration service decentralised application built coti trustchain works decentralised party arbitrate disputes buyers sellers relies game theoretic incentives order jurors correctly rule cases result dispute resolution system renders ultimate judgements fast inexpensive reliable decentralised way coti arbitration service disputes resolved arbitrator jury randomly picked large pool highly trusted network participants process forming arbitrator jury decision settlement decentralised biased party document describes complete set rules principles architecture coti arbitration service b 3 principles coti arbitration service based following principles xe2 x80 xa2 fairness xe2 x80 xa2 justice xe2 x80 xa2 voluntariness xe2 x80 xa2 equality xe2 x80 xa2 decentralisation xe2 x80 xa2 predictability xe2 x80 xa2 timely resolution b 4 b 4 1 project description arbitration process arbitration coti characterised embedded court system network idea users choose type court specialised topic dispute lodged software development dispute choose software development court jury insurance dispute select insurance court jury example figure 40 illustrates example court arborescence users choose figure 40 court arborescence users choose b 4 2 privacy solving disputes require parties disclose privileged information jurors order prevent outside observers accessing information natural language english labels jurors xe2 x80 x99 voting options stored ledger dispute created creator submits hash dispute text option list salt 2 dispute text plain english text 46 x0coption list labels options voted jurors salt random number avoid use rainbow tables dispute creator sends dispute text option list salt party asymmetric encryption way parties verify submitted hash corresponds sent case dispute party reveal dispute text option list salt jurors verify correspond hash submitted asymmetric encryption jurors receive text contract options steps handled application wallet users run coti arbitration process b 4 3 drawing jurors users economic interest serving jurors coti collect arbitration fee work probability drawn juror randomly set means specific dispute tokens juror stakes related probability chosen juror higher tokens juror stakes higher gain voting majority jurors stake cotis chance drawn jury prevent inactive jurors selected coti stakes serve key functions arbitration service design protect system sybil attacks malicious party able create high number addresses drawn high number times dispute arbitrator onboarding process requires completing kyc process having accounts high trust scores proof stake concept coti arbitration system works way ensures juror network incentivised work percent fees received direct relation stake past record voting b 4 4 votes assessing evidence jurors commit votes submit hash vote vote reveal vote salt coti verifies matches commitment jurors failing reveal vote penalised jurors commitment vote changed visible jurors disputants prevents juror xe2 x80 x99s vote influencing vote jurors jurors declare voted certain way provide jurors reason think true important feature schelling point jurors knew votes jurors vote like instead voting schelling point jurors required provide justification vote jurors fail reveal vote penalised finally votes aggregated resolution dispute executed option highest votes considered winning b 4 5 arbitration fees creating dispute cases requires arbitration fees order compensate jurors work avoid having attackers spam system juror paid fee determined dispute stake arbitration fee taken rolling reserve examples include xe2 x80 xa2 instance party deposit equal arbitration fee party fails regarded court ruled favor party deposited arbitration fee creating dispute court parties deposit funds winning party reimbursed dispute resolved 47 x0c xe2 x80 xa2 appeals parties deposit arbitration fees appellant deposit extra stake proportional appeal fees given party winning dispute way party makes frivolous appeals harm opposing party opposing party compensation time loss appeals ruled legitimate stake returned appellant b 4 6 appeals jury reached decision party satisfied thinks result unfair appeal dispute ruled new appeal instance twice previous number jurors plus increased number jurors appeal fees paid verdict appealed jurors appealed level paid affected dispute token redistribution incentivises jurors explanations rulings proper explanations given parties likely appeal lesser likelihood convinced decision fair arbitration fees paid juror appeals increasing number jurors exponentially arbitration fees rise line number appeals means cases parties won xe2 x80 x99t appeal appeal moderate times possibility appealing high number times important prevent attacker bribing jurors b 4 7 incentive system jurors rule disputes order collect arbitration fees incentivised rule honestly dispute jurors vote coherent group lose arbitration fees given coherent jurors coti arbitration system reached decision dispute tokens unfrozen redistributed jurors redistribution mechanism inspired schelling coin jurors gain lose arbitration fees depending vote consistent jurors small disputes defined training disputes new arbitrators network favour assignment making sure veteran arbitrator added poll assume jury member voted coherently voted option chosen majority tokens lost arbitration fee incoherent juror xce xb1 xc3 x97 min activate xc3 x97 weight xce xb1 parameter determines number tokens redistributed ruling endogenous variable defined governance mechanism consequence internal dynamics voting environment min activate parameter minimum tokens activated dispute arbitration fees divided coherent incoherent parties proportionally weight parties considered coherent voted majority figure 41 example token redistribution 48 x0ctable 5 example distribution $100 dispute fees arbitrator stake coti vote fees won bob 1000 yes $10 38 john 2000 yes $20 77 anna 4000 yes $50 54 mark 2000 $1 rick 1000 $2 fee percentage arbitrator calculated follows given f xe2 x80 x93 dispute fee si xe2 x80 x93 stake participant p xe2 x80 x93 number arbitrators voting xcf x89 xe2 x80 x93 number arbitrators voting majority xcf x89 xcc x84 xe2 x80 x93 number arbitrators voting minority xce xba xe2 x80 x93 ratio fees deducted minority percent k f xc2 xb7 xce xba xe2 x80 x93 fees distributed minority w f k xe2 x80 x93 fees distributed majority p xe2 x88 x92 p sn pi 0 si xe2 x80 x93 total stake given dispute s xcf x89 p xcf x89i 0 si xe2 x80 x93 total stake voting majority s xcf x89 xcc x84 xcf x89 xcc x84i 0 si xe2 x80 x93 total stake voting minority w xcf x89 ss xcf x89n xc2 xb7 w xe2 x80 x93 winning fees majority w xcf x89 xcc x84 ss xcf x89 xcc x84n xc2 xb7 k xe2 x80 x93 winning fees minority jurors fail reveal vote disincentivise behaviour penalty revealing xe2 x80 x99s vote twice large penalty voting incoherently 2 xc2 xb7 xce xb1 xc2 xb7 minactivate xc2 xb7 weight incentivises jurors reveal vote case appeals tokens redistributed level according result final appeal attack parties incentivised vote think parties think honest fair coti schelling point equates honesty fairness argue decisions subjective enable schelling point arise informal experiments run thomas schelling showed situations schelling point plebiscite parties exist schelling found options likely chosen particularly obvious option exist options perceived likely chosen parties effectively chosen expect jurors right 100% time xe2 x80 x93 arbitration procedure achieve honest jurors lose arbitration fees long lose value win arbitration fees incoherent parties system work arbitrators incentivised participate dispute resolution arbitration fee fee depends stake coti coins arbitrator particular case effective incentive arbitrators fair pursuit justice instinctive human nature main motivation problems dealt xe2 x80 x9clazy xe2 x80 x9d strategy read case data provide random vote earn fee second possibility biased opinion based affiliation nationality religion culture gender etc mitigate problems coti implement following measures 49 x0c1 arbitrators highly trusted network participants according trust score metrics high trust score value means arbitrator successful societal activity suppose responsible person 2 arbitrators randomly chosen 3 control set questions automatically generated case data check arbitrator completed 4 ai based system analyse arbitrator votes detect possible biased xe2 x80 x9clazy xe2 x80 x9d arbitrators 5 depersonalisation case data maximum extent possible b 4 8 dispute overview comes filing resolving complaints coti treat sellers buyers fairly guiding resolution process way buyer initiate complaint process including time frames charge settling dispute vary depending purchase funded xe2 x80 xa2 dispute claim buyer contacts seller directly coti wallet arbitration interface file dispute parties work find solution buyer seller agree solution buyer escalate dispute claim order request refund reversal arbitration process steps determine situation resolved buyer need provide proof evidence support claim buyer initiates complaint seller receive email arbitration tab wallet additionally money seller received transaction unavailable case investigation case settled seller xe2 x80 x99s favour money released coti account read depth look types complaints resolve avoided table 6 summary types objections type resolution dispute claim initiates case buyer buyer seller determines case outcome owns process policy coti arbitration process buyer seller coti arbitration process coti arbitration process processing fee types issues yes item received inr significantly described snad yes item received inr significantly described snad unauthorised transaction disputes buyers file complaint coti arbitration tab 50 x0cif buyers problem transaction bring seller xe2 x80 x99s attention opening dispute arbitration tab coti wallet dispute process opportunity resolve issues escalated claim xe2 x80 x99s seller xe2 x80 x99s best interest work customer resolve dispute seller xe2 x80 x99s chance use great customer service solve issue help prevent growing larger disputes occur buyer file dispute different reasons xe2 x80 xa2 item received inr case buyer claiming ordered paid item didn xe2 x80 x99t receive xe2 x80 xa2 significantly described snad type claim buyer stating item received significantly different expected based seller xe2 x80 x99s description instance maybe buyer ordered red sweater received blue instead xe2 x80 xa2 unauthorised transaction fraud complaint filed reason means buyer xe2 x80 x99s account compromised hacked purchase account permission mean buyer believes transaction issued consent figure 42 flow diagram dispute process merchants know dispute filed dispute filed merchant receive email case created arbitration tab dashboard merchant wallet 51 x0chow merchant respond dispute respond dispute merchant xe2 x80 xa2 log wallet xe2 x80 xa2 arbitration tab xe2 x80 xa2 click view action dispute case xe2 x80 xa2 respond buyer making sure include relevant information package tracking information select post message message sent directly buyer opportunity resolve dispute intervention arbitration jury selection xe2 x80 x99s best courteous helpful merchant help prevent dispute good communication important help prevent disputes xe2 x80 xa2 provide detailed accurate descriptions items sale include pictures multiple angles xe2 x80 xa2 purchase merchants ship items promptly provide tracking information xe2 x80 xa2 send recorded phone calls purchase telephone xe2 x80 xa2 signed agreements t c risk disclosures etc xe2 x80 xa2 post customer service contact information including working hours response time frames toll free phone number helpful cases preferred email address xe2 x80 xa2 merchant offer refund post return policy customers xe2 x80 xa2 customer contacts merchant merchant professional helpful courteous merchant xe2 x80 x99t reach agreement buyer dispute opened customers time window specified case work buyer resolve arbitration won xe2 x80 x99t involved point merchant buyer escalates dispute 14 day window closed arbitration process buyer seller work resolution party elevate dispute claim xe2 x80 x99ll cover section transaction merchants includes rolling reserve fee keeps 2% total merchant turnover period 6 months arbitrators ability release funds merchant accounts decision funds released merchant account merchant rolling reserve funds temporarily unavailable dispute filed hold remain place merchant works buyer resolve dispute released dispute settled favour consumer merchant claims buyer complaint escalated coti arbitration process buyer filed unauthorised transaction buyer dispute resolved party escalate claim threshold period point arbitration process directly involved jurors decision information provided buyer file claim initiating dispute feel account fraudulently resolution process arbitration system ask parties information reviewed arbitrators claims occur claims based factors 52 x0c xe2 x80 xa2 item received inr case buyer claiming ordered paid item didn xe2 x80 x99t receive xe2 x80 xa2 significantly described snad type claim buyer stating item received significantly different expected based seller xe2 x80 x99s description instance buyer ordered red sweater received blue instead xe2 x80 xa2 unauthorised transaction complaint filed reason means buyer xe2 x80 x99s account compromised hacked purchase account permission merchant know claim filed claim logged merchant notified email case created arbitration tab merchant wallet claim processed claim filed seller asked respond days seller doesn xe2 x80 x99t respond claim automatically close buyer xe2 x80 x99s favour refund issued seller doesn xe2 x80 x99t respond coti initiate arbitration process jurors evaluate information provided determine outcome claim merchant penalised having claims having claim filed merchant doesn xe2 x80 x99t necessarily mean penalised automatic fees levied merchants merchant trust score won xe2 x80 x99t automatically affected claim rate high indicators trending negatively affect merchant xe2 x80 x99s trust score b 5 cases different types disputes known type dispute trial parameters defined number arbitrators jury arbitrators xe2 x80 x99 training level parties xe2 x80 x99 anonymity level fee levels b 5 1 credit processed customer claims purchased product returned transaction canceled merchant provided refund credit required overturn dispute merchant demonstrate customer refunded means customer entitled refund merchants issue refund payment disputed merchant believes customer entitled refund provided merchant accept dispute respond merchants touch customer merchant understands complaint chance merchant explain misunderstanding resolve merchant unable solve issue directly customer wait dispute resolved automatically arbitration process prevent merchants provide clear return policy easily accessible customers requesting replacement refund merchant sure honour returns refund policy promptly b 5 2 duplicate customer claims charged multiple times product service required overturn dispute demonstrate payment separate product service 53 x0chow respond merchant needs determine customer incorrectly charged multiple times merchant needs collect information documenting payment separately receipt copies receipts don xe2 x80 x99t include items purchased merchants need sure include itemised list receipt clearly indicate payments separate purchases items services merchant unable touch customer included case xe2 x80 x99s supporting evidence duplicate payments merchants accept dispute merchants issue refund payment disputed separate payments merchants touch customer merchant understands complaint chance explain misunderstanding resolve merchants unable solve issue customer directed arbitration process b 5 3 fraud dispute occurs coti token holder claims didn xe2 x80 x99t authorise payment happen account hacked fraudulent purchase required overturn dispute account holder withdraw dispute identifying payment proving issuer authorise respond merchant try touch account holder people forget payments xe2 x80 x99s possible authorised user account e g spouse payment having buyer withdraw dispute far best way merchants sure dispute resolved buyers agree merchants submit evidence dispute addition evidence include correspondence buyer stating withdraw dispute addition written statement buyer confirming dispute withdrawn merchants believe payment actually fraudulently better accept dispute b 5 4 general uncategorised dispute merchant contact customer additional details find payment disputed b 5 5 product service received customer claims products services purchased received required overturn dispute merchant needs prove customer received physical product offline service use digital product online service occurred prior date dispute initiated respond merchant touch customer understanding dispute filed important ensuring customer receives product merchants critical information prevent happening having cardholder withdraw dispute best way merchants sure dispute resolved agreement buyer seller reached dispute escalated coti arbitration process b 5 6 unacceptable product product service received defective damaged described 54 x0crequired overturn dispute demonstrate product service delivered described time purchase respond merchants touch customer understand xe2 x80 x99re dissatisfied chance merchant explain misunderstanding resolve having buyer withdraw dispute best way merchants ensure dispute resolved b 5 7 subscription cancelled customer claims merchant continued charge subscription cancelled required overturn dispute merchant prove subscription active customer aware follow cancellation procedure respond merchants touch customer understand happened chance merchant explain misunderstanding resolve having buyer withdraw dispute best way merchants ensure dispute resolved b 5 8 unrecognised customer doesn xe2 x80 x99t recognise payment appearing account history required overturn dispute fraudulent disputes assisting customer identifying payment withdraw dispute respond merchant touch buyer people forget payments xe2 x80 x99s possible authorised user account e g spouse payment having buyer withdraw dispute best way merchants ensure dispute resolved table 7 concluding matrix illustrative purposes use case credit processed duplicate fraudulent general dispute number arbitrators $10 $100 3 $100 $1000 5 $1000 11 $10 $100 3 $100 $1000 5 $1000 11 $10 $100 3 $100 $1000 5 $1000 11 $10 $100 3 $100 $1000 5 $1000 11 55 window rcf lock arbitration selection 30 days 15 days 45 days 25 days 45 days 25 days 15 days 7 days x0ctable 7 xe2 x80 x93 continued previous page use case product received subscription cancelled unrecognised b 5 9 dispute number arbitrators $10 $100 3 $100 $1000 5 $1000 11 $10 $100 3 $100 $1000 5 $1000 11 $10 $100 3 $100 $1000 5 $1000 11 window rcf lock arbitration selection 60 days 30 days 30 days 15 days 30 days 15 days evidence submission works dispute multiple parties involved process coti arbitration layer involved deciding outcome dispute plays role conveying evidence jurors submit evidence submitted relevant cause dispute web logs email communications shipment tracking numbers delivery confirmations proof prior refunds replacement shipments helpful example response dispute reason xe2 x80 x98product received xe2 x80 x99 evidence includes shipping information screenshots package tracking issuing evidence disputes requests email information links click information included e g file downloads links tracking information logged arbitrators responsible evaluating dispute coti arbitrators merchants follow external links xe2 x80 x99s important submit available evidence coti arbitration system evidence relevant long introduction product company complaint customer unfairness dispute responses compelling instead advisable provide facts concerning original purchase neutral professional tone example john smith purchased x company date coti wallet customer agreed terms service authorised transaction shipped product date address provided customer delivered date merchants include email correspondence texts customer xe2 x80 x99s important aware exchanges verify identity merchant xe2 x80 x99s include ensure relevant information included e g including long email thread better redact text quoting previous emails evidence factual professional concise providing little evidence problem overwhelming customers merchants arbitrators unnecessary information similar impact provide clear accurate evidence arbitrators reviewing responses going decide fairly quickly evidence sufficient refute claims responses multiple pieces evidence participants include table contents uploaded image pdf attachment number letter 56 x0clengthy terms service refund policy relevant information highlighted case significantly clearer customers arbitrators follow links provided response instead advised include clear screenshot terms policies appear checkout process merchant site important defence e g customer disputing subscription minimum contract term adhered include proof customer authorisation proving customer aware authorised transaction disputed vitally important case data shows proof standard compelling response xe2 x80 xa2 avs address verification system match xe2 x80 xa2 signed receipts contracts xe2 x80 xa2 ip address matches customer xe2 x80 x99s verified billing address include proof service delivery addition fraudulent disputes claims customers products services arrived defective unsatisfactory described potential dispute reasons assuming merchant xe2 x80 x99s product faulty described shipped delivered prior dispute date merchants provide proof service delivery purchases physical goods merchant provide proof shipment delivery includes delivery address city zip code choosing carrier delivery method requires signature delivery provides best defense product received fraudulent disputes merchants shipped verified billing address passed avs zip code verification customer provides xe2 x80 x98ship xe2 x80 x99 differs e g purchase gift purchase customers prepared provide documentation explaining different xe2 x80 x99s common practice purchase ship address doesn xe2 x80 x99t match kyc verified billing address additional dispute risk merchant xe2 x80 x99s business provides digital goods supporting evidence ip address system log proving customer downloaded content software service submitted include copy terms service refund policy providing proof customer agreed understood merchant terms service checkout follow return refund policies critical legible screenshot terms service policies presented checkout important supporting evidence simply include text copy b 6 decentralised governance arbitrators voting decentralised governance decisions significant functions coti arbitration system decentralised governance voting active arbitrators vote nb provision subject future changes b 7 arbitrators coti arbitration system maintains pool reputable network participants arbitrators randomly chosen arbitrators jury users invited arbitrators pool maintained high trust scores arbitration system decentralised human input service particular arbitrator legal entity 57 x0cit required network participants deposit coti maintain coti invited arbitrators pool participate arbitration process required arbitrators sufficient coti locked stake released dispute decision arbitrator recruitment training individuals wish register arbitrators satisfy certain requirements admitted arbitrator platform committee randomly selected arbitrators ability select arbitrators add network requirements arbitrators demonstrate relevant language proficiency undergo online assessment determine aptitude perform arbitration tasks high standard coti endeavours arbitration open broad group people available online training programs assist candidates acquiring requisite knowledge effectively contribute dispute resolution process training program consist xe2 x80 xa2 online courses xe2 x80 xa2 procedures manuals xe2 x80 xa2 online certification exams xe2 x80 xa2 internship participating small disputes cases arbitrator onboarding process particularly restricting compliant financial institution coti implement following kyc aml diligence points 1 customer identity 2 beneficial owner identity applicable 3 purpose intended nature business relations 4 ongoing monitoring including transaction monitoring eu uk occasional regular transactions larger 15 000 eur reviewed 5 source funds required explain nature business relations process monitoring computer aided dispute resolution subsequent versions coti arbitration layer like add ai based tools help analyse case data provide recommendations arbitrators judge certain disputes drastically decrease cognitive costs arbitrators arbitration process efficient ai online dispute resolution tools coti develop step model ai online dispute resolution online dispute resolution environment virtual space disputants variety dispute resolution tools disposal participants select tool consider appropriate resolution conflict use tools desire proposed step model based fixed order system proposed conforms sequencing outlined opinion produces effective online dispute resolution environment 1 negotiation support tool provide feedback likely outcome s dispute negotiation fail e batna 2 second tool attempt resolve existing conflicts argumentation dialogue techniques 58 x0c3 issues resolved step tool employ decision analysis techniques compensation trade strategies order facilitate dispute resolution narrowing issues time money saved process disputants feel longer worthwhile achieve initially desired goals decision support systems decision support systems supplement human knowledge management skills computer based means managing knowledge accept store use receive present knowledge pertinent decisions decision support tools help decision makers improve performance whilst decision making tools automate process leaving minimal role user tools develop intelligent negotiation support systems include xe2 x80 xa2 rule based reasoning knowledge specific legal domain represented collection rules form xe2 x80 x98if action conclusion xe2 x80 x99 xe2 x80 xa2 case based reasoning uses previous experience analyse solve new problem explain previous experiences similar present problem adapts past solutions meet requirements xe2 x80 xa2 machine learning ai system attempts learn new knowledge automatically xe2 x80 xa2 neural network consists self adjusting processing elements cooperating densely interconnected network processing element generates single output signal transmitted processing elements output signal processing element depends inputs processing element input gated weighting factor determines influence input output strength weighting factors adjusted autonomously processing element data processed traditionally negotiation support systems template based little attention given role system play negotiations decision making support primary role systems demonstrate users close far negotiated settlement systems specifically suggest solutions users decision support provided informing users issues disputes level disagreement game theory basis providing intelligent negotiation support traditional negotiation decision support focused providing users support best obtain goals advice based nash xe2 x80 x99s principles optimal negotiation bargaining game theory opposed behavioural descriptive studies provides formal normative approaches model bargaining adjusted winner smartsettle widely known negotiation support systems adjusted winner smartsettle use game theoretic techniques provide advice claim fair solutions algorithms fair sense disputant xe2 x80 x99s desire equally met meet concerns justice systems require users rank value issue dispute allocating sum points issues given numbers game theoretic optimisation algorithms optimise identical extent user xe2 x80 x99s desires adjusted winner allocates divisible goods parties fairly possible adjusted winner starts designation items dispute party says item dispute added dispute list parties indicate value item distributing 100 points information public basis fairly dividing goods issues later stage points privately assigned parties arbitrator use adjusted winner allocate items party determine item need divided 59 x0csmartsettle interactive computer program developed assist involved negotiating agreements parties conflicting objectives negotiation process opposing parties professional arbitrator smartsettle help parties identify feasible alternatives preferred party xe2 x80 x99s proposal based information provided confidence program alternatives exist program help parties develop counter proposals b 8 arbitrator jury arbitrator jury selected randomly arbitration system received claim accepted arbitrators work independently validate real world information pertaining transaction disputes cast votes mediated outcome arbitrators receive case data cast votes arbitrator client able communicate unaware arbitrators involved resolving dispute number arbitrators dependent case dispute stage b 9 merchant rolling reserve rolling reserve share merchant xe2 x80 x99s transactions temporarily set aside cover potential business risks merchant loses mediated dispute compensate consumer rolling reserve funds denominated coti coins automatically accumulate merchant xe2 x80 x99s account defined term arbitration service creates rolling reserve merchant cover possible claims system wide reserve credit fund rcf guarantee funds maintained coti xe2 x80 x99s native currency required size merchant xe2 x80 x99s rolling reserve calculated based merchant xe2 x80 x99s trust score rolling reserve merchant lost mediated dispute required compensate consumer merchants meet rolling reserve requirements forfeit ability sell goods services coti network b 10 arbitration rules trade dispute possible outcomes dispute merchant wins additional transactions needed merchant loses case arbitration system creates transaction transfers money merchant xe2 x80 x99s rolling reserve customer xe2 x80 x99s account merchant xe2 x80 x99s rolling reserve sufficient reserve credit fund rcf merchant obliged reimburse rcf coti arbitration system merchant fixed period pay voluntarily appeal customer winning party remunerated funds merchant xe2 x80 x99s rolling reserve case insufficient rolling reserve funds compensation remitted rcf merchant winning party hand action needed 60 x0cfigure 43 pictographic summary coti xe2 x80 x99s trade dispute process works coti arbitration flow 1 initiating dispute 61 x0c2 trying resolve dispute arbitration 3 arbitration selecting jury b 11 fees arbitration initiating cost fee payable plaintiff complying fee intended decrease demand arbitration avoid barratry fee refundable plaintiff won case 62 x0cdispute resolution fee fee dependent type case stage dispute resolution paid party lost case arbitrator fee fee coti arbitrators earn participating dispute resolution process fee dependent case type stage dispute resolution arbitrator xe2 x80 x99s stake held coti coins merchant rolling reserve fee rolling reserve requirements calculated based merchant xe2 x80 x99s turnover trust score powerful incentive merchant maintain high trust score design coti payments network arbitration system decentralisation rolling reserve requirements substantially lower existing payments networks merchant transaction incurs rolling reserve fee reserved predefined arbitration time window rolling reserve term ended funds released merchant xe2 x80 x99s account b 12 jurisdictions coti arbitration system resolves disputes parties voluntary agree mediated outcome coti arbitration system deal potential criminal cases substitute public law enforcement general jurisdictional court opine accept situation international corporation focusing provision services local market prevent clients accessing jurisdictional courts adjudicating dispute accordance local laws stated coti xe2 x80 x99s operations expect subject jurisdiction local courts addition stated mere fact activities multinationals performed internet provide immunity taken court subject local laws end offering products services online online merchant subject jurisdiction local courts regardless merchant xe2 x80 x99s attempt terms conditions subject clients jurisdiction foreign courts coti arbitration process follows e commerce merchant local clients operational form manner given jurisdiction carefully review scope legal exposure result activities clients seek legal advice limit exposure properly structuring business b 13 policies collusion prevention distributed nature arbitration system needs account possibility collusion arbitrators arbitrators parties disputed transaction collusion risk mitigated random selection arbitrators jury arbitrators found engaged form collusion severely penalised privacy prior distributing case data coti takes measures ensure data aids directly dispute resolution disclosed default coti removes personal identifying information data submissions parties dispute choose elect forgo privacy sake providing detailed data arbitrator registration process arbitrators required read accept arbitrator privacy policy violation result expulsion coti network 63 x0cb 14 dispute attestation possible questions opening dispute xe2 x80 xa2 transactions disputing xe2 x80 xa2 reason dispute xe2 x80 xa2 cancel transaction s xe2 x80 xa2 engage transaction s receive goods benefits result xe2 x80 xa2 attempted contact merchant documentation needed following items needed xe2 x80 xa2 dispute reason xe2 x80 xa2 receipt s xe2 x80 xa2 confirmations emails faxes etc xe2 x80 xa2 proof shipment return xe2 x80 xa2 document supports case figure 44 overview dispute cycle b 15 dispute influence trust scores losing arbitration case reflected trust score consumers merchants penalty applies x arbitrations lost xx transactions increases severity frequency lost arbitrations increases penalties apply parties prevent user unnecessarily lodging disputes 64 x0cfigure 45 disputes influencing trust score 65 x0c