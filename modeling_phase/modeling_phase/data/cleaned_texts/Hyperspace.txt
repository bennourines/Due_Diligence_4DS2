b hyperspace fast cheap private storage mark huetsch mark hspace app wang chao wangchao hspace app version 1 0 december 6 2018 1 introduction hyperspace blockchain xc2 xadbased storage marketplace featuring digital currency space cash xsc hyperspace facilitates permissionless trustless use cloud object storage data end xc2 xadto xc2 xadend encrypted complete privacy reed xc2 xadsolomon encoding storage redundant resistant data loss storage operations happen concurrently multiple hosts higher transfer speed blockchain secured proof work hybrid consensus model additional layers transaction security developed primary participants marketplace storage renters hosts use space cash storage contracts renters pay storage use hosts post collateral guarantee service marketplace encourages competition incentivises quality xc2 xadof xc2 xadservice drives commodification data storage services prices tend marginal cost production 2 ease use attempts blockchain xc2 xadbased distributed storage including sia codebase hyperspace originally based attempts gained significant traction partially difficulty use lack proper economic incentives 1 hyperspace aims tackle issues xc2 xad usability foremost concern 2 1 lightweight nodes rent host storage users install client software represents node hyperspace network nodes maintain local copy entire blockchain record new transactions rental contracts transfer funds nodes gained deserved reputation unusable average users lightweight nodes called light nodes require local copy entire blockchain instead use protocol called simplified payment verification spv determine blocks need request nodes generation spv relied bloom filters leaked client information significantly increased computing resource demands nodes 2 hyperspace uses goulomb coded sets gcs generate efficient filters included block headers broadcasted nodes 3 lightweight nodes essential widespread user adoption implemented different ways desktop software mobile app web service 1 x0c2 2 3rd xc2 xadparty contract management hyperspace data storage operates narrowly defined smart contract nodes announce like serve hosts broadcasting special host announcement transaction renters track hosts ranking database choose form contracts desired number hosts renters negotiate host directly form contract fixed space cash fixed period time host puts collateral renter pre xc2 xadpays funds willing spend parties sign broadcasts transaction network data transferred renter host renter host open point xc2 xadto xc2 xadpoint payment channel sign contract revision transferring funds data transferred chunk data transferred renter uses locally stored merkle root verify data received data requested data transferred party broadcast revised contract blockchain transaction problems occur direct user management contracts contract expires agreed time typically 3 6 months user online pay sign new contracts hosts user lose data second users find inconvenient acquire space cash pay hosts prefer paying local fiat currency 2 2 1 user experience fiat payments hyperspace designed 3rd party contractor responsibility storage contract management contractor offer value xc2 xadadded services including user interface fiat payment options storage entitlements manage contracts hosts renter xe2 x80 x99s behalf protocol allows contract revision signing delegated contractor server actual storage operations remain directly storage renter hosts example user wants upload file request contract data contracting server open connections hosts chunk data transferred renters hosts renter indicate contracting server sign contract revision payment channel host renter stops telling contractor sign host stop sending data broadcast recent contract revision blockchain upload finish similar process occur downloads manner cryptocurrency payment offloaded 3rd party vast majority bandwidth usage occurs directly renter host resolves key design problem requiring files copied 3rd party node forwarded different storage hosts vice xc2 xadversa 2 2 2 unattended contract renewal data repair similar process allows contracts renewed data repaired renter needing online contractor continuously monitor health customers contracts host goes 2 x0cdown loses data contract expires contractor form new contracts new hosts identify hosts holding redundant copies missing chunks data contractor communicate old redundant host newly contracted host tell host data needs copied upload data new host process like new host acting original user user wants download repairing files contracting server signs user s contracts old host simply sends data new host instead end user simultaneously new host paid download redundant data newly formed contract signed 3rd party contractor way reliable 3rd party contracting service ensure user lose data user online repair data renew contracts simultaneously bandwidth usage repair renewal occurs old host new hosts 3rd party use bandwidth relative data transmitted hosts 2 3 file recovery seed use rented storage hyperspace network users currently setup dedicated local folder device files folder uploaded redundancy hosts hyperspace network download restore files user lost accidently deleted device locally stored metadata user lost device local metadata local hard drive failed access user xe2 x80 x99s files lost hyperspace designed overcome constraints offer complete distributed object storage rely local metadata download streaming data network likely involve hosts storing encrypted metadata necessary retrieve files information hosts hold metadata given public key attached seed broadcast blockchain transaction queried flood request existing nodes hosts approach reliable consume valuable blockchain space area research 3 scalability privacy 3 1 problem blockchain growth blockchains suffer number problems chief currently blockchains grow shrink transaction blockchain permanent means years expensive slow set node 4 original bitcoin whitepaper satoshi nakamoto speculated blockchains safely pruned old transactions far widely consensus database mechanism 5 important objective short xc2 xadterm slow rate blockchain grows means data kept blockchain absolutely necessary 3 2 schnorr signature aggregation 3 x0cone useful tactic hyperspace applies schnorr signature aggregation traditionally transaction built input transaction signed separately signatures fair space nice optimization aggregate input signatures signature transaction technique called musig 6 verification signature transaction instead lead faster blockchain sync speed blockchain size growth brought nodes willing collaborate creating transactions use established technique called coinjoin technique multiple inputs outputs different parties merged xc2 xad effectively merging multiple transactions 7 combining schnorr signature aggregation coinjoin potential significant blockchain space savings technique possible effect partially anonymizing source funds recipient outputs set different owners xe2 x80 x99 inputs aggregated set different recipients xe2 x80 x99 outputs transaction privacy potentially positive negative consequences cost coinjoin technique blockchain bloat 3 3 contract signature aggregation signature aggregation technique applied numerous applications instance renters hosts sign file contracts aggregate signatures reducing signature data cost file contract blockchain 50% effect anonymizing contract host hosts publish public key announce blockchain open hosting service schnorr signature aggregation file contracts means aggregate public key renter host published file contract file contract publicly linkable given host 3 4 multisig support atomic swaps schnorr signature aggregation means multisig addresses invisible xc2 xad publicly recognizable multisig address xc2 xad efficient efficient sense spends multisig address aggregate signature aggregate public key signature needs published spending transaction related set techniques called adaptor signatures scriptless scripts allows perform cross xc2 xadchain atomic swaps indistinguishable normal transactions non xc2 xadswap participants 8 9 potential scripting logic invisibly efficiently processed scriptless scripts open area research 4 hypernodes key problem facing cryptocurrencies typical user wants use light node light nodes need large reliable network nodes secure currencies including bitcoin strong short xc2 xadterm incentive run node disincentives including hardware bandwidth cost hyperspace designed incentivize certain nodes called hypernodes share block reward miners exchange agreed 4 x0cquality xc2 xadof xc2 xadservice hypernodes represent additional layers transaction security hybrid consensus model 4 1 significant stake proof burn important useful node having dedicated equipment reliable connectivity robust uptime consequently hypernode operator indicate locked stake network xe2 x80 x99s currency space cash xsc demonstrate commitment burning stake hypernode activation hypernode demonstrate transmitting certain xsc address control transmitting smaller xsc null permanently unspendable address xc2 xad effectively xe2 x80 x9cburning xe2 x80 x9d coins nodes demonstrated locked certain coins burned eligible receive hypernode awards furthermore network periodically query hypernodes hypernode unresponsive lose status eligibility block rewards relocks reburns xsc proper cost values hypernode stake burn tricky decide hard upward bound number hypernodes active network given time values need adjustment future initially cost 1 000 000 xsc deemed reasonable 800 000 xsc locked 200 000 xsc burned activation activation cost decrease block low fixed network matures network support larger number hypernodes 4 2 multiple layers transaction security hybrid consensus model proof xc2 xadof xc2 xadwork xc2 xadonly consensus mechanisms seen number security vulnerabilities wild including 51% attacks mining pool centralization miners generating blocks regards 51% attacks causing chain reorganizations particular hyperspace currently follows bitcoin xe2 x80 x99s lead partially mitigates 10 xc2 xadminute block time long block time unfriendly users hyperspace designed decred xc2 xadinspired hybrid approach hypernodes compete earn block rewards consuming computational resources electricity order vote previous block xe2 x80 x99s validity 10 randomly selected quorum hypernodes significantly reduce potential attacks malicious miners pools attacker need control quorum mining hardware added resilience attacks allow significantly reduce network xe2 x80 x99s block time user xc2 xadfriendly number 1 block minute furthermore quorum vote reject valid blocks miner submitting blocks transactions transaction pool outlined secondary tertiary potentially quaternary sources security proof bandwidth proof capacity proof stake hypernodes participate proof bandwidth proof capacity 4 3 proof bandwidth proof bandwidth predicated idea nodes compete solve puzzle burning bandwidth instead burning electricity essence type proof work different mechanism 5 x0cthan traditional approach espoused bitcoin process described follows hypernode choose random ordered set 4 nodes based set active hypernodes deterministically randomized previous block id nonce hash concatenation previous block id public key broadcast hypernode collateral announcement message forward node list node appends public key message hashes concatenation forwards result node list final node reached node message sign concatenate public key signature pass result previous node process repeated way original initial node list public keys verify passed message verify signature valid initial node append previous block id nonce generate ordered list nodes completed bandwidth proof 11 given finished bandwidth proof node hash proof result certain number called bandwidth target node submit proof bandwidth ticket purchase bandwidth ticket pool bandwidth target adjust dynamically based bandwidth proofs bandwidth pool proof work miner preparing new block miner include votes validity previous block 5 bandwidth ticket participants given bandwidth proof contains 5 participants total 25 possible voters 13 yes votes given block proceed majority votes transactions block reward previous block invalidated 13 yes votes 13 votes given previous block orphaned able extend block validated matured bandwidth component block reward evenly distributed evenly cast vote proof work reward distributed miner 4 4 proof capacity near parallel bandwidth proof voting mechanism replicated proof capacity instead mechanisms implemented researched cryptocurrencies 12 13 14 provide tertiary layer consensus security allowing hyperspace drop blocktime 4 5 proof stake users wish participate network validation desire contribute bandwidth hard drive space hypernode proof stake offers xc2 xadtested alternative instead work xe2 x80 x9cspending xe2 x80 x9d bandwidth storage capacity user spend tokens directly locking period time order purchase stake ticket stake ticket enters ticket pool validation mechanism works like bandwidth capacity ticket processes 6 x0c5 token economics token economies based xe2 x80 x9ctokenized xe2 x80 x9d goods services physical digital limited supply useful broader audience network participants earn spend stake tokens contracts exchanging commodity earning rewards related services hyperspace marketplace digital storage space commodity services store data secure transactions manage contracts provided users network strict technical terms space cash xsc coin token economic characteristic compares utility token space cash xsc instead xe2 x80 x9creal xe2 x80 x9d money allows significantly reduce costs speed transactions overcome barriers different country xc2 xadspecific currencies eliminates need intermediaries banks payment services peer xc2 xadto xc2 xadpeer transactions short xc2 xad removes friction theoretically hyperspace token protocols erc20 generic use coin space cash xsc built core protocol significant advantages regards simplicity performance scalability resilience unlike bitcoin space cash xsc coin supply limited digital storage space general consequently capacity offered hyperspace network particular expected growing exponentially consistent source newly generated coins ensures steady incentive miners validate transactions marketplace transaction fees near xc2 xadterm coin inflation initial ramp xc2 xadup network mitigated decreasing block reward schedule requirement lock collateral contract duration fixed coin xe2 x80 x9cburns xe2 x80 x9d hypernode activation eventually supply emission year fixed occur annual inflation rate 2% utility space cash xsc currently confined hyperspace storage marketplace support atomic swaps allow integration blockchain xc2 xadbased marketplaces foreseeable future 6 licensing code running hyperspace node open source published mit license 15 hyperspace uses open apis order encourage proprietary open source 3rd party implementations storage interfaces wallets services utilize storage network 7 x0creferences 1 d vorick l champine xe2 x80 x9csia simple decentralized storage xe2 x80 x9d https sia tech sia pdf november 2014 2 m hearn m corallo xe2 x80 x9cconnection bloom filtering xe2 x80 x9d https github com bitcoin bips blob master bip xc2 xad0037 mediawiki october 24 2012 3 o osuntokun akselrod xe2 x80 x9ccompact block filters light clients xe2 x80 x9d https github com bitcoin bips blob master bip xc2 xad0158 mediawiki 24 2017 4 j lopp xe2 x80 x9ccould spv support billion bitcoin users sizing scaling claim xe2 x80 x9d https www coindesk com spv xc2 xadsupport xc2 xadbillion xc2 xadbitcoin xc2 xadusers xc2 xadsizing xc2 xadscaling xc2 xadclaim july 30 2017 5 s nakamoto xe2 x80 x9cbitcoin peer xc2 xadto xc2 xadpeer electronic cash system xcd xbe 7 reclaiming disk space xe2 x80 x9d https bitcoin org bitcoin pdf october 31 2008 6 g maxwell poelstra y seurin p wuille xe2 x80 x9csimple schnorr multi xc2 xadsignatures applications bitcoin xe2 x80 x9d https eprint iacr org 2018 068 pdf 20 2018 7 g maxwell xe2 x80 x9ccoinjoin bitcoin privacy real world xe2 x80 x9d https bitcointalk org topic 279249 august 22 2013 8 poelstra xe2 x80 x9cscriptless scripts xe2 x80 x9d https download wpsoftware net bitcoin wizardry mw xc2 xadslides 2017 xc2 xad05 xc2 xadmilan xc2 xadmeetup slides pdf 10 2017 9 m huetsch xe2 x80 x9chyperspace xc2 xadcompatible cross xc2 xadchain atomic swapping xe2 x80 x9d https github com hyperspaceapp atomicswap september 15 2018 10 decred developers xe2 x80 x9cdecred documentation hybrid design xe2 x80 x9d https docs decred org research hybrid xc2 xaddesign 11 m ghosh m richardson b ford r jansen xe2 x80 x9ca torpath torcoin proof xc2 xadof xc2 xadbandwidth altcoins compensating relays xe2 x80 x9d https www nrl navy mil itd chacs sites www nrl navy mil itd chacs files pdfs 14 xc2 xad1231 xc2 xad1559 pdf 2014 12 s gauld f ancoina r stadler xe2 x80 x9cthe burst dymaxion arbitrary scalable energy efficient anonymous transaction network based colored tangles xe2 x80 x9d https www burst xc2 xadcoin org wp xc2 xadcontent uploads 2017 07 xc2 xadburst xc2 xaddymaxion xc2 xad1 00 pdf december 27 2017 13 s park kwon g fuchsbauer p gazi j alwen k pietrzak xe2 x80 x9cspacemint cryptocurrency based proofs space xe2 x80 x9d https eprint iacr org 2015 528 pdf 2015 14 h abusalah j alwen b cohen d khilko k pietrzak l reyzin xe2 x80 x9cbeyond hellman xe2 x80 x99s time xc2 xadmemory trade xc2 xadoffs applications proofs space xe2 x80 x9d https eprint iacr org 2017 893 pdf 2017 15 xe2 x80 x9cmit license xe2 x80 x9d https en wikipedia org wiki mit license 8 x0c