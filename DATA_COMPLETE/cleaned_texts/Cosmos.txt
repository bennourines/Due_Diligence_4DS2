website agree cookie policy cosmos wordmark overview whitepaper faq plan language file download cosmos whitepaper network distributed ledgers jae kwon jae tendermint com ethan buchman ethan tendermint com discussions join community chat note read github actively developing document check regularly updates introduction tendermint validators consensus light clients preventing attacks abci cosmos overview tendermint bft governance hub zones hub zones inter blockchain communication ibc use cases distributed exchange bridging cryptocurrencies sending tokens cosmos hub withdrawing tokens cosmos hub total accountability bridge zones ethereum scaling multi application integration network partition mitigation federated resolution system issuance incentives atom token fundraiser limitations number validators validator genesis day penalties validators transaction fees incentivizing hackers governance specification parameter change proposal bounty proposal text proposal roadmap related work consensus systems classic byzantine fault tolerance bitshares delegated stake stellar bitcoinng casper horizontal scaling interledger protocol sidechains ethereum scalability efforts cosmos vs ethereum 2 0 mauve general scaling lightning network segregated witness appendix fork accountability tendermint consensus tendermint light clients preventing long range attacks overcoming forks censorship attacks abci specification appendtx checktx commit query flush info setoption initchain beginblock endblock ibc packet delivery acknowledgement merkle tree proof specification simple tree iavl tree transaction types ibcblockcommittx ibcpackettx acknowledgements citations unsorted links introduction combined success open source ecosystem decentralized file sharing public cryptocurrencies inspired understanding decentralized internet protocols radically improve socio economic infrastructure seen specialized blockchain applications like bitcoin 1 cryptocurrency zerocash 2 cryptocurrency privacy generalized smart contract platforms ethereum 3 countless distributed applications ethereum virtual machine evm augur prediction market thedao 4 investment club date blockchains suffered number drawbacks including gross energy inefficiency poor limited performance immature governance mechanisms proposals scale bitcoin s transaction throughput segregated witness 5 bitcoinng 6 vertical scaling solutions remain limited capacity single physical machine order ensure property complete auditability lightning network 7 help scale bitcoin transaction volume leaving transactions ledger completely suited micropayments privacy preserving payment rails suitable generalized scaling needs ideal solution allows multiple parallel blockchains interoperate retaining security properties proven difficult impossible proof work merged mining instance allows work secure parent chain reused child chain transactions validated order node merge mined blockchain vulnerable attack majority hashing power parent actively merge mining child academic review alternative blockchain network architectures provided additional context provide summaries proposals drawbacks related work present cosmos novel blockchain network architecture addresses problems cosmos network independent blockchains called zones zones powered tendermint bft 8 provides high performance consistent secure pbft like consensus engine strict fork accountability guarantees hold behaviour malicious actors tendermint bft consensus algorithm suited scaling public proof stake blockchains zone cosmos called cosmos hub cosmos hub multi asset proof stake cryptocurrency simple governance mechanism enables network adapt upgrade addition cosmos hub extended connecting zones hub zones cosmos network communicate inter blockchain communication ibc protocol kind virtual udp tcp blockchains tokens transferred zone securely quickly need exchange liquidity zones instead inter zone token transfers cosmos hub keeps track total tokens held zone hub isolates zone failure zones connect new zone cosmos hub zones allow future compatibility new blockchain innovations tendermint section describe tendermint consensus protocol interface build applications details appendix validators classical byzantine fault tolerant bft algorithms node weight tendermint nodes non negative voting power nodes positive voting power called validators validators participate consensus protocol broadcasting cryptographic signatures votes agree block validators voting powers determined genesis changed deterministically blockchain depending application example proof stake application cosmos hub voting power determined staking tokens bonded collateral note fractions like refer fractions total voting power total number validators validators equal weight means means consensus tendermint partially synchronous bft consensus protocol derived dls consensus algorithm 20 tendermint notable simplicity performance fork accountability protocol requires fixed known set validators validator identified public key validators attempt come consensus block time block list transactions voting consensus block proceeds rounds round round leader proposer proposes block validators vote stages accept proposed block round proposer round chosen deterministically ordered list validators proportion voting power details protocol described tendermint s security derives use optimal byzantine fault tolerance super majority voting locking mechanism ensure voting power byzantine cause violation safety values committed set validators succeeds violating safety attempts identified protocol includes voting conflicting blocks broadcasting unjustified votes despite strong guarantees tendermint provides exceptional performance benchmarks 64 nodes distributed 7 datacenters 5 continents commodity cloud instances tendermint consensus process thousands transactions second commit latencies order seconds notably performance thousand transactions second maintained harsh adversarial conditions validators crashing broadcasting maliciously crafted votes figure details figure tendermint throughput performance light clients major benefit tendermint s consensus algorithm simplified light client security making ideal candidate mobile internet things use cases bitcoin light client sync chains block headers find proof work tendermint light clients need changes validator set verify precommits latest block determine latest state succinct light client proofs enable inter blockchain communication preventing attacks tendermint protective measures preventing certain notable attacks like long range stake double spends censorship discussed fully appendix abci tendermint consensus algorithm implemented program called tendermint core tendermint bft application agnostic consensus engine turn deterministic blackbox application distributedly replicated blockchain tendermint bft connects blockchain applications application blockchain interface abci 17 abci interface defines boundary replication engine blockchain state machine application socket protocol enable consensus engine running process manage application state running abci allows blockchain applications programmed language programming language consensus engine written additionally abci makes possible easily swap consensus layer existing blockchain stack draw analogy known cryptocurrency bitcoin bitcoin cryptocurrency blockchain node maintains fully audited unspent transaction output utxo database wanted create bitcoin like system abci tendermint bft responsible sharing blocks transactions nodes establishing canonical immutable order transactions blockchain abci application responsible maintaining utxo database validating cryptographic signatures transactions preventing transactions spending non existent funds allowing clients query utxo database tendermint able decompose blockchain design offering simple api application process consensus process cosmos overview cosmos network independent parallel blockchains powered classical bft consensus algorithms like tendermint 1 blockchain network cosmos hub cosmos hub connects blockchains zones novel inter blockchain communication protocol cosmos hub tracks numerous token types keeps record total number tokens connected zone tokens transferred zone securely quickly need liquid exchange zones inter zone coin transfers cosmos hub architecture solves problems blockchain space faces today application interoperability scalability seamless upgradability example zones derived bitcoind ethereum cryptonote zcash blockchain system plugged cosmos hub zones allow cosmos scale infinitely meet global transaction demand zones great fit distributed exchange supported cosmos single distributed ledger cosmos hub isn t walled garden center universe designing protocol open network distributed ledgers serve new foundation future financial systems based principles cryptography sound economics consensus theory transparency accountability tendermint bft cosmos hub public blockchain cosmos network powered tendermint bft consensus algorithm tendermint open source project born 2014 address speed scalability environmental issues bitcoin s proof work consensus algorithm improving proven bft algorithms developed mit 1988 20 tendermint team conceptually demonstrate proof stake cryptocurrency addresses stake problem suffered generation proof stake cryptocurrencies nxt bitshares1 0 today practically bitcoin mobile wallets use trusted servers provide transaction verification proof work requires waiting confirmations transaction considered irreversibly committed double spend attacks demonstrated services like coinbase unlike blockchain consensus systems tendermint offers instant provably secure mobile client payment verification tendermint designed fork mobile wallets receive instant transaction confirmation makes trustless practical payments reality smartphones significant ramifications internet things applications validators cosmos similar role bitcoin miners instead use cryptographic signatures vote validators secure dedicated machines responsible committing blocks non validators delegate staking tokens called atoms validator earn portion block fees atom rewards incur risk getting punished slashed delegate validator gets hacked violates protocol proven safety guarantees tendermint bft consensus collateral deposit stakeholders validators delegators provide provable quantifiable security nodes light clients governance distributed public ledgers constitution governance system bitcoin relies bitcoin foundation mining coordinate upgrades slow process ethereum split eth etc hard forking address thedao hack largely prior social contract mechanism making decisions validators delegators cosmos hub vote proposals change preset parameters system automatically block gas limit coordinate upgrades vote amendments human readable constitution govern policies cosmos hub constitution allows cohesion stakeholders issues theft bugs thedao incident allowing quicker cleaner resolution zone constitution governance mechanism example cosmos hub constitution enforces immutability hub roll backs save bugs cosmos hub node implementation zone set policies roll backs enabling interoperability differing policy zones cosmos network gives users ultimate freedom potential permissionless experimentation hub zones describe novel model decentralization scalability cosmos network blockchains powered tendermint existing proposals aim create single blockchain total global transaction ordering cosmos permits blockchains run concurrently retaining interoperability basis cosmos hub manages independent blockchains called zones referred shards reference database scaling technique known sharding constant stream recent block commits zones posted hub allows hub state zone likewise zone keeps state hub zones indirectly hub packets information communicated zone posting merkle proofs evidence information sent received mechanism called inter blockchain communication ibc short figure hub zonesacknowledgement zones hubs form acyclic graph sake clarity describe simple configuration hub non hub zones hub cosmos hub blockchain hosts multi asset distributed ledger tokens held individual users zones tokens moved zone special ibc packet called coin packet hub responsible preserving global invariance total token zones ibc coin packet transactions committed sender hub receiver blockchains cosmos hub acts central ledger system security hub paramount importance zone tendermint blockchain secured 4 bft consensus needed hub secured globally decentralized set validators withstand severe attack scenarios continental network partition nation state sponsored attack zones cosmos zone independent blockchain exchanges ibc messages hub hub s perspective zone multi asset dynamic membership multi signature account send receive tokens ibc packets like cryptocurrency account zone transfer tokens receive tokens zone designated source token types granting power inflate token supply atoms cosmos hub staked validators zone connected hub double spend attacks zones result slashing atoms tendermint s fork accountability zone voting power byzantine commit invalid state cosmos hub verify execute transactions committed zones responsibility users send tokens zones trust future cosmos hub s governance system pass hub improvement proposals account zone failures example outbound token transfers zones throttled allow emergency circuit breaking zones temporary halt token transfers attack detected inter blockchain communication ibc look hub zones communicate example blockchains zone1 zone2 hub wish zone1 produce packet destined zone2 going hub packet blockchain proof posted receiving chain proof states sending chain published packet alleged destination receiving chain check proof able sender s block headers mechanism similar sidechains requires interacting chains aware bidirectional stream proof existence datagrams transactions ibc protocol naturally defined types transactions ibcblockcommittx transaction allows blockchain prove observer recent block hash ibcpackettx transaction allows blockchain prove observer given packet published sender s application merkle proof recent block hash splitting ibc mechanics separate transactions allow native fee market mechanism receiving chain determine packets committed e acknowledged allowing complete freedom sending chain outbound packets allowed figure zone1 zone2 hub ibc withoutacknowledgement example order update block hash zone1 hub hub zone2 ibcblockcommittx transaction posted hub block hash zone1 zone2 block hash hub ibcblockcommittx ibcpackettx information ibc transaction types use cases distributed exchange way bitcoin secure distributed mass replicated ledger exchanges vulnerable external internal hacks running blockchain distributed exchange cryptocurrency community calls decentralized exchange today based called atomic cross chain axc transactions axc transaction users different chains transfer transactions committed ledgers e atomically example users trade bitcoins ether tokens different ledgers axc transactions bitcoin ethereum connected benefit running exchange axc transactions users need trust trade matching service downside parties need online trade occur type decentralized exchange mass replicated distributed exchange runs blockchain users kind exchange submit limit order turn computer trade execute user online blockchain matches completes trade behalf trader centralized exchange create deep orderbook limit orders attract traders liquidity begets liquidity exchange world strong network effect winner effect exchange business current leader cryptocurrency exchanges today poloniex 24 hour volume $20m second place bitfinex 24 hour volume $5m given strong network effects unlikely axc based decentralized exchanges win volume centralized exchanges decentralized exchange compete centralized exchange need support deep orderbooks limit orders distributed exchange blockchain provide tendermint provides additional benefits faster transaction commits prioritizing fast finality sacrificing consistency zones cosmos finalize transactions fast exchange order transactions ibc token transfers zones given state cryptocurrency exchanges today great application cosmos distributed exchange aka cosmos dex transaction throughput capacity commit latency comparable centralized exchanges traders submit limit orders executed parties having online tendermint cosmos hub ibc traders funds exchange zones speed bridging cryptocurrencies privileged zone act source bridged token cryptocurrency bridge similar relationship cosmos hub zone latest blocks order verify proofs tokens moved bridge zone cosmos network keeps hub cryptocurrency indirection bridge zone allows logic hub remain simple agnostic blockchain consensus strategies bitcoin s proof work mining sending tokens cosmos hub bridge zone validator run tendermint powered blockchain special abci bridge app node origin blockchain new blocks mined origin bridge zone validators come agreement committed blocks signing sharing respective local view origin s blockchain tip bridge zone receives payment origin sufficient confirmations agreed seen case pow chain ethereum bitcoin corresponding account created bridge zone balance case ethereum bridge zone share validator set cosmos hub ethereum origin bridge contract allow ether holders send ether bridge zone sending bridge contract ethereum ether received bridge contract ether withdrawn appropriate ibc packet received bridge contract bridge zone bridge contract tracks validator set bridge zone identical cosmos hub s validator set case bitcoin concept similar instead single bridge contract utxo controlled threshold multisignature p2sh pubscript limitations p2sh system signers identical cosmos hub validator set withdrawing tokens cosmos hub ether bridge zone bridged ether transferred hub later destroyed transaction sends particular withdrawal address ethereum ibc packet proving transaction occurred bridge zone posted ethereum bridge contract allow ether withdrawn case bitcoin restricted scripting system makes difficult mirror ibc coin transfer mechanism utxo independent pubscript utxo migrated new utxo change set bitcoin escrow signers solution compress decompress utxo set necessary total number utxos total accountability bridge zones risk bridgeging contract rogue validator set byzantine voting power cause fork withdrawing ether bridge contract ethereum keeping bridged ether bridge zone worse byzantine voting power steal ether outright sent bridge contract deviating original bridgeging logic bridge zone possible address issues designing bridge totally accountable example ibc packets hub origin require acknowledgement bridge zone way state transitions bridge zone efficiently challenged verified hub origin s bridge contract hub origin allow bridge zone validators post collateral token transfers bridge contract delayed collateral unbonding period sufficiently long allow challenges independent auditors leave design specification implementation system open future cosmos improvement proposal passed cosmos hub s governance system ethereum scaling solving scaling problem open issue ethereum currently ethereum nodes process single transaction store states link tendermint commit blocks faster ethereum s proof work evm zones powered tendermint consensus operating bridged ether provide higher performance ethereum blockchains additionally cosmos hub ibc packet mechanics allow arbitrary contract logic execution se coordinate token movements ethereum contracts running different zones providing foundation token centric ethereum scaling sharding multi application integration cosmos zones run arbitrary application logic defined beginning zone s life potentially updated time governance flexibility allows cosmos zones act bridges cryptocurrencies ethereum bitcoin permits derivatives blockchains utilizing codebase different validator set initial distribution allows existing cryptocurrency frameworks ethereum zerocash bitcoin cryptonote tendermint bft higher performance consensus engine common network opening tremendous opportunity interoperability platforms furthermore multi asset blockchain single transaction contain multiple inputs outputs input token type enabling cosmos serve directly platform decentralized exchange orders assumed matched platforms alternatively zone serve distributed fault tolerant exchange orderbooks strict improvement existing centralized cryptocurrency exchanges tend hacked time zones serve blockchain backed versions enterprise government systems pieces particular service traditionally run organization group organizations instead run abci application certain zone allows inherit security interoperability public cosmos network sacrificing control underlying service cosmos offer best worlds organizations looking utilize blockchain technology wary relinquishing control completely distributed party network partition mitigation claim major problem consistency favouring consensus algorithms like tendermint network partition causes single partition voting power e g going offline halt consensus altogether cosmos architecture help mitigate problem global hub regional autonomous zones voting power zone distributed based common geographic region instance common paradigm individual cities regions operate zones sharing common hub e g cosmos hub enabling municipal activity persist event hub halts temporary network partition note allows real geological political network topological features considered designing robust federated fault tolerant systems federated resolution system namecoin blockchains attempt solve resolution problem adapting bitcoin blockchain unfortunately issues approach namecoin verify example satoshi registered particular public key point past wouldn t know public key updated recently download blocks update limitation bitcoin s utxo transaction merkle ization model transactions mutable application state merkle ized block hash lets prove existence non existence later updates t know certain recent value trusting node incurring significant costs bandwidth downloading blockchain merkle ized search tree implemented namecoin dependency proof work makes light client verification problematic light clients download complete copy headers blocks entire blockchain headers update means bandwidth requirements scale linearly time 21 addition changes proof work blockchain requires waiting additional proof work confirmation blocks hour bitcoin tendermint need recent block hash signed quorum validators voting power merkle proof current value associated makes possible succinct quick secure light client verification values cosmos concept extend registration zone cosmos associated level domain tld com org registration zone governance registration rules issuance incentives atom token cosmos hub multi asset distributed ledger special native token called atom atoms staking token cosmos hub atoms license holder vote validate delegate validators like ethereum s ether atoms pay transaction fees mitigate spam additional inflationary atoms block transaction fees rewarded validators delegators delegate validators burnatomtx transaction recover proportionate tokens reserve pool fundraiser initial distribution atom tokens validators genesis donors cosmos fundraiser 75% lead donors 5% cosmos network foundation 10% bits inc 10% genesis onward 1 3 total atoms rewarded bonded validators delegators year cosmos plan additional details limitations number validators unlike bitcoin proof work blockchains tendermint blockchain gets slower validators increased communication complexity fortunately support validators robust globally distributed blockchain fast transaction confirmation times bandwidth storage parallel compute capacity increases able support validators future genesis day maximum number validators set 100 number increase rate 13% 10 years settle 300 validators year 0 100 year 1 113 year 2 127 year 3 144 year 4 163 year 5 184 year 6 208 year 7 235 year 8 265 year 9 300 year 10 300 validator genesis day atom holders validators signing submitting bondtx transaction atoms provided collateral nonzero validator time size current validator set greater maximum number validators allowed case transaction valid atoms greater effective atoms held smallest validator effective atoms include delegated atoms new validator replaces existing validator way existing validator inactive atoms delegated atoms enter unbonding state penalties validators penalty imposed validators intentional unintentional deviation sanctioned protocol evidence immediately admissible double sign height round violation prevote lock rule tendermint consensus protocol evidence result validator losing good standing bonded atoms proportionate share tokens reserve pool collectively called stake slashed validators available regional network disruptions power failure reasons point past validatortimeoutwindow blocks validator s commit vote included blockchain validatortimeoutmaxabsent times validator inactive lose validatortimeoutpenalty default 1% stake malicious behavior produce obviously discernable evidence blockchain cases validators coordinate band force timeout malicious validators supermajority consensus situations cosmos hub halts coalition voting power going offline situations coalition voting power censor evidence malicious behavior entering blockchain hub recover hard fork reorg proposal link forks censorship attacks transaction fees cosmos hub validators accept token type combination types fees processing transaction validator subjectively set exchange rate wants choose transactions wants long blockgaslimit exceeded collected fees minus taxes specified redistributed bonded stakeholders proportion bonded atoms validatorpayoutperiod default 1 hour collected transaction fees reservetax default 2% reserve pool increase reserve pool increase security value cosmos network funds distributed accordance decisions governance system atom holders delegate voting power validators pay commission delegated validator commission set validator incentivizing hackers security cosmos hub function security underlying validators choice delegation delegators order encourage discovery early reporting found vulnerabilities cosmos hub encourages hackers publish successful exploits reporthacktx transaction says validator got hacked send bounty address exploit validator delegators inactive hackpunishmentratio default 5% s atoms slashed hackrewardratio default 5% s atoms rewarded hacker s bounty address validator recover remaining atoms backup key order prevent feature abused transfer unvested atoms portion vested vs unvested atoms validators delegators reporthacktx remain hacker bounty include unvested atoms governance specification cosmos hub operated distributed organization requires defined governance mechanism order coordinate changes blockchain variable parameters system software upgrades constitutional amendments validators responsible voting proposals failing vote proposal timely manner result validator deactivated automatically period time called absenteeismpenaltyperiod default 1 week delegators automatically inherit vote delegated validator vote overridden manually unbonded atoms vote proposal requires deposit minimumproposaldeposit tokens combination tokens including atoms proposal voters vote deposit half voters choose deposit e g proposal spam deposit goes reserve pool atoms burned proposal voters vote following options yea yeawithforce nay naywithforce abstain strict majority yea yeawithforce votes nay naywithforce votes required proposal decided passed decided failed 1 3 veto majority decision voting force strict majority vetoed gets punished losing vetopenaltyfeeblocks default 1 day s worth blocks worth fees taxes affected party vetoed majority decision additionally punished losing vetopenaltyatoms default 0 1% atoms parameter change proposal parameters defined changed passing parameterchangeproposal bounty proposal atoms inflated reserve pool funds spent passing bountyproposal text proposal proposals proposal upgrade protocol coordinated generic textproposal roadmap plan related work innovations blockchain consensus scalability past couple years section provides brief survey select number important ones consensus systems classic byzantine fault tolerance consensus presence malicious participants problem dating early 1980s leslie lamport coined phrase byzantine fault refer arbitrary process behavior deviates intended behavior contrast crash fault process simply crashes early solutions discovered synchronous networks upper bound message latency practical use limited highly controlled environments airplane controllers datacenters synchronized atomic clocks late 90s practical byzantine fault tolerance pbft 11 introduced efficient partially synchronous consensus algorithm able tolerate processes behaving arbitrarily pbft standard algorithm spawning variations including recently created ibm contribution hyperledger main benefit tendermint consensus pbft tendermint improved simplified underlying structure result embracing blockchain paradigm tendermint blocks commit order obviates complexity communication overhead associated pbft s view changes cosmos cryptocurrencies need allow block n 1 commit block n hasn t committed bandwidth reason block n hasn t committed cosmos zone doesn t help use bandwidth sharing votes blocks n network partition offline nodes reason block n hasn t committed n won t commit addition batching transactions blocks allows regular merkle hashing application state periodic digests pbft s checkpointing scheme allows faster provable transaction commits light clients faster inter blockchain communication tendermint bft includes optimizations features specified pbft example blocks proposed validators split parts merkle ized gossipped way improves broadcasting performance libswift 19 inspiration tendermint bft doesn t assumption point point connectivity functions long p2p network weakly connected bitshares delegated stake deploy proof stake pos bitshares1 0 12 contributed considerably research adoption pos blockchains particularly known delegated pos bitshares stake holders elect witnesses responsible ordering committing transactions delegates responsible coordinating software updates parameter changes bitshares2 0 aims achieve high performance 100k tx s 1s latency ideal conditions block signed single signer transaction finality taking bit longer block interval canonical specification development stakeholders remove replace misbehaving witnesses daily basis significant collateral witnesses delegators likeness tendermint pos slashed case successful double spend attack stellar building approach pioneered ripple stellar 13 refined model federated byzantine agreement processes participating consensus constitute fixed globally known set process node curates quorum slices constituting set trusted processes quorum stellar defined set nodes contain quorum slice node set agreement reached security stellar mechanism relies assumption intersection quorums non availability node requires quorum slices consist entirely correct nodes creating trade large small quorum slices difficult balance imposing significant assumptions trust ultimately nodes choose adequate quorum slices sufficient fault tolerance intact nodes results paper depend provided strategy ensuring configuration hierarchical similar border gateway protocol bgp tier isps internet establish global routing tables browsers manage tls certificates notorious insecurity criticism stellar paper tendermint based proof stake systems mitigated token strategy described new type token called atom issued represent claims future portions fees rewards advantage tendermint based proof stake relative simplicity providing sufficient provable security guarantees bitcoinng bitcoinng proposed improvement bitcoin allow forms vertical scalability increasing block size negative economic consequences typically associated change disproportionately large impact small miners improvement achieved separating leader election transaction broadcast leaders elected proof work micro blocks able broadcast transactions committed new micro block found reduces bandwidth requirements necessary win pow race allowing small miners fairly compete allowing transactions committed regularly miner find micro block casper casper 16 proposed proof stake consensus algorithm ethereum prime mode operation consensus bet letting validators iteratively bet block believe committed blockchain based bets seen far finality achieved eventually link active area research casper team challenge constructing betting mechanism proven evolutionarily stable strategy main benefit casper compared tendermint offering availability consistency consensus require quorum voting power cost commit speed implementation complexity horizontal scaling interledger protocol interledger protocol 14 strictly scalability solution provides ad hoc interoperation different ledger systems loosely coupled bilateral relationship network like lightning network purpose ilp facilitate payments specifically focuses payments disparate ledger types extends atomic transaction mechanism include hash locks quorum notaries called atomic transport protocol mechanism enforcing atomicity inter ledger transactions similar tendermint s light client spv mechanism illustration distinction ilp cosmos ibc warranted provided notaries connector ilp support membership changes allow flexible weighting notaries hand ibc designed specifically blockchains validators different weights membership change course blockchain lightning network receiver payment ilp online send confirmation sender token transfer ibc validator set receiver s blockchain responsible providing confirmation receiving user striking difference ilp s connectors responsible keeping authoritative state payments cosmos validators hub authority state ibc token transfers authority tokens held zone tokens held account zone fundamental innovation allows secure asymmetric transfer tokens zone zone analog ilp s connector cosmos persistent maximally secure blockchain ledger cosmos hub inter ledger payments ilp need backed exchange orderbook asymmetric transfer coins ledger transfer value market equivalents sidechains sidechains 15 proposed mechanism scaling bitcoin network alternative blockchains way pegged bitcoin blockchain way pegging equivalent bridging cosmos bridging distinguish market pegging sidechains allow bitcoins effectively bitcoin blockchain sidechain allow experimentation new features sidechain cosmos hub sidechain bitcoin serve light clients spv proofs determine coins transferred sidechain course bitcoin uses proof work sidechains centered bitcoin suffer problems risks proof work consensus mechanism furthermore bitcoin maximalist solution doesn t natively support variety tokens inter zone network topology cosmos said core mechanism way peg principle employed cosmos network ethereum scalability efforts ethereum currently researching number different strategies shard state ethereum blockchain address scalability needs efforts goal maintaining abstraction layer offered current ethereum virtual machine shared state space multiple research efforts underway time 18 22 cosmos vs ethereum 2 0 mauve cosmos ethereum 2 0 mauve 22 different design goals cosmos specifically tokens mauve scaling general computation cosmos bound evm different vms interoperate cosmos lets zone creator determine validates zone start new zone cosmos governance decides hub isolates zone failures global token invariants preserved general scaling lightning network lightning network proposed token transfer network operating layer bitcoin blockchain public blockchains enabling improvement orders magnitude transaction throughput moving majority transactions outside consensus ledger called payment channels possible chain cryptocurrency scripts enable parties enter bilateral stateful contracts state updated sharing digital signatures contracts closed finally publishing evidence blockchain mechanism popularized cross chain atomic swaps opening payment channels parties participants lightning network focal points routing payments leading fully connected payment channel network cost capital tied payment channels lightning network easily extend multiple independent blockchains allow transfer value exchange market asymmetrically transfer tokens blockchain main benefit cosmos network described enable direct token transfers said expect payment channels lightning network widely adopted token transfer mechanism cost saving privacy reasons segregated witness segregated witness bitcoin improvement proposal link aims increase block transaction throughput 2x 3x simultaneously making block syncing faster new nodes brilliance solution works limitations bitcoin s current protocol allows soft fork upgrade e clients older versions software continue function upgrade tendermint new protocol design restrictions different scaling priorities primarily tendermint uses bft round robin algorithm based cryptographic signatures instead mining trivially allows horizontal scaling multiple parallel blockchains regular frequent block commits allow vertical scaling appendix fork accountability designed consensus protocol provide guarantees event tolerance capacity exceeded consensus fails especially necessary economic systems byzantine behaviour substantial financial reward important guarantee form fork accountability processes caused consensus fail ie caused clients protocol accept different values fork identified punished according rules protocol possibly legal system legal system unreliable excessively expensive invoke validators forced security deposits order participate deposits revoked slashed malicious behaviour detected 10 note unlike bitcoin forking regular occurence network asynchrony probabilistic nature finding partial hash collisions cases malicious fork indistinguishable fork asynchrony bitcoin reliably implement fork accountability implicit opportunity cost paid miners mining orphaned block tendermint consensus voting stages prevote precommit vote particular block nil collection prevotes single block round polka collection precommits single block round commit precommit nil round round note strict determinism protocol incurs weak synchrony assumption faulty leaders detected skipped validators wait time timeoutpropose prevote nil value timeoutpropose increases round progression rest round fully asynchronous progress validator hears network practice extremely strong adversary indefinitely thwart weak synchrony assumption causing consensus fail commit block difficult randomized values timeoutpropose validator additional set constraints locking rules ensure network eventually commit block height malicious attempt cause block committed given height identified precommit block come justification form polka block validator precommit block round r1 locked block polka justify new precommit round r 2 come round r polka r 1 r polka r 2 second validators propose prevote block locked conditions ensure validator precommit sufficient evidence justification validators precommit contribute evidence precommit ensures safety liveness consensus algorithm details protocol described tendermint light clients need sync block headers eliminated tendermint pos existence alternative chain fork means bonded stake slashed course slashing requires share evidence fork light clients store block hash commits sees additionally light clients periodically stay synced changes validator set order avoid long range attacks solutions possible spirit similar ethereum tendermint enables applications embed global merkle root hash block allowing easily verifiable state queries things like account balances value stored contract existence unspent transaction output depending nature application preventing long range attacks assuming sufficiently resilient collection broadcast networks static validator set fork blockchain detected deposits offending validators slashed innovation suggested vitalik buterin early 2014 solves stake problem proof stake cryptocurrencies related work validator sets able change long range time original validators unbonded free create new chain genesis block incurring cost longer deposits locked attack came known long range attack lra contrast short range attack validators currently bonded cause fork punishable assuming fork accountable bft algorithm like tendermint consensus long range attacks thought critical blow proof stake fortunately lra mitigated follows validator unbond recovering collateral deposit longer earning fees participate consensus deposit untransferable time known unbonding period order weeks months second light client secure time connects network verify recent block hash trusted source preferably multiple sources condition referred weak subjectivity finally remain secure sync latest validator set frequently length unbonding period ensures light client knows changes validator set validator capital unbonded longer stake allow deceive client carrying long range attack creating new blocks beginning height bonded assuming control sufficiently early private keys note overcoming lra way requires overhaul original security model proof work pow assumed light client sync current height trusted genesis block time simply processing proof work block header overcome lra require light client come online regularity track changes validator set time come online particularly careful authenticate hear network trusted sources course requirement similar bitcoin protocol software obtained trusted source method preventing lra suited validators nodes tendermint powered blockchain nodes meant remain connected network method suitable light clients expected sync network frequently light clients expected frequent access internet blockchain network solution overcome lra non validator token holders post tokens collateral long unbonding period e g longer unbonding period validators serve light clients secondary method attesting validity current past block hashes tokens count security blockchain s consensus provide strong guarantees light clients historical block hash querying supported ethereum bond tokens specially designed smart contract provide attestation services pay effectively creating market light client lra security overcoming forks censorship attacks definition block commit coalition voting power halt blockchain going offline broadcasting votes coalition censor particular transactions rejecting blocks include transactions result significant proportion block proposals rejected slow rate block commits blockchain reducing utility value malicious coalition broadcast votes trickle grind blockchain block commits near halt engage combination attacks finally cause blockchain fork double signing violating locking rules globally active adversary involved partition network way appear wrong subset validators responsible slowdown limitation tendermint limitation consensus protocols network potentially controlled active adversary types attacks subset validators coordinate external means sign reorg proposal chooses fork evidence thereof initial subset validators signatures validators sign reorg proposal forego collateral forks clients verify signatures reorg proposal verify evidence judgement prompt end user decision example phone wallet app prompt user security warning refrigerator accept reorg proposal signed original validators voting power non synchronous byzantine fault tolerant algorithm come consensus voting power dishonest fork assumes voting power dishonest double signing lock changing justification signing reorg proposal coordination problem solved non synchronous protocol e automatically making assumptions reliability underlying network leave problem reorg proposal coordination human coordination social consensus internet media validators care ensure remaining network partitions prior signing reorg proposal avoid situations conflicting reorg proposals signed assuming external coordination medium protocol robust follows forks concern censorship attacks addition forks censorship require byzantine voting power coalition voting power commit arbitrary invalid state characteristic bft consensus system unlike double signing creates forks easily verifiable evidence detecting committment invalid state requires non validating peers verify blocks implies local copy state execute transaction computing state root independently detected way handle failure social consensus instance situations bitcoin failed forking software bugs march 2013 committing invalid state byzantine behavior miners july 2015 connected community businesses developers miners organizations established social consensus manual actions required participants heal network furthermore validators tendermint blockchain expected identifiable commitment invalid state punishable law external jurisprudence desired abci specification abci consists 3 primary message types delivered core application application replies corresponding response messages appendtx message work horse application transaction blockchain delivered message application needs validate transactions received appendtx message current state application protocol cryptographic credentials transaction validated transaction needs update application state binding value key values store updating utxo database checktx message similar appendtx s validating transactions tendermint bft s mempool checks validity transaction checktx relays valid transactions peers applications check incrementing nonce transaction return error checktx nonce old commit message compute cryptographic commitment current application state placed block header handy properties inconsistencies updating state appear blockchain forks catches class programming errors simplifies development secure lightweight clients merkle hash proofs verified checking block hash block hash signed quorum validators voting power additional abci messages allow application track change validator set application receive block information height commit votes abci requests responses simple protobuf messages check schema file appendtx arguments data byte request transaction bytes returns code uint32 response code data byte result bytes log string debug error message usage append run transaction transaction valid returns codetype ok checktx arguments data byte request transaction bytes returns code uint32 response code data byte result bytes log string debug error message usage validate transaction message mutate state transactions run checktx broadcast peers mempool layer checktx semi stateful clear state commit beginblock allow dependent sequences transactions block commit returns data byte merkle root hash log string debug error message usage return merkle root hash application state query arguments data byte query request bytes returns code uint32 response code data byte query response bytes log string debug error message flush usage flush response queue applications implement types application need implement message s handled project info returns data byte info bytes usage return information application state application specific setoption arguments key string key set value string value set key returns log string debug error message usage set application options e g key mode value mempool mempool connection key mode value consensus consensus connection options application specific initchain arguments validators validator initial genesis validators usage called genesis beginblock arguments height uint64 block height starting usage signals beginning new block called prior appendtxs endblock arguments height uint64 block height ended returns validators validator changed validators new voting powers 0 remove usage signals end block called prior commit transactions abci repository details ibc packet delivery acknowledgement reasons sender want acknowledgement delivery packet receiving chain example sender know status destination chain expected faulty sender want impose timeout packet maxheight packet field destination chain suffer denial service attack sudden spike number incoming packets cases sender require delivery acknowledgement setting initial packet status ackpending receiving chain s responsibility confirm delivery including abbreviated ibcpacket app merkle hash figure zone1 zone2 hub ibc withacknowledgement ibcblockcommit ibcpackettx posted hub proves existence ibcpacket zone1 ibcpackettx following value fromchainid zone1 fromblockheight 100 packet ibcpacket header ibcpacketheader srcchainid zone1 dstchainid zone2 number 200 status ackpending type coin maxheight 350 hub currently height 300 payload bytes coin payload ibcblockcommit ibcpackettx posted zone2 proves existence ibcpacket hub ibcpackettx following value fromchainid hub fromblockheight 300 packet ibcpacket header ibcpacketheader srcchainid zone1 dstchainid zone2 number 200 status ackpending type coin maxheight 350 payload bytes coin payload zone2 include app hash abbreviated packet shows new status acksent ibcblockcommit ibcpackettx posted hub proves existence abbreviated ibcpacket zone2 ibcpackettx following value fromchainid zone2 fromblockheight 400 packet ibcpacket header ibcpacketheader srcchainid zone1 dstchainid zone2 number 200 status acksent type coin maxheight 350 payloadhash hash bytes coin payload finally hub update status packet ackpending ackreceived evidence new finalized status zone2 ibcpackettx following value fromchainid hub fromblockheight 301 packet ibcpacket header ibcpacketheader srcchainid zone1 dstchainid zone2 number 200 status ackreceived type coin maxheight 350 payloadhash hash bytes coin payload zone1 optimistically assume successful delivery coin packet evidence contrary proven hub example hub received acksent status zone2 block 350 set status automatically timeout evidence timeout posted zone1 tokens returned figure zone1 zone2 hub ibc acknowledgement andtimeout merkle tree proof specification types merkle trees supported tendermint cosmos ecosystem simple tree iavl tree simple tree simple tree merkle tree static list elements number items power leaves different levels simple tree tries sides tree height left greater merkle tree merkle ize transactions block level elements application state root h6 h0 h1 h2 h3 h4 h5 simpletree 7 elements iavl tree purpose iavl data structure provide persistent storage key value pairs application state deterministic merkle root hash computed efficiently tree balanced variant avl algorithm operations o log n avl tree heights child subtrees node differ condition violated update tree rebalanced creating o log n new nodes point unmodified nodes old tree original avl algorithm inner nodes hold key value pairs avl algorithm note plus modifies avl algorithm values leaf nodes branch nodes store keys simplifies algorithm keeping merkle hash trail short avl tree analogous ethereum s patricia tries tradeoffs keys need hashed prior insertion iavl trees provides faster ordered iteration key space benefit applications logic simpler implement requiring types nodes inner nodes leaf nodes merkle proof average shorter balanced binary tree hand merkle root iavl tree depends order updates support additional efficient merkle trees ethereum s patricia trie binary variant available transaction types canonical implementation transactions streamed cosmos hub application abci interface cosmos hub accept number primary transaction types including sendtx bondtx unbondtx reporthacktx slashtx burnatomtx proposalcreatetx proposalvotetx fairly self explanatory documented future revision paper document primary transaction types ibc ibcblockcommittx ibcpackettx ibcblockcommittx ibcblockcommittx transaction composed chainid string id blockchain blockhash byte block hash bytes merkle root includes app hash blockpartsheader partsetheader block set header bytes needed verify vote signatures blockheight int height commit blockround int round commit commit vote tendermint precommit votes comprise block commit validatorshash byte merkle tree root hash new validator set validatorshashproof simpleproof simpletree merkle proof proving validatorshash blockhash apphash byte iavltree merkle tree root hash application state apphashproof simpleproof simpletree merkle proof proving apphash blockhash ibcpackettx ibcpacket composed header ibcpacketheader packet header payload byte bytes packet payload optional payloadhash byte hash bytes packet optional payload payloadhash present hash ibcpacket simple merkle root items header payload ibcpacket payload called abbreviated packet ibcpacketheader composed srcchainid string source blockchain id dstchainid string destination blockchain id number int unique number packets status enum ackpending acksent ackreceived noack timeout type string types application dependent cosmos reserves coin packet type maxheight int status noackwanted ackreceived height status timeout optional ibcpackettx transaction composed fromchainid string id blockchain providing packet necessarily source fromblockheight int blockchain height following packet included merkle ized block hash source chain packet ibcpacket packet data status ackpending acksent ackreceived noack timeout packetproof iavlproof iavltree merkle proof proving packet s hash apphash source chain given height sequence sending packet zone1 zone2 hub depicted figure x ibcpackettx proves hub packet included app state zone1 ibcpackettx proves zone2 packet included app state hub procedure ibcpacket fields identical srcchainid zone1 dstchainid zone2 packetproof correct merkle proof path follows ibc srcchainid dstchainid number zone1 wants send packet zone2 hub ibcpacket data identical packet merkle ized zone1 hub zone2 mutable field status tracking delivery acknowledgements thank friends peers assistance conceptualizing reviewing providing support work tendermint cosmos zaki manian skuchain provided help formatting wording especially abci section jehan tremback althea dustin byington helping initial iterations andrew miller honey badger feedback consensus greg slepak feedback consensus wording thanks bill gleim seunghwan han contributions organization contribution citations 1 bitcoin https bitcoin org bitcoin pdf 2 zerocash http zerocash project org paper 3 ethereum https github com ethereum wiki wiki white paper 4 thedao https download slock public dao whitepaper pdf 5 segregated witness https github com bitcoin bips blob master bip 0141 mediawiki 6 bitcoinng https arxiv org pdf 1510 02037v2 pdf 7 lightning network https lightning network lightning network paper draft 0 5 pdf 8 tendermint https github com tendermint tendermint wiki 9 flp impossibility https groups csail mit edu tds papers lynch jacm85 pdf 10 slasher https blog ethereum org 2014 01 15 slasher punitive proof stake algorithm 11 pbft http pmg csail mit edu papers osdi99 pdf 12 bitshares https bitshares org technology delegated proof stake consensus 13 stellar https www stellar org papers stellar consensus protocol pdf 14 interledger https interledger org rfcs 0001 interledger architecture 15 sidechains https blockstream com sidechains pdf 16 casper https blog ethereum org 2015 08 01 introducing casper friendly ghost 17 abci https github com tendermint abci 18 ethereum sharding https github com ethereum eips issues 53 19 libswift http www ds ewi tudelft nl fileadmin pds papers performanceanalysisoflibswift pdf 20 dls http groups csail mit edu tds papers lynch jacm88 pdf 21 thin client security https en bitcoin wiki thin client security 22 ethereum 2 0 mauve paper http vitalik files mauve paper html unsorted links https www docdroid net ec7xgzs 314477721 ethereum platform review opportunities challenges private consortium blockchains pdf html mail icon sign newsletter stay tuned latest updates cosmos network email address cosmos wordmark identity blog media press kit projects cosmos sdk cosmos hub tendermint core interchain standards resources whitepaper ecosystem community design assets support developers roadmap faq website maintained tendermint inc contents opinions website tendermint inc