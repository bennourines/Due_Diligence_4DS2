b Loopring A Decentralized Token Exchange Protocol Daniel Wang daniel@loopring org Jay Zhou jay@loopring org Alex Wang alex@loopring org Matthew Finestone matt finestone@gmail com https //loopring org April 6 2018 Abstract Loopring is an open protocol for building decentralized exchanges Loopring operates as a public set of smart contracts responsible for trade and settlement with an off chain group of actors aggregating and communicating orders The protocol is free extensible and serves as a standardized building block for decentralized applications (dApps) that incorporate exchange functionality Its interoperable standards facilitate trustless anonymous trading An important improvement over current decentralized exchange protocols is the ability for orders to be mix and matched with other dissimilar orders obviating the constraints of two token trading pairs and drastically improving liquidity Loopring also employs a unique and robust solution to prevent front running the unfair attempt to submit transactions into a block quicker than the original solution provider Loopring is blockchain agnostic and deployable on any blockchain with smart contract functionality At the time of writing it\xe2\x80\x99s operable on Ethereum [1] [2] and Qtum [3] with NEO [4] under construction 1 Introduction it fails to uphold the virtues these decentralized projects espouse There are also numerous practical risks and limWith the proliferation of blockchain based assets the need itations in using centralized exchanges which are described to exchange these assets amongst counterparties has signifi below Decentralized exchanges (DEXs) [7] [8] [9] have cantly increased As thousands of new tokens are introduced sought to address these issues and in many cases have including the tokenization of traditional assets this need succeeded in alleviating security risks by using blockchains is magnified Whether exchanging tokens for speculative for disintermediation However as DEX capability becomes trading motivations or converting to access networks via crucial infrastructure for the new economy there is substantheir native utility tokens the ability to exchange one cryp tial room for performance improvement Loopring aims to toasset for another is foundational for the larger ecosystem provide modular tools for said infrastructure with its dApp Indeed there is a potential energy in assets [5] and realizing agnostic open protocol this energy unlocking capital requires not only asserting ownership which blockchains have immutably allowed for but the ability to freely transfer and transform these assets 2 Current Exchange Landscape As such the trustless exchange of tokens (value) is a compelling use case for blockchain technology Until now 2 1 Inadequacies of Centralized Exchanges however crypto enthusiasts have largely settled for trading tokens on traditional centralized exchanges The Loopring The three primary risks of centralized exchanges are 1) Lack protocol is needed because just as Bitcoin [6] dutifully of security 2) Lack of transparency and 3) Lack of liquidity emphasized that in regards to peer to peer electronic cash Lack of Security arises from users typically surrender\xe2\x80\x9cthe main benefits are lost if a trusted third party is still ing control of their private keys (funds) to one centralized required to prevent double spending\xe2\x80\x9d so too are the main entity This exposes users to the possibility that centralized benefits of decentralized assets lost if they must pass through exchanges fall prey to malicious hackers The security and trusted gated centralized exchanges hacking risks facing all centralized exchanges are well known Trading decentralized tokens on centralized exchanges [10] [11] yet are often accepted as \xe2\x80\x9ctable stakes\xe2\x80\x9d for token doesn\xe2\x80\x99t make sense from a philosophical perspective as trading Centralized exchanges continue to be honeypots for 1 \x0c2 2 hackers to attack as their servers have custody over millions of dollars of user funds Exchange developers can also make honest accidental errors with user funds Simply users are not in control of their own tokens when deposited at a centralized exchange Inadequacies changes of Decentralized Ex Decentralized exchanges differ from centralized exchanges in part because users maintain control of their private keys (assets) by performing trades directly on the underlying blockchain By leveraging the trustless technology of cryptocurrencies themselves they successfully mitigate many of the abovementioned risks surrounding security However problems persist in regards to performance and structural limitations Liquidity often remains an issue as users must search for counterparties across disparate liquidity pools and standards Fragmented liquidity effects are present if DEXs or dApps at large don\xe2\x80\x99t employ consistent standards to interoperate and if orders are not shared/propagated across a wide network The liquidity of limit order books and specifically their resiliency \xe2\x80\x93 how fast filled limit orders are regenerated \xe2\x80\x93 can significantly affect optimal trading strategies [13] The absence of such standards has resulted not only in reduced liquidity but also exposure to an array of potentially insecure proprietary smart contracts Furthermore since trades are performed on chain DEXs inherit the limitations of the underlying blockchain namely scalability delays in execution (mining) and costly modifications to orders Thus blockchain order books do not scale particularly well as executing code on the blockchain incurs a cost (gas) making multiple order cancellation cadences prohibitively expensive Finally because blockchain order books are public the transaction to place an order is visible by miners as it awaits being mined into the next block and placed into an order book This delay exposes the user to the risk of being front run and having the price or execution move against him Lack of Transparency exposes users to the risk of dishonest exchanges acting unfairly The distinction here is by the exchange operator\xe2\x80\x99s malicious intentions as users are not truly trading their own assets on centralized exchanges but rather an IOU When tokens are sent to the exchange\xe2\x80\x99s wallet the exchange takes custody and offers an IOU in its place All trades are then effectively between users\xe2\x80\x99 IOUs To withdraw users redeem their IOU with the exchange and receive their tokens to their external wallet address Throughout this process there is a lack of transparency and the exchange can shutdown freeze your account go bankrupt etc It is also possible that they use user assets for other purposes while in custody such as lending them out to third parties Lack of transparency can cost users without a total loss of funds such as in higher trading fees delays at peak demand regulatory risk and orders being front ran Lack of Liquidity From the point of view of exchange operators fragmented liquidity inhibits entry by new exchanges because of two winner takes all scenarios First the exchange with the greatest number of trading pairs wins because users find it desirable to conduct all their trades on one exchange Second the exchange with the largest order book wins because of favorable bid ask spreads for each trading pair This discourages competition from newcomers because it is difficult for them to build up initial liquidity As a result many exchanges command a high market share despite user complaints and even major hacking incidents It\xe2\x80\x99s worth noting that as centralized exchanges win market share they become an ever larger hacking target 2 3 Hybrid Solutions From the point of view of users fragmented liquidity significantly reduces user experience In a centralized exchange users are only able to trade within the exchange\xe2\x80\x99s own liquidity pools against its own order book and between its supported token pairs To trade token A for token B users must go to an exchange that supports both tokens or register at different exchanges disclosing personal information Users often need to execute preliminary or intermediate trades typically against BTC or ETH paying bid ask spreads in the process Finally the order books may not be deep enough to complete the trade without material slippage Even if the exchange purports to process large volumes there is no guarantee that this volume and liquidity is not fake [12] For the above reasons purely blockchain based exchanges have limitations that make them uncompetitive with centralized exchanges There is a tradeoff between on chain inherent trustlessness and centralized exchange speed and order flexibility Protocols such as Loopring and 0x [14] extend a solution of on chain settlement with off chain order management These solutions revolve around open smart contracts but navigate scalability limitations by performing several functions off chain and giving nodes flexibility in fulfilling critical roles for the network However drawbacks remain for the hybrid model as well [15] The Loopring protocol proposes meaningful differences in our approach to a hybrid solution throughout this paper The result is disconnected silos of liquidity and a fragmented ecosystem that resembles the legacy financial system with significant trading volume centralized on few exchanges The global liquidity promises of blockchains hold no merit within centralized exchanges 3 Loopring Protocol Loopring is not a DEX but a modular protocol for building DEXs on multiple blockchains We disassemble the component parts of a traditional exchange and offer a set of public 2 \x0c30 = 3 00A In the case of fixing token B as reference of 10 we say that Alice is selling 15 token A for the price of 4 15 = 0 26666667B and Bob is buying 10 token A for the 10 = 0 33333334B Hence who\xe2\x80\x99s the buyer or seller price of 30 is arbitrary In the first situation Alice is willing to pay a higher price (3 75A) than the price Bob is selling his tokens for 3 1 Order Ring (3 00A) while in the second situation Bob is willing to pay a Loopring orders are expressed in what we call a Unidirec higher price (0 33333334B) than the price Alice is selling her tional Order Model (UDOM)[16] UDOM expresses orders tokens for (0 26666667B) It is clear that a trade is possible as token exchange requests amountS/amountB (amount to whenever the buyer is willing to pay an equal or higher price sell/buy) instead of bids and asks Since every order is just than the seller\xe2\x80\x99s price an exchange rate between two tokens a powerful feature of 10 15 15 10 the protocol is the mixing and matching of multiple orders in 4 30 = (1) 30 4 = 4 \xc2\xb7 30 = 1 25 > 1 circular trade By using up to 16 orders instead of a single 10 15 trading pair there is a dramatic increase in liquidity and Thus for a set of n orders to be able to be filled fully or potential for price improvement partially we need to know if the product of each one of the smart contracts and decentralized actors in its place The roles in the network include wallets relays liquidity sharing consortium blockchains order book browsers Ring Miners and asset tokenization services Before defining each we should first understand Loopring orders ORDER#2 owner Y amountS 9B amountB 12C 8B ORDER#1 owner X amountS 10000A amountB 2B 7898A exchange rates as buy orders results in a number greater or equal to 1 If so all the n orders can be either partially or totally filled [17] If we introduce a third counterparty Charlie such that Alice wants to give x1 token A and receive y1 token B Bob wants to give x2 token B and receive y2 token C and Charlie wants to give x3 token C and receive y3 token A The necessary tokens are present and the trade is possible if 98C ORDER#3 owner Z amountS 100C amountB 160A Figure 1 An order ring of 3 orders x1 \xc2\xb7 x2 \xc2\xb7 x3 The above figure shows an order ring of 3 orders Each \xe2\x89\xa51 (2) y1 \xc2\xb7 y2 \xc2\xb7 y3 order\xe2\x80\x99s token to sell (tokenS) is another order\xe2\x80\x99s token to See section 7 1 for more details about Loopring\xe2\x80\x99s orders buy (tokenB) It creates a loop that allows each order to exchange their desired tokens without requiring an opposing order for its pair Traditional order pair trades can of 4 Ecosystem Participants course still be executed in what is essentially a special case of an order ring The following ecosystem participants jointly provide all functionalities a centralized exchange has to offer Definition 3 1 (order ring) Let C0 C1 \xc2\xb7 \xc2\xb7 \xc2\xb7 Cn\xe2\x88\x921 be n \xe2\x80\xa2 Wallets A common wallet service or interface that different tokens O0\xe2\x86\x921 \xc2\xb7 \xc2\xb7 \xc2\xb7 Oi\xe2\x86\x92i\xe2\x8a\x951 \xc2\xb7 \xc2\xb7 \xc2\xb7 On\xe2\x88\x921\xe2\x86\x920 be n gives users access to their tokens and a way to send orders Those orders can form a order ring for trading orders to the Loopring network Wallets will be O0\xe2\x86\x921 \xe2\x86\x92 \xc2\xb7 \xc2\xb7 \xc2\xb7 \xe2\x86\x92 Oi\xe2\x86\x92i\xe2\x8a\x951 \xe2\x86\x92 \xc2\xb7 \xc2\xb7 \xc2\xb7 \xe2\x86\x92 On\xe2\x88\x921\xe2\x86\x920 incentivized to produce orders by sharing fees with ring miners (see section 8) With the belief that the where n is the length of the order ring and i \xe2\x8a\x95 1 \xe2\x89\xa1 i + 1 future of trading will take place within the safety of mod n individual user\xe2\x80\x99s wallets connecting these liquidity pools through our protocol is paramount An order ring is valid when all component transactions can be executed at an exchange rate equal to or better than \xe2\x80\xa2 Consortium Liquidity Sharing Blockchain/Relaythe original rate specified implicitly by the user To verify Mesh A relay mesh network for order & liquidity order ring validity Loopring protocol smart contracts must sharing When nodes run Loopring relay software receive order rings from ring miners where the product of they are able to join an existing network and the original exchange rates of all orders is equal to or greater share liquidity with other relays over a consortium than 1 blockchain The consortium blockchain we are Let\xe2\x80\x99s assume Alice and Bob want to trade their token building as a first implementation has near real time A and B Alice has 15 token A and she wants 4 token B for order sharing (1 2 second blocks) and trims old them Bob has 10 token B and he wants 30 token A for them history to allow for faster download by new nodes Who is buying and who is selling This depends only Notably relays need not join this consortium they on the asset we fix to give price quotations If token A is can act alone and not share liquidity with others or the reference then Alice is buying token B for the price of they can start and manage their own liquidity sharing 15 = 3 75A while Bob is selling 10 token B for the price network 4 3 \x0c\xe2\x80\xa2 Relays/Ring Miners Relays are nodes that receive orders from wallets or the relay mesh maintain public order books and trade history and optionally broadcast orders to other relays (via any arbitrary off chain medium) and/or relay mesh nodes Ringmining is a feature \xe2\x80\x93 not a requirement \xe2\x80\x93 of relays It is computationally heavy and is done completely off chain We call relays with the ring mining feature turned on \xe2\x80\x9cRing Miners\xe2\x80\x9d who produce order rings by stitching together disparate orders Relays are free in (1) how they choose to communicate with one another (2) how they build their order books and (3) how they mine order rings (mining algorithms) order books to be built in a certain way such as firstcome first serve Instead relays have the power to make their own design decisions in building their order books 4 Liquidity Sharing Relays broadcast the order to other relays through any arbitrary communication medium Once again there is flexibility how/whether nodes interact To facilitate a certain level of network connectivity there is a built in liquidity sharing relaymesh using a consortium blockchain As mentioned in the prior section this relay mesh is optimized for speed and inclusivity \xe2\x80\xa2 Loopring Protocol Smart Contracts (LPSC) A set of public and free smart contracts that checks order rings received from ring miners trustlessly settles and transfers tokens on behalf of users incentivizes ring miners and wallets with fees and emits events Relays/order browsers listen to these events to keep their order books and trade history up to date See appendix A for details ORDER 1 owner X amountS 10000 A amountB 2 B accountX 8B ORDER 2 owner Y amountS 9 B amountB 12 C 2 user Y 1 accountY 7898 A user Z accountZ 6 relay M accountM 98 C ORDER 3 owner Z amountS 100 C amountB 160 A \xe2\x80\xa2 Asset Tokenization Services (ATS) A bridge between assets that cannot be directly traded on Loopring They are centralized services run by trustworthy companies or organizations Users deposit assets (real fiat or tokens from other chains) and get tokens issued which can be redeemed for the deposit in the future Loopring is not a cross chain exchange protocol (until a suitable solution exists) but ATS enable trading of ERC20 tokens [18] with physical assets as well as assets on other blockchains 5 user X Fee share liquidity 3 settlement 4 relay N accountN ring mining ORDER 1 owner X amountS 10000 A amountB 2 B ORDER 2 owner Y amountS 9 B amountB 12 C ORDER 3 owner Z amountS 100 C amountB 160 A Exchange Process 1 Protocol Authorization In figure 2 user Y who wants to exchange tokens authorizes the LPSC to handle amountS of token B the user wants to sell This does not lock the user\xe2\x80\x99s tokens who remains free to move them while the order is processed 5 submitRing LPSC blockchain Figure 2 Loopring Exchange Process 2 Order Creation The current rate and order book for token B vs token C are provided by relays or other agents hooked up to the network such as order book browsers User Y places an order (limit order) specifying amountS and amountB and other parameters through any integrated wallet interface An amount of LRx can be added to the order as a fee for ring miners higher LRx fee means a better chance to be processed earlier by ring miners The order\xe2\x80\x99s hash is signed with user Y\xe2\x80\x99s private key 5 Ring Mining (Order Matching) Ring miners try to fill the order fully or partially at the given exchange rate or better by matching it with multiple other orders Ring mining is the main reason why the protocol is able to provide high liquidity over any pair If the executed rate is better than what user Y specified margin is shared amongst all orders in the order ring As a reward the ring miner chooses between claiming part of the margin (Margin Split and giving back the LRx to the user) or simply keeping the LRx fee 3 Order Broadcast The wallet sends the order and its signature to one or more relays Relays update their public order book The protocol doesn\xe2\x80\x99t require 6 Verification & Settlement The order ring is received by LPSC It makes multiple checks to verify the ring miner supplied data and determines if the 4 \x0cProtocol Specification order ring can be settled fully or partially (depending 7 on the fill rate of orders in ring and tokens in users\xe2\x80\x99 wallets) If all checks are successful the contract 7 1 Anatomy of an Order atomically transfers the tokens to users and pays the ring miner and wallet fees at the same time If user An order is a pack of data that describes the intent of the Y\xe2\x80\x99s balance as determined by the LPSC is insufficient user\xe2\x80\x99s trade A Loopring order is defined using the Uniit will be considered scaled down a scaled down Directional Order Model or UDOM as follows order will automatically scale up to its original size message Order { if sufficient funds are deposited to its address unlike address protocol a cancellation which is a one way manual operation address owner and cannot be reversed address tokenS address tokenB uint256 amountS 6 Operational Flexibility uint256 amountB unit256 lrcFee It\xe2\x80\x99s important to note that Loopring\xe2\x80\x99s open standard allows unit256 validSince // Seconds since epoch participants significant flexibility in how they operate Acunit256 validUntil // Seconds since epoch tors are free to implement novel business models and provide uint8 marginSplitPercentage // [1 100] value for users earning LRx fees on volume or other metrics bool buyNoMoreThanAmountB in the process (if they so choose) The ecosystem is modular uint256 walletId and meant to support participation from a multitude of // Dual Authoring address applications address authAddr // v r s are parts of the signature 6 1 Order Book uint8 v bytes32 r Relays can design their order books in any number of ways bytes32 s to display and match users\xe2\x80\x99 orders A first implementation // Dual Authoring private key of our own order book follows an OTC model where limit // not used for calculating order\xe2\x80\x99s hash orders are positioned based on price alone Timestamps of // thus it is NOT signed orders in other words have no bearing on the order book string authKey However a relay is free to design their order book in such a uint256 nonce way as to emulate a typical centralized exchange\xe2\x80\x99s matching } engine where orders are ranked by price while respecting timestamps as well If a relay was inclined to offer this type To ensure the origin of the order it is signed against of order book they can own/integrate with a wallet and the hash of its parameters excluding authAddr with the have those wallet orders sent solely to the single relay who user\xe2\x80\x99s private key The authAddr parameter is used for would then be able to match orders based on time Any signing order rings that this order is part of which prevents such configuration is possible front running Please reference section 9 1 for more details Whereas other DEX protocols at times require Relays The signature is represented by the v r and s fields and to have resources initial token balances to place taker is sent alongside the order parameters over the network orders Loopring Relays need only find matchable orders to This guarantees the order stays immutable during its whole consummate a trade and can do so without initial tokens lifetime Even though the order never changes the protocol can still compute its current state based on the balance of its address along with other variables 6 2 Liquidity Sharing UDOM doesn\xe2\x80\x99t include a price (which must be a floatingRelays are free to design how they share liquidity (orders) point number by nature) but instead uses the term rate or with each other Our consortium blockchain is but one solu r which is expressed as amountS/amountB The rate is not tion to accomplish this and the ecosystem is free to network a floating point number but an expression that will only be and communicate as they wish Besides joining a consortium evaluated with other unsigned integers on demand to keep blockchain they can build and manage their own creating all intermediate results as unsigned integers and increase rules/incentives as they see fit Relays can also work alone calculation accuracy as seen in the time sensitive wallet implementation Of course there are clear advantages in communicating with 7 1 1 Buy Amounts other Relays in pursuit of network effects however different business models could merit peculiar sharing designs and When a ring miner ring matches orders it\xe2\x80\x99s possible that a better rate will be executable allowing users to get split fees in any number of ways 5 \x0cmore tokenB than the amountB they specified However if buyNoMoreThanAmountB is set to True the protocol ensures users receive no more than amountB of tokenB Thus UDOM\xe2\x80\x99s buyNoMoreThantokenB parameter determines when an order is considered completely filled buyNoMoreThantokenB applies a cap on either amountS or amountB and allows users to express more granular trade intentions than traditional buy/sell orders For example with amountS = 10 and amountB = 2 the rate r = 10/2 = 5 Thus the user is willing to sell 5 tokenS for each tokenB The ring miner matches and finds the user a rate of 4 allowing the user to receive 2 5 tokenB instead of 2 However if the user only wants 2 tokenB and set the buyNoMoreThanAmountB flag to True the LPSC performs the transaction at a rate of 4 and the user sells 4 tokenS for each tokenB effectively saving 2 tokenS Keep in mind this does not take into account mining fees (See section 8 1) Indeed if we use 7 2 1 This step prevents arbitrageurs from unfairly realizing all the margin in an order ring by implementing new orders within it Essentially once a valid order ring is found by a ring miner it could be tempting to add other orders to the order ring to fully absorb the users\xe2\x80\x99 margin (rate discounts) As illustrated by figure 3 below carefully calculated x1 y1 x2 and y2 will make the product of all orders\xe2\x80\x99 rate be exactly 1 so there will be no rate discount ORDER 2 owner Y amountS 9B amountB 12C Order(amountS tokenS amountB tokenB buyNoMoreThantokenB) ORDER 1 owner X amountS 10000 A amountB 2 B ORDER 3 owner Z amountS 100 C amountB 160 A ORDER 5 owner addressM amountS x2 C amountB y2 A ORDER 4 owner M amountS x1 A amountB y1 B Figure 3 An order ring with sub ring This is zero risk zero value add to the network and is considered unfair conduct by the ring miner To prevent this Loopring requires that a valid loop cannot contain any sub rings To check this the LPSC ensures a token cannot be in a buy or sell position twice In the above diagram we can see that token A is a sell token twice and a buy token twice which would be disallowed to represent an order in a simplified form then for ETH/USD markets on a traditional exchange traditional buy sell modeling can express the 1st and the 3rd order below but not the other two 1 Sell 10 ETH at price of 300 USD/ETH This order can expressed as Order(10 ETH 3000 USD False) 7 2 2 Fill Rate Checking The exchange rate calculations in the order ring are made by ring miners for reasons stated above It is the LPSC that must verify they\xe2\x80\x99re correct First it verifies that the buy rate the ring miner can execute for each order is equal to or less than the original buy rate set by the user This ensures the user gets at least the exchange rate they asked for or better on the transaction Once the exchange rates are confirmed the LPSC ensures that each order in the order ring shares the same rate discount For instance if the discounted rate is \xce\xb3 then the price for each order will be r0\xe2\x86\x921 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) r1\xe2\x86\x922 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) r2\xe2\x86\x920 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) and satisfy 2 Sell ETH at price of 300 USD/ETH to get 3000 USD This order can expressed as Order(10 ETH 3000 USD True) 3 Buy 10 ETH at price of 300 USD/ETH This order can expressed as Order(3000 USD 10 ETH True) 4 Spend 3000 USD to buy as many ETH as possible at price of 300 USD/ETH This order can expressed as Order(3000 USD 10 ETH False) 7 2 Sub Ring Checking r0\xe2\x86\x921 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) \xc2\xb7 r1\xe2\x86\x922 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) \xc2\xb7 r2\xe2\x86\x920 \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) = 1 Ring Verification (3) The Loopring Smart Contracts do not perform exchange hence 1 (4) \xce\xb3 =1\xe2\x88\x92 \xe2\x88\x9a rate or amount calculations but must receive and verify 3 r0\xe2\x86\x921 \xc2\xb7 r1\xe2\x86\x922 \xc2\xb7 r2\xe2\x86\x920 what the ring miners supply for these values These calculations are done by ring miners for two main reasons If the transaction crosses n orders the discount is (1) the programming language for smart contracts such as 1 solidity[19] on Ethereum does not have support for floating \xce\xb3 = 1 \xe2\x88\x92 qQ (5) n\xe2\x88\x921 i n point math especially pow(x 1/n) (calculating the n th r i=0 root of a floating point number) and (2) it is desirable for where ri is the order turnover rate of i th order Obvithe computation to be made off chain to reduce blockchain ously only when the discount rate is \xce\xb3 \xe2\x89\xa5 0 can these orders computation and cost 6 \x0cbe filled and the i th order (Oi )\xe2\x80\x99s actual exchange rate is r\xcb\x86i = ri \xc2\xb7 (1 \xe2\x88\x92 \xce\xb3) r\xcb\x86i \xe2\x89\xa4 ri During implementation we can safely assume any order in the order ring to have the lowest value then iterate Recall our prior example where Alice has 15 token A and through the order ring at most twice to calculate each wants 4 token B for them Bob has 10 token B and wants 30 order\xe2\x80\x99s fill volume Example If the smallest amount to be filled compared to token A for them If token A is the reference then Alice is the original order is 5% all the transactions in the order ring = 3 75A while Bob is selling token B buying token B for 15 4 150 30 = 3 00A To calculate the discount 120 = 1 25 thus are scaled down to 5% Once the transactions are completed for 10 1 2 rate that renders the order that was considered to have the smallest amount 1 25 = 0 8 = (1 \xe2\x88\x92 \xce\xb3) Thus the exchange \xe2\x88\x9a the trade equitable for both parties is 0 8 \xc2\xb7 3 75 \xe2\x89\x88 3 3541 remaining to be filled should be completely filled token A per token B Bob gives 4 token B and receives 13 4164 token A more 7 3 Ring Settlement than the 12 he was expecting for those 4 tokens Alice receives 4 token B as intended but gives only 13 4164 token A If the order ring fulfills all the previous checks the order ring in exchange less than the 15 she was willing to give for those can be closed and transactions can be made This means 4 tokens Note a portion of this margin will go towards that all n orders form a closed order ring connected as in paying fees to incentivize miners (and wallets) (See section figure 4 8 1) O3 7 2 3 Fill Tracking & Cancellation A user can partially or fully cancel an order by sending a special transaction to the LPSC containing the details about the order and the amounts to cancel The LPSC takes that into account stores the amounts to cancel and emits an OrderCancelled event to the network The LPSC keeps track of filled and cancelled amounts by storing their values using the order\xe2\x80\x99s hash as an identifier This data is publicly accessible and OrderCancelled / OrderFilled events are emitted when it changes Tracking these values is critical for the LPSC during the order ring settlement step LPSC also supports cancelling all orders for any trading pair with the OrdersCancelled event and cancelling all orders for an address with the AllOrdersCancelled event 7 2 4 O2 O4 O1 O5 On Figure 4 Ring Settlement To make the transactions the LPSC uses the TokenTransferDelegate smart contract The introduction of such a delegate makes upgrading the protocol smart contract easier as all orders only need to authorize this delegate instead of different versions of the protocol For each order in the order ring a payment of tokenS is made to the next or the previous order depending on the implementation Then the ring miner\xe2\x80\x99s fee is paid depending on the fee model chosen by the ring miner Finally once all the transactions are made a RingMined event is emitted Order Scaling Orders are scaled according to the history of filled and cancelled amounts and the current balance of the senders\xe2\x80\x99 accounts The process finds the order with the smallest amount to be filled according to the above characteristics and uses it as a reference for scaling all transactions in the order ring Finding the lowest value order can help to figure out the fill volume for each order For instance if the i th order is the lowest value order then the number of tokens sold from each order s\xcc\x82 and number of tokens purchased b\xcc\x82 from each order can be calculated as 7 3 1 Emitted Events The protocol emits events that allow relays order browsers and other actors to receive order book updates as efficiently as possible The emitted events are \xe2\x80\xa2 OrderCancelled A specific order has been cancelled \xe2\x80\xa2 OrdersCancelled All orders of a trading pair from an owning address have been cancelled s\xcc\x82i = si b\xcc\x82i = s\xcc\x82i /r\xcc\x82i \xe2\x80\xa2 AllOrdersCancelled All orders of all trading pairs from an owning address have been cancelled s\xcc\x82i\xe2\x8a\x951 = b\xcc\x82i b\xcc\x82i\xe2\x8a\x951 = s\xcc\x82i\xe2\x8a\x951 /r\xcc\x82i\xe2\x8a\x951 s\xcc\x82i\xe2\x8a\x952 = b\xcc\x82i\xe2\x8a\x951 b\xcc\x82i\xe2\x8a\x952 = s\xcc\x82i\xe2\x8a\x952 /r\xcc\x82i\xe2\x8a\x952 \xe2\x80\xa2 RingMined An order ring has been settled successfully This event contains data related to each innerring token transfer where si is the balance left after orders are partially filled 7 \x0c8 LRx Token Figure 6 Loopring\xe2\x80\x99s Fee Model LRx is our generalized token notation LRC is the Loopring token on Ethereum LRQ on Qtum and LRN on NEO etc Other LRx types will be introduced in the future as Loopring is deployed on other public blockchains 8 1 where f is the LRx fee x is the margin split y is the mining income y = max(f x \xe2\x88\x92 f ) as indicated by the solid line if the LRx fee for the order is 0 the equation is y = max(0 x \xe2\x88\x92 0) that simplifies to y = x as indicated by the gray line The consequences are Fee Model 1 If the margin split is 0 ring miners will choose the flat LRx fee and are still incentivized When a user creates an order they specify an amount of LRx to be paid to the ring miner as a fee in conjunction with a percentage of the margin (marginSplitPercentage) made on the order that the ring miner can claim This is called the margin split The decision of which one to choose (fee or margin split) is left to the ring miner A representation of the margin split 2 If the LRx fee is 0 the gray line results and the income is based on a general linear model 3 When the margin split income is greater than 2x(LRx fee) ring miners choose the margin split and pay LRx to the user AdditionalBuyAmount It should be noted that if the LRx fee is non zero no matter which option the ring miner chooses there will always be a transfer of LRx between the ring miner and the order\xe2\x80\x99s sender Either the ring miner earns the LRx fee or pays the LRx fee back to the sender to take the margin split Ring miners will share a certain percentage of fees with wallets When a user places an order through a wallet and gets filled the wallet is rewarded with a portion of the fees or margin split Although this is modular and unique business models or implementations are possible our inclination is for wallets to receive approximately 20% 25% of earned fees Wallets represent a primary target for Loopring protocol integration as they have the user base but little or no source of income M arginSplit OrderOriginalBuyAmount T otalBuyAmount OrderActualBuyAmount M argin Figure 5 A 60% Margin Split If the margin on the order ring is too small a ringminer will choose the LRx fee If on the contrary the margin is substantial enough for the resulting margin split to be worth much more than the LRx fee a ring miner will choose the margin split There is another proviso however when the ring miner chooses the margin split they must pay the user (order creator) a fee which is equal to the LRx the user would have paid to the ring miner as a fee This increases the threshold of where the ring miner will choose the margin split to twice the LRx fee of the order increasing the propensity of the LRx fee choice This allows ring miners to receive a constant income on low margin order rings for the tradeoff of receiving less income on higher margin orderrings Our fee model is based on the expectation that as the market grows and matures there will be fewer high margin order rings thus necessitating fixed LRx fees as incentive We end up with the following graph 8 2 At its root the Loopring protocol is a social protocol in the sense that it relies on coordination amongst members to operate effectively towards a goal This is not dissimilar to cryptoeconomic protocols at large and indeed its usefulness is largely protected by the same mechanisms of coordination problems [20] grim trigger equilibrium and bounded rationality To this end LRx tokens are not only used to pay fees but also to align the financial incentives of the various network participants Such alignment is necessary for broad adoption of any protocol but is particularly acute for exchange protocols given that success rests largely on improving liquidity in a robust decentralized ecosystem LRx tokens will be used to effectuate protocol updates through decentralized governance Smart contract updates will in part be governed by token holders to ensure continuity and safety and to attenuate the risks of siphoned liquidity through incompatibility Given that smart contracts cannot be altered once deployed there is a risk that dApps or end users continue to interact with deprecated versions and preclude themselves from updated contracts Upgradeability is crucial to the protocol\xe2\x80\x99s success as it must adapt to market demands and the underlying blockchains y f ExpectedM iningIncome x f Decentralized Governance 2f 8 \x0cDecentralized governance by LRx stakeholders will allow for protocol smart contract updates without disrupting dApps or end users or relying too heavily on smart contract abstraction LRx tokens have a fixed supply and in the case of LRC certain percentages are frozen from the Loopring Foundation and allocated to community purposed funds [21] However LRx token owners are not the only stakeholders to consider in steering the protocol\xe2\x80\x99s direction relays/ringminers wallets developers and others are an integral part of the ecosystem and their voice must be heard In fact given that these agents need not hold any LRx to perform their respective roles (since traditional makers/takers and market makers are nonexistent initial token reserves are not mandatory) we must allow alternative methods for their interests to be respected Furthermore \xe2\x80\x9dsimple\xe2\x80\x9d tokenbased voting both on chain and off is an imperfect salve for disagreement as low voter turnout and token ownership concentration pose risks Thus the goal is to implement a governance model that is built in layers and rests on a shared knowledge that some set of decision making processes is the norm This can be facilitated by coordination institutions that offer signals from a diverse set of participants and perhaps from pre established protocol focal points As this comes to fruition the Loopring Foundation will inevitably evolve from protocol developers into protocol stewards 9 9 1 Dual Authoring process 1 For each order the wallet software will generate a random public key/private key pair and put the key pair into the order\xe2\x80\x99s JSON snippet (An alternative is to use the address derived from the public key instead of the public key itself to reduce byte size We use authAddr to represent such an address and authKey to represent authAddr\xe2\x80\x99s matching private key) 2 Compute the order\xe2\x80\x99s hash with all fields in the order except r v s and authKey) and sign the hash using the owner\xe2\x80\x99s private key (not authKey) 3 The wallet will send the order together with the authKey to relays for ring mining Ring miners will verify that authKey and authAddr are correctly paired and the order\xe2\x80\x99s signature is valid with respect to owner address 4 When an order ring is identified the ring miner will use each order\xe2\x80\x99s authKey to sign the ring\xe2\x80\x99s hash minerAddress and all the mining parameters If an order ring contains n orders there will be n signatures by the n authKeys We call these signatures the authSignatures The ring miner may also need to sign the ring\xe2\x80\x99s hash together with all mining parameters using minerAddress\xe2\x80\x99s private key Fraud and Attack Protections 5 The ring miner calls the submitRing function with all the parameters as well as all the extra authSignatures Notice that authKeys are NOT part of the on chain transaction and thus remain unknown to parties other than the ring miner itself Front running Prevention In decentralized exchanges front running is when someone tries to copy another node\xe2\x80\x99s trade solution and have it mined before the original transaction that is in the pending transaction pool (mempool) This can be achieved by specifying a higher transaction fee (gas price) The major scheme of front running in Loopring (and any protocol for order matching) are order filch when a front runner steals one or more orders from a pending order ring settlement transaction and specific to Loopring when a front runner steals the entire order ring from a pending transaction When a submitRing transaction is not confirmed and is still in the pending transaction pool anyone can easily spot such a transaction and replace minerAddress with their own address (the filcherAddress) then they can resign the payload with filcherAddress to replace the orderring\xe2\x80\x99s signature The filcher can set a higher gas price and submit a new transaction hoping block miners will pick his new transaction into the next block instead of the original submitRing transaction Previous solutions to this problem had important downsides requiring more transactions and thus costing ringminers more gas and taking at least twice the blocks to settle an order ring Our new solution Dual Authoring[22] involves the mechanism of setting up two levels of authorization for orders one for settlement and one for ring mining 6 The Loopring authSignature of each order authSignature Protocol will now verify each against the corresponding authAddr and reject the order ring if any is missing or invalid The result is that now \xe2\x80\xa2 The order\xe2\x80\x99s signature (by the private key of the owner address) guarantees the order cannot be modified including the authAddr \xe2\x80\xa2 The ring miner\xe2\x80\x99s signature (by the private key of the minerAddress) if supplied guarantees nobody can use his identity to mine an order ring \xe2\x80\xa2 The authSignatures guarantees the entire order ring cannot be modified including minerAddress and no orders can be stolen Dual Authoring prevents ring filch and order filch while still ensuring the settlement of order rings can be done in one single transaction In addition Dual Authoring opens doors for relays to share orders in two ways nonmatchable sharing and matchable sharing By default 9 \x0cLoopring operates an OTC model and only supports limitprice orders meaning that orders\xe2\x80\x99 timestamps are ignored This implies that front running a trade has no impact on the actual price of that trade but does impact whether it gets executed or not 10 10 1 \xe2\x80\xa2 Free public smart contracts enable any dApp to build or interact with the protocol \xe2\x80\xa2 Standardization among operators allows for network effects and an improved end user experience \xe2\x80\xa2 Network maintained with flexibility in running order books and communicating Other Attacks \xe2\x80\xa2 Reduced barriers to entry means lower costs for nodes joining the network and end users Sybil or DOS Attack Malicious users \xe2\x80\x93 acting as themselves or forged identities \xe2\x80\x93 could send a large amount of small orders to attack Loopring nodes However since we allow nodes to reject orders based on their own criteria \xe2\x80\x93 which they may hide or reveal \xe2\x80\x93 most of these orders will be rejected for not yielding satisfying profit when matched By empowering relays to dictate how they manage orders we do not see a massive tiny order attack as a threat \xe2\x80\xa2 Anonymous trading directly from user wallets 12 Acknowledgements We would like to express our gratitude to our mentors advisers and to the many people in the community that have been so welcoming and generous with their knowledge In particular we would like to thank Shuo Bai (from ChinaLedger) Professor Haibin Kan Alex Cheng Hongfei Da Yin Cao Xiaochuan Wu Zhen Wang Wei Yu Nian 10 2 Insufficient Balance Duan Jun Xiao Jiang Qian Jiangxu Xiang Yipeng Guo Malicious users could sign and spread orders whose order Dahai Li Kelvin Long Huaxia Xia Jun Ma and Encephalo value is non zero but whose address actually has zero Path for reviewing and providing feedback on this project balance Nodes could monitor and notice that some orders actual balance is zero update these order states accordingly and then discard them Nodes must spend time to update References the status of an order but can also choose to minimize the [1] Vitalik Buterin Ethereum a next generation smart effort by for example blacklisting addresses and dropping contract and decentralized application platform (2013) related orders URL {http //ethereum org/ethereum html} 2017 11 Summary The Loopring protocol sets out to be a foundational layer for decentralized exchange In so doing it has profound repurcussions in how people exchange assets and value Money as an intermediate commodity facilitates or replaces barter exchange and solves the double coincidence of wants problem [23] whereby two counterparties must desire each other\xe2\x80\x99s distinct good or service Similarly Loopring protocol aims to dispense of our dependencies on coincidence of wants in trading pairs by using ring matching to more easily consummate trades This is meaningful for how society and markets exchange tokens traditional assets and beyond Indeed just as decentralized cryptocurrencies pose threat to a nation\xe2\x80\x99s control over money a combinatorial protocol that can match traders (consumers/producers) at scale is a theoretical threat to the concept of money itself Protocol benefits include \xe2\x80\xa2 Off chain order management and on chain settlement means no sacrifice in performance for security [2] Gavin Wood Ethereum A secure decentralised generalised transaction ledger Ethereum Project Yellow Paper 151 2014 [3] Patrick Dai Neil Mahi Jordan Earls and Alex Norta Smart contract valuetransfer protocols on a distributed mobile application platform URL https //qtum org/uploads/files/cf6d69348ca50dd985b60425ccf282f3 pdf 2017 [4] Viktor Atterlo\xcc\x88nn A distributed ledger for gamification of pro bono time 2018 [5] Hernando de Soto The Mystery Of Capital Basic Books 2000 [6] Satoshi Nakamoto Bitcoin A peer to peer electronic cash system 2008 [7] Fabian Schuh and Daniel Larimer Bitshares 2 0 Financial smart contract platform 2015 [8] Bancor protocol URL https //bancor network/ 2017 [9] Yaron Velner Loi Luu Kybernetwork A trustless decentralized exchange and payment service https //kr kyber network/assets/ KyberNetworkWhitepaper pdf Accessed 2018 03 05 \xe2\x80\xa2 Greater liquidity due to ring mining and order sharing \xe2\x80\xa2 Dual Authoring solves the pernicious problem of front running faced by all DEXs and their users today 10 \x0c[10] Fortune How to steal $500 million in [17] Supersymmetry Remarks on loopring cryptocurrency http //fortune com/2018/01/ https //docs loopring org/pdf/ 31/coincheck hack how Accessed 2018 03 30 supersimmetry loopring remark pdf Accessed 2018 03 05 [11] Robert McMillan The inside story of mt gox bitcoins 460 dollar million disaster 2014 [18] Fabian Vogelsteller Erc Token standard URL https //github com /ethereum /EIPs /issues /20 2015 [12] Sylvain Ribes Chasing fake volume a crypto plague https //medium com/@sylvainartplayribes/ [19] Chris Dannen Introducing Ethereum and Solidity chasing fake volume a crypto plague ea1a3c1e0b5e Springer 2017 Accessed 2018 03 10 [20] Vitalik Buterin Notes on blockchain gover[13] Rossella Agliardi and Ramazan Genay Hedging nance https //vitalik ca/general/2017/12/17/ through a limit order book with varying liquidity 2014 voting html Accessed 2018 03 05 [14] Will Warren and Amir Bandeali 0x An open protocol for decentralized exchange on the ethereum blockchain 2017 [21] Loopring Foundation Lrc token documents https //docs loopring org/English/token/ Accessed 2018 03 05 [15] Iddo Bentov and Lorenz Breidenbach The cost of [22] Daniel Wang Dual authoring looprings solution to decentralization http //hackingdistributed com/ front running URL https //medium com/loopring2017/08/13/cost of decent/ Accessed 2018 03 05 protocol/dual authoring looprings solution to frontrunning d0fc9c348ef1 2018 [16] Daniel Wang Coinport\xe2\x80\x99s implemenation of udom https //github com/dong77/backcore/blob/ [23] Nick Szabo Menger on money right and wrong master/coinex/coinex backend/src/main/scala/ http //unenumerated blogspot ca/2006/06/ com/coinport/coinex/markets/MarketManager menger on money right and wrong html Accessed scala Accessed 2018 03 05 2018 03 05 Appendices Appendix A Loopring Implemented on EVM LoopringProtocol Defines interfaces and events NameRegistry Registers wallets and relays TransferableMultsig Enables multisignature ownership LoopringProtocolImpl Validates order rings Transfers tokens for settlement Emits events TokenTransferDelegate Transfers tokens on behalf of users Figure 7 Smart Contracts 11 TokenRegistry Registers ERC20/ERC223 tokens \x0cAppendix B B 1 Deployment Ethereum The following smart contracts have been deployed on Ethereum mainnet \xe2\x80\xa2 LRC 0xEF68e7C694F40c8202821eDF525dE3782458639f \xe2\x80\xa2 TokenRegistry 0xa21c1f2AE7f721aE77b1204A4f0811c642638da9 \xe2\x80\xa2 TokenTransferDelegate 0x7b126ab811f278f288bf1d62d47334351dA20d1d \xe2\x80\xa2 NameRegistry 0xd181c1808e3f010F0F0aABc6Fe1bcE2025DB7Bb7 \xe2\x80\xa2 LoopringProtocolImpl 0x0B48b747436f10c846696e889e66425e05CD740f B 2 Qtum The following smart contracts have been deployed on Qtum mainnet \xe2\x80\xa2 LRQ 2eb2a66afd4e465fb06d8b71f30fb1b93e18788d \xe2\x80\xa2 TokenRegistry c89ea34360258917daf3655f8bec5550923509b3 \xe2\x80\xa2 TokenTransferDelegate 60b3fa7f461664e4dafb621a36ac2722cc680f10 \xe2\x80\xa2 NameRegistry e26a27d92181069b25bc7283e03722f6ce7678bb \xe2\x80\xa2 LoopringProtocolImpl 5180bb56b696d16635abd8dc235e0ee432abf25d 12 \x0c 