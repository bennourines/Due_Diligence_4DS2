b Quantstamp\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bprotocol\xe2\x80\x8b \xe2\x80\x8bfor securing\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts Quantstamp is the first smart contract security auditing protocol \xe2\x80\x8bWe are extending Ethereum with technology that ensures the security of smart contracts Our team is made of up of software testing experts who collectively have over 500 Google Scholar\xe2\x80\x8b \xe2\x80\x8bcitations Founders Founding\xe2\x80\x8b \xe2\x80\x8bTeam\xe2\x80\x8b \xe2\x80\x8bMembers Richard\xe2\x80\x8b \xe2\x80\x8bMa \xe2\x80\x8b \xe2\x80\x8bCornell\xe2\x80\x8b \xe2\x80\x8bECE Algorithmic\xe2\x80\x8b \xe2\x80\x8bPortfolio\xe2\x80\x8b \xe2\x80\x8bManager Dr \xe2\x80\x8b \xe2\x80\x8bVajih\xe2\x80\x8b \xe2\x80\x8bMontaghami \xe2\x80\x8b \xe2\x80\x8bPhD Formal\xe2\x80\x8b \xe2\x80\x8bmethods Steven\xe2\x80\x8b \xe2\x80\x8bStewart \xe2\x80\x8b \xe2\x80\x8bMCS \xe2\x80\x8b \xe2\x80\x8bBA PhD \xe2\x80\x8b \xe2\x80\x8bU \xe2\x80\x8b \xe2\x80\x8bWaterloo Software\xe2\x80\x8b \xe2\x80\x8bverification \xe2\x80\x8b \xe2\x80\x8bDatabase\xe2\x80\x8b \xe2\x80\x8bimplementation Ed\xe2\x80\x8b \xe2\x80\x8bZulkoski \xe2\x80\x8b \xe2\x80\x8bB S PhD candidate \xe2\x80\x8b \xe2\x80\x8bU \xe2\x80\x8b \xe2\x80\x8bWaterloo SAT/SMT\xe2\x80\x8b \xe2\x80\x8bsolvers Leonardo\xe2\x80\x8b \xe2\x80\x8bPassos \xe2\x80\x8b \xe2\x80\x8bPhD Compilers\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bProgramming\xe2\x80\x8b \xe2\x80\x8bLanguages Advisors Dr \xe2\x80\x8b \xe2\x80\x8bVijay\xe2\x80\x8b \xe2\x80\x8bGanesh \xe2\x80\x8b \xe2\x80\x8bAssistant\xe2\x80\x8b \xe2\x80\x8bProfessor \xe2\x80\x8b \xe2\x80\x8bU \xe2\x80\x8b \xe2\x80\x8bWaterloo (Ex Stanford \xe2\x80\x8b \xe2\x80\x8bMIT) Evan\xe2\x80\x8b \xe2\x80\x8bCheng \xe2\x80\x8b \xe2\x80\x8bDirector\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bEngineering\xe2\x80\x8b \xe2\x80\x8bat\xe2\x80\x8b \xe2\x80\x8bFacebook ACM\xe2\x80\x8b \xe2\x80\x8bSoftware\xe2\x80\x8b \xe2\x80\x8bSystem\xe2\x80\x8b \xe2\x80\x8bAward\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bLLVM Dr \xe2\x80\x8b \xe2\x80\x8bDerek\xe2\x80\x8b \xe2\x80\x8bRayside \xe2\x80\x8b \xe2\x80\x8bP \xe2\x80\x8b \xe2\x80\x8bEng \xe2\x80\x8b \xe2\x80\x8bAssociate\xe2\x80\x8b \xe2\x80\x8bProfessor \xe2\x80\x8b \xe2\x80\x8bU Waterloo\xe2\x80\x8b \xe2\x80\x8b(Ex MIT) 2017 October 7\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bVersion\xe2\x80\x8b \xe2\x80\x8b3 0 \x0cThe\xe2\x80\x8b \xe2\x80\x8bProblem 4 Quantstamp\xe2\x80\x8b \xe2\x80\x8bProtocol 4 Technology\xe2\x80\x8b \xe2\x80\x8bRoadmap 6 Motivation 7 Smart\xe2\x80\x8b \xe2\x80\x8bContract\xe2\x80\x8b \xe2\x80\x8bImprovements 7 How\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bimprove\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8binfrastructure How\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bimprove\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdeveloper\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bprocess Quantstamp \xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bexample Technology 7 8 9 10 Validation\xe2\x80\x8b \xe2\x80\x8bProtocol 11 Security\xe2\x80\x8b \xe2\x80\x8bAudit\xe2\x80\x8b \xe2\x80\x8bEngine 13 Design Architectural\xe2\x80\x8b \xe2\x80\x8bView 11 14 Quantstamp\xe2\x80\x8b \xe2\x80\x8bValidation\xe2\x80\x8b \xe2\x80\x8bSmart\xe2\x80\x8b \xe2\x80\x8bContract\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum 14 Quantstamp\xe2\x80\x8b \xe2\x80\x8bReports 15 Computer aided\xe2\x80\x8b \xe2\x80\x8breasoning\xe2\x80\x8b \xe2\x80\x8btools 16 Quantstamp\xe2\x80\x8b \xe2\x80\x8bNetwork\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum Tradecraft 15 15 SAT\xe2\x80\x8b \xe2\x80\x8bsolvers 16 Model checking 16 Static\xe2\x80\x8b \xe2\x80\x8bprogram\xe2\x80\x8b \xe2\x80\x8banalysis 17 SMT\xe2\x80\x8b \xe2\x80\x8bsolvers Symbolic\xe2\x80\x8b \xe2\x80\x8bexecution\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bConcolic\xe2\x80\x8b \xe2\x80\x8bTesting Incremental\xe2\x80\x8b \xe2\x80\x8breleases\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsubscription\xe2\x80\x8b \xe2\x80\x8bmodel 16 17 17 Bug\xe2\x80\x8b \xe2\x80\x8bFinders 18 Distributed\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bParallel\xe2\x80\x8b \xe2\x80\x8bSAT 19 Parallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bSolvers 21 Security\xe2\x80\x8b \xe2\x80\x8bDisclosure\xe2\x80\x8b \xe2\x80\x8bStrategy 18 The\xe2\x80\x8b \xe2\x80\x8bSatisfiability\xe2\x80\x8b \xe2\x80\x8bProblem\xe2\x80\x8b \xe2\x80\x8b(SAT) 19 Parallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bconsensus 22 Common\xe2\x80\x8b \xe2\x80\x8bvulnerabilities\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum/Solidity 22 Financial\xe2\x80\x8b \xe2\x80\x8bPlanning 26 Research\xe2\x80\x8b \xe2\x80\x8bcontributions\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bour\xe2\x80\x8b \xe2\x80\x8bteam 27 Frequently\xe2\x80\x8b \xe2\x80\x8bAsked\xe2\x80\x8b \xe2\x80\x8bQuestions 30 Demo \xe2\x80\x8b \xe2\x80\x8bLocating\xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bParity\xe2\x80\x8b \xe2\x80\x8bMultisig\xe2\x80\x8b \xe2\x80\x8bVulnerability 28 2 \x0cDetailed\xe2\x80\x8b \xe2\x80\x8bBios 32 Addendum\xe2\x80\x8b \xe2\x80\x8bA 35 Why\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bshould\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bconcerned\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts 35 Recent\xe2\x80\x8b \xe2\x80\x8bstudies 36 The\xe2\x80\x8b \xe2\x80\x8bDAO\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bothers Addendum\xe2\x80\x8b \xe2\x80\x8bB Off chain\xe2\x80\x8b \xe2\x80\x8bTools\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bDevelopers Smart\xe2\x80\x8b \xe2\x80\x8bDebugging\xe2\x80\x8b \xe2\x80\x8busing\xe2\x80\x8b \xe2\x80\x8bdiscriminating\xe2\x80\x8b \xe2\x80\x8bexamples Important\xe2\x80\x8b \xe2\x80\x8bLegal\xe2\x80\x8b \xe2\x80\x8bDisclaimer 35 38 38 38 42 3 \x0cThe\xe2\x80\x8b \xe2\x80\x8bProblem Blockchain networks are secure but smart contracts are not In June 2016 a hacker stole $55M in Ethereum coins from the DAO due to a bug in its smart contract1 In July 2017 another hacker stole over $30M in Ether from crypto companies due to a one word bug in the smart contract code in the Parity multi sig wallet2 Security issues like these are a serious impediment to\xe2\x80\x8b \xe2\x80\x8bwider\xe2\x80\x8b \xe2\x80\x8badoption\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bnetwork\xe2\x80\x8b \xe2\x80\x8bbecause\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8berode\xe2\x80\x8b \xe2\x80\x8btrust\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts Current efforts to validate smart contracts are inadequate Engaging security consulting companies require human experts to audit smart contracts This process is expensive and error prone Also relying on a single company requires trusting that no bad actors exist in the company A distributed system relying on consensus among many different actors is far more secure Security audit processes that rely on human experts cannot keep up with the exploding growth rate of smart contract adoption Between June 2017 and October 2017 the number of smart contracts grew from 500K3 to 2M4 Within a year we expect there to be 10M smart contracts This will create an exponential increase in the demand for auditing There aren\xe2\x80\x99t enough security experts in the world to audit all smart contracts today and this shortage will be even more acute in\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfuture The potential costs of smart contract failures will also grow As of October 2017 about $3 2B (11M ETH) was locked in smart contracts The number of dollars locked in smart contracts will grow exponentially as Ethereum network and smart contract adoption grows The potential cost of\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bvulnerabilities\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bgrow\xe2\x80\x8b \xe2\x80\x8bcommensurately Quantstamp\xe2\x80\x8b \xe2\x80\x8bProtocol The Quantstamp protocol solves the smart contract security problem by creating a scalable and cost effective system to audit all smart contracts on the Ethereum network Over time we expect every Ethereum smart contract to use the Quantstamp protocol to perform a security audit because\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bessential The\xe2\x80\x8b \xe2\x80\x8bprotocol\xe2\x80\x8b \xe2\x80\x8bconsists\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8btwo\xe2\x80\x8b \xe2\x80\x8bparts \xe2\x97\x8f An automated and upgradeable software verification system that checks Solidity programs The conflict driven distributed SAT solver requires a large amount of \xe2\x80\x8b \xe2\x80\x8bhttps //www wired com/2016/06/50 million hack just showed dao human/ \xe2\x80\x8b \xe2\x80\x8bhttps //www coindesk com/30 million ether reported stolen parity wallet breach/ 3 \xe2\x80\x8b \xe2\x80\x8bhttps //web archive org/web/20170602184510/https //etherscan io/accounts/c 4 \xe2\x80\x8b \xe2\x80\x8bhttps //etherscan io/accounts/c 1 2 4 \x0ccomputing\xe2\x80\x8b \xe2\x80\x8bpower \xe2\x80\x8b \xe2\x80\x8bbut\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bable\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bcatch\xe2\x80\x8b \xe2\x80\x8bincreasingly\xe2\x80\x8b \xe2\x80\x8bsophisticated\xe2\x80\x8b \xe2\x80\x8battacks\xe2\x80\x8b \xe2\x80\x8bover\xe2\x80\x8b \xe2\x80\x8btime \xe2\x97\x8f An automated bounty payout system that rewards human participants for finding errors in smart contracts The purpose of this system is to bridge the gap while moving towards the\xe2\x80\x8b \xe2\x80\x8bgoal\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bfull\xe2\x80\x8b \xe2\x80\x8bautomation The Quantstamp protocol relies on a distributed network of participants to mitigate the effects of bad actors provide the required computing power and provide governance Each participant uses Quantstamp Protocol (QSP) tokens to pay for receive or improve upon verification services \xe2\x80\x8b \xe2\x80\x8bBelow\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdifferent\xe2\x80\x8b \xe2\x80\x8btypes\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bparticipants \xe2\x97\x8f Contributors receive QSP tokens as an invoice for contributing software for verifying Solidity programs All contributed code will be open source so that the community can have confidence in its efficacy Most Contributors will be security experts Contributions are\xe2\x80\x8b \xe2\x80\x8bvoted\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bvia\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bgovernance\xe2\x80\x8b \xe2\x80\x8bmechanism \xe2\x97\x8f Validators \xe2\x80\x8breceive QSP tokens for running the Quantstamp validation node a specialized node in the Ethereum network Verifiers only need to contribute computing resources\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bdo\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bneed\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bexpertise \xe2\x97\x8f Bug Finders \xe2\x80\x8breceive QSP tokens as a bounty for submitting bugs which break smart contracts \xe2\x97\x8f Contract Creators \xe2\x80\x8bpay QSP tokens to get their smart contract verified As the number of smart contracts grows exponentially we expect demand from Contract Creators to grow\xe2\x80\x8b \xe2\x80\x8bcommensurately \xe2\x97\x8f Contract\xe2\x80\x8b \xe2\x80\x8bUsers\xe2\x80\x8b\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bhave\xe2\x80\x8b \xe2\x80\x8baccess\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bresults\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8baudits \xe2\x97\x8f Voters\xe2\x80\x8b The governance system is a core feature of the protocol The validation smart contract is designed to be modular and upgradeable based on token holder voting (time locked multi sig) This governance mechanism reduces the chance of upgrade forks\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bdecentralizes\xe2\x80\x8b \xe2\x80\x8binfluence\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfounding\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bover\xe2\x80\x8b \xe2\x80\x8btime 5 \x0cTechnology\xe2\x80\x8b \xe2\x80\x8bRoadmap 2017 June \xe2\x97\x8f Quantstamp\xe2\x80\x8b \xe2\x80\x8bfounded\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bRichard\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bSteven July \xe2\x97\x8f Solidity\xe2\x80\x8b \xe2\x80\x8bStatic\xe2\x80\x8b \xe2\x80\x8bAnalyzer\xe2\x80\x8b \xe2\x80\x8bprototype\xe2\x80\x8b \xe2\x80\x8bbuilt\xe2\x80\x8b \xe2\x80\x8bdays\xe2\x80\x8b \xe2\x80\x8bafter\xe2\x80\x8b \xe2\x80\x8bParity\xe2\x80\x8b \xe2\x80\x8bWallet\xe2\x80\x8b \xe2\x80\x8bhack August \xe2\x97\x8f Released\xe2\x80\x8b \xe2\x80\x8bfirst\xe2\x80\x8b \xe2\x80\x8bversion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bwhitepaper September \xe2\x97\x8f Hired\xe2\x80\x8b \xe2\x80\x8bEd \xe2\x80\x8b \xe2\x80\x8bKrishna \xe2\x80\x8b \xe2\x80\x8bVajih \xe2\x80\x8b \xe2\x80\x8bLeo October \xe2\x97\x8f \xe2\x97\x8f \xe2\x97\x8f Completed\xe2\x80\x8b \xe2\x80\x8bRequest\xe2\x80\x8b \xe2\x80\x8bNetwork\xe2\x80\x8b\xe2\x80\x8b \xe2\x80\x8bsemi automated\xe2\x80\x8b \xe2\x80\x8baudit Built\xe2\x80\x8b \xe2\x80\x8bautomated\xe2\x80\x8b \xe2\x80\x8btruffle\xe2\x80\x8b \xe2\x80\x8btest\xe2\x80\x8b \xe2\x80\x8bgenerator Complete\xe2\x80\x8b \xe2\x80\x8b2nd\xe2\x80\x8b \xe2\x80\x8bsemi automated\xe2\x80\x8b \xe2\x80\x8baudit\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8banother\xe2\x80\x8b \xe2\x80\x8bcompany November \xe2\x97\x8f \xe2\x97\x8f \xe2\x97\x8f Complete\xe2\x80\x8b \xe2\x80\x8b3rd\xe2\x80\x8b \xe2\x80\x8bsemi automated\xe2\x80\x8b \xe2\x80\x8baudit\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8banother\xe2\x80\x8b \xe2\x80\x8bcompany QSP\xe2\x80\x8b \xe2\x80\x8btoken\xe2\x80\x8b \xe2\x80\x8blaunch Begin\xe2\x80\x8b \xe2\x80\x8buniversity\xe2\x80\x8b \xe2\x80\x8bpartnerships\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bUniversity\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bWaterloo December \xe2\x97\x8f \xe2\x97\x8f Build\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bvalidation/payment\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bEthereum Complete\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8b4th\xe2\x80\x8b \xe2\x80\x8bsemi automated\xe2\x80\x8b \xe2\x80\x8baudit January \xe2\x97\x8f Build\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bvalidation\xe2\x80\x8b \xe2\x80\x8bnode\xe2\x80\x8b \xe2\x80\x8b(an\xe2\x80\x8b \xe2\x80\x8baugmented\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bnode) February \xe2\x97\x8f Add\xe2\x80\x8b \xe2\x80\x8banalysis\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bv1\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bvalidation\xe2\x80\x8b \xe2\x80\x8bnode\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8breturns\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bproof of audit hash\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8braw\xe2\x80\x8b \xe2\x80\x8boutput Complete\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8b5th\xe2\x80\x8b \xe2\x80\x8bsemi automated\xe2\x80\x8b \xe2\x80\x8baudit\xe2\x80\x8b \xe2\x80\x8busing\xe2\x80\x8b \xe2\x80\x8banalysis\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bv1 2018 \xe2\x97\x8f March \xe2\x97\x8f \xe2\x97\x8f Begin\xe2\x80\x8b \xe2\x80\x8btesting\xe2\x80\x8b \xe2\x80\x8bphase\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bimprovement\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bcrypto economic\xe2\x80\x8b \xe2\x80\x8bincentives Implement\xe2\x80\x8b \xe2\x80\x8btoken\xe2\x80\x8b \xe2\x80\x8bholder\xe2\x80\x8b \xe2\x80\x8bgovernance\xe2\x80\x8b \xe2\x80\x8bsystem\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bupgradeable\xe2\x80\x8b \xe2\x80\x8bprotocol April \xe2\x97\x8f \xe2\x97\x8f Deploy\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8btest\xe2\x80\x8b \xe2\x80\x8bnetwork\xe2\x80\x8b \xe2\x80\x8bafter\xe2\x80\x8b \xe2\x80\x8btesting\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bvalidating\xe2\x80\x8b \xe2\x80\x8bsystem Begin\xe2\x80\x8b \xe2\x80\x8bacademic\xe2\x80\x8b \xe2\x80\x8breview\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsystem May \xe2\x97\x8f Hold\xe2\x80\x8b \xe2\x80\x8bfirst\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bhackathon June \xe2\x97\x8f Begin\xe2\x80\x8b \xe2\x80\x8bwork\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8binsurance\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8bpartners July \xe2\x97\x8f Hold\xe2\x80\x8b \xe2\x80\x8btoken\xe2\x80\x8b \xe2\x80\x8bholder\xe2\x80\x8b \xe2\x80\x8bvote\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bmainnet\xe2\x80\x8b \xe2\x80\x8bafter\xe2\x80\x8b \xe2\x80\x8bmonths\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8btesting/incentive adjustment August \xe2\x97\x8f Release\xe2\x80\x8b \xe2\x80\x8bmainnet\xe2\x80\x8b \xe2\x80\x8bv1 September \xe2\x97\x8f Begin\xe2\x80\x8b \xe2\x80\x8bwork\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bdistributed\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bconsensus\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8bBFT\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bMainnet\xe2\x80\x8b \xe2\x80\x8bv2 October \xe2\x97\x8f Add\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8binsurance\xe2\x80\x8b \xe2\x80\x8balpha\xe2\x80\x8b \xe2\x80\x8bproduct\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bMainnet\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts 6 \x0cMotivation Our team has devoted their careers to helping developers produce more reliable code representing years of combined research and experience in the discipline of software verification The opportunity to apply these expertise towards the next generation of the digital revolution is extremely exciting for everyone involved There is a clear and urgent need for more secure\xe2\x80\x8b \xe2\x80\x8bcode Vulnerabilities in smart contracts threaten the adoption of blockchain technology and cryptocurrencies Currently a lot of work is being done to scale Ethereum however we think security is equally important Without security of smart contracts it\xe2\x80\x99s hard for people to trust them with anything other than risk capital Our vision for the future is that smart contracts will be mainstream applications used by people to make their everyday lives easier We will help bring about this vision for smart contracts by extending Ethereum with technology that ensures the\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts We believe that automated security audits will help developers to deploy code that the public can trust without having to write formal specifications that contain more lines of code than the program itself Our aim is to automate checks and property verification as much as possible Each of these objectives should contribute to a healthier blockchain ecosystem This solution addresses\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8binfrastructural level\xe2\x80\x8b \xe2\x80\x8bproblem Our strategy is to create a foundational protocol that could be eventually incorporated directly into the Ethereum platform and to create a safe environment needed for the first Ethereum killer\xe2\x80\x8b \xe2\x80\x8bapp The remainder of this document details why a security protocol is a necessary technological advancement \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bprovides\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bhigh level\xe2\x80\x8b \xe2\x80\x8barchitecture\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bplatform Smart\xe2\x80\x8b \xe2\x80\x8bContract\xe2\x80\x8b \xe2\x80\x8bImprovements How\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bimprove\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8binfrastructure The protocol allows automated security checks on the smart contract code and does so in a trustless5\xe2\x80\x8b \xe2\x80\x8bmanner \xe2\x80\x8b \xe2\x80\x8bOur\xe2\x80\x8b \xe2\x80\x8bapproach\xe2\x80\x8b \xe2\x80\x8boffers\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfollowing\xe2\x80\x8b \xe2\x80\x8btwo\xe2\x80\x8b \xe2\x80\x8bcore\xe2\x80\x8b \xe2\x80\x8badvantages \xe2\x80\x8b \xe2\x80\x8bWe\xe2\x80\x8b \xe2\x80\x8buse\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bword\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9ctrustless\xe2\x80\x9d\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bindicate\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bprocess\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8btransparent\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bnecessary\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8btrust\xe2\x80\x8b \xe2\x80\x8ba third party \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bdeters\xe2\x80\x8b \xe2\x80\x8bbad\xe2\x80\x8b \xe2\x80\x8bactors\xe2\x80\x8b \xe2\x80\x8bfrom\xe2\x80\x8b \xe2\x80\x8bcompromising\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8baudit 5 7 \x0c1 The protocol allows end users to directly submit programs for verification without\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bpossibility\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bbad\xe2\x80\x8b \xe2\x80\x8bactor\xe2\x80\x8b \xe2\x80\x8bmanipulating\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bresults\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8baudit Imagine a bad actor at a security auditing company that allows a multi million dollar bug to slip through and then takes advantage of the live deployed contract The consensus required by the Quantstamp protocol mitigates the effects of bad actors based on the economically dominant strategy it would be too costly to try to manipulate the results Verified smart contracts are produced with the proof of audit hash which includes the version of the security library used by the verifier and a plain text report is released based on consensus In the future we plan to offer smart contract insurance in partnership with 3rd parties to further mitigate risks of using smart contracts 2 We incentivize miners by making the verification and certification of smart contracts\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bvalidation\xe2\x80\x8b \xe2\x80\x8bnode\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bEthereum In a blockchain architecture \xe2\x80\x9cminers\xe2\x80\x9d are participating entities that try to add transactions to the chain In the Quantstamp protocol miners are called verifiers A verifier needs to run the validation node software which watches for updates on the Quantstamp validation smart contract The fee for performing the service makes verifiers honest A verifier that certifies a contract produces a proof of audit hash and in turn the verifier is awarded a token fee In case a verifier finds a violation of security goals by a contract s/he produces a counterexample that is a witness to the violation and the escrow smart contract pays a bounty fee to the verifier Developers are responsible to address vulnerabilities when they are found but now they can address\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bbefore\xe2\x80\x8b \xe2\x80\x8breal\xe2\x80\x8b \xe2\x80\x8bstakes\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8binvolved How\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bimprove\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdeveloper\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bprocess Well intentioned software developers need help to produce better code As pointed out by Luu et al 6 there is a semantic gap rooted in a misunderstanding of how code executes in the blockchain consequently there is a pressing need for better tools that can assist the developer in capturing vulnerabilities prior to deployment The current way developers test code manually via open source code reviews and unit tests (if they are diligent) is not sufficient to meet the needs of blockchain technology which ideally offers perfect security All of the above methods are very manual methods that allow for human error There is a need for an easy process of verifying smart contracts while minimizing the chance of serious vulnerabilities slipping through the cracks The Quantstamp protocol provides this easy interface while also helping to protect developer reputations by proving on the blockchain that they have performed this\xe2\x80\x8b \xe2\x80\x8bauditing \xe2\x80\x8b \xe2\x80\x8bLuu\xe2\x80\x8b \xe2\x80\x8bet\xe2\x80\x8b \xe2\x80\x8bal \xe2\x80\x8b \xe2\x80\x8bdescribe\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bsemantic\xe2\x80\x8b \xe2\x80\x8bgap\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bpaper\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9cMaking\xe2\x80\x8b \xe2\x80\x8bSmart\xe2\x80\x8b \xe2\x80\x8bContracts\xe2\x80\x8b \xe2\x80\x8bSmarter \xe2\x80\x9d\xe2\x80\x8b \xe2\x80\x8bThey\xe2\x80\x8b \xe2\x80\x8bpropose\xe2\x80\x8b \xe2\x80\x8bto enhance\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8boperational\xe2\x80\x8b \xe2\x80\x8bsemantics\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8boffer\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bsymbolic\xe2\x80\x8b \xe2\x80\x8bexecution\xe2\x80\x8b \xe2\x80\x8btool\xe2\x80\x8b \xe2\x80\x8bcalled\xe2\x80\x8b \xe2\x80\x8bOyente\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bfind bugs\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts \xe2\x80\x8b \xe2\x80\x8bWe\xe2\x80\x8b \xe2\x80\x8bpragmatically\xe2\x80\x8b \xe2\x80\x8bbelieve\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bvery\xe2\x80\x8b \xe2\x80\x8bfew\xe2\x80\x8b \xe2\x80\x8bdevelopers \xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bpractice \xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bever\xe2\x80\x8b \xe2\x80\x8butilize such\xe2\x80\x8b \xe2\x80\x8btools \xe2\x80\x8b \xe2\x80\x8bjust\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bvery\xe2\x80\x8b \xe2\x80\x8bfew\xe2\x80\x8b \xe2\x80\x8bdo\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bordinary\xe2\x80\x8b \xe2\x80\x8bpractice\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bengineering 6 8 \x0cQuantstamp \xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bexample Suppose a developer plans to deploy a smart contract written in Solidity on Ethereum There is substantial risk when writing code that accesses a monetary system and the developer must be careful\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bensure\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bno\xe2\x80\x8b \xe2\x80\x8bfunds\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8blost\xe2\x80\x8b \xe2\x80\x8bdue\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bvulnerabilities To minimize risk the developer submits his code for a security audit via the Quantstamp Ethereum smart contract directly from his wallet with the source code in the data field and by sending QSP tokens Depending on the security needs of the program the developer can decide how much bounty to send Then the smart contract receives the request and on the next Ethereum block validation nodes perform a set of security checks to validate the smart contract Upon consensus the proof of audit and the report data are added to the next Ethereum block along with the appropriate token payout The report classifies issues based on a severity system from 1\xe2\x80\x9310 a 1 is a minor warning a 10 is a major vulnerability From that point on if a serious vulnerability is not immediately detected the bounty remains until the specified time has elapsed At the end of the time period the bounty is returned to the developer who requested the audit 9 \x0cWhen requesting an audit the developer chooses a public or private security report Private reports are encrypted using the public key of the smart contract and can be decrypted by the owner/developer The developer and the public can access a web portal called \xe2\x80\x8bqsscan io to review any security report The portal parses the information in the data field of the transactions via the Quantstamp smart contract and displays it By using the proof of audit hash security reports viewed by the public exactly match the audited source code to prevent manipulation of report\xe2\x80\x8b \xe2\x80\x8bresults A developer can perform security audits on a local machine prior to issuing a public audit but may find that the computational overhead is too high Quantstamp validator nodes are likely to have greater computational capacity in terms of memory and processing cores than the average developer\xe2\x80\x99s machine In the same way by aggregating the power of human hackers with a large bounty the project is able to greatly surpass the coverage of a standard code review Once the code is ready for deployment the developer is ultimately motivated to produce a public security report\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8border\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bgive\xe2\x80\x8b \xe2\x80\x8busers\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8breassurance\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bdecentralized\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8baudit\xe2\x80\x8b \xe2\x80\x8bwas\xe2\x80\x8b \xe2\x80\x8bperformed When a security report identifies issues found within a smart contract the developer can publicly annotate qsscan io with feedback This gives developers the power to flag false positives in\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8breport \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcommunity\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bvalidate\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bannotations Quantstamp does not guarantee flawless source code but provides a much higher degree of assurance that the code is secure by using both automated and crowdsourcing methods The Quantstamp team commits to continuously engage in research and development making regular improvements to the security library When there are new releases developers can re audit their smart contracts demonstrating their commitment to securing code and increasing public\xe2\x80\x8b \xe2\x80\x8bconfidence Non developers will have more confidence in projects because they can see whether smart contract\xe2\x80\x8b \xe2\x80\x8bdevelopers\xe2\x80\x8b \xe2\x80\x8bhave\xe2\x80\x8b \xe2\x80\x8baudited\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bcode \xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bwell\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bwhich\xe2\x80\x8b \xe2\x80\x8bversion\xe2\x80\x8b \xe2\x80\x8bwas\xe2\x80\x8b \xe2\x80\x8baudited Technology The technology that performs security audits is based on cutting edge research into verification algorithms7 and blockchain technology The foundation is the \xe2\x80\x8bValidator Node \xe2\x80\x8bbeing developed by Quantstamp a heavily modified Ethereum node containing an analytical toolkit that applies techniques\xe2\x80\x8b \xe2\x80\x8bfrom\xe2\x80\x8b \xe2\x80\x8bformal\xe2\x80\x8b \xe2\x80\x8bmethods8 \xe2\x80\x8b \xe2\x80\x8bKr\xc3\xb6ning\xe2\x80\x8b \xe2\x80\x8b&\xe2\x80\x8b \xe2\x80\x8bStrichman\xe2\x80\x8b \xe2\x80\x8boffer\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8balgorithmic\xe2\x80\x8b \xe2\x80\x8bview\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bformal\xe2\x80\x8b \xe2\x80\x8bmethods\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bDecision\xe2\x80\x8b \xe2\x80\x8bProcedures\xe2\x80\x8b \xe2\x80\x8b(Springer 2008) 8 \xe2\x80\x8b \xe2\x80\x8bThese\xe2\x80\x8b \xe2\x80\x8btechniques\xe2\x80\x8b \xe2\x80\x8binclude \xe2\x80\x8b \xe2\x80\x8bstatic\xe2\x80\x8b \xe2\x80\x8banalysis \xe2\x80\x8b \xe2\x80\x8bconcolic\xe2\x80\x8b \xe2\x80\x8btesting\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bsymbolic\xe2\x80\x8b \xe2\x80\x8bexecution \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bautomated reasoning\xe2\x80\x8b \xe2\x80\x8btools\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bSMT \xe2\x80\x8b \xe2\x80\x8bOur\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bhas\xe2\x80\x8b \xe2\x80\x8bcontributed\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bMapleSAT\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8baward winning\xe2\x80\x8b \xe2\x80\x8bSAT solver 7 10 \x0cValidation\xe2\x80\x8b \xe2\x80\x8bProtocol The validation protocol for security audits rewards participants who provide compute resources for the purpose of running checks on smart contracts These checks are run by validator nodes The\xe2\x80\x8b \xe2\x80\x8bprotocol\xe2\x80\x8b \xe2\x80\x8bensures\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcertification\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9cproof of audit \xe2\x80\x9d By introducing an Ethereum intermediary escrow/governance smart contract the system can ensure transaction security for computation fees If the receiving smart contract is not verified by the validator the escrow will hold the transaction until the verification is complete If the verification fails the tokens are either automatically returned to the sender or held until the security\xe2\x80\x8b \xe2\x80\x8bviolations\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8bfixed The Quantstamp nodes are partners of the Ethereum network Ethereum handles the network and transaction protocols whereas the Quantstamp nodes handles the validation protocol for security\xe2\x80\x8b \xe2\x80\x8baudits\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8badds\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdata\xe2\x80\x8b \xe2\x80\x8bfields\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8btransactions Design The validation protocol handles both the distribution of computation and consensus This protocol specifies how nodes in the network perform automated software verification and the bug\xe2\x80\x8b \xe2\x80\x8bbounty\xe2\x80\x8b \xe2\x80\x8breward\xe2\x80\x8b \xe2\x80\x8bmechanism The core value proposition of our protocol is that it is trustless and deters bad actors from manipulating audit results It is also upgradeable via decentralized governance through QSP tokens \xe2\x80\x8b \xe2\x80\x8bThis\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bhow\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bdesign\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bprotocol\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bachieve\xe2\x80\x8b \xe2\x80\x8bthese\xe2\x80\x8b \xe2\x80\x8bgoals Protocol\xe2\x80\x8b \xe2\x80\x8bGovernance We plan for the Quantstamp protocol to be an upgradeable protocol with a governance system controlled by the QSP token holders The governance system controls the update of the validation smart contract and validation node The validation smart contract is designed to be modular and upgradeable The governance system itself will be added to the smart contract after the\xe2\x80\x8b \xe2\x80\x8bcore\xe2\x80\x8b \xe2\x80\x8bfeatures\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8bimplemented \xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bdetailed\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdevelopment\xe2\x80\x8b \xe2\x80\x8broadmap A time locked multisig is used to govern upgrades In the proposed approach an upgrade transaction can be initiated by any member and the more approvals the transaction has the sooner it can be executed A member can vote against an upgrade which will mean that it will cancel out one of the other approved signatures An upgrade that has been approved by all members can be executed after 1 hour The amount of time required doubles for every 5% of members\xe2\x80\x8b \xe2\x80\x8bwho\xe2\x80\x8b \xe2\x80\x8bdon t\xe2\x80\x8b \xe2\x80\x8bvote\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bquadruples\xe2\x80\x8b \xe2\x80\x8bif\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bvote\xe2\x80\x8b \xe2\x80\x8bagainst Governance is a critical feature since validators and contributors will want to upgrade the protocol A governance mechanism decreases the chance of upgrade forks allows the protocol to 11 \x0cincorporate contributor updates and ensures consistency among users The decentralized governance feature allows the community to participate and decentralizes the influence of the founding\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bover\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bcontributors\xe2\x80\x8b \xe2\x80\x8badd\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcommunity For example validators would want to vote to change how workloads are distributed to increase their earning potential Users would want to vote to incorporate higher throughput algorithms that\xe2\x80\x8b \xe2\x80\x8bmake\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bprotocol\xe2\x80\x8b \xe2\x80\x8bfaster Crypto Economic\xe2\x80\x8b \xe2\x80\x8bIncentives To prevent bad actors from manipulating the system we construct an incentive system with a strategy of preventing rogue validator nodes from altering the audit results by making it too expensive to mount an attack Verifiers are incentivized via a transaction fee in QSP tokens and handle a part of the computation The proposed protocol requires a Byzantine fault tolerance of 2/3rds If a 2/3rds consensus is not reached tokens are not paid out We reserve the right to improve this design during the testing and validation stage The following sections will explain the\xe2\x80\x8b \xe2\x80\x8bfault\xe2\x80\x8b \xe2\x80\x8btolerance\xe2\x80\x8b \xe2\x80\x8bdesign\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bmore\xe2\x80\x8b \xe2\x80\x8bdetail Adversarial\xe2\x80\x8b \xe2\x80\x8bAttack\xe2\x80\x8b \xe2\x80\x8bversus\xe2\x80\x8b \xe2\x80\x8bDistributed\xe2\x80\x8b \xe2\x80\x8bComputation A single bad actor cannot manipulate the network because the other actors driven by economic incentives prevent the attack To distribute our computation each actor receives only a component of the overall verification problem For distributed computations we are currently considering using a \xe2\x80\x8bt\xe2\x80\x8b masking quorum system where two quorums intersect in at least 2\xe2\x80\x8bt\xe2\x80\x8b+1 servers This quorum system can handle a faulty system with at least \xe2\x80\x8bt nodes Since no single actor has access to the whole verification process a bad actor is further deterred via the distribution\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcomputational\xe2\x80\x8b \xe2\x80\x8bprocess Prisoner\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bDilemma In game theory the prisoner\xe2\x80\x99s dilemma is a paradox in which two individuals acting in their own self interest choose a course of action that does not lead to the ideal outcome Both choose to benefit themselves at the expense of the other and both end up in a worse state than if they had\xe2\x80\x8b \xe2\x80\x8bcooperated Hypothetically a verifier who finds a bug could choose \xe2\x80\x8bnot to take the bounty and to exploit it for future gains Our economic incentives however drive verifiers to pursue the bounty instead of attempting to exploit a bug The verifier that attempts to exploit a bug instead of reporting it has to assume that no other verifier will discover the same bug report it and have the bug fixed Since the number of un coordinated verifiers is large it is very likely that some other verifier will find the bug and go for the bounty Thus a verifier who pursues actions based on self interest\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bdriven\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bclaim\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bbounty \xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bdesign 12 \x0cSecurity\xe2\x80\x8b \xe2\x80\x8bAudit\xe2\x80\x8b \xe2\x80\x8bEngine The \xe2\x80\x8bSecurity Audit Engine takes an unverified smart contract as input performs the automated security and vulnerability checks and produces a report Verification results will be combined with a proof of audit hash with a version code used to track the scope of checks from that\xe2\x80\x8b \xe2\x80\x8bversion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8blibrary The time taken to run the full tests in the security library scales with the complexity of the smart contract code therefore verification rewards are proportional to computation time Verifiers require incentivization to motivate participation in this effort and a token is issued for users to access\xe2\x80\x8b \xe2\x80\x8bits\xe2\x80\x8b \xe2\x80\x8bfeatures The increased confidence the public gains when knowing that a smart contract was verified transparently by consensus will motivate developers to use these features Overall confidence will\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bbuoyed\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8befforts\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bbounty\xe2\x80\x8b \xe2\x80\x8bhunters\xe2\x80\x8b \xe2\x80\x8bwho\xe2\x80\x8b \xe2\x80\x8battempt\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bfind\xe2\x80\x8b \xe2\x80\x8bcritical\xe2\x80\x8b \xe2\x80\x8bflaws Furthermore as new vulnerabilities are discovered the security library will evolve and new versions will be released Users will be then be motivated to re verify their smart contracts using the latest version of the security library ensuring that their code is not open to attack due to newly discovered vulnerabilities This is similar to how users of software can download patches to\xe2\x80\x8b \xe2\x80\x8bfix\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bvulnerabilities \xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bhow\xe2\x80\x8b \xe2\x80\x8busers\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bupdate\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bantivirus\xe2\x80\x8b \xe2\x80\x8bapplication 13 \x0cArchitectural\xe2\x80\x8b \xe2\x80\x8bView The Quantstamp protocol (QSP) is a scalable system to audit all smart contract projects on Ethereum Our vision for the Quantstamp security protocol is that it will become part of the Ethereum\xe2\x80\x8b \xe2\x80\x8bprotocol The\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bsplit\xe2\x80\x8b \xe2\x80\x8binto\xe2\x80\x8b \xe2\x80\x8bthree\xe2\x80\x8b \xe2\x80\x8bconceptual\xe2\x80\x8b \xe2\x80\x8bcategories 1 2 3 Quantstamp\xe2\x80\x8b \xe2\x80\x8bValidator\xe2\x80\x8b \xe2\x80\x8bSmart\xe2\x80\x8b \xe2\x80\x8bContract\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum Quantstamp\xe2\x80\x8b \xe2\x80\x8bNetwork\xe2\x80\x8b \xe2\x80\x8b(QN)\xe2\x80\x8b \xe2\x80\x8bcomposed\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bheavily modified\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bnodes Quantstamp\xe2\x80\x8b \xe2\x80\x8bReports\xe2\x80\x8b \xe2\x80\x8b(data\xe2\x80\x8b \xe2\x80\x8bcarried\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8btransactions) The QN is a network of verifier nodes that generates security reports by consensus As a utility the QSP is \xe2\x80\x8bplatform agnostic there can be many variations of the security library one of which includes Solidity (for Ethereum) and variants that may cover other smart contract languages\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bdifferent\xe2\x80\x8b \xe2\x80\x8bplatforms Quantstamp\xe2\x80\x8b \xe2\x80\x8bValidation\xe2\x80\x8b \xe2\x80\x8bSmart\xe2\x80\x8b \xe2\x80\x8bContract\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum The\xe2\x80\x8b \xe2\x80\x8bfollowing\xe2\x80\x8b \xe2\x80\x8blist\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bfunctions\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8baccessible\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bend user register() Users can register an Ethereum address which alerts the Quantstamp Network to monitor API calls\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bregistered\xe2\x80\x8b \xe2\x80\x8baddress audit() 14 \x0cA user can submit source code for a security audit along with a token bounty fee Upon success the smart contract is digitally signed to prove that it passes critical security checks At this point an encrypted security report is made available The bug bounty remains on the contract to incentivize\xe2\x80\x8b \xe2\x80\x8bbug\xe2\x80\x8b \xe2\x80\x8bfinders\xe2\x80\x8b \xe2\x80\x8buntil\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bspecified\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8blimit\xe2\x80\x8b \xe2\x80\x8bruns\xe2\x80\x8b \xe2\x80\x8bout upgrade() Upgrade an existing smart contract The new version of the smart contract must pass a security audit \xe2\x80\x8b \xe2\x80\x8bExisting\xe2\x80\x8b \xe2\x80\x8bbounties\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8brolled\xe2\x80\x8b \xe2\x80\x8bforward Quantstamp\xe2\x80\x8b \xe2\x80\x8bNetwork\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum The Quantstamp Network (QN) is a specialized protocol capable of monitoring transactions related to a registered smart contract involving calls to the Quantstamp validation smart contract Quantstamp\xe2\x80\x8b \xe2\x80\x8bReports Quantstamp Reports provide a public view of the security audits performed by the QN These reports\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bmade\xe2\x80\x8b \xe2\x80\x8bvisible\xe2\x80\x8b \xe2\x80\x8bvia\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bweb based\xe2\x80\x8b \xe2\x80\x8buser interface\xe2\x80\x8b \xe2\x80\x8bat\xe2\x80\x8b \xe2\x80\x8bqsscan io\xe2\x80\x8b Reports can be public or private Public reports are visible to everyone in a human readable form Private reports are encrypted using the public key of the registered user Only the registered user can read the contents of the report Once a smart contract is deployed the final security report of the smart contract is public This allows investors and other users to review the\xe2\x80\x8b \xe2\x80\x8breport\xe2\x80\x8b \xe2\x80\x8bbefore\xe2\x80\x8b \xe2\x80\x8bcommitting\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bfunds Smart contract owners are encouraged to annotate the security report Owners are encouraged to indicate a response to all issued security warnings and flagged issues The response may be as simple as \xe2\x80\x9cthis is a false positive\xe2\x80\x9d or \xe2\x80\x9cwe are not concerned about this issue \xe2\x80\x9d or may be highly detailed The onus is on the owner to provide as much information as possible to anyone who may want to read the security report in order to increase the level of trust A \xe2\x80\x9ctrust score\xe2\x80\x9d will be computed for each smart contract based upon a combination of the findings in the security report the size of the bounty the length of time the bounty has been active and feedback from the\xe2\x80\x8b \xe2\x80\x8bcommunity Tradecraft In real world practice peer reviewing and unit testing are the major software verification techniques in use While peer review is an effective approach it is still prone to human error and manual testing is always limited in coverage and scope Software verification using automated reasoning tools can help close the gap Although research into automated reasoning tools started several decades ago their practical importance has progressed rapidly in the last few\xe2\x80\x8b \xe2\x80\x8byears 15 \x0cThe Security Audit Engine builds upon a \xe2\x80\x8btradecraft of tools and techniques founded upon the study of discrete mathematics logic and computer science It interacts with the security library which\xe2\x80\x8b \xe2\x80\x8bprovides\xe2\x80\x8b \xe2\x80\x8baccess\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bchecks\xe2\x80\x8b \xe2\x80\x8b(to\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bperformed)\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bproperties\xe2\x80\x8b \xe2\x80\x8b(to\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bverified) We\xe2\x80\x8b \xe2\x80\x8bsummarize\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8btradecraft\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bsupports\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bSecurity\xe2\x80\x8b \xe2\x80\x8bAudit\xe2\x80\x8b \xe2\x80\x8bEngine\xe2\x80\x8b \xe2\x80\x8bbelow Computer aided\xe2\x80\x8b \xe2\x80\x8breasoning\xe2\x80\x8b \xe2\x80\x8btools Computer aided reasoning tools such as SAT/SMT solvers (below) have had a dramatic impact on software engineering and security in recent years The key reason for the adoption of solvers in software engineering is the continuous improvement in their performance and expressive power SAT\xe2\x80\x8b \xe2\x80\x8bsolvers SAT (satisfiability) solvers support software verification tools Computer programs are modeled as Boolean formulas which are passed to the solver When modeling program behaviour and testing for particular conditions a Boolean formula can be constructed such that the existence of a satisfying assignment signifies the presence of a bug A SAT solver reports \xe2\x80\x9csatisfiable\xe2\x80\x9d if it can find\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bsolution\xe2\x80\x8b \xe2\x80\x8bor \xe2\x80\x8b \xe2\x80\x8bif\xe2\x80\x8b \xe2\x80\x8bnone\xe2\x80\x8b \xe2\x80\x8bexists \xe2\x80\x8b \xe2\x80\x8breports\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9cunsatisfiable \xe2\x80\x9d SAT solvers are important tools in several areas of software engineering including software verification program analysis program synthesis and automatic testing Additional applications span a variety of problem domains that include electronic design automation computer aided design and others SAT solvers are surprisingly efficient combining decision heuristics deductive\xe2\x80\x8b \xe2\x80\x8breasoning\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bvarious\xe2\x80\x8b \xe2\x80\x8bexperimentally\xe2\x80\x8b \xe2\x80\x8bvalidated\xe2\x80\x8b \xe2\x80\x8btechniques SMT\xe2\x80\x8b \xe2\x80\x8bsolvers An SMT solver is a tool that decides satisfiability of formulas in combination of various first order theories It is a generalization of a SAT solver and can handle richer theories than propositional logic Common first order theories which can model fragments of computer code for vulnerability analysis include equality bit vectors arrays rationals integers and difference logic This is a very active research area and there are many applications software verification programming languages test case generation planning and scheduling and more Well known SMT solvers include Yices (SRI) Z3 (Microsoft) CVC3 (NYU Iowa) STP (Stanford) MathSAT (U \xe2\x80\x8b \xe2\x80\x8bTrento \xe2\x80\x8b \xe2\x80\x8bItaly) \xe2\x80\x8b \xe2\x80\x8bBarcelogic\xe2\x80\x8b \xe2\x80\x8b(Catalonia \xe2\x80\x8b \xe2\x80\x8bSpain) Model checking Model checking is based on abstracting on the behavior of code in an unambiguous manner which often leads to the discovery of inconsistencies This technique explores all possible system states\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bbrute force\xe2\x80\x8b \xe2\x80\x8bmanner 16 \x0cIn contrast to model checking \xe2\x80\x8bbounded model checking (BMC) is a technique for verifying that a given property (typically expressed as an assertion by a user) holds for a program in the number of loop iterations and recursive calls bounded by a given number \xe2\x80\x8bk\xe2\x80\x8b placing a bound on the size of the execution path for finding a bug This problem can be reduced to solving the Boolean\xe2\x80\x8b \xe2\x80\x8bsatisfiability\xe2\x80\x8b \xe2\x80\x8bproblem\xe2\x80\x8b \xe2\x80\x8busing\xe2\x80\x8b \xe2\x80\x8bSAT solvers The utility of bounded model checking is in part supported by the \xe2\x80\x8bsmall scope hypothesis\xe2\x80\x8b This hypothesis states that most bugs have small counterexamples and has proven to be an effective idea for finding bugs in software models This hypothesis is the basis for so called \xe2\x80\x8blightweight formal\xe2\x80\x8b \xe2\x80\x8bmethods Static\xe2\x80\x8b \xe2\x80\x8bprogram\xe2\x80\x8b \xe2\x80\x8banalysis Static analysis determines properties of a program without actually executing the program Automated tools can assist programmers and developers in carrying out static analysis Static analysis has been used to find potential null pointer bugs and to verify that device drivers always respect\xe2\x80\x8b \xe2\x80\x8bAPI\xe2\x80\x8b \xe2\x80\x8busage\xe2\x80\x8b \xe2\x80\x8brequirements Symbolic\xe2\x80\x8b \xe2\x80\x8bexecution\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bConcolic\xe2\x80\x8b \xe2\x80\x8bTesting Concolic testing is a hybrid software verification technique that performs symbolic execution a classical technique that treats program variables as symbolic variables along a concrete execution path Symbolic execution is used with an automated theorem prover to generate new test\xe2\x80\x8b \xe2\x80\x8bcases \xe2\x80\x8b \xe2\x80\x8bIts\xe2\x80\x8b \xe2\x80\x8bmain\xe2\x80\x8b \xe2\x80\x8bfocus\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bfinding\xe2\x80\x8b \xe2\x80\x8bbugs\xe2\x80\x8b \xe2\x80\x8brather\xe2\x80\x8b \xe2\x80\x8bthan\xe2\x80\x8b \xe2\x80\x8bproving\xe2\x80\x8b \xe2\x80\x8bcorrectness Incremental\xe2\x80\x8b \xe2\x80\x8breleases\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsubscription\xe2\x80\x8b \xe2\x80\x8bmodel Software releases for the Security Library will have critical major and minor update version tags When developers deploy code they have the ability to flag the contract for re verification upon each critical/major/minor release on a subscription payment model For very financially sensitive contracts developers can choose re verification on all releases For less sensitive contracts they can choose re verification only on critical releases When developers flag the contract for verification and a subsequent verification fails they will be notified by the network and\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8btake\xe2\x80\x8b \xe2\x80\x8bimmediate\xe2\x80\x8b \xe2\x80\x8baction The market price of the token transaction fee is an essential component of the platform that will balance computational resource supply and recurring demand Because the market price of the token is free floating decentralized verifier nodes are incentivized by market forces to dynamically\xe2\x80\x8b \xe2\x80\x8bbring\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8badditional\xe2\x80\x8b \xe2\x80\x8bresources\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bmeet\xe2\x80\x8b \xe2\x80\x8bdemand A developer can choose to not subscribe because they are confident in their application and do not want to pay subscription fees but have a critical vulnerability in the code that is only uncovered at a later date by a new release There is a possibility that vulnerabilities may be 17 \x0cdiscovered at a later date in contracts that have already been deployed to the network with an earlier\xe2\x80\x8b \xe2\x80\x8bversion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bSecurity\xe2\x80\x8b \xe2\x80\x8bLibrary Bug\xe2\x80\x8b \xe2\x80\x8bFinders In open source software developers are often unrewarded for finding bugs Recently9 Emin G\xc3\xbcn Sirer found two critical vulnerabilities in BitGo while on vacation and wrote a friendly email to alert them In a common experience among security developers he received a thankless reply and later was actually snubbed by the BitGo CTO The automated bounty reward payout of QSP tokens will allow skilled developers to submit bugs to the validator contracts and earn immediate\xe2\x80\x8b \xe2\x80\x8brewards\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bpublic\xe2\x80\x8b \xe2\x80\x8brecognition\xe2\x80\x8b \xe2\x80\x8bwithout\xe2\x80\x8b \xe2\x80\x8ball\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bback and forth\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8bcompanies Bounties in QSP tokens are submitted when the source code is sent to the Quantstamp validator smart contract and then held in escrow Bug finders can use any means at their disposal to break the code and if a smart contract is found to have major vulnerabilities then the verifier is awarded the bug bounty that was held in escrow Validator nodes have run validation software that\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bverify\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsubmitted\xe2\x80\x8b \xe2\x80\x8bbug We believe that it will be possible for skilled developers to earn an income purely via bug finding by manually searching for security flaws in public smart contracts on our platform Financially sensitive contracts worth millions of dollars should in theory have bouty contracts worth at least tens of thousands of dollars before being deployed live This will increase the security of our platform and also incentivize more security experts to spend time in the ecosystem\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bdevelop\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bskills Security\xe2\x80\x8b \xe2\x80\x8bDisclosure\xe2\x80\x8b \xe2\x80\x8bStrategy Attackers might choose to leverage the security library as a tool for finding vulnerabilities in existing smart contracts Any detected vulnerabilities could then be used as a starting point for planning an attack It is not our intention to facilitate the efforts of attackers no matter how unlikely\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bwould\xe2\x80\x8b \xe2\x80\x8bsucceed In theory this unfortunate scenario could be avoided from the start if all deployed smart contracts were pre audited by the QSP without ever providing attackers with access to the complete\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8blibrary \xe2\x80\x8b \xe2\x80\x8bFor\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8breason \xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8btake\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfollowing\xe2\x80\x8b \xe2\x80\x8bactions 1 We will implement a staging period during the library release process during which time we\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bgenerate\xe2\x80\x8b \xe2\x80\x8bencrypted\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8breports\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bowners\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8baccess 2 We will publish public statistics indicating the frequency with which critical issues are present in smart contracts with the hope of motivating smart contract owners to read security reports\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8btake\xe2\x80\x8b \xe2\x80\x8bappropriate\xe2\x80\x8b \xe2\x80\x8bactions 9 \xe2\x80\x8b \xe2\x80\x8bhttp //hackingdistributed com/2017/07/20/parity wallet not alone/ 18 \x0c3 To avoid giving clues to would be attackers we will ensure that the existence of a report will not be indicative of the existence of a vulnerability nor will characteristics of the encrypted report \xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bits\xe2\x80\x8b \xe2\x80\x8bsize \xe2\x80\x8b \xe2\x80\x8boffer\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8breliable\xe2\x80\x8b \xe2\x80\x8bclues Whenever a new version of the security library is released there may be a window of time in which previously audited smart contracts have newly detectable vulnerabilities This again could give an attacker the opportunity to use the security library as a starting point for planning an attack even if that window of opportunity is relatively small This is a secondary purpose of the independent verifier system by leveraging human intelligence with bounties we can bridge the gap between inadequate automated checking and the converse sophisticated automated attacks Distributed\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bParallel\xe2\x80\x8b \xe2\x80\x8bSAT Software verification offers many benefits better code better testing less hacks and is an effective way to improve software security The SAT Solver is an important tool in this effort In this\xe2\x80\x8b \xe2\x80\x8bsection \xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8boffer\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcursory\xe2\x80\x8b \xe2\x80\x8bdiscussion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bParallel\xe2\x80\x8b \xe2\x80\x8bSAT The Quantstamp Network offers a fascinating and exciting opportunity for the domain of SAT Quantstamp is building a new kind of distributed SAT solver where consensus and redundancy are built in and participants are incentivized to solve all varieties of SAT problems in their quest to claim tokens and certify contracts The application of this technology to smart contracts is\xe2\x80\x8b \xe2\x80\x8bparticularly\xe2\x80\x8b \xe2\x80\x8bexciting\xe2\x80\x8b \xe2\x80\x8bbecause\xe2\x80\x8b \xe2\x80\x8bthere\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bso\xe2\x80\x8b \xe2\x80\x8bmuch\xe2\x80\x8b \xe2\x80\x8bat\xe2\x80\x8b \xe2\x80\x8bstake The\xe2\x80\x8b \xe2\x80\x8bSatisfiability\xe2\x80\x8b \xe2\x80\x8bProblem\xe2\x80\x8b \xe2\x80\x8b(SAT) A problem instance of SAT consists of a Boolean formula \xe2\x80\x8bf in \xe2\x80\x8bn variables A SAT solver determines the existence or non existence of a satisfying variable assignment in other words an assignment of either \xe2\x80\x8btrue or \xe2\x80\x8bfalse to each variable such that the formula itself is \xe2\x80\x8btrue\xe2\x80\x8b Most solvers require that \xe2\x80\x8bf be specified in conjunctive normal form (CNF) wherein the formula consists\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bconjunction\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bclauses \xe2\x80\x8b \xe2\x80\x8beach\xe2\x80\x8b \xe2\x80\x8bconsisting\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bdisjunction\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bliterals10 The typical SAT solver11 engages in the following three step workflow from high level encoding of\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bproblem\xe2\x80\x8b \xe2\x80\x8bthrough\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bactual\xe2\x80\x8b \xe2\x80\x8bsolving\xe2\x80\x8b \xe2\x80\x8bprocedure 1 Encoder a Encodes the problem as a Boolean formula in conjunctive normal form (CNF) such\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bsatisfying\xe2\x80\x8b \xe2\x80\x8bassignment\xe2\x80\x8b \xe2\x80\x8bindicates\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bproperty\xe2\x80\x8b \xe2\x80\x8bviolation \xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bconversion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8barbitrary\xe2\x80\x8b \xe2\x80\x8bBoolean\xe2\x80\x8b \xe2\x80\x8bformula\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bCNF\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bcarried\xe2\x80\x8b \xe2\x80\x8bout\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8blinear\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8brespect\xe2\x80\x8b \xe2\x80\x8bto the\xe2\x80\x8b \xe2\x80\x8bnumber\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bformula\xe2\x80\x8b \xe2\x80\x8bvariables\xe2\x80\x8b \xe2\x80\x8busing\xe2\x80\x8b \xe2\x80\x8bTseitin\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8btranslation 11 \xe2\x80\x8b \xe2\x80\x8bWe\xe2\x80\x8b \xe2\x80\x8bdraw\xe2\x80\x8b \xe2\x80\x8bupon\xe2\x80\x8b \xe2\x80\x8bNorbert\xe2\x80\x8b \xe2\x80\x8bManthey\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bexcellent\xe2\x80\x8b \xe2\x80\x8bPhD\xe2\x80\x8b \xe2\x80\x8bdissertation \xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9cTowards\xe2\x80\x8b \xe2\x80\x8bNext\xe2\x80\x8b \xe2\x80\x8bGeneration\xe2\x80\x8b \xe2\x80\x8bSequential and\xe2\x80\x8b \xe2\x80\x8bParallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bSolvers\xe2\x80\x9d\xe2\x80\x8b \xe2\x80\x8bfound\xe2\x80\x8b \xe2\x80\x8bhere http //www cs sfu ca/~mitchell/cmpt 827/2015 Fall/Projects/Parallel Manthey PhD pdf 10 19 \x0cb Usually\xe2\x80\x8b \xe2\x80\x8bpolynomial\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bcomplexity c Requires\xe2\x80\x8b \xe2\x80\x8bless\xe2\x80\x8b \xe2\x80\x8bthan\xe2\x80\x8b \xe2\x80\x8b1%\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8btotal\xe2\x80\x8b \xe2\x80\x8btime 2 Preprocessor a Often\xe2\x80\x8b \xe2\x80\x8bperforms\xe2\x80\x8b \xe2\x80\x8bsimplification\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bre encoding b Polynomial\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bcomplexity c Requires\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8b20%\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8btotal\xe2\x80\x8b \xe2\x80\x8btime 3 Solving\xe2\x80\x8b \xe2\x80\x8bprocedure a Conflict driven\xe2\x80\x8b \xe2\x80\x8bclause\xe2\x80\x8b \xe2\x80\x8blearning\xe2\x80\x8b \xe2\x80\x8b(CDCL) b Variable\xe2\x80\x8b \xe2\x80\x8bordering\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bheuristics c Exponential\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bcomplexity\xe2\x80\x8b\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsize\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8binput d Requires\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8b80%\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8btotal\xe2\x80\x8b \xe2\x80\x8btime The solving procedure is the most challenging requiring 80% of the computational effort and whose\xe2\x80\x8b \xe2\x80\x8btime\xe2\x80\x8b \xe2\x80\x8bcomplexity\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bexponential\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bworst\xe2\x80\x8b \xe2\x80\x8bcase Many strategies have been developed for solving SAT formulas but the most widely adopted and successful solvers are based on the Davis Putnam Logemann Loveland (DPLL) algorithm When combined with clause learning and clever implementation tricks DPLL SAT has enabled the practical use of SAT solvers for a wide range of applications reflecting the importance of SAT\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcentral\xe2\x80\x8b \xe2\x80\x8bproblem\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bcomputer\xe2\x80\x8b \xe2\x80\x8bscience An\xe2\x80\x8b \xe2\x80\x8boverview\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bDPLL SAT12\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bdepicted\xe2\x80\x8b \xe2\x80\x8bbelow The Decide module carries out decisions guided by VSIDS (a variable ordering heuristic) The BCP module carries out unit propagation until either no new unit facts can be derived or a conflicting (unsat) clause is identified Such clauses are handed over to Analyze Conflict which traces the reason for the clause becoming unsatisfied and generates a \xe2\x80\x9clearnt\xe2\x80\x9d clause that is added to the clause database Learnt clauses prevent the propagation of assignments that lead to 12 \xe2\x80\x8b \xe2\x80\x8bKr\xc3\xb6ning\xe2\x80\x8b \xe2\x80\x8b&\xe2\x80\x8b \xe2\x80\x8bStrichman\xe2\x80\x8b \xe2\x80\x8boffer\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8barchitectural\xe2\x80\x8b \xe2\x80\x8bview\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b D \xe2\x80\x8b ecision\xe2\x80\x8b \xe2\x80\x8bProcedures\xe2\x80\x8b \xe2\x80\x8b(Springer \xe2\x80\x8b \xe2\x80\x8b2008) 20 \x0cthe conflict The Backtrack module rewinds the search to an earlier state undoing the assignments that lead to the conflict The formula is said to be UNSAT upon identifying a top level conflict clause or SAT when no new decisions can be made and all clauses are satisfied by\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcurrent\xe2\x80\x8b \xe2\x80\x8bset\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bassignments Parallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bSolvers Techniques such as model checking and automated theorem proving which typically rely on SAT solvers may require anywhere from milliseconds to hours of computing effort on commodity machines For some of the hardest problems solving time can extend to days weeks or longer Recent advancements in algorithms heuristics and parallel solvers are helping Solvers who share the workload can outperform those who don\xe2\x80\x99t Parallel SAT solvers attempt to use\xe2\x80\x8b \xe2\x80\x8bmore\xe2\x80\x8b \xe2\x80\x8bcores\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bovercome\xe2\x80\x8b \xe2\x80\x8bsequential\xe2\x80\x8b \xe2\x80\x8bslowdowns A typical parallel SAT solver use a master slave (or task farm) approach splitting the search space and analyzing the subspaces in parallel in separate processes A prime example of this approach is Parallel MiniSAT13 (PMSAT) PMSAT is a distributed parallel SAT solver implemented in C++ using the Message Passing Interface (MPI) for communication between nodes PMSAT is novel in the following ways (1) how it partitions the search space in terms of variable selection and assumptions generation (2) how assumptions are pruned (3) how learnt clauses are shared and (4) automatic settings A master controls the scheduling of the clients and distributes various tasks between them More than one partitioning heuristic is available to the user and sharing of learnt clauses is allowed Conflict learning is used to prune the outstanding tasks and potentially to stop processes whose search space is irrelevant Two choices are available for variable selection (1) frequent variables or (2) variables that appear in bigger\xe2\x80\x8b \xe2\x80\x8bclauses The task farm approach is used with a master and several workers A worker receives a set of assumptions from the master and returns the result of searching its subtree The master partitions the workspace according to a configured mode of operation When a worker finds UNSAT it may send a vector of learnt clauses and/or a vector of conflicts the latter of which is used by the master to remove all untested assumptions that will lead to UNSAT After receiving UNSAT the master sends another set of assumptions possibly with learnt clauses to the idle worker Upon receiving SAT the master ends execution The vector of conflicts is sent directly to the master in the result message with an array size of 20 (multiple messages can be sent if needed) Typically more assumptions are created than there are available workers which accounts\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bworkers\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bend\xe2\x80\x8b \xe2\x80\x8bearly\xe2\x80\x8b \xe2\x80\x8bso\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bget\xe2\x80\x8b \xe2\x80\x8bbusy\xe2\x80\x8b \xe2\x80\x8bright\xe2\x80\x8b \xe2\x80\x8baway Another kind of parallel SAT solver adopts a portfolio approach \xe2\x80\x8bi e \xe2\x80\x8b it relies on running multiple solvers on the same SAT instance in parallel This technique is the state of the art in \xe2\x80\x8b \xe2\x80\x8bLuis\xe2\x80\x8b \xe2\x80\x8bGil \xe2\x80\x8b \xe2\x80\x8bPaulo\xe2\x80\x8b \xe2\x80\x8bFlores \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bLuis\xe2\x80\x8b \xe2\x80\x8bMiguel\xe2\x80\x8b \xe2\x80\x8bSilveira \xe2\x80\x8b \xe2\x80\x8bPMSAT \xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bparallel\xe2\x80\x8b \xe2\x80\x8bversion\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bMiniSAT\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bJournal\xe2\x80\x8b \xe2\x80\x8bon Satisfiability \xe2\x80\x8b \xe2\x80\x8bBoolean\xe2\x80\x8b \xe2\x80\x8bModeling\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bComputation \xe2\x80\x8b \xe2\x80\x8b6 71\xe2\x80\x9398 \xe2\x80\x8b \xe2\x80\x8b2008 13 21 \x0cparallel SAT solvers which is presently dominated by ManySAT14 With ManySAT it has been found that using different search heuristics or even different SAT solvers has lead to large gains in performance Performance gains have also been observed by sharing learnt clauses among the different\xe2\x80\x8b \xe2\x80\x8bsolver\xe2\x80\x8b \xe2\x80\x8binstances Aigner et al 15 discuss a plain parallel portfolio (PPP) solver that synchronizes on termination but otherwise does not share any information Their multi core implementation uses shared memory and asks the question does memory as a shared resource become a bottleneck If so how much slowdown occurs Performance degradation due to congestion of the memory system is seen as an upper bound on the expected slowdown for portfolio systems Portfolio solvers like ManySAT and Plingeling have an architecture in which the original formula and shared clauses are copied by each solver simplifying the design and minimizing synchronization overhead Solvers that attempt to parallelize at a more fine grained level do not scale as well The drawback is that neither the formula nor learnt clauses are physically shared and thus \xe2\x80\x8bn times more memory is needed and it might be expected that there would be more memory system congestion causing slowdown however experiments demonstrate that most memory access are local (satisfied by core local caches) which keeps the slowdown low even for a large number of solvers\xe2\x80\x8b \xe2\x80\x8brunning\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bparallel Parallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bconsensus As noted previously regarding Quantstamp\xe2\x80\x99s validation protocol the distributed computation is partitioned into components of the overall verification problem This an important mechanism for inhibiting bad actors Relating this back to SAT in the distributed setting in search space partitioning each partition or subspace is solved by a sequential SAT solver In the Quantstamp Network when possible disjoint subspaces are mapped to partitions of nodes called \xe2\x80\x8bzones\xe2\x80\x8b Within each zone nodes work to find a satisfying assignment within a discrete subspace Since the partitions are disjoint identifying a satisfying assignment in one zone implies a satisfying assignment for the original formula The encoding process of step one ensures that when a formula is satisfiable then a bug exists in the original system The final output of a zone requires 2/3rds consensus of the participating partition just as a 2/3rds majority\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8brequired\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bconsensus\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bgeneral Common\xe2\x80\x8b \xe2\x80\x8bvulnerabilities\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bEthereum/Solidity The blockchain implementation of Nick Szabo\xe2\x80\x99s idea16 of a smart contract is a computer program whose correct execution is enforced without relying on a trusted authority The Ethereum \xe2\x80\x8b \xe2\x80\x8bYoussef\xe2\x80\x8b \xe2\x80\x8bHamadi \xe2\x80\x8b \xe2\x80\x8bSaid\xe2\x80\x8b \xe2\x80\x8bJabbour \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bLakhdar\xe2\x80\x8b \xe2\x80\x8bSais \xe2\x80\x8b \xe2\x80\x8bManySAT \xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bparallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bsolver\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bJournal\xe2\x80\x8b \xe2\x80\x8bon Satisfiability \xe2\x80\x8b \xe2\x80\x8bBoolean\xe2\x80\x8b \xe2\x80\x8bModeling\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bComputation \xe2\x80\x8b \xe2\x80\x8b6 245\xe2\x80\x93262 \xe2\x80\x8b \xe2\x80\x8b2008 15 \xe2\x80\x8b \xe2\x80\x8bMartin\xe2\x80\x8b \xe2\x80\x8bAigner \xe2\x80\x8b \xe2\x80\x8bArmin\xe2\x80\x8b \xe2\x80\x8bBiere \xe2\x80\x8b \xe2\x80\x8bChristoph\xe2\x80\x8b \xe2\x80\x8bKirsch \xe2\x80\x8b \xe2\x80\x8bAina\xe2\x80\x8b \xe2\x80\x8bNiemetz \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bMathias\xe2\x80\x8b \xe2\x80\x8bPreiner \xe2\x80\x8b A \xe2\x80\x8b nalysis\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bportfolio style\xe2\x80\x8b \xe2\x80\x8bparallel\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8bsolving\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bcurrent\xe2\x80\x8b \xe2\x80\x8bmulti core\xe2\x80\x8b \xe2\x80\x8barchitectures\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bIn\xe2\x80\x8b \xe2\x80\x8bProceeding\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bFourth\xe2\x80\x8b \xe2\x80\x8bInternational Workshop\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bPragmatics\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bSAT\xe2\x80\x8b \xe2\x80\x8b(POS13) \xe2\x80\x8b \xe2\x80\x8bCiteseer \xe2\x80\x8b \xe2\x80\x8b2013 16 \xe2\x80\x8b \xe2\x80\x8bFormalizing\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bSecuring\xe2\x80\x8b \xe2\x80\x8bRelationships\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bPublic\xe2\x80\x8b \xe2\x80\x8bNetworks http //firstmonday org/ojs/index php/fm/article/view/548/469 14 22 \x0cprotocol supports stateful contracts meaning that the values of state variables persist across multiple invocations A contract is invoked when it receives transactions from users at its unique address If such transactions are accepted by the blockchain all participants of the mining network execute the contract code The network then agrees by the consensus protocol on the output and next state of the contract Given that Ethereum smart contracts are immutable and the effects of the transactions cannot be reversed it is essential to be able to reason effectively about code\xe2\x80\x8b \xe2\x80\x8bprior\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bdeployment Atzei et al 17 describe a taxonomy of vulnerabilities and unexpected behaviours of smart contracts written in Solidity for Ethereum Although this taxonomy is specific to Ethereum it is likely that similar vulnerabilities will exist for other platforms that use contracts in the future We\xe2\x80\x8b \xe2\x80\x8bsummarize\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8btaxonomy\xe2\x80\x8b \xe2\x80\x8bbelow\xe2\x80\x8b \xe2\x80\x8bbased\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8bfindings Call\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bunknown Some Solidity primitives have the non obvious side effect of invoking the fallback function of the recipient This can lead to unexpected behaviour and may be exploitable by an attacker (We discuss\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsection\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bParity/Multisig\xe2\x80\x8b \xe2\x80\x8bvulnerability ) Exception\xe2\x80\x8b \xe2\x80\x8bdisorder The are two different behaviours for how exceptions are handled that depend on how contracts call each other For some side effects of the whole transaction are reverted for others only the side effects of the invocation of another smart contract are reverted These\xe2\x80\x8b \xe2\x80\x8birregularities\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8baffect\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bcontracts Gasless\xe2\x80\x8b \xe2\x80\x8bsend When a user sends ether to a contract it is possible to incur an out of\xe2\x80\x8b \xe2\x80\x8bgas\xe2\x80\x8b \xe2\x80\x8bexception Type\xe2\x80\x8b \xe2\x80\x8bcasts The compiler can do some type checking but there are circumstances where types are not checked which can lead to unexpected\xe2\x80\x8b \xe2\x80\x8bbehaviour Reentrancy The fallback mechanism may allow a non recursive function to be re entered before its termination which could lead to loops of invocations that consume all gas (The \xe2\x80\x9cDAO attack\xe2\x80\x9d infamously exploited\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bvulnerability ) Keeping\xe2\x80\x8b \xe2\x80\x8bsecrets Declaring a field as private does not guarantee its secrecy because \xe2\x80\x8b \xe2\x80\x8bNicola\xe2\x80\x8b \xe2\x80\x8bAtzei \xe2\x80\x8b \xe2\x80\x8bMassimo\xe2\x80\x8b \xe2\x80\x8bBartoletti \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bTiziana\xe2\x80\x8b \xe2\x80\x8bCimoli \xe2\x80\x8b \xe2\x80\x8b2017 \xe2\x80\x8b \xe2\x80\x8bA\xe2\x80\x8b \xe2\x80\x8bSurvey\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bAttacks\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bSmart Contracts\xe2\x80\x8b \xe2\x80\x8bSoK\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bIn\xe2\x80\x8b \xe2\x80\x8bProceedings\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8b6th\xe2\x80\x8b \xe2\x80\x8bInternational\xe2\x80\x8b \xe2\x80\x8bConference\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bPrinciples\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bSecurity\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bTrust\xe2\x80\x8b \xe2\x80\x8bVolume\xe2\x80\x8b \xe2\x80\x8b10204 \xe2\x80\x8b \xe2\x80\x8bMatteo\xe2\x80\x8b \xe2\x80\x8bMaffei\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bMark\xe2\x80\x8b \xe2\x80\x8bRyan\xe2\x80\x8b \xe2\x80\x8b(Eds ) \xe2\x80\x8b \xe2\x80\x8bVol \xe2\x80\x8b \xe2\x80\x8b10204 \xe2\x80\x8b \xe2\x80\x8bSpringer Verlag\xe2\x80\x8b \xe2\x80\x8bNew\xe2\x80\x8b \xe2\x80\x8bYork \xe2\x80\x8b \xe2\x80\x8bInc \xe2\x80\x8b \xe2\x80\x8bNew York \xe2\x80\x8b \xe2\x80\x8bNY \xe2\x80\x8b \xe2\x80\x8bUSA \xe2\x80\x8b \xe2\x80\x8b164 186 \xe2\x80\x8b \xe2\x80\x8bDOI \xe2\x80\x8b \xe2\x80\x8bhttps //doi org/10 1007/978 3 662 54455 6_8 17 23 \x0cthe blockchain is public and the contents of a transaction are inspectable Cryptographic techniques may need to be employed to protect\xe2\x80\x8b \xe2\x80\x8bsecrets Immutable\xe2\x80\x8b \xe2\x80\x8bbugs Deployed contracts cannot be altered including when they have bugs and there is no direct way to patch it (An exception to this occurred after the DAO attack when a controversial hard fork of the blockchain nullified the effects of transactions involved in the attack ) Ether\xe2\x80\x8b \xe2\x80\x8blost\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8btransfer Ether sent to orphaned addresses is lost forever and there is no way to\xe2\x80\x8b \xe2\x80\x8bdetect\xe2\x80\x8b \xe2\x80\x8bwhen\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8baddress\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8borphan Stack\xe2\x80\x8b \xe2\x80\x8bsize\xe2\x80\x8b \xe2\x80\x8blimit The call stack is bounded by 1024 frames and a further invocation triggers an exception (A hard fork of the Ethereum blockchain in October\xe2\x80\x8b \xe2\x80\x8b2016\xe2\x80\x8b \xe2\x80\x8bhas\xe2\x80\x8b \xe2\x80\x8baddressed\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bvulnerability ) Unpredictable\xe2\x80\x8b \xe2\x80\x8bstate The state of a contract upon sending a transaction to the network is not guaranteed to be the state of the contract when it actually executes Additionally miners are not required to preserve the order of transactions when grouping them into a block Attackers can\xe2\x80\x8b \xe2\x80\x8bexploit\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9ctransaction order\xe2\x80\x8b \xe2\x80\x8bdependence\xe2\x80\x9d\xe2\x80\x8b \xe2\x80\x8bvulnerability Generating\xe2\x80\x8b \xe2\x80\x8brandomness A malicious miner can craft his block to bias the outcome of pseudo random generator number in his favor For example this could\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8badvantageous\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8blotteries \xe2\x80\x8b \xe2\x80\x8bgames \xe2\x80\x8b \xe2\x80\x8betc Time\xe2\x80\x8b \xe2\x80\x8bconstraints Many applications use time constraints to determine which actions are permitted in the current state If a miner holds a stake on a contract he could gain an advantage by choosing a suitable timestamp\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bblock\xe2\x80\x8b \xe2\x80\x8bhe\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bmining Below\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bsample\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bchecks\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bwould\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bimplemented\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bSecurity\xe2\x80\x8b \xe2\x80\x8bLibrary\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bSolidity Constant\xe2\x80\x8b \xe2\x80\x8bfunctions The compiler does not enforce that a constant method is not modifying\xe2\x80\x8b \xe2\x80\x8bstate \xe2\x80\x8b \xe2\x80\x8binstead \xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bshould\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8benforced Contracts that receive ether\xe2\x80\x8b \xe2\x80\x8bdirectly Contracts that receive Ether directly need to implement a fallback function in order to receive Ether otherwise the function throws an exception and sends back the Ether There can be an alert when the fallback function is not implemented since there are situations where\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bprogrammer\xe2\x80\x8b \xe2\x80\x8bwould\xe2\x80\x8b \xe2\x80\x8bwant\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bdo\xe2\x80\x8b \xe2\x80\x8bthis Fallback\xe2\x80\x8b \xe2\x80\x8bfunction A contract can have exactly one fallback function and it cannot spend more than 2300 gas We can automatically test that the programmer is spending less than 2300 gas inside that fallback 24 \x0cfunction Reentrancy\xe2\x80\x8b \xe2\x80\x8bexploit When calling another contract the called contract can change state variables of the calling contract via its functions It s possible to check that calls to external functions happen after changes to state variables in the current contract so that it is not vulnerable to a reentrancy\xe2\x80\x8b \xe2\x80\x8bexploit https //gist github com/chriseth/c4a53f201cd17fc3dd5f8ddea2aa3f f9 Implicit\xe2\x80\x8b \xe2\x80\x8bdeclaration A variable declared anywhere within a function will be in scope for the entire function regardless of where it is declared It is also initialized to a default value for the entire scope of the function It is possible that poorly written code can access an implicitly declared variable with a default value When this happens our report would generate\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8balert Transaction\xe2\x80\x8b \xe2\x80\x8bowner When checking tx origin it gets the original address that kicked off the transaction A malicious actor can use an attack wallet to drain all funds if the smart contract code required tx origin == owner since\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bcase\xe2\x80\x8b \xe2\x80\x8btx origin\xe2\x80\x8b \xe2\x80\x8bwould\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8baddress\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8battack\xe2\x80\x8b \xe2\x80\x8bwallet Gas\xe2\x80\x8b \xe2\x80\x8bforwarding There is an extremely dangerous feature called addr call value(x)() that can forward gas to a receiving contract and opens up the ability to perform more expensive actions This is a problem that needs to be\xe2\x80\x8b \xe2\x80\x8bexplored\xe2\x80\x8b \xe2\x80\x8bmore\xe2\x80\x8b \xe2\x80\x8bin depth\xe2\x80\x8b \xe2\x80\x8blater 25 \x0cFinancial\xe2\x80\x8b \xe2\x80\x8bPlanning 26 \x0cResearch\xe2\x80\x8b \xe2\x80\x8bcontributions\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bour\xe2\x80\x8b \xe2\x80\x8bteam The following table comprises a partial selection of software verification projects connected to our combined research efforts When necessary we will adapt these proven techniques towards achieving\xe2\x80\x8b \xe2\x80\x8bour\xe2\x80\x8b \xe2\x80\x8bgoal\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsecuring\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bblockchain Name Contributors (alphabetical order) Description Alloy and the Alloy Analyzer Vajih\xe2\x80\x8b \xe2\x80\x8bMontaghami Derek\xe2\x80\x8b \xe2\x80\x8bRayside Steven\xe2\x80\x8b \xe2\x80\x8bStewart Alloy is a relational logic that enables developers to model and reason about software abstractions The Alloy Analyzer is capable of mechanically generating examples of a user\xe2\x80\x99s model It was originally developed at MIT as part of the Software Design Group under the guidance of Dr Daniel Jackson http //alloy mit edu/alloy/ Bordeaux Derek\xe2\x80\x8b \xe2\x80\x8bRayside Bordeaux is a technique and extension of Alloy for producing near border examples an important capability for improving debugging for identifying partial\xe2\x80\x8b \xe2\x80\x8bover constraint\xe2\x80\x8b \xe2\x80\x8bbugs\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bmodels https //github com/drayside/bordeaux Clafer Ed\xe2\x80\x8b \xe2\x80\x8bZulkoski Clafer is a general purpose lightweight modeling language developed at GSD Lab University of Waterloo and MODELS group at IT University of Copenhagen Lightweight modeling aims at improving the understanding of the problem domain in the early stages of software development and determining the requirements with fewer defects Clafer s goal is to make modeling more accessible\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bwider\xe2\x80\x8b \xe2\x80\x8brange\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8busers\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bdomains http //www clafer org/ Margaux Derek\xe2\x80\x8b \xe2\x80\x8bRayside Vajih\xe2\x80\x8b \xe2\x80\x8bMontaghami Margaux is a tool for pattern based debugging that can guide a user to find a bug The github page includes an architectural diagram for how a debugger using discriminating examples can guide developers towards correcting flaws in logical reasoning https //github com/vmontagh/margaux MapleSAT Vijay\xe2\x80\x8b \xe2\x80\x8bGanesh The award winning Maple series are a family of 27 \x0cMapleCOMSPS MapleGlucose Ed\xe2\x80\x8b \xe2\x80\x8bZulkoski conflict driven clause learning SAT solvers developed at the University of Waterloo under the supervision\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bDr \xe2\x80\x8b \xe2\x80\x8bVijay\xe2\x80\x8b \xe2\x80\x8bGanesh https //sites google com/a/gsd uwaterloo ca/mapl esat/ MathCheck Vijay\xe2\x80\x8b \xe2\x80\x8bGanesh Ed\xe2\x80\x8b \xe2\x80\x8bZulkoski A constraint programming system that combines SAT solvers with computer algebra systems Extended known results on two conjectures related to\xe2\x80\x8b \xe2\x80\x8bhypercubes https //sites google com/site/uwmathcheck/ Miramichi Derek\xe2\x80\x8b \xe2\x80\x8bRayside Steven\xe2\x80\x8b \xe2\x80\x8bStewart Miramichi is an experimental parallel SAT solver that\xe2\x80\x8b \xe2\x80\x8bleverages\xe2\x80\x8b \xe2\x80\x8bGPUs\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bperformance\xe2\x80\x8b \xe2\x80\x8bacceleration https //bitbucket org/sstewart2015/miramichi4j Moolloy Derek\xe2\x80\x8b \xe2\x80\x8bRayside Steven\xe2\x80\x8b \xe2\x80\x8bStewart Moolloy is an extension to a relational logic for expressing discrete multiobjective optimization problems with applications in science software engineering \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bfinance https //github com/TeamAmalgam/moolloy Petitcodiac Derek\xe2\x80\x8b \xe2\x80\x8bRayside Steven\xe2\x80\x8b \xe2\x80\x8bStewart Petitcodiac is an experimental solver for quantifier free linear real arithmetic (LRA) that leverages OpenMP and GPUs SMT solvers such as Yices and Microsoft\xe2\x80\x99s Z3 typically use a variation of the simplex procedure also employed by Petitcodiac https //github com/sstewart2012/peticodiac STP Vijay\xe2\x80\x8b \xe2\x80\x8bGanesh STP is a constraint solver (or SMT solver) aimed at solving constraints of bitvectors and arrays These types of constraints can be generated by program analysis tools theorem provers automated bug finders cryptographic attack tools intelligent fuzzers model checkers and by many other applications https //github com/stp/stp Demo \xe2\x80\x8b \xe2\x80\x8bLocating\xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bParity\xe2\x80\x8b \xe2\x80\x8bMultisig\xe2\x80\x8b \xe2\x80\x8bVulnerability We provide a demonstration of a generalizable technique for automatically locating vulnerabilities\xe2\x80\x8b \xe2\x80\x8bsimilar\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bParity\xe2\x80\x8b \xe2\x80\x8bMultisig\xe2\x80\x8b \xe2\x80\x8bWallet\xe2\x80\x8b \xe2\x80\x8bflaw\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8blead\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8b$32 6\xe2\x80\x8b \xe2\x80\x8bmillion\xe2\x80\x8b \xe2\x80\x8btheft 28 \x0cThis simple analyzer constructs multiple AST (Abstract Syntax Tree) visitors and uses these to extract the program variables and call structure of a Solidity contract The analyser finds any public method that directly or indirectly exposes a non public state variable modification and alerts the developer Using call graphs we can capture a class of vulnerabilities that can be located as solutions to reachability18 problems In this demo we have two example solidity contracts\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bshow\xe2\x80\x8b \xe2\x80\x8bhow\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8banalyser\xe2\x80\x8b \xe2\x80\x8bidentifies\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bdirect\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8bindirect\xe2\x80\x8b \xe2\x80\x8bvulnerability Github\xe2\x80\x8b \xe2\x80\x8bcode\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdemo \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bhttps //github com/quantstamp/solidity analyzer 18 \xe2\x80\x8b \xe2\x80\x8bhttps //en wikipedia org/wiki/Reachability 29 \x0cFrequently\xe2\x80\x8b \xe2\x80\x8bAsked\xe2\x80\x8b \xe2\x80\x8bQuestions Q \xe2\x80\x8b \xe2\x80\x8bWhat\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bQuantstamp Quantstamp is a security verification protocol for smart contracts that improves the security of Ethereum The advantages of the security protocol include automation trust governance and ability\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bcompute\xe2\x80\x8b \xe2\x80\x8bhard\xe2\x80\x8b \xe2\x80\x8bproblems\xe2\x80\x8b \xe2\x80\x8bover\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bdistributed\xe2\x80\x8b \xe2\x80\x8bnetwork Q \xe2\x80\x8b \xe2\x80\x8bWhat\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bgoing\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bdeliver The\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bdeveloping\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfollowing 1 Quantstamp\xe2\x80\x8b \xe2\x80\x8bvalidation\xe2\x80\x8b \xe2\x80\x8bnode\xe2\x80\x8b \xe2\x80\x8b(a\xe2\x80\x8b \xe2\x80\x8bheavily\xe2\x80\x8b \xe2\x80\x8bmodified\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bclient) 2 The\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b l\xe2\x80\x8b ibrary \xe2\x80\x8b \xe2\x80\x8bcontaining\xe2\x80\x8b \xe2\x80\x8bcode\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bperforms\xe2\x80\x8b \xe2\x80\x8bautomated\xe2\x80\x8b \xe2\x80\x8bchecks 3 Validation smart contracts that handle bounty payment voting mechanism and governance A\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8blibrary\xe2\x80\x8b \xe2\x80\x8bmay\xe2\x80\x8b \xe2\x80\x8balso\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bdeveloped\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bsupport\xe2\x80\x8b \xe2\x80\x8blanguages\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bthan\xe2\x80\x8b \xe2\x80\x8bSolidity Q \xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bAren\xe2\x80\x99t\xe2\x80\x8b \xe2\x80\x8bhuman\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8baudits\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bcode\xe2\x80\x8b \xe2\x80\x8breviews\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bstate of the art Writing correct bug free software is very difficult (Every seasoned developer eventually comes around to this conclusion ) One member of our team noted anecdotally that at a previous software company the backlog of bugs was in the hundreds and the project manager was constantly juggling a list of 20 30 features and bugs to work on in every 2 week sprint struggling to make any significant progress In spite of an abundance of bugs customers expressed satisfaction about the product and mainly only reacted strongly when \xe2\x80\x9cshow stoppers\xe2\x80\x9d were uncovered Unfortunately once you give programmers access to a monetary\xe2\x80\x8b \xe2\x80\x8bsystem\xe2\x80\x8b \xe2\x80\x8bvia\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts \xe2\x80\x8b \xe2\x80\x8bjust\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bbug\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bshow stopper To improve software most developers believe that they merely need to conduct more code reviews and write more unit tests but the cost/benefit calculation seldom favours increased testing Although reliance on unit testing and code reviews may be acceptable for low risk applications it is not acceptable when writing code for critical systems Instead computer chip manufacturers airplane and automobile manufacturers and many others rely on automated software verification to complement other best practices For similar reasons our approach is to take\xe2\x80\x8b \xe2\x80\x8badvantage\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8byears\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bresearch\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bhave\xe2\x80\x8b \xe2\x80\x8bdeveloped\xe2\x80\x8b \xe2\x80\x8bthese\xe2\x80\x8b \xe2\x80\x8bsophisticated\xe2\x80\x8b \xe2\x80\x8btechniques Q Can I really trust a computer to find vulnerabilities better than a human can on his\xe2\x80\x8b \xe2\x80\x8bown 30 \x0cWhile it is true that unit testing and code reviews go a long ways towards improving the quality of software it has been shown that techniques based on formal methods are better at finding the most subtle and critical bugs that evade human inspection This is true in large part because of the ability of automated reasoning tools to simulate critical execution paths in a manner that well\xe2\x80\x8b \xe2\x80\x8bexceeds\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8blimitations\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bhuman\xe2\x80\x8b \xe2\x80\x8bcognition Another way to look at this is to consider what has transpired in recent years in algorithmic trading For years it was believed that humans were better at trading than computers until eventually the computers took over19 With a quick online search for \xe2\x80\x9ccomputers have taken over Wall\xe2\x80\x8b \xe2\x80\x8bStreet \xe2\x80\x9d\xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x99ll\xe2\x80\x8b \xe2\x80\x8bfind\xe2\x80\x8b \xe2\x80\x8bnumerous\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8barticles\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bphenomenon Perhaps not surprisingly something similar is already underway with automated security audits maybe when we start we cannot match an experienced human except on the cost/speed tradeoff but with each new release the automated solution will be able to catch more and more security\xe2\x80\x8b \xe2\x80\x8bissues\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8btransparent\xe2\x80\x8b \xe2\x80\x8bway\xe2\x80\x8b \xe2\x80\x8buntil\xe2\x80\x8b \xe2\x80\x8beventually\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8balgorithms\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8bbeat\xe2\x80\x8b \xe2\x80\x8bhumans In the meantime we leverage human intelligence via an automated bounty for bugs that are found\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bindependent\xe2\x80\x8b \xe2\x80\x8bverifiers\xe2\x80\x8b \xe2\x80\x8b(white\xe2\x80\x8b \xe2\x80\x8bhat\xe2\x80\x8b \xe2\x80\x8bhackers) Q Why build a security auditing protocol Instead why not form a security consulting\xe2\x80\x8b \xe2\x80\x8bcompany Scalability to handle the millions of smart contracts audits on the Ethereum platform once they have resolved the Ethereum transaction scaling issues via Plasma/Casper/PoS Empowering\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfirst\xe2\x80\x8b \xe2\x80\x8bEthereum\xe2\x80\x8b \xe2\x80\x8bkiller\xe2\x80\x8b \xe2\x80\x8bapp Q \xe2\x80\x8b \xe2\x80\x8bWhy\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8buse\xe2\x80\x8b \xe2\x80\x8bWhy3\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bsimilar\xe2\x80\x8b \xe2\x80\x8btool\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bformal\xe2\x80\x8b \xe2\x80\x8bverification\xe2\x80\x8b \xe2\x80\x8binstead Existing projects such as Why3 are too inaccessible for the typical smart contract developer to use A similar argument can be made about the adoption of alternative programming paradigms such as functional programming (OCaml Haskell Clojure) where there ends up being a lot of hype and promise but upon closer inspection not a lot of adoption by actual developers who still prefer Java C# C++ and Python For all these reasons and more Quantstamp automates as much of the security auditing process as possible by embedding it into the Ethereum network with\xe2\x80\x8b \xe2\x80\x8bour\xe2\x80\x8b \xe2\x80\x8bclient\xe2\x80\x8b \xe2\x80\x8bnodes \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8brelieving\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdeveloper\xe2\x80\x8b \xe2\x80\x8bfrom\xe2\x80\x8b \xe2\x80\x8bhaving\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8blearn\xe2\x80\x8b \xe2\x80\x8bspecialized\xe2\x80\x8b \xe2\x80\x8btechniques \xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bQuants\xe2\x80\x8b \xe2\x80\x8bAre\xe2\x80\x8b \xe2\x80\x8bTaking\xe2\x80\x8b \xe2\x80\x8bOver\xe2\x80\x8b \xe2\x80\x8bWall\xe2\x80\x8b \xe2\x80\x8bStreet https //www forbes com/sites/nathanvardi/2016/08/17/the quants are taking over wall street/ 19 31 \x0cDetailed\xe2\x80\x8b \xe2\x80\x8bBios Co founders Steven\xe2\x80\x8b \xe2\x80\x8bStewart University\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bWaterloo\xe2\x80\x8b \xe2\x80\x8bECE \xe2\x80\x8b \xe2\x80\x8bSoftware\xe2\x80\x8b \xe2\x80\x8bVerification Steven is a PhD candidate at the University of Waterloo (ECE) where under Derek Rayside and Krzysztof Czarnecki he focuses on improving the performance of software verification tools and solvers using distributed\xe2\x80\x8b \xe2\x80\x8bcomputing\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bGPUs Previously Steven co founded a San Francisco based startup called Many Trees Inc that used GPUs for machine learning and Big Data analytics In his spare time he likes tinkering with in memory databases accelerated using GPUs He spent nearly 5 years as part of Canada\xe2\x80\x99s cryptologic agency in the Department of National Defense Dropped out of PhD to work on Quantstamp Richard\xe2\x80\x8b \xe2\x80\x8bMa Cornell\xe2\x80\x8b \xe2\x80\x8bECE \xe2\x80\x8b \xe2\x80\x8bAlgorithmic\xe2\x80\x8b \xe2\x80\x8bPortfolio\xe2\x80\x8b \xe2\x80\x8bManager Algorithmic Portfolio Manager at Bitcoin HFT Fund Ex Tower Research Capital Quant Strategist Programmed production algorithmic trading software in C++/Python/R on competitive US European and Asian derivatives exchanges Wrote tens of thousands unit tests and built production grade integration and validation testing software Due to Richard s extreme testing and risk management methodology his HFT trading systems had zero notable incidents in nearly a decade of reliably handling\xe2\x80\x8b \xe2\x80\x8bmillions\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bdollars\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8binvestor\xe2\x80\x8b \xe2\x80\x8bcapital 32 \x0cFounding\xe2\x80\x8b \xe2\x80\x8bteam\xe2\x80\x8b \xe2\x80\x8bmembers Dr \xe2\x80\x8b \xe2\x80\x8bVajih\xe2\x80\x8b \xe2\x80\x8bMontaghami\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bPhD \xe2\x80\x8b \xe2\x80\x8bFormal\xe2\x80\x8b \xe2\x80\x8bMethods Vajih Montaghami received his PhD from the University of Waterloo for his work on verifying and debugging lightweight formal models He focused on declarative software model formal analysis programming language static analysis imperative code systemization \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8barchitecture\xe2\x80\x8b \xe2\x80\x8banalysis\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bevaluation During his PhD study he worked at Google and experienced dealing with large scale data analysis systems He worked on automating end to end testing of a machine learning algorithm applied to a massive data source More recently at Amazon Vajih helped develop highly\xe2\x80\x8b \xe2\x80\x8bscalable\xe2\x80\x8b \xe2\x80\x8bsystems\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bbackend\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bengineer Ed\xe2\x80\x8b \xe2\x80\x8bZulkoski\xe2\x80\x8b B S \xe2\x80\x8b \xe2\x80\x8bMathematics\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bComputer\xe2\x80\x8b \xe2\x80\x8bScience Edward Zulkoski is a Ph D candidate in the Department of Computer Science at the University of Waterloo under the supervision of Vijay Ganesh and Krzysztof Czarnecki He recently completed an internship at Microsoft Research under the direction of Dr Christopher Wintersteiger His PhD research is focused on studying and exploiting the structural properties of SAT and SMT formulas His earlier work investigated combinations of SAT solvers with computer algebra systems and optimization techniques for multi objective product line optimization Ed was awarded a Ph D Fellowship from IBM Canada\xe2\x80\x99s Centers for Advanced Studies Research Advisors Dr \xe2\x80\x8b \xe2\x80\x8bVijay\xe2\x80\x8b \xe2\x80\x8bGanesh\xe2\x80\x8b Assistant\xe2\x80\x8b \xe2\x80\x8bProfessor \xe2\x80\x8b \xe2\x80\x8bUniversity\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bWaterloo Dr Vijay Ganesh is an assistant professor at the University of Waterloo Prior to that he was a research scientist at MIT and completed his PhD in computer science from Stanford University in 2007 Vijay s primary area of research is the theory and practice of automated reasoning aimed at software engineering formal methods security \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bmathematics Vijay has won numerous awards most recently the ACM Test of Time Award at CCS 2016 the Early Researcher Award in 2016 Outstanding Paper Award at ACSAC 2016 an IBM Research Faculty Award in 2015 two Google Research Faculty Awards in 2013 and 2011 and a Ten Year Most Influential paper award at DATE 2008 In total he has won 9 best\xe2\x80\x8b \xe2\x80\x8bpaper\xe2\x80\x8b \xe2\x80\x8bawards/honors 33 \x0cDr \xe2\x80\x8b \xe2\x80\x8bDerek\xe2\x80\x8b \xe2\x80\x8bRayside\xe2\x80\x8b P \xe2\x80\x8b \xe2\x80\x8bEng \xe2\x80\x8b \xe2\x80\x8bAssociate\xe2\x80\x8b \xe2\x80\x8bProfessor \xe2\x80\x8b \xe2\x80\x8bUniversity\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bWaterloo Derek Rayside is an Associate Professor of Electrical & Computer Engineering at the University of Waterloo His primary research areas are lightweight formal methods and program analysis He received his doctorate\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bComputer\xe2\x80\x8b \xe2\x80\x8bScience\xe2\x80\x8b \xe2\x80\x8bat\xe2\x80\x8b \xe2\x80\x8bMIT Derek is an advisor to a Waterloo startup that was recently acquired by Microsoft 34 \x0cAddendum\xe2\x80\x8b \xe2\x80\x8bA Why\xe2\x80\x8b \xe2\x80\x8bwe\xe2\x80\x8b \xe2\x80\x8bshould\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bconcerned\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontracts There is increasing evidence that a troubling percentage perhaps greater than 40 percent of Ethereum smart contracts are vulnerable It would be difficult to conclude that the remaining smart contracts are safe because they may contain as yet unidentified vulnerabilities This is not a knock on Ethereum as it is reasonable to assume that any platform that enables the execution of arbitrary code that accesses the monetary system is at serious risk The onus is clearly on the developer\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8b\xe2\x80\x9cget\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bright \xe2\x80\x9d The\xe2\x80\x8b \xe2\x80\x8bDAO\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bothers Code\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8blaw \xe2\x80\x8b \xe2\x80\x8bOr\xe2\x80\x8b \xe2\x80\x8bso\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bsay On June 17 2016 what is now referred to as The DAO has since become synonymous with perhaps one of the greatest would be heists of modern times To the tune of $55 million an Ether thief discovered a bug in a smart contract that allowed repeated ATM like withdrawals There was no eject button and once a smart contract is deployed there\xe2\x80\x99s no turning back To the attacker\xe2\x80\x99s delight smart contracts are immutable and publically available for the unscrupulous to\xe2\x80\x8b \xe2\x80\x8bstudy\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bexploit Date Losses Description June\xe2\x80\x8b \xe2\x80\x8b17 \xe2\x80\x8b \xe2\x80\x8b2016 $55\xe2\x80\x8b \xe2\x80\x8bmillion The DAO exploit20 is perhaps the best known A non recursive function could be re entered before termination leading to loops of invocations that consume all gas The unhandled exception meant that repeated withdrawals\xe2\x80\x8b \xe2\x80\x8bwere\xe2\x80\x8b \xe2\x80\x8bpossible\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcalling\xe2\x80\x8b \xe2\x80\x8bfunction June\xe2\x80\x8b \xe2\x80\x8b20 \xe2\x80\x8b \xe2\x80\x8b2017 $32 6\xe2\x80\x8b \xe2\x80\x8bmillion A vulnerability in Parity s multisignature wallet was exploited by hackers21 In this case some Solidity primitives have the non obvious side effect of invoking the fallback function of the recipient This can lead to unexpected behaviour and may be\xe2\x80\x8b \xe2\x80\x8bexploitable\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8battacker July\xe2\x80\x8b \xe2\x80\x8b31 \xe2\x80\x8b \xe2\x80\x8b2017 There was an error in the smart contract of the REX token sale22 Specifically when generating the contract bytes for deployment a mistake was made defining the constructor $1\xe2\x80\x8b \xe2\x80\x8bmillion \xe2\x80\x8b \xe2\x80\x8bhttps //www multichain com/blog/2016/06/smart contracts the dao implosion/ \xe2\x80\x8b \xe2\x80\x8bhttps //www cnbc com/2017/07/20/32 million worth of digital currency ether stolen by hackers html 22 \xe2\x80\x8b \xe2\x80\x8bhttps //blog rexmls com/the solution a2eddbda1a5d 20 21 35 \x0cparameters Instead of a quoted string for an address a Javascript hex string was used Although this was not a theft by\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8battacker \xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bwas\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bpreventable\xe2\x80\x8b \xe2\x80\x8bloss Of course what followed was the (in)famous and controversial Ethereum hard fork intended to correct the apparent wrong doing of the attacker Perhaps to the outsider it\xe2\x80\x99s surprising that the hard fork would be controversial after all who could condone the actions of the world\xe2\x80\x99s greatest thief But therein lies the problem if in fact code is law then should it not be respected for how it was written Although the developer of the smart contract undoubtedly did not intend to offer an ATM service the code itself as written most certainly \xe2\x80\x8bdid permit this behaviour If code is law then the code \xe2\x80\x8band the law permitted the theft and there was no wrongdoing Whatever your thoughts are on the code is law question in our view one thing is certain never assume that a smart contract is safe So long as code has access to a monetary system and so long as human beings want to make money then no code is ever truly safe All we can really do is minimize the risk and even better is when we can provably eliminate certain types of vulnerabilities that are well known to be exploitable and damaging While it is true that there does not exist any fully automated solution that can without a shadow of a doubt catch all possible bugs in a computer program we can confidently state that the risk can be greatly minimized In fact one could argue that any bug worth finding will tend to be found and those that\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bwill\xe2\x80\x8b \xe2\x80\x8btend\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bmatter Still were there only one incident however damaging it was then perhaps our worries would be out of proportion The occasional theft could be absorbed as a kind of nuisance tax and not necessarily perceived as a catastrophe (Ho hum another theft It happens ) Unfortunately there is no such thing as bug insurance (not yet) and faulty code when it surfaces can indeed be catastrophic Beyond that it\xe2\x80\x99s simply impractical for there to be a hard fork whenever there is a theft Of course finding a bug isn\xe2\x80\x99t easy Even if the bug could self identify it would be difficult for an automated solution to be absolutely certain without somehow understanding the original intentions behind the code Sometimes what looks like a bug is actually a feature What can we do Our response learn and keep learning Identify patterns and classes of vulnerabilities Use established techniques and improve them when necessary Wrap this all up and make it a part of a security library whose outputs are verified by decentralized consensus Incentivize contributors and harness both the power of white and black hat hackers to assist in the effort Reward\xe2\x80\x8b \xe2\x80\x8bthem\xe2\x80\x8b \xe2\x80\x8bwhen\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bsucceed \xe2\x80\x8b \xe2\x80\x8bKeep\xe2\x80\x8b \xe2\x80\x8bdevelopers\xe2\x80\x8b \xe2\x80\x8baccountable 36 \x0cRecent\xe2\x80\x8b \xe2\x80\x8bstudies The full extent to which security vulnerabilities plague smart contracts is unknown however recent studies make it abundantly clear that there really is a \xe2\x80\x8bplague\xe2\x80\x8b Below we summarize a short selection of research papers that characterize some of the most serious vulnerabilities some\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bwhich\xe2\x80\x8b \xe2\x80\x8bhighlight\xe2\x80\x8b \xe2\x80\x8bjust\xe2\x80\x8b \xe2\x80\x8bhow\xe2\x80\x8b \xe2\x80\x8beasy\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bdevelopers\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bunknowingly\xe2\x80\x8b \xe2\x80\x8bmake\xe2\x80\x8b \xe2\x80\x8bmistakes Making\xe2\x80\x8b \xe2\x80\x8bSmart\xe2\x80\x8b \xe2\x80\x8bContracts\xe2\x80\x8b \xe2\x80\x8bSmarter Loi Luu Duc Hiep Chu Hrishi Olickel Prateek Saxena and Aquinas Hobor 2016 \xe2\x80\x8bMaking Smart Contracts Smarter\xe2\x80\x8b In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS 16) ACM New York NY USA 254 269 DOI https //doi org/10 1145/2976749 2978309 Both malicious miners and users can exploit certain classes of vulnerabilities that the authors deem to be due to a \xe2\x80\x9csemantic gap\xe2\x80\x9d between how the developer thinks code executes versus how it actually does In their study 8 519 out of 19 366 (44%) Ethereum smart contracts contained \xe2\x80\x9csemantic gap\xe2\x80\x9d vulnerabilities involving a total balance of over\xe2\x80\x8b \xe2\x80\x8b6\xe2\x80\x8b \xe2\x80\x8bmillion\xe2\x80\x8b \xe2\x80\x8bETH23 Formal verification of smart contracts Short The authors translate Solidity to F* to analyze Paper EVM bytecode They perform checks to capture whether the code undoes side effects Karthikeyan Bhargavan Antoine Delignat Lavaud C\xc3\xa9dric that can persist when a call to send() fails Fournet Anitha Gollamudi Georges Gonthier Nadim Kobeissi Natalia Kulatova Aseem Rastogi Thomas and also to detect the reentrancy problem Sibut Pinote Nikhil Swamy and Santiago Zanella B\xc3\xa9guelin that\xe2\x80\x8b \xe2\x80\x8bplagued\xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bDAO 2016 \xe2\x80\x8bFormal Verification of Smart Contracts Short Paper\xe2\x80\x8b In Proceedings of the 2016 ACM Workshop on Programming Languages and Analysis for Security (PLAS 16) ACM New York NY USA 91 96 DOI https //doi org/10 1145/2993600 2993611 Demystifying Incentives in the Consensus Computer Loi Luu Jason Teutsch Raghav Kulkarni and Prateek Saxena 2015 \xe2\x80\x8bDemystifying Incentives in the Consensus Computer\xe2\x80\x8b In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS 15) ACM New York NY USA 706 719 DOI https //doi org/10 1145/2810103 2813659 The limitations of their tool restrict analysis to only 46 smart contracts however the authors state that of those only a handful passed their checks suggesting that \xe2\x80\x9ca large scale analysis of published contracts would likely uncover widespread vulnerabilities \xe2\x80\x9d The authors show that Turing complete scripting exposes miners to a new class of attacks \xe2\x80\x9cHonest miners are vulnerable to attacks in cryptocurrencies where verifying transactions per block requires significant computational resources \xe2\x80\x9d To address this problem they propose an incentive structure to the consensus protocol where cheating provides\xe2\x80\x8b \xe2\x80\x8bno\xe2\x80\x8b \xe2\x80\x8bintrinsic\xe2\x80\x8b \xe2\x80\x8badvantage A survey of attacks on Ethereum smart The authors present a taxonomy of security 23 \xe2\x80\x8b \xe2\x80\x8bTo\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bprecise \xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bvalue\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8b6 169 802\xe2\x80\x8b \xe2\x80\x8bETH\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8b2017 July 23\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8babout\xe2\x80\x8b \xe2\x80\x8b$1 4\xe2\x80\x8b \xe2\x80\x8bbillion\xe2\x80\x8b \xe2\x80\x8bUSD 37 \x0ccontracts Nicola Atzei Massimo Bartoletti and Tiziana Cimoli 2017 \xe2\x80\x8bA Survey of Attacks on Ethereum Smart Contracts\xe2\x80\x8b In Proceedings of the 6th International Conference on Principles of Security and Trust Volume 10204 Matteo Maffei and Mark Ryan (Eds ) Vol 10204 Springer Verlag New York Inc New York NY USA 164 186 DOI https //doi org/10 1007/978 3 662 54455 6_8 vulnerabilities observed across the corpus of Ethereum smart contracts In general these vulnerabilities emerge due to subtleties of Solidity that are unknown or misunderstood by\xe2\x80\x8b \xe2\x80\x8bdevelopers Step by step towards creating a safe smart The authors show how even a very simple contract contract for playing Rock Paper Scissors can contain several logical flaws These are D Delmolino et al \xe2\x80\x8bStep by step towards creating a safe smart characterized as \xe2\x80\x8bContracts that do not contract Lessons and insights from a cryptocurrency lab\xe2\x80\x8b Cryptology ePrint Archive Report 2015/460 2015 refund\xe2\x80\x8b \xe2\x80\x8bLack of cryptography to achieve http //eprint iacr org/ fairness\xe2\x80\x8b \xe2\x80\x8b \xe2\x80\x8bIncentive\xe2\x80\x8b \xe2\x80\x8bmisalignment\xe2\x80\x8b Safer smart contracts through type driven Three classes of errors are highlighted that are common in smart contracts \xe2\x80\x8bunexpected development J Pettersson and R Edstr\xc3\xb6m \xe2\x80\x8bSafer smart contracts through type driven development Using dependent and polymorphic types for safer development of smart contracts\xe2\x80\x8b Masters Thesis in Computer Science Chalmers University of Technology\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bGothenburg \xe2\x80\x8b \xe2\x80\x8bSweden \xe2\x80\x8b \xe2\x80\x8b2016 states\xe2\x80\x8b \xe2\x80\x8bfailure to use cryptography\xe2\x80\x8b and \xe2\x80\x8bfull call stack\xe2\x80\x8b The authors propose using dependent and polymorphic types and a functional language called Idris to make smart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bdevelopment\xe2\x80\x8b \xe2\x80\x8bsafer While the above papers are only a sample a noteworthy percentage of smart contracts reportedly have known vulnerabilities Our perspective is that it is possible to prevent many of these by performing automated checks and formally verifying expected properties While it is likely that some attackers will focus their efforts on high profile opportunistic heists of large magnitude many others will be content with multiple smaller grabs less likely to garner much attention \xe2\x80\x8b \xe2\x80\x8bEverybody\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bat\xe2\x80\x8b \xe2\x80\x8brisk Addendum\xe2\x80\x8b \xe2\x80\x8bB Off chain\xe2\x80\x8b \xe2\x80\x8bTools\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bDevelopers In addition to the decentralized security platform we are interested in developing a set of off chain tools aimed at simplifying the development debugging and deployment of smart contracts This includes the application of recent work by one of our team members into creating smarter\xe2\x80\x8b \xe2\x80\x8bdebugging\xe2\x80\x8b \xe2\x80\x8btools Smart\xe2\x80\x8b \xe2\x80\x8bDebugging\xe2\x80\x8b \xe2\x80\x8busing\xe2\x80\x8b \xe2\x80\x8bdiscriminating\xe2\x80\x8b \xe2\x80\x8bexamples Software models with mathematical or logical foundations have proven valuable to software engineering practice by enabling software engineers to focus on essential abstractions while 38 \x0celiding less important details of their software design Like any human created artifact a model might have imperfections at certain stages of the design process it might have internal inconsistencies \xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bit\xe2\x80\x8b \xe2\x80\x8bmight\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bproperly\xe2\x80\x8b \xe2\x80\x8bexpress\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bengineer\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bdesign\xe2\x80\x8b \xe2\x80\x8bintentions We introduce the idea of a smart debugger that helps a non expert developer to find flaws and vulnerabilities based on the proven localization understanding and fix strategy This work is explored in depth in the dissertation \xe2\x80\x8bDebugging Relational Declarative Models with Discriminating Examples by founding team member Vajih Montaghami and PhD supervisor Dr Derek\xe2\x80\x8b \xe2\x80\x8bRayside\xe2\x80\x8b \xe2\x80\x8b(University\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bWaterloo) The need to debug arises because the \xe2\x80\x8bexpressed meaning differs from the \xe2\x80\x8bintended meaning but the user does not know where or why Debugging can be a cumbersome and time consuming task that persists throughout the software lifecycle Zeller24 in his seminal book on debugging imperative programs evokes an inspiring image \xe2\x80\x8bSome people are true debugging gurus\xe2\x80\x8b \xe2\x80\x8bThey look at the code and point their finger at the screen and tell you \xe2\x80\x9cDid you try X \xe2\x80\x9d You try X and voila the failure is gone What has the debugging guru done They have identified localized \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bcorrected\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bbug25 \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthey\xe2\x80\x8b \xe2\x80\x8bhave\xe2\x80\x8b \xe2\x80\x8bdone\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bfirst\xe2\x80\x8b \xe2\x80\x8bforming\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bhypothesis Recently tools and techniques have been developed to provide some automated support for this vision in the context of relational logic models for software abstractions Two such tools are called Bordeaux and Margaux (depicted in the architectural diagram below) These tools first help the user identify and understand the bug by forming a hypothesis about what might be wrong with the model and computing a discriminating example for the user to accept or reject If the user judges that a bug has been identified then further automated analysis helps localize \xe2\x80\x8b \xe2\x80\x8bA \xe2\x80\x8b \xe2\x80\x8bZeller \xe2\x80\x8b \xe2\x80\x8bWhy\xe2\x80\x8b \xe2\x80\x8bprograms\xe2\x80\x8b \xe2\x80\x8bfail \xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bguide\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bsystematic\xe2\x80\x8b \xe2\x80\x8bdebugging \xe2\x80\x8b \xe2\x80\x8bMorgan\xe2\x80\x8b \xe2\x80\x8bKaufmann \xe2\x80\x8b \xe2\x80\x8b2009 \xe2\x80\x8b \xe2\x80\x8bA \xe2\x80\x8b \xe2\x80\x8bJ \xe2\x80\x8b \xe2\x80\x8bKo \xe2\x80\x8b \xe2\x80\x8bR \xe2\x80\x8b \xe2\x80\x8bAbraham \xe2\x80\x8b \xe2\x80\x8bL \xe2\x80\x8b \xe2\x80\x8bBeckwith \xe2\x80\x8b \xe2\x80\x8bA \xe2\x80\x8b \xe2\x80\x8bBlackwell \xe2\x80\x8b \xe2\x80\x8bM \xe2\x80\x8b \xe2\x80\x8bBurnett \xe2\x80\x8b \xe2\x80\x8bM \xe2\x80\x8b \xe2\x80\x8bErwig \xe2\x80\x8b \xe2\x80\x8bC \xe2\x80\x8b \xe2\x80\x8bScaffidi \xe2\x80\x8b \xe2\x80\x8bJ \xe2\x80\x8b \xe2\x80\x8bLawrance \xe2\x80\x8b \xe2\x80\x8bH Lieberman \xe2\x80\x8b \xe2\x80\x8bB \xe2\x80\x8b \xe2\x80\x8bMyers \xe2\x80\x8b \xe2\x80\x8bM \xe2\x80\x8b \xe2\x80\x8bB \xe2\x80\x8b \xe2\x80\x8bRosson \xe2\x80\x8b \xe2\x80\x8bG \xe2\x80\x8b \xe2\x80\x8bRothermel \xe2\x80\x8b \xe2\x80\x8bM \xe2\x80\x8b \xe2\x80\x8bShaw \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bS \xe2\x80\x8b \xe2\x80\x8bWiedenbeck \xe2\x80\x8b \xe2\x80\x8bThe\xe2\x80\x8b \xe2\x80\x8bstate\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bart\xe2\x80\x8b \xe2\x80\x8bin end user\xe2\x80\x8b \xe2\x80\x8bsoftware\xe2\x80\x8b \xe2\x80\x8bengineering \xe2\x80\x8b \xe2\x80\x8bACM\xe2\x80\x8b \xe2\x80\x8bComputing\xe2\x80\x8b \xe2\x80\x8bSurveys \xe2\x80\x8b \xe2\x80\x8b43(3) 21 1\xe2\x80\x9321 44 \xe2\x80\x8b \xe2\x80\x8bApr \xe2\x80\x8b \xe2\x80\x8b2011 \xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bJ \xe2\x80\x8b \xe2\x80\x8bF \xe2\x80\x8b \xe2\x80\x8bKrems Expert\xe2\x80\x8b \xe2\x80\x8bstrategies\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bdebugging \xe2\x80\x8b \xe2\x80\x8bexperimental\xe2\x80\x8b \xe2\x80\x8bresults\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcomputational\xe2\x80\x8b \xe2\x80\x8bmodel \xe2\x80\x8b \xe2\x80\x8bIn\xe2\x80\x8b \xe2\x80\x8bCognition\xe2\x80\x8b \xe2\x80\x8band Computer\xe2\x80\x8b \xe2\x80\x8bProgramming \xe2\x80\x8b \xe2\x80\x8bpages\xe2\x80\x8b \xe2\x80\x8b241\xe2\x80\x93254 \xe2\x80\x8b \xe2\x80\x8bAblex\xe2\x80\x8b \xe2\x80\x8bPublishing\xe2\x80\x8b \xe2\x80\x8bCorp \xe2\x80\x8b \xe2\x80\x8b1994 24 25 39 \x0cwhich part of the model needs to change and might provide a high level conceptual description of\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcorrection\xe2\x80\x8b \xe2\x80\x8b(but\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8buser\xe2\x80\x8b \xe2\x80\x8bstill\xe2\x80\x8b \xe2\x80\x8bneeds\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bmake\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcorrection\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bhand) Examples like test cases for programs are more valuable if they reveal a discrepancy between the expressed model and the engineer\xe2\x80\x99s design intentions We propose the idea of discriminating examples for this purpose A discriminating example is synthesized from a combination of the engineer\xe2\x80\x99s expressed model and a machine generated hypothesis of the engineer\xe2\x80\x99s true intentions A discriminating example either satisfies the model but not the hypothesis or satisfies the hypothesis but not the model It shows the difference between the model and the hypothesized\xe2\x80\x8b \xe2\x80\x8balternative Validating that the model is a true expression of the engineer\xe2\x80\x99s intent is an important and difficult problem One of the key challenges is that there is typically no other written artifact to compare the model to the engineer\xe2\x80\x99s intention is a mental object One successful approach to this challenge has been automated example generation tools such as the Alloy Analyzer These tools produce examples (satisfying valuations of the model) for the engineer to accept or reject These examples along with the engineer\xe2\x80\x99s judgment of them serve as crucial written artifacts of the\xe2\x80\x8b \xe2\x80\x8bengineer\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8btrue\xe2\x80\x8b \xe2\x80\x8bintentions 40 \x0cSmart debugging26 can ease the burden on the developer who often struggles to recognize gaps between what he intends the code to do versus what it really does A smart debugger enables the developer who likely lacks training in formal methods to apply localization understanding and fixing\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bbugs \xe2\x80\x8b \xe2\x80\x8bA\xe2\x80\x8b \xe2\x80\x8bpractical\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bdebugger\xe2\x80\x8b \xe2\x80\x8bcan\xe2\x80\x8b \xe2\x80\x8bguide\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bhuman\xe2\x80\x8b \xe2\x80\x8bintellect\xe2\x80\x8b \xe2\x80\x8btowards\xe2\x80\x8b \xe2\x80\x8bbridging\xe2\x80\x8b \xe2\x80\x8bsemantic\xe2\x80\x8b \xe2\x80\x8bgaps\xe2\x80\x8b \xe2\x80\x8bwith\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8buse of\xe2\x80\x8b \xe2\x80\x8bdiscriminating\xe2\x80\x8b \xe2\x80\x8bexamples\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bcorrect\xe2\x80\x8b \xe2\x80\x8bflaws\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8blogical\xe2\x80\x8b \xe2\x80\x8breasoning\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bsupply\xe2\x80\x8b \xe2\x80\x8bautomatic\xe2\x80\x8b \xe2\x80\x8berror\xe2\x80\x8b \xe2\x80\x8blocalization tools 26 41 \x0cImportant\xe2\x80\x8b \xe2\x80\x8bLegal\xe2\x80\x8b \xe2\x80\x8bDisclaimer Quantstamp Technologies Inc (the \xe2\x80\x9c\xe2\x80\x8bCompany\xe2\x80\x8b\xe2\x80\x9d or \xe2\x80\x9c\xe2\x80\x8bQuantstamp\xe2\x80\x8b\xe2\x80\x9d) Tokens (the \xe2\x80\x9c\xe2\x80\x8bTokens\xe2\x80\x8b\xe2\x80\x9d or \xe2\x80\x9c\xe2\x80\x8bQSP Tokens\xe2\x80\x8b\xe2\x80\x9d) to be offered at the Quantstamp Token Pre Sale and the Public Sale (collectively the \xe2\x80\x9c\xe2\x80\x8bToken Sale\xe2\x80\x8b\xe2\x80\x9d) are not intended to constitute securities in any jurisdiction This document (the \xe2\x80\x9c\xe2\x80\x8bWhite Paper\xe2\x80\x8b\xe2\x80\x9d) does not constitute a prospectus or offer document of any sort and is not intended to constitute an offer of securities or a solicitation for investment in securities\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bjurisdiction This White Paper does not constitute or form part of any opinion on any advice to sell or any solicitation of any offer by Quantstamp to purchase any QSP Tokens nor shall it or any part of it nor the fact of its presentation form the basis of or be relied upon in connection with any contract\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8binvestment\xe2\x80\x8b \xe2\x80\x8bdecision No person is bound to enter into any contract or binding legal commitment in relation to the sale and purchase of the QSP Tokens and no cryptocurrency or other form of payment is to be accepted\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bbasis\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper Any agreement between Quantstamp and you as a purchaser in relation to any sale or purchase of QSP Tokens is to be governed a separate Quantstamp Token Sale Terms and Conditions document (the \xe2\x80\x9c\xe2\x80\x8bTerms\xe2\x80\x8b\xe2\x80\x9d) In the event of any inconsistencies between the Terms and this Whitepaper \xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bformer\xe2\x80\x8b \xe2\x80\x8bshall\xe2\x80\x8b \xe2\x80\x8bprevail You are not eligible and you are not to purchase any QSP Tokens in the Quantstamp Token Sale if you are a citizen resident (for tax purposes or otherwise) or green card holder of the United States\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bAmerica\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcitizen\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bPeople\xe2\x80\x99s\xe2\x80\x8b \xe2\x80\x8bRepublic\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bChina No regulatory authority has examined or approved of any of the information set out in this Whitepaper No such action has been or will be taken under the laws regulatory requirements or rules of any jurisdiction The publication distribution or dissemination of this Whitepaper 42 \x0cdoes not imply that the applicable laws regulatory requirements or rules have been complied with There are risks and uncertainties associated with Quantstamp and its business and operations the\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bToken\xe2\x80\x8b \xe2\x80\x8bSale This\xe2\x80\x8b \xe2\x80\x8bWhitepaper \xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bthereof\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bcopy\xe2\x80\x8b \xe2\x80\x8bthereof\xe2\x80\x8b \xe2\x80\x8bmust\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8btaken\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8btransmitted\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bany country\xe2\x80\x8b \xe2\x80\x8bwhere\xe2\x80\x8b \xe2\x80\x8bdistribution\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bdissemination\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bprohibited\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8brestricted CLOSED\xe2\x80\x8b \xe2\x80\x8bSYSTEM\xe2\x80\x8b \xe2\x80\x8bUTILITY As of the date of publication of this paper the Tokens have no known potential uses outside of the Quantstamp ecosystem and are not permitted to be sold or otherwise traded on third party exchanges This paper does not constitute advice nor a recommendation by Quantstamp its officers directors managers employees agents advisors or consultants or any other person to any recipient of this paper on the merits of the participation in the Token Sale Quantstamp Tokens should not be acquired for speculative or investment purposes with the expectation of making a profit or immediate re sale No promises of future performance or value are or will be made with respect to Quantstamp Tokens Accordingly no promise of inherent value no promise of continuing payments and no guarantee that Quantstamp Tokens will hold any particular value is made Unless prospective participants fully understand and accept the nature of Quantstamp and the potential risks inherent in Quantstamp Tokens they should not participate\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bToken\xe2\x80\x8b \xe2\x80\x8bSale Quantstamp Tokens are sold as a functional good and all proceeds received by Quantstamp may be\xe2\x80\x8b \xe2\x80\x8bspent\xe2\x80\x8b \xe2\x80\x8bfreely\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8babsent\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bconditions \xe2\x80\x8b \xe2\x80\x8bsave\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bset\xe2\x80\x8b \xe2\x80\x8bout\xe2\x80\x8b \xe2\x80\x8bherein DISCLAIMER\xe2\x80\x8b \xe2\x80\x8bOF\xe2\x80\x8b \xe2\x80\x8bLIABILITY To the maximum extent permitted by the applicable laws regulations and rules Quantstamp shall not be liable for any indirect special incidental consequential or other losses of any kind in tort contract or otherwise (including but not limited to loss of revenue income or profits and loss of use or data) arising out of or in connection with any acceptance of or reliance on this Whitepaper\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bthereof\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8byou 43 \x0cNO\xe2\x80\x8b \xe2\x80\x8bREPRESENTATIONS\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bWARRANTIES Quantstamp does not make or purport to make and hereby disclaims any representation warranty or undertaking in any form whatsoever to any entity or person including any representation warranty or undertaking in relation to the truth accuracy and completeness of any\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8binformation\xe2\x80\x8b \xe2\x80\x8bset\xe2\x80\x8b \xe2\x80\x8bout\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper In particular no representations or warranties whatsoever are made with respect t0 Quantstamp\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bTokens (a)\xe2\x80\x8b \xe2\x80\x8bmerchantability \xe2\x80\x8b \xe2\x80\x8bsuitability\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bfitness\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bparticular\xe2\x80\x8b \xe2\x80\x8bpurpose (b)\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcontents\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bdocument\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8baccurate\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bfree\xe2\x80\x8b \xe2\x80\x8bfrom\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8berror(s) (c) that such contents do not infringe any third party rights Quantstamp shall have no liability for damages of any kind arising out of the use reference to or reliance on the contents of this document \xe2\x80\x8b \xe2\x80\x8beven\xe2\x80\x8b \xe2\x80\x8bif\xe2\x80\x8b \xe2\x80\x8badvised\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bpossibility\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bdamages This Whitepaper references third party data and industry publications Quantstamp believes that these references are accurate however Quantstamp does not provide any assurances as to the accuracy or completeness of this data We have not independently verified the data sourced from third party sources in this paper or ascertained the underlying assumptions relied upon by such\xe2\x80\x8b \xe2\x80\x8bsources REPRESENTATIONS\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bWARRANTIES\xe2\x80\x8b \xe2\x80\x8bBY\xe2\x80\x8b \xe2\x80\x8bYOU By accessing and/or accepting possession of any information in this Whitepaper or such part thereof \xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x8b \xe2\x80\x8brepresent\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bwarrant\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bfollows (a)\xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x8b \xe2\x80\x8backnowledge\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens\xe2\x80\x8b \xe2\x80\x8bdo\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bconstitute\xe2\x80\x8b \xe2\x80\x8bsecurities\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bform in\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bjurisdiction 44 \x0c(b) you acknowledge that this White Paper does not constitute a prospectus or offer document of any sort and is not intended to constitute an offer of securities in any jurisdiction or a solicitation for investment in securities and you are not bound to enter into any contract or binding legal commitment and no cryptocurrency or other form of payment is to be accepted on the\xe2\x80\x8b \xe2\x80\x8bbasis\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper (c) you acknowledge that no regulatory authority has examined or approved of the information set out in this Whitepaper no action has been or will be taken under the laws regulatory requirements or rules of any jurisdiction and the publication distribution or dissemination of this Whitepaper to you does not imply that the applicable laws regulatory requirements or rules have\xe2\x80\x8b \xe2\x80\x8bbeen\xe2\x80\x8b \xe2\x80\x8bcomplied\xe2\x80\x8b \xe2\x80\x8bwith (d) you agree and acknowledge that this Whitepaper the undertaking and/or the completion of the Quantstamp Token Sale or future trading of the QSP Tokens on any cryptocurrency exchange shall not be construed interpreted or deemed by you as an indication of the merits of Quantstamp \xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bToken\xe2\x80\x8b \xe2\x80\x8bSale (e) the distribution or dissemination of this Whitepaper any part thereof or any copy thereof or acceptance of the same by you is not prohibited or restricted by the applicable laws regulations or rules in your jurisdiction and where any restrictions in relation to possession are applicable you have observed and complied with all such restrictions at your own expense and without liability\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bQuantstamp (f)\xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x8b \xe2\x80\x8bagree\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8backnowledge\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bevent\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x8b \xe2\x80\x8bwish\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bpurchase\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens \xe2\x80\x8b \xe2\x80\x8bthe QSP\xe2\x80\x8b \xe2\x80\x8bTokens\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bconstrued \xe2\x80\x8b \xe2\x80\x8binterpreted \xe2\x80\x8b \xe2\x80\x8bclassified\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8btreated\xe2\x80\x8b \xe2\x80\x8bas (i)\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bkind\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bcurrency\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bthan\xe2\x80\x8b \xe2\x80\x8bcryptocurrency (ii)\xe2\x80\x8b \xe2\x80\x8bdebentures \xe2\x80\x8b \xe2\x80\x8bstocks\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bshares\xe2\x80\x8b \xe2\x80\x8bissued\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bperson\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bentity (iii)\xe2\x80\x8b \xe2\x80\x8brights \xe2\x80\x8b \xe2\x80\x8boptions\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bderivatives\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8brespect\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bdebentures \xe2\x80\x8b \xe2\x80\x8bstocks\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bshares (iv)\xe2\x80\x8b \xe2\x80\x8brights\xe2\x80\x8b \xe2\x80\x8bunder\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bdifferences\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bunder\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bpurpose\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bpretended purpose\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bwhich\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bsecure\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bprofit\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bavoid\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bloss 45 \x0c(v)\xe2\x80\x8b \xe2\x80\x8bunits\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcollective\xe2\x80\x8b \xe2\x80\x8binvestment\xe2\x80\x8b \xe2\x80\x8bscheme (vi)\xe2\x80\x8b \xe2\x80\x8bunits\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bbusiness\xe2\x80\x8b \xe2\x80\x8btrust (vii)\xe2\x80\x8b \xe2\x80\x8bderivatives\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bunits\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bbusiness\xe2\x80\x8b \xe2\x80\x8btrust \xe2\x80\x8b \xe2\x80\x8bor (viii)\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bsecurity\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bclass\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsecurities (g) you are fully aware of and understand that you are not eligible to purchase any QSP Tokens if you are a citizen resident (tax or otherwise) or green card holder of the United States of America or\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bcitizen\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bresident\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bRepublic\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bSingapore (h) you have a basic degree of understanding of the operation functionality usage storage transmission mechanisms and other material characteristics of cryptocurrencies blockchain based software systems cryptocurrency wallets or other related token storage mechanisms \xe2\x80\x8b \xe2\x80\x8bblockchain\xe2\x80\x8b \xe2\x80\x8btechnology\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bsmart\xe2\x80\x8b \xe2\x80\x8bcontract\xe2\x80\x8b \xe2\x80\x8btechnology (i) you are fully aware and understand that in the case where you wish to purchase any QSP Tokens there are risks associated with Quantstamp and its business and operations and the Tokens (j) you agree and acknowledge that Quantstamp is not liable for any indirect special incidental consequential or other losses of any kind in tort contract or otherwise (including but not limited to loss of revenue income or profits and loss of use or data) arising out of or in connection with any acceptance of or reliance on this Whitepaper or any part thereof by you and (k) all of the above representations and warranties are true complete accurate and nonmisleading from the time of your access to and/or acceptance of possession of this Whitepaper or\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bthereof CAUTIONARY\xe2\x80\x8b \xe2\x80\x8bNOTE\xe2\x80\x8b \xe2\x80\x8bON\xe2\x80\x8b \xe2\x80\x8bFORWARD LOOKING\xe2\x80\x8b \xe2\x80\x8bSTATEMENTS All statements contained in this Whitepaper statements made in press releases or in any place accessible by the public and oral statements that may be made by Quantstamp\xe2\x80\x99s respective 46 \x0cdirectors executive officers employees or other representatives acting on behalf of Quantstamp that are not statements of historical fact constitute \xe2\x80\x9cforward looking statements\xe2\x80\x9d Some of these statements can be identified by forward looking terms such as \xe2\x80\x9caim\xe2\x80\x9d \xe2\x80\x9ctarget\xe2\x80\x9d \xe2\x80\x9canticipate\xe2\x80\x9d \xe2\x80\x9cbelieve\xe2\x80\x9d \xe2\x80\x9ccould\xe2\x80\x9d \xe2\x80\x9cestimate\xe2\x80\x9d \xe2\x80\x9cexpect\xe2\x80\x9d \xe2\x80\x9cif\xe2\x80\x9d \xe2\x80\x9cintend\xe2\x80\x9d \xe2\x80\x9cmay\xe2\x80\x9d \xe2\x80\x9cplan\xe2\x80\x9d \xe2\x80\x9cpossible\xe2\x80\x9d \xe2\x80\x9cprobable\xe2\x80\x9d \xe2\x80\x9cproject\xe2\x80\x9d \xe2\x80\x9cshould\xe2\x80\x9d \xe2\x80\x9cwould\xe2\x80\x9d \xe2\x80\x9cwill\xe2\x80\x9d or other similar terms However these terms are not the exclusive means of identifying forward looking statements All statements regarding Quantstamp\xe2\x80\x99s financial position business strategies plans and prospects and the future prospects of the industry which Quantstamp is in are forward looking statements These forward looking statements including but not limited to statements as to Quantstamp\xe2\x80\x99s revenue and profitability prospects future plans other expected industry trends and other matters discussed in this Whitepaper regarding Quantstamp are matters that are not historical facts but only\xe2\x80\x8b \xe2\x80\x8bpredictions These forward looking statements involve known and unknown risks uncertainties and other factors that may cause the actual future results performance or achievements of Quantstamp to be materially different from any future results performance or achievements expected expressed or implied by such forward looking statements These factors include amongst others (a) changes in political social economic and stock or cryptocurrency market conditions and the regulatory environment in the countries in which Quantstamp conducts its respective businesses and\xe2\x80\x8b \xe2\x80\x8boperations (b)\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8brisk\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bmay\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bunable\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bexecute\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bimplement\xe2\x80\x8b \xe2\x80\x8bits\xe2\x80\x8b \xe2\x80\x8bbusiness\xe2\x80\x8b \xe2\x80\x8bstrategies\xe2\x80\x8b \xe2\x80\x8band future\xe2\x80\x8b \xe2\x80\x8bplans (c)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8binterest\xe2\x80\x8b \xe2\x80\x8brates\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bexchange\xe2\x80\x8b \xe2\x80\x8brates\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bfiat\xe2\x80\x8b \xe2\x80\x8bcurrencies\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bcryptocurrencies (d)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8banticipated\xe2\x80\x8b \xe2\x80\x8bgrowth\xe2\x80\x8b \xe2\x80\x8bstrategies\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bexpected\xe2\x80\x8b \xe2\x80\x8binternal\xe2\x80\x8b \xe2\x80\x8bgrowth\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp (e)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bavailability\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bfees\xe2\x80\x8b \xe2\x80\x8bpayable\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bconnection with\xe2\x80\x8b \xe2\x80\x8bits\xe2\x80\x8b \xe2\x80\x8brespective\xe2\x80\x8b \xe2\x80\x8bbusinesses\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8boperations (f)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bavailability\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bsalaries\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bemployees\xe2\x80\x8b \xe2\x80\x8bwho\xe2\x80\x8b \xe2\x80\x8bare\xe2\x80\x8b \xe2\x80\x8brequired\xe2\x80\x8b \xe2\x80\x8bby\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bto operate\xe2\x80\x8b \xe2\x80\x8btheir\xe2\x80\x8b \xe2\x80\x8brespective\xe2\x80\x8b \xe2\x80\x8bbusinesses\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8boperations (g)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bcompetitive\xe2\x80\x8b \xe2\x80\x8bconditions\xe2\x80\x8b \xe2\x80\x8bunder\xe2\x80\x8b \xe2\x80\x8bwhich\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8boperates \xe2\x80\x8b \xe2\x80\x8band the\xe2\x80\x8b \xe2\x80\x8bability\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bcompete\xe2\x80\x8b \xe2\x80\x8bunder\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bconditions (h)\xe2\x80\x8b \xe2\x80\x8bchanges\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfuture\xe2\x80\x8b \xe2\x80\x8bcapital\xe2\x80\x8b \xe2\x80\x8bneeds\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bavailability\xe2\x80\x8b \xe2\x80\x8bof 47 \x0cfinancing\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bcapital\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bfund\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bneeds (i)\xe2\x80\x8b \xe2\x80\x8bwar\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bacts\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8binternational\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bdomestic\xe2\x80\x8b \xe2\x80\x8bterrorism (j)\xe2\x80\x8b \xe2\x80\x8boccurrences\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bcatastrophic\xe2\x80\x8b \xe2\x80\x8bevents \xe2\x80\x8b \xe2\x80\x8bnatural\xe2\x80\x8b \xe2\x80\x8bdisasters\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bacts\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bGod\xe2\x80\x8b \xe2\x80\x8bthat\xe2\x80\x8b \xe2\x80\x8baffect\xe2\x80\x8b \xe2\x80\x8bthe business\xe2\x80\x8b \xe2\x80\x8band/or\xe2\x80\x8b \xe2\x80\x8boperations\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp (k)\xe2\x80\x8b \xe2\x80\x8bother\xe2\x80\x8b \xe2\x80\x8bfactors\xe2\x80\x8b \xe2\x80\x8bbeyond\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bcontrol\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp \xe2\x80\x8b \xe2\x80\x8band (l) any risk or uncertainties associated with Quantstamp and its businesses and operations and the\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens All forward looking statements made by or attributable to Quantstamp or persons acting on behalf of Quantstamp are expressly qualified in their entirety by the factors listed above Given the risks and uncertainties that may cause the actual future results performance or achievements of Quantstamp to be materially different from that expected expressed or implied by the forward looking statements in this Whitepaper undue reliance must not be placed on these statements These forward looking statements are applicable only as of the date of this Whitepaper Neither Quantstamp nor any other person represents warrants and/or undertakes that the actual future results performance or achievements of Quantstamp will be as discussed in those forward looking statements The actual results performance or achievements of Quantstamp may\xe2\x80\x8b \xe2\x80\x8bdiffer\xe2\x80\x8b \xe2\x80\x8bmaterially\xe2\x80\x8b \xe2\x80\x8bfrom\xe2\x80\x8b \xe2\x80\x8bthose\xe2\x80\x8b \xe2\x80\x8banticipated\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthese\xe2\x80\x8b \xe2\x80\x8bforward \xe2\x80\x8b \xe2\x80\x8blooking\xe2\x80\x8b \xe2\x80\x8bstatements Nothing\xe2\x80\x8b \xe2\x80\x8bcontained\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper\xe2\x80\x8b \xe2\x80\x8bis\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bmay\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8brelied\xe2\x80\x8b \xe2\x80\x8bupon\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8ba\xe2\x80\x8b \xe2\x80\x8bpromise \xe2\x80\x8b \xe2\x80\x8brepresentation\xe2\x80\x8b \xe2\x80\x8bor undertaking\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfuture\xe2\x80\x8b \xe2\x80\x8bperformance\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bpolicies\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQuantstamp Further Quantstamp disclaims any responsibility to update any of those forward looking statements or publicly announce any revisions to those forward looking statements to reflect future developments events or circumstances even if new information becomes available or other\xe2\x80\x8b \xe2\x80\x8bevents\xe2\x80\x8b \xe2\x80\x8boccur\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bfuture MARKET\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bINDUSTRY\xe2\x80\x8b \xe2\x80\x8bINFORMATION\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bNO\xe2\x80\x8b \xe2\x80\x8bCONSENT\xe2\x80\x8b \xe2\x80\x8bOF\xe2\x80\x8b \xe2\x80\x8bOTHER PERSONS 48 \x0cThis Whitepaper includes market and industry information and forecasts that have been obtained from internal surveys reports and studies where appropriate as well as market research publicly available information and industry publications Such surveys reports studies market research publicly available information and publications generally state that the information that they contain has been obtained from sources believed to be reliable but there can\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bno\xe2\x80\x8b \xe2\x80\x8bassurance\xe2\x80\x8b \xe2\x80\x8bas\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8baccuracy\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bcompleteness\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8bincluded\xe2\x80\x8b \xe2\x80\x8binformation Save for Quantstamp and its directors executive officers and employees no person has provided his or her consent to the inclusion of his or her name and/or other information attributed or perceived to be attributed to such person in connection therewith in this Whitepaper and no representation warranty or undertaking is or purported to be provided as to the accuracy or completeness of such information by such person and such persons shall not be obliged to provide\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bupdates\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsame While Quantstamp has taken reasonable actions to ensure that the information is extracted accurately and in its proper context Quantstamp has not conducted any independent review of the information extracted from third party sources verified the accuracy or completeness of such information or ascertained the underlying economic assumptions relied upon therein Consequently neither Quantstamp nor its respective directors executive officers and employees acting on their behalf make any representation or warranty as to the accuracy or completeness of\xe2\x80\x8b \xe2\x80\x8bsuch\xe2\x80\x8b \xe2\x80\x8binformation\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bshall\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bbe\xe2\x80\x8b \xe2\x80\x8bobliged\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bprovide\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bupdates\xe2\x80\x8b \xe2\x80\x8bon\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsame TERMS\xe2\x80\x8b \xe2\x80\x8bUSED To facilitate a better understanding of the QSP Tokens being offered for purchase Quantstamp and the business and operations of Quantstamp certain technical terms and abbreviations as well as in certain instances their descriptions have been used in this Whitepaper These descriptions and assigned meanings should not be treated as being definitive of their meanings and\xe2\x80\x8b \xe2\x80\x8bmay\xe2\x80\x8b \xe2\x80\x8bnot\xe2\x80\x8b \xe2\x80\x8bcorrespond\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bstandard\xe2\x80\x8b \xe2\x80\x8bindustry\xe2\x80\x8b \xe2\x80\x8bmeanings\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8busage Words importing the singular shall where applicable include the plural and vice versa and words importing the masculine gender shall where applicable include the feminine and neuter genders\xe2\x80\x8b \xe2\x80\x8band\xe2\x80\x8b \xe2\x80\x8bvice\xe2\x80\x8b \xe2\x80\x8bversa \xe2\x80\x8b \xe2\x80\x8bReferences\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bpersons\xe2\x80\x8b \xe2\x80\x8bshall\xe2\x80\x8b \xe2\x80\x8binclude\xe2\x80\x8b \xe2\x80\x8bcorporations 49 \x0cNO\xe2\x80\x8b \xe2\x80\x8bADVICE No information in this Whitepaper should be considered to be business legal financial or tax advice regarding Quantstamp the QSP Tokens and the Quantstamp Token Sale You should consult your own legal financial tax or other professional adviser regarding Quantstamp and its business and operations and the QSP Tokens You should be aware that you are bearing the financial\xe2\x80\x8b \xe2\x80\x8brisk\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bpurchase\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8ban\xe2\x80\x8b \xe2\x80\x8bindefinite\xe2\x80\x8b \xe2\x80\x8bperiod\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8btime NO\xe2\x80\x8b \xe2\x80\x8bFURTHER\xe2\x80\x8b \xe2\x80\x8bINFORMATION\xe2\x80\x8b \xe2\x80\x8bOR\xe2\x80\x8b \xe2\x80\x8bUPDATE No person has been or is authorised to give any information or representation not contained in this Whitepaper in connection with Quantstamp and their respective businesses and operations the QSP Tokens and if given such information or representation must not be relied upon as having been authorised by or on behalf of Quantstamp The Quantstamp Token Sale shall not under any circumstances constitute a continuing representation or create any suggestion or implication that there has been no change or development reasonably likely to involve a material change in the affairs conditions and prospects of Quantstamp or in any statement of fact\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8binformation\xe2\x80\x8b \xe2\x80\x8bcontained\xe2\x80\x8b \xe2\x80\x8bin\xe2\x80\x8b \xe2\x80\x8bthis\xe2\x80\x8b \xe2\x80\x8bWhitepaper\xe2\x80\x8b \xe2\x80\x8bsince\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bdate\xe2\x80\x8b \xe2\x80\x8bhereof RESTRICTIONS\xe2\x80\x8b \xe2\x80\x8bON\xe2\x80\x8b \xe2\x80\x8bDISTRIBUTION\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bDISSEMINATION The distribution or dissemination of this Whitepaper or any part thereof may be prohibited or restricted by the laws regulatory requirements and rules of any jurisdiction In the case where any restriction applies you are to inform yourself about and to observe any restrictions which are applicable to your possession of this Whitepaper or such part thereof at your own expense and\xe2\x80\x8b \xe2\x80\x8bwithout\xe2\x80\x8b \xe2\x80\x8bliability\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8bQuantstamp Persons to whom a copy of this Whitepaper has been distributed or disseminated provided access to or who otherwise have the Whitepaper in their possession shall not circulate it to any other persons reproduce or otherwise distribute this Whitepaper or any information contained herein\xe2\x80\x8b \xe2\x80\x8bfor\xe2\x80\x8b \xe2\x80\x8bany\xe2\x80\x8b \xe2\x80\x8bpurpose\xe2\x80\x8b \xe2\x80\x8bwhatsoever\xe2\x80\x8b \xe2\x80\x8bnor\xe2\x80\x8b \xe2\x80\x8bpermit\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bcause\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bsame\xe2\x80\x8b \xe2\x80\x8bto\xe2\x80\x8b \xe2\x80\x8boccur RISKS\xe2\x80\x8b \xe2\x80\x8bAND\xe2\x80\x8b \xe2\x80\x8bUNCERTAINTIES 50 \x0cProspective purchasers of QSP Tokens should carefully consider and evaluate all risks and uncertainties associated with Quantstamp the QSP Tokens the Quantstamp Token Sale all information set out in this Whitepaper and the Terms prior to any purchase of QSP Tokens If any of such risks and uncertainties develops into actual events the business financial condition results of operations and prospects of Quantstamp could be materially and adversely affected In such\xe2\x80\x8b \xe2\x80\x8bcases \xe2\x80\x8b \xe2\x80\x8byou\xe2\x80\x8b \xe2\x80\x8bmay\xe2\x80\x8b \xe2\x80\x8blose\xe2\x80\x8b \xe2\x80\x8ball\xe2\x80\x8b \xe2\x80\x8bor\xe2\x80\x8b \xe2\x80\x8bpart\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bvalue\xe2\x80\x8b \xe2\x80\x8bof\xe2\x80\x8b \xe2\x80\x8bthe\xe2\x80\x8b \xe2\x80\x8bQSP\xe2\x80\x8b \xe2\x80\x8bTokens IF YOU ARE IN ANY DOUBT AS TO THE ACTION YOU SHOULD TAKE YOU SHOULD CONSULT YOUR LEGAL FINANCIAL TAX OR OTHER PROFESSIONAL ADVISOR(S) 51 \x0c 