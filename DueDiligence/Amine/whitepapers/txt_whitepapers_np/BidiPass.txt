b \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Abstract The aim of this document is to provide an overview of the BidiPass authorization platform (BDP) which employs blockchain technology peer to peer two layer security HOTP algorithm an SDK biometric authentication mechanisms and other related technologies To reduce the size of this document we will focus on unique features of the BDP platform that are essential to achieving its stated goals Introduction BidiPass is an identity authentication protocol designed to strengthen the KYC model that global businesses depend on today The BidiPass platform is a user friendly secure and reliable way to authorize actions within connected platforms (e g approving transactions on a trading platform) by using a two layer security protocol that operates in a distributed peer to peer manner This document is not intended to be the ultimate reference with respect to all the implementation details Some particulars are likely to change during the development and testing phases 1 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Contents 1 Brief Description of BidiPass Components 6 2 BidiPass Blockchain 6 2 1 BidiPass blockchain as a hybrid of 2 blockchains 7 2 2 Identity on the BidiPass Blockchain 8 2 3 Platform on BidiPass Blockchain 9 2 4 Connecting between an Identity and a Provider 10 2 5 Action Authorization Procedure 12 2 6 BDP Token and BDPp Coin 14 2 7 Miners 15 Becoming a miner 16 2 8 Decentralized Validators 16 2 9 Rewarding Formulae 17 Miners Reward 17 Validators Reward 18 3 BidiPass SDK 18 3 1 General Vision 18 3 2 Connecting to an Identity 18 3 3 Using BidiPass for 2FA authentication 19 3 4 Authorizing User Actions 19 3 5 Reading Authorization Requests 20 4 The BidiPass Mobile Applications 20 4 2 Transaction Authorization Requests 21 4 3 Security 22 6 Long Term Vision 25 Conclusions 26 The BidiPass Patent 26 References 28 2 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 BidiPass Glossary \xe2\x9d\x96 2FA (Two Factor Authentication) \xe2\x80\x93 A method of confirming a user\xe2\x80\x99s claimed identity in which a user is only granted access after successfully presenting two pieces of evidence (or factors) to an authentication mechanism usually a password and a generated onetime code \xe2\x9d\x96 AR (Action Authorization Request) An operation performed on the BidiPass network using the BidiPass SDK (or other custom solution) with the goal of obtaining a BidiPass identity\xe2\x80\x99s consent for performing a certain operation with or without a value held (e g buy sell or login on a platform) \xe2\x9d\x96 API (Application Programming Interface) A set of functions and procedures that enable the creation of applications to access the features or data of an operating system application or other service \xe2\x9d\x96 Blockchain \xe2\x80\x93 A growing list of records called blocks which are linked using cryptography Each block contains a cryptographic hash of the previous block a timestamp and transaction data \xe2\x9d\x96 Decentralized Validator Actor involved in validating the value and/or state transfers between the Ethereum mainnet and the BidiPass blockchain like requests from miners to validate BDPp coin withdrawals or from service providers to update their BDP token balances \xe2\x9d\x96 ECC (Elliptic Curve Cryptography) An approach to public key cryptography based on the algebraic structure of elliptic curves over finite fields ECC requires smaller keys compared to non EC cryptography (based on plain Galois fields) to provide equivalent security \xe2\x9d\x96 ERC20 Token \xe2\x80\x93 A token designed to be used on the Ethereum blockchain that corresponds to the ERC20 standards allowing them to be shared exchanged for other tokens or transferred to a crypto wallet \xe2\x9d\x96 Gas The execution fee for every operation made on Ethereum \xe2\x9d\x96 Geth Parity Utilities that enable connection to a blockchain or creating your own blockchain \xe2\x9d\x96 Keystore File The file that holds encrypted information about an account on the blockchain 3 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 \xe2\x9d\x96 Hash Function Any function that can be used to map data The values returned by a hash function are called hash values hash codes digests or simply hashes They are utilized by various technologies including OTP implementations file integrity checks or value checks without revealing the actual value \xe2\x9d\x96 HOTP (HMAC based One time Password) \xe2\x80\x93 A one time password (OTP) algorithm based on HMAC (hash based message authentication code) which involves a cryptographic hash function and a secret cryptographic key \xe2\x9d\x96 Identity A user connected to the BidiPass network to interact with service providers using his/her own key pair managed by the BidiPass mobile app allowing them to sign transactions on the BidiPass blockchain \xe2\x9d\x96 KYC (Know Your Customer) The process of a business verifying the identity of its clients and assessing potential risks of illegal intentions for the business relationship \xe2\x9d\x96 Ledger The principal book or computer file for recording and totaling economic transactions (the blockchain is an example of a ledger) \xe2\x9d\x96 Mainnet The main Ethereum network \xe2\x9d\x96 MASVS (Mobile Application Security Verification Standard) A standard that establishes baseline security requirements for mobile apps \xe2\x9d\x96 Miners Participants of the blockchain that solve the PoW problem and add blocks to the blockchain They usually receive rewards in cryptocurrencies for their work as an incentive to participate \xe2\x9d\x96 Node \xe2\x80\x93 In the BidiPass ecosystem nodes are peers on the Ethereum network represented by software running on the users\xe2\x80\x99 machines which connect to and interact with the BidiPass blockchain \xe2\x9d\x96 OTP (one time password) A password that is valid for only one login session or transaction \xe2\x9d\x96 OWASP (Open Web Application Security Project) \xe2\x80\x93 An online community that produces freely available articles methodologies documentation tools and technologies in the field of web application security \xe2\x9d\x96 PoW (Proof of Work) \xe2\x80\x93 A protocol used in blockchains whose main goal is to deter cyber attacks such as distributed denial of service attacks (DDoS) It tasks miners with providing solutions to difficult mathematical puzzles in order to produce new blocks and gain rewards \xe2\x9d\x96 SDK (software development kit) A set of software development tools that allows the creation of applications for a specific software package software framework or hardware platform 4 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 \xe2\x9d\x96 Sharding A type of database partitioning that separates very large databases the into smaller faster more easily managed parts called data shards \xe2\x9d\x96 Service Provider An entity that provides services such as a trading platform or an exchange to a BidiPass identity within the BidiPass network \xe2\x9d\x96 Smart Contract A computer protocol intended to digitally facilitate verify or enforce the negotiation or performance of a contract Smart contracts allow the performance of credible transactions without third parties that are trackable and irreversible \xe2\x9d\x96 State Channel A two way discussion channel between users or between a user and a service (a machine) Messages are sent in the form of transactions such as \xe2\x80\x9cI want to rent this TV channel for one hour for 5$\xe2\x80\x9d Participants digitally sign each message in the discussion making all transactions impossible to refute in the future \xe2\x9d\x96 UI (User Interface) The part of a platform/project that the users interact with \xe2\x9d\x96 Whitelist A group of users/addresses that are permitted to execute actions 5 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 1 Brief Description of BidiPass Components The BidiPass platform consists of its blockchain SDK and mobile applications The blockchain will the foundation of the BidiPass platform and will be used to issue confirm and keep track of Authorization Requests on its ledger The Authorization Requests will contain information about the actions and timestamps of interactions (e g triggered confirmed) unique OTP codes generated using HOTP algorithm [2] and the reasons for declines when necessary The SDK designed and distributed through BidiPass will include a library written in several programming languages (e g JavaScript [NodeJS] PHP etc ) that can be easily connected to the Providers\xe2\x80\x99 software and used to interact with both the blockchain and the users\xe2\x80\x99 mobile devices It will also be able to validate OTP codes using the HOTP algorithm This will provide a simpleto use interface that will speed up development and ensure that best practices are being used The SDK will have comprehensive documentation for developers that clearly outline the end toend integration process Mobile applications will be distributed through the official Android and iOS marketplaces and will be used to connect BidiPass to Provider platforms and Identities (users) in order to authorize requests using the BidiPass software This will feature a simple and user friendly UI with seamless access to the platform Through this users will be able to view and approve new authorization requests with only a few steps click \xe2\x80\x9capprove\xe2\x80\x9d or \xe2\x80\x9creject\xe2\x80\x9d and confirm each transaction by using the fingerprint or facial recognition mechanism through the device and/or mobile platform 2 BidiPass Blockchain BidiPass uses blockchain technology to authorize actions triggered by the user on the Provider platform whether it be a website mobile application or any other application using BidiPass The blockchain which can be accessed using the SDK will record all transactions including all changes that occur on the BidiPass platform The BidiPass blockchain architecture is based on a hybrid approach which combines private and public blockchains in order to not only achieve security and performance but also keep the operational costs extremely low 6 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 2 1 BidiPass blockchain as a hybrid of 2 blockchains The BidiPass blockchain is a collection of 2 blockchains both based on Ethereum [5] 1 Private Ethereum setup (PoW based) 2 Ethereum mainnet The idea behind this hybrid approach is to set up a sustainable and practical solution to managing authorization requests (AR) that can maintain a high level of security while keeping costs low and the platform scalable While the Ethereum mainnet works well for setting up a token economy it is not ideal for low latency and low cost operations such as authorization requests with or without value due to network congestions and high GAS prices For example in 2018 Binance announced on Twitter an increase in the price of gas for withdrawals up to 189 Gwei (about $1 78) [3] Considering the need for at least 3 transactions for an authorization request to be considered valid using just the Ethereum mainnet is a non viable solution for BidiPass (Diagram 2 1 1) Hybrid Blockchain Approach 7 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 2 2 Identity on the BidiPass Blockchain The Identity on the BidiPass platform refers to a user who has downloaded the BidiPass mobile application and connected it to at least one platform The first time a user opens the installed BidiPass application a new BidiPass blockchain account is created which includes an Ethereum keystore file (see below) and a password (passphrase) associated to decrypt it [18] This private data is protected using the native device\xe2\x80\x99s SDK capabilities (ref 4 2 ) The Ethereum keystore file is an encrypted version of the private key The private key is used to sign transactions and to generate public private key pairs used in elliptic curve cryptography (Diagram 2 2 1) Transaction signing procedure within the Ethereum blockchain *Please note that the passphrase from the diagram 2 2 1 is used in the background by the application logic and stored in a secure place it can only be unlocked using the biometric authentication algorithm (e g fingerprint or face id) Users do not have to remember it In order to connect to a platform the Identity needs to have an account on the Provider platform (e g Binance web portal) and initiate the connection process described in section 2 4 8 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Action Authorization Requests are triggered against a certain Identity and can be confirmed by signing a transaction using the generated Ethereum account credentials keystore file and the passphrase (ref 2 4 ) and generating the OTP code using the HOTP algorithm which is confirmed by the platform directly (ref 2 5 ) The HOTP algorithm provides a method of authentication through symmetric generation of human readable passwords or values each used for only one authentication attempt The onetime property comes from the single use of each counter value The users of the HOTP algorithm agree on several parameters the hashing function the secret key and the HOTP value length The HOTP value (which is the human readable design output) is calculated as the previously agreed length of least significant base 10 digits of HOTP (which is a truncation of the hashed message authentication code) calculated as such HOTP value = HOTP(K C) mod 10 d The truncation takes the 4 least significant bits of MAC and uses it as an offset which is then used to select 31 bits from MAC truncate(MAC) = extract(MAC MAC[156 159] \xc3\x97 8) extract(MAC i) = MAC[i + 1 i + (4 \xc3\x97 8) \xe2\x88\x92 1] 2 3 Platform on BidiPass Blockchain The Platform on the BidiPass blockchain refers to the service provider connected to the BidiPass network through the BidiPass SDK (ref 3 ) In order to be connected to the BidiPass network the platform needs to be added manually by a BidiPass operator after an offline and/or online agreement is signed between the two parties 9 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Diagram 2 3 1) Connecting a provider to the BidiPass platform Connection process between a platform and an identity is described in section 2 4 2 4 Connecting between an Identity and a Provider Before a Provider can trigger an Action Authorization Request against an Identity the BidiPass Identity has to be connected to the Provider by logging into the Provider platform and starting a connection procedure as described in the diagram below 10 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 (Diagram 2 4 1 ) Connecting a BidiPass Identity to a Provider After an Identity connects to a Provider the Provider whitelists the Identity\xe2\x80\x99s address on its assigned smart contract on the BidiPass blockchain so that triggered requests can be delivered to the connected BidiPass Identity 11 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 2 5 Action Authorization Procedure When a user being a BidiPass Identity connected to a Provider using BidiPass is performing an action which needs additional confirmation of his or her identity the Provider will trigger an Authorization Request (List 2 5 1 ) The Authorization Request will describe the action that needs to be validated containing the details listed below 1 Original Action ID (on the provider side) 2 BidiPass Identity address to request confirmation from 3 Action Type (Debit Credit or Generic) 4 Action Value a Symbol (e g ETH) b Amount (e g 10 * 10 ** 18 for 10 ETH) c Denomination (e g 10 ** 18 for ETH) 5 Description (List 2 5 2 ) An Authorization Request can have the following states \xe2\x97\x8f PENDING the action was triggered by the Provider \xe2\x97\x8f APPROVED the action has been approved by the BidiPass Identity \xe2\x97\x8f REJECTED the action has been rejected by the BidiPass Identity \xe2\x97\x8f CANCELLED the action has been cancelled by the Provider \xe2\x97\x8f ACCEPTED \xe2\x80\x93 the Provider has acknowledged the Identity\xe2\x80\x99s response and approved it (incl Validation of OTP code) \xe2\x97\x8f DECLINED \xe2\x80\x93 the Provider has declined the Identity\xe2\x80\x99s response because of a failed validation (e g wrong OTP code) 12 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 (Diagram 2 5 3 ) Action Authorization flow 13 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 2 6 BDP Token and BDPp Coin The BidiPass token economy model is based on two entities holding value 1 BDP ERC20 Token [4] 2 BDPp Coin The concept of having such a model comes from the heterogeneous nature of the BidiPass blockchain (ref 2 1 ) This requires financial value in the BidiPass private Ethereum setup for rewarding the Miners the BDPp Coin (ref 2 7 ) and also value in the Ethereum mainnet BDP ERC20 token used for exchanging the Miners\xe2\x80\x99 rewards from the private network and for rewarding Decentralized Validators (ref 2 8 ) The token economy is built around the BDP Token on the Ethereum mainnet BDPp Coins remain an intermediate value holder which allows for accumulation and conversion to BDP Tokens via the official channels free of charge (Diagram 2 6 1 ) BDPp Coins and BDP Tokens lifecycle from the Miners perspective After exchanging BDPp Coins to BDP Tokens the former are burnt which protects against double spending 14 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 (Diagram 2 6 2 ) BDPp Coins and BDP Tokens lifecycle from the Validators perspective 2 7 Miners BidiPass Miners keep the BidiPass blockchain running decentralized transparent and fair BidiPass mining principles are inherited from Ethereum mining [24] protocol The Ethereum mining protocol (Ethash) involves regularly generating a dataset based on previous blocks taking random slices of this dataset and hashing them together a number of times then comparing the result with a set block difficulty (if it is lower than the set difficulty it is then accepted) Mining is defined as such def mine(daggerset params block) from random import randint nonce = randint(0 2**64) while 1 result = hashimoto(daggerset get_dagsize(params block) params decode_int(block prevhash) nonce) if result * params[ diff ] < 2**256 break nonce += 1 if nonce >= 2**64 nonce = 0 return nonce 15 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 And the verification of the result is defined as such def verify(daggerset params block nonce) result = hashimoto(daggerset get_dagsize(params block) params decode_int(block prevhash) nonce) return result * params[ diff ] < 2**256 Miners within the BidiPass blockchain are rewarded with BDPp Coin (ref 2 6 ) for validating transactions and adding new blocks to the blockchain (ref 2 9 ) Becoming a miner Anyone can become a Miner through using Ethereum clients such as Geth [26] and Parity [27] BidiPass will define a network ID and bootnodes used for creating an auto discoverable decentralized network of miner nodes (Diagram 2 7 1 ) Ethereum nodes interaction typo for transactions 2 8 Decentralized Validators In order to eliminate centralization in the BidiPass ecosystem its interledger communication is executed using a decentralized validators layer 16 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Decentralized Validators are users on the Ethereum mainnet that are staking BDP tokens (ref 2 6 ) to be able to validate actions triggered by Providers and Miners on both the Ethereum mainnet and the BidiPass blockchain List of actions processed by Decentralised Validators \xe2\x97\x8f Adding Service Providers to the BidiPass network \xe2\x97\x8f Dispatching withdrawal requests made by Miners (BDPp to BDP exchange) \xe2\x97\x8f Transferring value (BDP and BDPp) between the BidiPass blockchain and the Ethereum mainnet Decentralized Validators are rewarded with BDP tokens for validating the actions mentioned above explained in detail by the formulae described ahead in section 2 9 2 9 Rewarding Formulae Rewarding Formulae is the formulae used to distribute reward tokens in order to incentivize the different actors within the BidiPass platform Rewards are based on the value of the blocks which consist of valid authorization requests stored in the block For example a block holding 10 valid authorization requests worth 5 BDPp Coins each will have the value of 50 BDPp coins (Diagram 2 9 1 ) Rewards distribution Miners Reward Miners are rewarded for blocks added to the BidiPass blockchain that contain valid authorization requests Miners are rewarded with \xe2\x85\x94 of the value of the block 17 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Validators Reward Validators are rewarded for transferring the value between the Ethereum mainnet and the BidiPass blockchain Validators are rewarded with \xe2\x85\x93 of the value of the block 3 BidiPass SDK The BidiPass SDK [22] is a piece of software that can be used to connect the Provider the BidiPass blockchain and the Identity 3 1 General Vision The BidiPass SDK will be available in several programming languages and will offer an easy touse API Through the BidiPass SDK a Provider will be able to \xe2\x97\x8f Generate HOTP connection (secret key hashing method token length) \xe2\x97\x8f Generate QR codes to display to the user (Identity) \xe2\x97\x8f Whitelist or unwhitelist BidiPass Identities \xe2\x97\x8f Trigger track list and interact with Authorization Requests within the BidiPass platform \xe2\x97\x8f Validate OTP codes generated by BidiPass Identities Important Please note that the HOTP secret key and other HOTP parameters generated by the SDK are not stored nor managed by the SDK This approach was chosen to offer double layer decoupled security to guarantee that the actions are both triggered and validated by the two parties (the Provider and the BidiPass Identity) that initially agreed to connect with each other 3 2 Connecting to an Identity Connecting a BidiPass Identity described in section 2 4 will consist of the following steps (NodeJS syntax used) 1 const sdk = await bidipass(providerId accountKey) 2 const user = sdk identity generate(uid cbEndpoint) // User ID Callback endpoint 3 const userRepr = user serialize() // Save it temporarily and send as QR code to client 4 // BidiPass mobile app sends payload to callback endpoint 18 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 5 app use(\xe2\x80\x98/bidipass/cb\xe2\x80\x99 sdk identity ThirdParty Express Middleware) // Example of usage for express which injects identity object into request object 6 const user = request $bidiPassIdentity // Express request object 7 await sdk identity whitelist(user) 8 try { await sdk identity testConnection(user) } catch (e) { await sdk identity unwhitelist(user) } 9 const identityRepr = user serialize() // Save identityRepr somewhere in a secure place (if test passed) 3 3 Using BidiPass for 2FA authentication Using the BidiPass platform as 2FA [23] should work in the following way (NodeJS syntax used) 1 const sdk = await bidipass(providerId accountKey) 2 const user = sdk identity restore(identityRepr) // identityRepr the one saved after connecting an user 3 await sdk identity authorizeLogin(user) Important Under the hood the 2FA login authorization uses the same mechanism of sending action authorization to the BidiPass blockchain holding a 0 value transaction 3 4 Authorizing User Actions Authorizing user actions (ref 2 5 1 ) should consist of the following steps (NodeJS syntax used) 4 const sdk = await bidipass(providerId accountKey) 5 const user = sdk identity restore(identityRepr) // identityRepr the one saved after connecting an user 6 const value = new sdk action Value(symbol amount denomination) // Value(\xe2\x80\x98ETH\xe2\x80\x99 10 * (10 ** 18) 18) 7 const action = new sdk action Item(originalId description value opType) // opType = sdk action Item DEBIT 8 await sdk identity authorize(user action) 19 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 3 5 Reading Authorization Requests Authorization Requests listing should consist of the following steps (NodeJS syntax used) 1 const sdk = await bidipass(providerId accountKey) 2 const user = sdk identity restore(identityRepr) // identityRepr the one saved after connecting an user 3 const totalRequests = await sdk action total(user) 4 const requests = await sdk action list(user [lastReadRequest=null] [items=10]) * requests is an array of request objects 4 The BidiPass Mobile Applications Users (Identities) will be able to use BidiPass\ s mobile applications to connect with and authorize requests on Provider platforms This will feature a simple and user friendly UI with seamless access to the platform and will allow the user to view and approve new authorization requests with only a few steps click \xe2\x80\x9capprove\xe2\x80\x9d or \xe2\x80\x9creject\xe2\x80\x9d and confirm each transaction by using the fingerprint or facial recognition mechanism through the device and/or mobile platform 4 1 Connecting to a Platform When a user opens the BidiPass mobile application he/she will see a list of connected platforms and will be able to select a Platform to connect to (reference image 4 1 1 ) (Image 4 1 1 ) Platform list view with possibility to add other Provider platforms 20 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 After clicking the designated button to connect to a Provider the mobile application will request the user to authorize him/herself as the owner of the device and then proceed with the QR code scanning process through the Provider platform he/she wants to connect to (refer to diagram 4 1 2 ) (Diagram 4 1 2 ) User UI flow during the platform connection process After the user scans the QR code on the Provider platform the mobile application stores the scanned information and makes a connection with the BidiPass blockchain and Provider platform The application will trigger a test authorization request on the BidiPass blockchain and listen for the OTP code after which it will make another authorization request to the platform to confirm the identity of the user (reference section 2 4 and diagram 2 4 1 ) 4 2 Transaction Authorization Requests After connecting to a Provider the user will be able to see a list of actions associated with the connected platform where he/she can \xe2\x80\x9capprove\xe2\x80\x9d or \xe2\x80\x9creject\xe2\x80\x9d them (refer to image 4 2 1 ) (Image 4 2 1 ) User transactions list 21 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 After selecting \xe2\x80\x9cApprove\xe2\x80\x9d or \xe2\x80\x9cReject\xe2\x80\x9d for a particular action the BidiPass mobile application will ask for biometric confirmation (refer to diagram 4 3 3 ) Then it will proceed with the authorization request for the selected action in order to continue (reference section 2 5 ) 4 3 Security The BidiPass mobile applications (iOS & Android) are developed using the official supported languages and SDK\xe2\x80\x99s from Apple and Google Any type of web or hybrid approach (like PhoneGap Xamarin Ionic ReactNative etc ) offered by 3rd party companies or open source communities will not be used We will implement the latest security measures against different types of threats that could affect application security The local application security layer includes Code Obfuscation This is a technique that is applied over the application source code for preventing reverse engineering [8] techniques and to keep the code and other important factors secured [7] (Image 4 3 1 ) Code Obfuscation Example Code Minification This is a technique used in addition to obfuscation that makes the code even harder to read by removing all unnecessary characters These unnecessary characters usually include white space characters new line characters comments and sometimes block delimiters which are used to add readability to the code but are not required to execute it [9] 22 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 (Image 4 3 2 ) Code minification example *The example above is for demonstration purposes only it is not connected to an application Security Check against Rooted Devices In the current global economy people buy devices from different markets throughout the world (US Europe China etc ) however not all vendors are trustworthy and some could potentially implement different mobile rooting malwares These types of malwares can send sensitive mobile information to unknown servers [10] In order to prevent such risks we added a device security check which won\xe2\x80\x99t allow users to use the BidiPass application on affected devices Self check against Emulated Devices This is a technique used to stop emulated devices or emulators from launching the BidiPass application This prevents bot like activities that could target BidiPass for different malicious scopes [11] Encrypted Local Storage The BidiPass mobile applications will only use internal storage for all file operations No other mobile application will have access to these files In the case that the BidiPass application is uninstalled these files will also be removed [12][13] The data is encrypted using a 256 byte random salt the AES initialization vector is random on 16 bytes and the cipher is generated by AES/CBC/PKCS7Padding AES_256_CBC_PKCS7Padding( wallet salt = SecureRandom(256) iv = SecureRandom(16) password = PBKDF2WithHmacSHA1(passed_text)) 23 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 The data is decrypted similarly by using the generated salt and initialization vector during the encryption process Encrypted Sensitive Data All sensitive data within the application will be encrypted and stored securely within the mobile application [14][15][16][17] The data is encrypted using a 32 byte random salt a 16 byte random initialization vector and generated with AES128CTR cipher AES_128_CTR( ecKeyPair cipherText = cipherOperation(iv encryptKey privateKey) iv = SecureRandom(16) salt = SecureRandom(32) mac = Mac(key cipherText) n p R = 8 Dklen = 32) Biometric Authentication The BidiPass mobile applications will use biometric authentication to confirm the user\xe2\x80\x99s Identity This way we can always detect if the user of the BidiPass mobile application is the owner of the device [19][20] (Diagram 4 3 3 ) Biometric authentication diagram In addition to the above mentioned points BidiPass also covers OWASP Mobile Application Security Verification Standard (MASVS) [21] 24 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 6 Long Term Vision BidiPass is deeply aligned with the ethos of decentralization Our goal is to create a solution that will adapt to the technical innovations of Ethereum in the long term allowing us to scale an authentication protocol that leads to greater equality for all our stakeholders At its current state BidiPass is implementing a Geth powered side chain to scale authentications while still mirroring the usage of the BDP ERC20 token on the Ethereum mainnet within the sidechain This architecture allows us to benefit from the liquidity and mature tools of the Ethereum public blockchain while scaling our authentication solution internally As other proposed tools in the ecosystem mature our team is looking to implement a customized and stable version of our state channels where BidiPass will be able to host a microecosystem of wallets and smart contracts that will periodically sync its state with the Ethereum mainnet This approach can help us increase decentralization and migrate our authentication solution to the smart contract layer on Ethereum rather than on our current Geth enabled side chain architecture Session IDs would not be provided by the Service Providers but by nodes in the micro ecosystem (state channel) who want to provide the Service Provider and the Identity with an authentication In terms of the token economics Service Providers would pay a transaction fee to the nodes providing the session IDs These session IDs are encrypted with the public key of the user (Identity) and propagated through the network Once it is received on the user\xe2\x80\x99s end the user will decrypt it using his/her biometric information (fingerprint or face ID) and release the private key locally on the phone to decrypt the encrypted session ID provided by the node Other areas have also been explored such as Sharding which is expected to arrive in 2020 This architecture will see similar ECC signature mechanisms (as found in the current architecture) that can be used to sign messages on smart contracts and prove the Identity of any network participant The token economics in this architecture consists of the BDP ecosystem smart contract transactions (Authentication Requests) and BDP token transfers that are periodically synchronized with the state of the Ethereum mainnet 25 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Conclusions The BidiPass team is building a user friendly authorization mechanism based on a multiblockchain architecture that can be securely integrated into existing platforms through an easyto use SDK To achieve the necessary scalability while still keeping it fully decentralized we are developing a hybrid approach by connecting 2 Ethereum blockchains the BidiPass blockchain and the Ethereum mainnet Incentivization mechanisms will keep Miners interested in being part of the BidiPass network by rewarding them with BDPp coins that can be easily exchanged into BDP tokens This will not only keep the BidiPass network reliable and transparent but also fully decentralised and scalable Authorization security is achieved by utilizing a two layer approach which consists of using ECC for signing transactions on the BidiPass blockchain alongside traditional methods powered by HOTP which are industry standards Providing the best user experience (UX) remains a top priority for the BidiPass team This will be achieved by distributing the BidiPass mobile applications through Provider resources and using a seamless biometric authentication mechanism that makes the process extremely simple fast and secure The BidiPass Patent The BidiPass platform will operate as a personal accreditation method The use of a patented system based on the reading of QR codes and the cryptographic processes supported by the blockchain network provides a robust and reliable authentication method The below image (Fig 5 + Fig 6) were included in the patent application and show the operational flow of the BidiPass system 26 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 Figure 5 shows how the system works functionally through the use of mobile phones to scan the displayed QR code Figure 6 displays the back end technology flow including the encryption and decryption processes as well as where the BidiPass blockchain fits in Here are some highlights from the BidiPass patent \xe2\x80\xa6The method according to claim 1 further comprising the mobile device establishing a secure connection with a server of the service provider the mobile device sending information for the user authentication including in said information at least the obtained dynamic session key \xe2\x80\xa6 The system according to claim 10 wherein the server of the service provider is configured within the process for generating the two dimensional code to randomly generate a dynamic session key encrypt the original data including said dynamic session key with the user\ s public key encrypt the result with the service provider private key perform a two dimensional encoding of the previous result obtaining the two dimensional code including the encrypted original data which in turn comprise the encrypted dynamic session key \xe2\x80\xa6 The system according to claim 10 wherein the mobile device is additionally configured to establish a secure connection with a server of the service provider send information for the authentication of the user including in said information at least the dynamic session key obtained For more information please refer to the full patent application here 27 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 References [1] BidiPass Whitepaper https //bidipass org/docs/whitepaper pdf 2018 [2] HOTP An HMAC Based One Time Password Algorithm https //tools ietf org/html/rfc4226 2005 [3] Congestion of the Ethereum network https //cryptonomist ch/en/2018/07/03/ethereumnetwork/ 2018 [4] Ethereum EIP 20 proposal https //github com/ethereum/EIPs/blob/master/EIPS/eip 20 md 2015 [5] Ethereum official webpage https //www ethereum org 2018 [6] (ECC) Elliptic curve cryptography Wikipedia https //en wikipedia org/wiki/Ellipticcurve_cryptography 2018 [7] Obfuscation (software) Wikipedia https //en wikipedia org/wiki/Obfuscation_(software) 2018 [8] Reverse engineering Wikipedia https //en wikipedia org/wiki/Reverse_engineering 2018 [9] Minification (programming) Wikipedia https //en wikipedia org/wiki/Minification_(programming) 2018 [10] Mobile Jailbreaking OWASP https //www owasp org/index php/Mobile_Jailbreaking_Cheat_Sheet 2018 [11] Mobile Top 10 2016 M8 Code Tampering OWASP https //www owasp org/index php/Mobile_Top_10_2016 M8 Code_Tampering 2016 [12] Android Save files on device storage Google https //developer android com/training/data storage/files 2018 [13] iOS File System Basics Apple https //developer apple com/library/archive/documentation/FileManagement/Conceptual/FileSyste mProgrammingGuide/FileSystemOverview/FileSystemOverview html 2018 [14] Android \xe2\x80\x93 Shared Preferences Google https //developer android com/reference/android/content/SharedPreferences 2018 28 \x0cDoc IZF02SP 7 2 0 \xc2\xa9 BidiPass LTD 2018 [15] iOS Keychain Services Apple https //developer apple com/documentation/security/keychain_services 2018 [16] Android Cryptography Google https //developer android com/guide/topics/security/cryptography 2018 [17] iOS Cryptographic Services Apple https //developer apple com/library/archive/documentation/Security/Conceptual/cryptoservices/In troduction/Introduction html 2018 [18] What is an Ethereum keystore file https //medium com/@julien maffre/what is anethereum keystore file 86c8c5917b97 2017 [19] Android Fingerprint Authentication Google https //developer android com/about/versions/marshmallow/android 6 0#fingerprintauthentication 2018 [20] iOS Logging a User into Your App with Face ID or Touch ID Apple https //developer apple com/documentation/localauthentication/logging_a_user_into_your_app_wi th_face_id_or_touch_id 2018 [21] OWASP Mobile Application Security Verification Standard (MASVS) OWASP https //github com/OWASP/owaspmasvs/releases/download/1 1/OWASP_Mobile_AppSec_Verificat ion_Standard_v1 1 pdf 2018 [22] Software development kit https //en wikipedia org/wiki/Software_development_kit 2018 [23] Two Factor Authentication for Beginners https //medium com/@mshelton/two factorauthentication for beginners b29b0eec07d7 2018 [24] The Basics of Cryptocurrency Mining Explained in Plain English https //medium com/themotley fool/the basics of cryptocurrency mining explained in plain english c509dc5b5802 2018 [25] Connecting to the network https //github com/ethereum/go ethereum/wiki/Connecting tothe network 2017 [26] Geth https //github com/ethereum/go ethereum/wiki/geth 2017 [27] Parity Ethereum https //www parity io/ethereum/ 2018 29 \x0c 